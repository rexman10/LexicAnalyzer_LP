
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADDITION_ASSIGNMENT ASSIGNATION BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DICTIONARY DIVIDE DIVISION_ASSIGNMENT DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC RBRACKET READ REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYall_block_code : block_code\n                        | block_code all_block_code  \n    block_code : def_const_or_var\n                    | estruct_of_data\n                    | block_try_catch\n                    | VARIABLE\n                    | declaration_dict\n                    | functions_list\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers all_asignations\n                            | all_asignations\n\n    constant_assignation : access_modifiers CONST all_asignations\n                            | CONST all_asignations\n                            | CONST data_type assignation_key_value COMMA some_assignation_constant\n    all_asignations : assignation_with_datatype\n                        | assignation_without_datatype\n    assignation_with_datatype : data_type assignation_key_value DOTANDCOMMA\n                            | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype   \n                            | data_type assignation_key_value DOTANDCOMMA assignation_without_datatype                     \n    assignation_without_datatype : assignation_key_value DOTANDCOMMA\n                                    | assignation_key_value DOTANDCOMMA assignation_without_datatype\n                                    | assignation_key_value DOTANDCOMMA assignation_with_datatype\n    some_assignation_constant : assignation_key_value DOTANDCOMMA\n                                | assignation_key_value COMMA some_assignation_constant\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    value    : value_numeric\n                | value_logic\n                | value_string\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    declaration_dict : DICTIONARY VARIABLE ASSIGNATION dictionary_valuedictionary_value : LKEY key_value_pairs RKEYkey_value_pairs : key_value_pair\n                       | key_value_pair COMMA key_value_pairskey_value_pair : STRING DOUBLEPOINT valuevalueHash : INTTYPE\n             | STRINGestruct_of_data : list_empty\n                        | list_full\n    list_empty : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY STRING VARIABLE STRING RKEY\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY INTEGER RKEY\n    functions_list : list_func_clear\n                        | list_func_count\n    list_func_clear : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,47,],[0,-1,-3,]),'PUBLIC':([2,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,39,40,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[5,-2,11,-9,11,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,-15,-19,-20,-14,-17,-24,11,-16,-21,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,11,-51,-86,-87,11,-89,-52,-88,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,33,55,61,62,63,64,65,66,67,68,69,70,71,72,74,77,96,97,98,99,100,104,140,141,],[8,56,78,-41,-29,-36,-37,-38,-46,-47,-48,-44,-45,-39,-40,-43,78,109,110,-59,-60,-42,114,143,145,]),'VARIABLE':([7,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,38,39,40,41,42,43,44,46,50,51,53,54,56,58,76,78,79,80,88,90,91,92,93,94,105,109,110,111,113,114,115,121,124,133,139,143,145,147,148,152,153,155,],[9,12,-53,-9,12,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,49,-90,-91,52,52,-15,52,-31,-34,-54,-19,-20,-30,-32,-33,-35,61,52,-14,-17,52,52,12,-16,52,-25,-26,-77,52,-22,-23,106,107,-18,-92,-93,-78,61,-27,52,-28,127,12,-51,-86,-87,12,151,-89,-52,-88,]),'LKEY':([9,37,75,130,140,141,142,],[10,58,89,133,144,146,147,]),'DICTIONARY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,39,40,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[26,-9,26,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,-15,-19,-20,-14,-17,-24,26,-16,-21,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,26,-51,-86,-87,26,-89,-52,-88,]),'CONST':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,38,39,40,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[30,-53,-9,30,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,50,-15,-54,-19,-20,-14,-17,-24,30,-16,-21,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,30,-51,-86,-87,30,-89,-52,-88,]),'LIST':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,39,40,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,122,123,133,139,143,145,147,152,153,155,],[34,-9,34,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,-15,-19,-20,-14,-17,-24,34,-16,-21,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,125,126,34,-51,-86,-87,34,-89,-52,-88,]),'TRY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,39,40,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[37,-9,37,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,-15,-19,-20,-14,-17,-24,37,-16,-21,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,37,-51,-86,-87,37,-89,-52,-88,]),'PRIVATE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,39,40,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[38,-9,38,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,-15,-19,-20,-14,-17,-24,38,-16,-21,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,38,-51,-86,-87,38,-89,-52,-88,]),'CHARTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,38,39,40,50,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[41,-53,-9,41,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,41,41,-15,-54,-19,-20,41,-14,-17,41,41,-16,41,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,41,-51,-86,-87,41,-89,-52,-88,]),'STRINGTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,38,39,40,50,51,53,56,57,58,76,78,79,80,88,91,92,105,109,110,111,114,121,128,133,139,143,145,147,152,153,155,],[35,-53,-9,35,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,35,35,-15,-54,-19,-20,35,-14,-17,35,81,35,-16,35,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,131,35,-51,-86,-87,35,-89,-52,-88,]),'FLOATTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,38,39,40,50,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[42,-53,-9,42,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,42,42,-15,-54,-19,-20,42,-14,-17,42,42,-16,42,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,42,-51,-86,-87,42,-89,-52,-88,]),'DECIMALTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,38,39,40,50,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[43,-53,-9,43,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,43,43,-15,-54,-19,-20,43,-14,-17,43,43,-16,43,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,43,-51,-86,-87,43,-89,-52,-88,]),'INTTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,38,39,40,50,51,53,56,57,58,76,78,79,80,88,91,92,105,109,110,111,114,121,129,133,139,143,145,147,152,153,155,],[36,-53,-9,36,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,36,36,-15,-54,-19,-20,36,-14,-17,36,82,36,-16,36,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,132,36,-51,-86,-87,36,-89,-52,-88,]),'BOOLTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,38,39,40,50,51,53,56,58,76,78,79,80,88,91,92,105,109,110,111,114,121,133,139,143,145,147,152,153,155,],[44,-53,-9,44,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,44,44,-15,-54,-19,-20,44,-14,-17,44,44,-16,44,-25,-26,-77,-22,-23,-18,-92,-93,-78,-27,-28,44,-51,-86,-87,44,-89,-52,-88,]),'RKEY':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,39,40,48,51,53,56,61,63,64,65,66,67,68,69,70,71,72,74,76,78,79,80,83,88,91,92,98,99,100,101,102,105,109,110,111,114,119,120,121,136,139,143,145,149,150,152,153,154,155,],[-9,47,-4,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-90,-91,-15,-19,-20,-5,-14,-17,-24,-41,-36,-37,-38,-46,-47,-48,-44,-45,-39,-40,-43,-16,-21,-25,-26,95,-77,-22,-23,-59,-60,-42,111,-79,-18,-92,-93,-78,-27,-80,-81,-28,139,-51,-86,-87,152,153,-89,-52,155,-88,]),'DOT':([12,],[45,]),'ASSIGNATION':([12,49,52,106,107,],[46,75,46,116,117,]),'SMALLER_THAN':([34,125,126,],[57,128,129,]),'CLEAR':([45,],[59,]),'COUNT':([45,],[60,]),'INTEGER':([46,113,146,],[66,66,149,]),'FLOAT_NUMBER':([46,113,],[67,67,]),'DECIMAL_NUMBER':([46,113,],[68,68,]),'BOOLTRUE':([46,113,],[69,69,]),'BOOLFALSE':([46,113,],[70,70,]),'STRING':([46,86,89,112,113,144,151,],[71,98,103,103,71,148,154,]),'CHAR':([46,113,],[72,72,]),'READ':([46,113,],[73,73,]),'LPARENT':([59,60,73,108,134,135,],[84,85,87,118,137,138,]),'COMMA':([61,62,63,64,65,66,67,68,69,70,71,72,74,77,98,99,100,102,104,120,],[-41,-29,-36,-37,-38,-46,-47,-48,-44,-45,-39,-40,-43,90,-59,-60,-42,112,115,-81,]),'PLUS':([71,98,],[86,86,]),'GREATER_THAN':([81,82,131,132,],[93,94,134,135,]),'RPARENT':([84,85,87,127,137,138,],[96,97,100,130,140,141,]),'CATCH':([95,],[108,]),'DOUBLEPOINT':([103,],[113,]),'NEW':([116,117,],[122,123,]),'EXCEPTION':([118,],[124,]),'FINALLY':([139,],[142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_using':([0,],[2,]),'block_publicClass':([2,],[4,]),'all_block_code':([10,14,],[13,48,]),'block_code':([10,14,58,133,147,],[14,14,83,136,150,]),'def_const_or_var':([10,14,58,133,147,],[15,15,15,15,15,]),'estruct_of_data':([10,14,58,133,147,],[16,16,16,16,16,]),'block_try_catch':([10,14,58,133,147,],[17,17,17,17,17,]),'declaration_dict':([10,14,58,133,147,],[18,18,18,18,18,]),'functions_list':([10,14,58,133,147,],[19,19,19,19,19,]),'constant_assignation':([10,14,58,133,147,],[20,20,20,20,20,]),'variable_assignation':([10,14,58,133,147,],[21,21,21,21,21,]),'list_empty':([10,14,58,133,147,],[22,22,22,22,22,]),'list_full':([10,14,58,133,147,],[23,23,23,23,23,]),'try_catch_simply':([10,14,58,133,147,],[24,24,24,24,24,]),'try_catch_finally':([10,14,58,133,147,],[25,25,25,25,25,]),'list_func_clear':([10,14,58,133,147,],[27,27,27,27,27,]),'list_func_count':([10,14,58,133,147,],[28,28,28,28,28,]),'access_modifiers':([10,14,58,133,147,],[29,29,29,29,29,]),'all_asignations':([10,14,29,30,50,58,133,147,],[31,31,51,53,76,31,31,31,]),'data_type':([10,14,29,30,50,56,58,78,133,147,],[32,32,32,54,32,32,32,32,32,32,]),'assignation_key_value':([10,14,29,30,32,50,54,56,58,78,90,115,133,147,],[33,33,33,33,55,33,77,33,33,33,104,104,33,33,]),'assignation_with_datatype':([10,14,29,30,50,56,58,78,133,147,],[39,39,39,39,39,80,39,91,39,39,]),'assignation_without_datatype':([10,14,29,30,50,56,58,78,133,147,],[40,40,40,40,40,79,40,92,40,40,]),'value':([46,113,],[62,120,]),'value_numeric':([46,113,],[63,63,]),'value_logic':([46,113,],[64,64,]),'value_string':([46,113,],[65,65,]),'concatenation':([46,86,113,],[74,99,74,]),'dictionary_value':([75,],[88,]),'key_value_pairs':([89,112,],[101,119,]),'key_value_pair':([89,112,],[102,102,]),'some_assignation_constant':([90,115,],[105,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',34),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',37),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',40),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',44),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',45),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',49),
  ('block_code -> estruct_of_data','block_code',1,'p_block_code','sintactico.py',50),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',51),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',52),
  ('block_code -> declaration_dict','block_code',1,'p_block_code','sintactico.py',53),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',54),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',60),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',61),
  ('variable_assignation -> access_modifiers all_asignations','variable_assignation',2,'p_variable_assignation','sintactico.py',65),
  ('variable_assignation -> all_asignations','variable_assignation',1,'p_variable_assignation','sintactico.py',66),
  ('constant_assignation -> access_modifiers CONST all_asignations','constant_assignation',3,'p_constant_assignation','sintactico.py',71),
  ('constant_assignation -> CONST all_asignations','constant_assignation',2,'p_constant_assignation','sintactico.py',72),
  ('constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant','constant_assignation',5,'p_constant_assignation','sintactico.py',73),
  ('all_asignations -> assignation_with_datatype','all_asignations',1,'p_all_asignations','sintactico.py',77),
  ('all_asignations -> assignation_without_datatype','all_asignations',1,'p_all_asignations','sintactico.py',78),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',82),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',83),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',84),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA','assignation_without_datatype',2,'p_assignation_without_datatype','sintactico.py',88),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',89),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',90),
  ('some_assignation_constant -> assignation_key_value DOTANDCOMMA','some_assignation_constant',2,'p_some_assignation_constant','sintactico.py',94),
  ('some_assignation_constant -> assignation_key_value COMMA some_assignation_constant','some_assignation_constant',3,'p_some_assignation_constant','sintactico.py',95),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',99),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',102),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',103),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',104),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',105),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',106),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',107),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',116),
  ('value -> value_logic','value',1,'p_value','sintactico.py',117),
  ('value -> value_string','value',1,'p_value','sintactico.py',118),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',122),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',123),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',124),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',125),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',126),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',130),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',131),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',135),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',136),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',137),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',146),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',147),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',151),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',154),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',158),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',159),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',169),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',170),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',174),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',175),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',179),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',180),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',184),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',185),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',186),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',187),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',188),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',189),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',190),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',191),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',192),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',193),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',197),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',198),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',199),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',200),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',201),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',205),
  ('declaration_dict -> DICTIONARY VARIABLE ASSIGNATION dictionary_value','declaration_dict',4,'p_declaration_dict','sintactico.py',213),
  ('dictionary_value -> LKEY key_value_pairs RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',216),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',219),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',220),
  ('key_value_pair -> STRING DOUBLEPOINT value','key_value_pair',3,'p_key_value_pair','sintactico.py',223),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',227),
  ('valueHash -> STRING','valueHash',1,'p_valueHash','sintactico.py',228),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',233),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',234),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',238),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',239),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY STRING VARIABLE STRING RKEY','list_full',18,'p_list_full','sintactico.py',243),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY INTEGER RKEY','list_full',16,'p_list_full','sintactico.py',244),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',248),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',249),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',253),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',256),
]
