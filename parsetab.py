
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DICTIONARY DIVIDE DIVISION_ASSIGNMENT DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC PUT RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYall_block_code : block_code\n                        | block_code all_block_code  \n    block_code : def_const_or_var\n                    | estruct_of_data\n                    | block_try_catch\n                    | VARIABLE\n                    | dict_estruct\n                    | functions_dict\n                    | functions_list\n                    | declaration_lambda\n                    | block_if\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers all_asignations\n                            | all_asignations\n\n    constant_assignation : access_modifiers CONST all_asignations\n                            | CONST all_asignations\n                            | CONST data_type assignation_key_value COMMA some_assignation_constant\n    all_asignations : assignation_with_datatype\n                        | assignation_without_datatype\n    assignation_with_datatype : data_type assignation_key_value DOTANDCOMMA\n                            | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype   \n                            | data_type assignation_key_value DOTANDCOMMA assignation_without_datatype                     \n    assignation_without_datatype : assignation_key_value DOTANDCOMMA\n                                    | assignation_key_value DOTANDCOMMA assignation_without_datatype\n                                    | assignation_key_value DOTANDCOMMA assignation_with_datatype\n    some_assignation_constant : assignation_key_value DOTANDCOMMA\n                                | assignation_key_value COMMA some_assignation_constant\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    value    : value_numeric\n                | value_logic\n                | value_string\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    block_if : IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if : ELSE LKEY not_yes_nested_if RKEY\n               | ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if : block_if\n                       | block_code\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    \n    dict_estruct : dict_empty\n                   | dict_full\n    \n    dict_empty : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA\n    dictionary_value : LKEY key_value_pair RKEYkey_value_pairs : key_value_pair\n                       | key_value_pair COMMA key_value_pairskey_value_pair : STRING DOUBLEPOINT valueHashvalueHash : INTTYPE\n                estruct_of_data : list_empty\n                        | list_full\n    \n    functions_dict : dict_func_put\n                    | dict_func_remove\n    \n    dict_func_put : STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA\n    \n    dict_func_remove : STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA\n    list_empty : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list : STRING\n                    | STRING COMMA strings_list\n    ints_list : INTEGER\n                | INTEGER COMMA ints_list\n    functions_list : list_func_clear\n                        | list_func_count\n                        | list_func_add\n                        | list_func_removeat\n    list_func_clear : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAdeclaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,59,],[0,-1,-3,]),'PUBLIC':([2,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[5,-2,11,-9,11,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,11,-19,-24,-28,-29,-25,-26,11,-21,-112,-113,-30,-114,-115,-31,-99,-58,11,-98,-116,11,-59,11,-54,-87,-100,-101,11,-60,-88,-102,-103,-55,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,44,68,78,79,80,81,82,83,84,85,86,87,88,89,91,95,122,123,126,127,128,131,141,142,154,174,195,203,204,216,],[8,69,96,-44,-32,-39,-40,-41,-49,-50,-51,-47,-48,-42,-43,-46,96,139,140,-67,-68,-45,147,155,156,165,182,200,209,211,225,]),'VARIABLE':([7,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,41,42,43,46,50,51,52,53,54,55,56,58,62,63,64,66,67,69,71,94,96,97,98,102,111,113,114,115,116,117,130,132,139,140,143,147,148,155,156,159,162,165,167,176,177,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[9,12,-56,-9,12,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-34,65,65,-18,65,-37,-57,-22,-23,-33,-35,-36,-38,78,93,65,-17,-20,65,65,12,-19,65,-28,-29,119,129,65,-25,-26,133,134,12,-21,-112,-113,157,-30,65,-114,-115,-31,172,-99,-58,12,185,-98,-116,12,-59,12,-54,-87,-100,-101,12,-60,-88,-102,-103,-55,]),'LKEY':([9,47,112,166,168,180,191,195,201,203,204,205,],[10,71,130,175,176,188,196,201,206,210,212,213,]),'ACTION':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[37,-9,37,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,37,-19,-24,-28,-29,-25,-26,37,-21,-112,-113,-30,-114,-115,-31,-99,-58,37,-98,-116,37,-59,37,-54,-87,-100,-101,37,-60,-88,-102,-103,-55,]),'IF':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[39,-9,39,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,39,-19,-24,-28,-29,-25,-26,39,-21,-112,-113,-30,-114,-115,-31,-99,-58,39,-98,-116,39,-59,39,-54,-87,-100,-101,39,-60,-88,-102,-103,-55,]),'CONST':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,42,50,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[41,-56,-9,41,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,63,-18,-57,-22,-23,-17,-20,-27,41,-19,-24,-28,-29,-25,-26,41,-21,-112,-113,-30,-114,-115,-31,-99,-58,41,-98,-116,41,-59,41,-54,-87,-100,-101,41,-60,-88,-102,-103,-55,]),'LIST':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,160,161,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[45,-9,45,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,45,-19,-24,-28,-29,-25,-26,45,-21,-112,-113,-30,-114,-115,-31,170,171,-99,-58,45,-98,-116,45,-59,45,-54,-87,-100,-101,45,-60,-88,-102,-103,-55,]),'TRY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[47,-9,47,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,47,-19,-24,-28,-29,-25,-26,47,-21,-112,-113,-30,-114,-115,-31,-99,-58,47,-98,-116,47,-59,47,-54,-87,-100,-101,47,-60,-88,-102,-103,-55,]),'DICTIONARY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,152,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[48,-9,48,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,48,-19,-24,-28,-29,-25,-26,48,-21,-112,-113,-30,163,-114,-115,-31,-99,-58,48,-98,-116,48,-59,48,-54,-87,-100,-101,48,-60,-88,-102,-103,-55,]),'STRING':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,58,64,66,69,71,94,96,97,98,107,109,114,115,120,121,130,132,139,140,147,153,155,156,159,165,167,176,182,183,188,190,196,199,200,206,209,210,211,213,217,225,226,227,228,230,],[49,-9,49,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,88,-17,-20,-27,49,-19,-24,-28,-29,124,126,-25,-26,137,138,49,-21,-112,-113,-30,164,-114,-115,-31,-99,-58,49,-98,-116,49,-59,49,-54,-87,215,-100,219,-101,49,-60,-88,-102,219,-103,-55,]),'PRIVATE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[50,-9,50,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-17,-20,-27,50,-19,-24,-28,-29,-25,-26,50,-21,-112,-113,-30,-114,-115,-31,-99,-58,50,-98,-116,50,-59,50,-54,-87,-100,-101,50,-60,-88,-102,-103,-55,]),'CHARTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,50,51,52,63,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[53,-56,-9,53,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,53,53,-18,-57,-22,-23,53,-17,-20,53,53,-19,53,-28,-29,-25,-26,53,-21,-112,-113,-30,-114,-115,-31,-99,-58,53,-98,-116,53,-59,53,-54,-87,-100,-101,53,-60,-88,-102,-103,-55,]),'STRINGTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,50,51,52,61,63,64,66,69,70,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,178,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[38,-56,-9,38,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,38,38,-18,-57,-22,-23,92,38,-17,-20,38,99,38,-19,38,-28,-29,-25,-26,38,-21,-112,-113,-30,-114,-115,-31,-99,-58,38,186,-98,-116,38,-59,38,-54,-87,-100,-101,38,-60,-88,-102,-103,-55,]),'FLOATTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,50,51,52,63,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[54,-56,-9,54,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,54,54,-18,-57,-22,-23,54,-17,-20,54,54,-19,54,-28,-29,-25,-26,54,-21,-112,-113,-30,-114,-115,-31,-99,-58,54,-98,-116,54,-59,54,-54,-87,-100,-101,54,-60,-88,-102,-103,-55,]),'DECIMALTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,50,51,52,63,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[55,-56,-9,55,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,55,55,-18,-57,-22,-23,55,-17,-20,55,55,-19,55,-28,-29,-25,-26,55,-21,-112,-113,-30,-114,-115,-31,-99,-58,55,-98,-116,55,-59,55,-54,-87,-100,-101,55,-60,-88,-102,-103,-55,]),'INTTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,50,51,52,63,64,66,69,70,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,179,182,183,188,190,196,199,200,209,211,213,217,224,225,226,228,230,],[46,-56,-9,46,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,46,46,-18,-57,-22,-23,46,-17,-20,46,100,46,-19,46,-28,-29,-25,-26,46,-21,-112,-113,-30,-114,-115,-31,-99,-58,46,187,-98,-116,46,-59,46,-54,-87,-100,-101,46,-60,232,-88,-102,-103,-55,]),'BOOLTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,50,51,52,63,64,66,69,71,94,96,97,98,114,115,130,132,139,140,147,155,156,159,165,167,176,182,183,188,190,196,199,200,209,211,213,217,225,226,228,230,],[56,-56,-9,56,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,56,56,-18,-57,-22,-23,56,-17,-20,56,56,-19,56,-28,-29,-25,-26,56,-21,-112,-113,-30,-114,-115,-31,-99,-58,56,-98,-116,56,-59,56,-54,-87,-100,-101,56,-60,-88,-102,-103,-55,]),'RKEY':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,51,52,60,64,66,69,94,96,97,98,101,114,115,132,139,140,144,145,146,147,155,156,159,165,167,175,182,183,184,190,194,199,200,202,207,209,211,214,217,218,219,220,221,222,223,225,226,228,230,231,232,233,234,],[-9,59,-4,-6,-7,-8,-10,-11,-12,-13,-14,-15,-16,-94,-95,-52,-53,-85,-86,-96,-97,-108,-109,-110,-111,-18,-22,-23,-5,-17,-20,-27,-19,-24,-28,-29,118,-25,-26,-21,-112,-113,158,-14,-62,-30,-114,-115,-31,-99,-58,183,-98,-116,190,-59,199,-54,-87,208,216,-100,-101,223,-60,226,-104,228,-106,230,-89,-88,-102,-103,-55,-92,-93,-105,-107,]),'DOT':([12,49,],[57,73,]),'ASSIGNATION':([12,65,119,129,133,134,],[58,58,136,143,149,150,]),'SMALLER_THAN':([37,45,48,163,170,171,],[61,70,72,173,178,179,]),'LPARENT':([39,74,75,76,77,90,103,104,135,169,181,192,193,],[62,105,106,107,108,110,120,121,151,177,189,197,198,]),'CLEAR':([57,],[74,]),'COUNT':([57,],[75,]),'ADD':([57,],[76,]),'REMOVEAT':([57,],[77,]),'INTEGER':([58,108,212,229,],[83,125,221,221,]),'FLOAT_NUMBER':([58,],[84,]),'DECIMAL_NUMBER':([58,],[85,]),'BOOLTRUE':([58,],[86,]),'BOOLFALSE':([58,],[87,]),'CHAR':([58,],[89,]),'READ':([58,],[90,]),'GREATER_THAN':([72,92,99,100,173,186,187,],[102,111,116,117,181,192,193,]),'PUT':([73,],[103,]),'REMOVE':([73,],[104,]),'COMMA':([78,79,80,81,82,83,84,85,86,87,88,89,91,95,126,127,128,131,137,219,221,],[-44,-32,-39,-40,-41,-49,-50,-51,-47,-48,-42,-43,-46,113,-67,-68,-45,148,153,227,229,]),'PLUS':([88,126,],[109,109,]),'RPARENT':([93,105,106,110,124,125,138,164,172,185,189,197,198,],[112,122,123,128,141,142,154,174,180,191,195,203,204,]),'CATCH':([118,],[135,]),'NEW':([136,149,150,],[152,160,161,]),'EXCEPTION':([151,],[162,]),'ARROW':([157,],[166,]),'ELSE':([158,208,],[168,168,]),'ELSE_IF':([158,208,],[169,169,]),'FINALLY':([199,],[205,]),'DOUBLEPOINT':([215,],[224,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_using':([0,],[2,]),'block_publicClass':([2,],[4,]),'all_block_code':([10,14,],[13,60,]),'block_code':([10,14,71,130,176,188,196,213,],[14,14,101,146,146,194,146,222,]),'def_const_or_var':([10,14,71,130,176,188,196,213,],[15,15,15,15,15,15,15,15,]),'estruct_of_data':([10,14,71,130,176,188,196,213,],[16,16,16,16,16,16,16,16,]),'block_try_catch':([10,14,71,130,176,188,196,213,],[17,17,17,17,17,17,17,17,]),'dict_estruct':([10,14,71,130,176,188,196,213,],[18,18,18,18,18,18,18,18,]),'functions_dict':([10,14,71,130,176,188,196,213,],[19,19,19,19,19,19,19,19,]),'functions_list':([10,14,71,130,176,188,196,213,],[20,20,20,20,20,20,20,20,]),'declaration_lambda':([10,14,71,130,176,188,196,213,],[21,21,21,21,21,21,21,21,]),'block_if':([10,14,71,130,176,188,196,213,],[22,22,22,145,145,22,145,22,]),'constant_assignation':([10,14,71,130,176,188,196,213,],[23,23,23,23,23,23,23,23,]),'variable_assignation':([10,14,71,130,176,188,196,213,],[24,24,24,24,24,24,24,24,]),'list_empty':([10,14,71,130,176,188,196,213,],[25,25,25,25,25,25,25,25,]),'list_full':([10,14,71,130,176,188,196,213,],[26,26,26,26,26,26,26,26,]),'try_catch_simply':([10,14,71,130,176,188,196,213,],[27,27,27,27,27,27,27,27,]),'try_catch_finally':([10,14,71,130,176,188,196,213,],[28,28,28,28,28,28,28,28,]),'dict_empty':([10,14,71,130,176,188,196,213,],[29,29,29,29,29,29,29,29,]),'dict_full':([10,14,71,130,176,188,196,213,],[30,30,30,30,30,30,30,30,]),'dict_func_put':([10,14,71,130,176,188,196,213,],[31,31,31,31,31,31,31,31,]),'dict_func_remove':([10,14,71,130,176,188,196,213,],[32,32,32,32,32,32,32,32,]),'list_func_clear':([10,14,71,130,176,188,196,213,],[33,33,33,33,33,33,33,33,]),'list_func_count':([10,14,71,130,176,188,196,213,],[34,34,34,34,34,34,34,34,]),'list_func_add':([10,14,71,130,176,188,196,213,],[35,35,35,35,35,35,35,35,]),'list_func_removeat':([10,14,71,130,176,188,196,213,],[36,36,36,36,36,36,36,36,]),'access_modifiers':([10,14,71,130,176,188,196,213,],[40,40,40,40,40,40,40,40,]),'all_asignations':([10,14,40,41,63,71,130,176,188,196,213,],[42,42,64,66,94,42,42,42,42,42,42,]),'data_type':([10,14,40,41,63,69,71,96,130,176,188,196,213,],[43,43,43,67,43,43,43,43,43,43,43,43,43,]),'assignation_key_value':([10,14,40,41,43,63,67,69,71,96,113,130,148,176,188,196,213,],[44,44,44,44,68,44,95,44,44,44,131,44,131,44,44,44,44,]),'assignation_with_datatype':([10,14,40,41,63,69,71,96,130,176,188,196,213,],[51,51,51,51,51,98,51,114,51,51,51,51,51,]),'assignation_without_datatype':([10,14,40,41,63,69,71,96,130,176,188,196,213,],[52,52,52,52,52,97,52,115,52,52,52,52,52,]),'value':([58,],[79,]),'value_numeric':([58,],[80,]),'value_logic':([58,],[81,]),'value_string':([58,],[82,]),'concatenation':([58,109,],[91,127,]),'some_assignation_constant':([113,148,],[132,159,]),'not_yes_nested_if':([130,176,196,],[144,184,202,]),'other_if':([158,208,],[167,217,]),'dictionary_value':([201,],[207,]),'key_value_pair':([206,],[214,]),'strings_list':([210,227,],[218,233,]),'ints_list':([212,229,],[220,234,]),'valueHash':([224,],[231,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',48),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',51),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',54),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',58),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',59),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',63),
  ('block_code -> estruct_of_data','block_code',1,'p_block_code','sintactico.py',64),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',65),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',66),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',67),
  ('block_code -> functions_dict','block_code',1,'p_block_code','sintactico.py',68),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',69),
  ('block_code -> declaration_lambda','block_code',1,'p_block_code','sintactico.py',70),
  ('block_code -> block_if','block_code',1,'p_block_code','sintactico.py',71),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',77),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',78),
  ('variable_assignation -> access_modifiers all_asignations','variable_assignation',2,'p_variable_assignation','sintactico.py',82),
  ('variable_assignation -> all_asignations','variable_assignation',1,'p_variable_assignation','sintactico.py',83),
  ('constant_assignation -> access_modifiers CONST all_asignations','constant_assignation',3,'p_constant_assignation','sintactico.py',88),
  ('constant_assignation -> CONST all_asignations','constant_assignation',2,'p_constant_assignation','sintactico.py',89),
  ('constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant','constant_assignation',5,'p_constant_assignation','sintactico.py',90),
  ('all_asignations -> assignation_with_datatype','all_asignations',1,'p_all_asignations','sintactico.py',94),
  ('all_asignations -> assignation_without_datatype','all_asignations',1,'p_all_asignations','sintactico.py',95),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',99),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',100),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',101),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA','assignation_without_datatype',2,'p_assignation_without_datatype','sintactico.py',105),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',106),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',107),
  ('some_assignation_constant -> assignation_key_value DOTANDCOMMA','some_assignation_constant',2,'p_some_assignation_constant','sintactico.py',111),
  ('some_assignation_constant -> assignation_key_value COMMA some_assignation_constant','some_assignation_constant',3,'p_some_assignation_constant','sintactico.py',112),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',116),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',119),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',120),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',121),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',122),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',123),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',124),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',133),
  ('value -> value_logic','value',1,'p_value','sintactico.py',134),
  ('value -> value_string','value',1,'p_value','sintactico.py',135),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',139),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',140),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',141),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',142),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',143),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',147),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',148),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',152),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',153),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',154),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',163),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',164),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',168),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',171),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',175),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',176),
  ('block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',181),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',185),
  ('other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',186),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',191),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',192),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',198),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',199),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',203),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',204),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',208),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',209),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',213),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',214),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',215),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',216),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',217),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',218),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',219),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',220),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',221),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',222),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',226),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',227),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',228),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',229),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',230),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',234),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',243),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',244),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',250),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',255),
  ('dictionary_value -> LKEY key_value_pair RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',259),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',262),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',263),
  ('key_value_pair -> STRING DOUBLEPOINT valueHash','key_value_pair',3,'p_key_value_pair','sintactico.py',267),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',271),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',274),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',275),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',280),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',281),
  ('dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',286),
  ('dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',291),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',297),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',298),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',302),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',303),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',307),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',308),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',312),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',313),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',317),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',318),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',319),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',320),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',324),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',327),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',330),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',333),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY','declaration_lambda',10,'p_declration_lambda','sintactico.py',341),
]
