
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass          : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYblock_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n\n                                | lists\n                                | functions_list\n\n                                | dict_estruct\n                                | functions_dict\n\n                                | block_for\n\n                                | block_try_catch\n\n                                | block_while\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric logic_operator INTEGER \n                                | VARIABLE logic_operator INTEGER\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers VARIABLE DOTANDCOMMA\n                                | VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : assignation_key_value\n                                        | assignation_key_value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value COMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    logic_operations         : logic_operation DOTANDCOMMA\n                                | logic_operation COMMA logic_operations\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : LKEY VARIABLE COMMA value RKEY\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_assignation          : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAstack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAqueue_struct             : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA\n    queue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA\n    queue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA\n    declaration_async    : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,90,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,11,32,52,53,54,98,100,101,112,113,114,115,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,140,142,143,145,146,170,171,172,173,174,179,180,181,185,186,187,192,193,198,199,200,209,219,220,222,227,246,274,285,286,296,307,309,],[4,72,-33,104,-34,-35,144,147,149,-38,-36,-37,-42,-28,-74,-22,-23,-24,-25,-36,-30,-31,-32,-20,-27,-29,172,-36,-41,175,176,177,178,201,202,-19,203,204,-76,-77,-75,208,209,211,217,218,-20,-21,172,-86,233,234,236,-87,255,282,291,293,304,313,315,]),'PUBLIC':([4,9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[6,10,-38,10,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,10,10,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,10,-136,-137,-138,-139,-121,-102,10,-103,-120,10,10,-88,-88,-95,10,-93,-90,-94,-91,-111,-98,-124,-125,10,-112,-99,-126,-127,]),'CLASS':([6,],[7,]),'VARIABLE':([7,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,54,56,57,59,65,66,67,68,69,70,72,74,75,76,77,78,79,92,94,97,99,104,109,110,111,112,113,114,115,139,140,141,144,147,148,149,153,154,155,156,167,172,175,176,177,178,182,183,201,202,203,204,208,210,211,213,215,217,218,221,228,232,233,234,236,243,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,287,291,293,298,303,304,312,313,315,],[8,11,-58,-38,11,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,98,102,-34,-35,-81,-84,-92,-59,-80,-82,-83,-85,112,-72,122,-53,-54,-55,-56,-57,137,112,102,102,-73,11,160,11,-38,-36,-37,-42,-36,-41,102,-71,-68,102,-70,184,160,102,188,197,-19,-67,-69,-64,-66,205,206,-17,-18,-63,-65,226,160,-78,229,11,-136,-137,235,-79,160,-138,-139,-121,253,-102,11,-103,-120,11,11,-88,-88,-95,11,-93,-90,-94,-91,-111,-98,295,-124,-125,11,122,-112,-99,-126,-127,]),'LKEY':([8,62,64,190,242,250,251,262,274,283,285,286,290,297,],[9,109,111,215,252,259,260,271,283,287,292,294,298,287,]),'PRINT':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[29,-38,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,29,29,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,29,-136,-137,-138,-139,-121,-102,29,-103,-120,29,29,-88,-88,-95,29,-93,-90,-94,-91,-111,-98,-124,-125,29,-112,-99,-126,-127,]),'READ':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,53,54,56,57,59,66,67,68,69,72,74,97,99,104,109,111,112,113,114,115,139,140,141,144,147,148,149,155,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,303,304,312,313,315,],[30,-38,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,103,-34,-35,-81,-84,-92,-80,-82,-83,-85,-72,135,103,103,-73,30,30,-38,-36,-37,-42,-36,-41,103,-71,-68,103,-70,103,-19,-67,-69,-64,-66,-17,-18,-63,-65,30,-136,-137,-138,-139,-121,-102,30,-103,-120,30,30,-88,-88,-95,30,-93,-90,-94,-91,-111,-98,-124,-125,30,135,-112,-99,-126,-127,]),'CONST':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,59,65,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[50,-58,-38,50,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,96,-34,-35,-92,-59,-72,-73,50,50,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,50,-136,-137,-138,-139,-121,-102,50,-103,-120,50,50,-88,-88,-95,50,-93,-90,-94,-91,-111,-98,-124,-125,50,-112,-99,-126,-127,]),'INTEGER':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,95,104,109,110,111,112,113,114,115,139,140,144,147,149,154,165,172,175,176,177,178,201,202,203,204,210,211,215,217,218,228,232,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,294,298,303,304,310,312,313,315,],[32,-38,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,32,115,-72,32,-53,-54,-55,-56,-57,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,32,140,-73,32,32,32,-38,-36,-37,-42,-36,-41,-71,-68,-70,32,195,-19,-67,-69,-64,-66,-17,-18,-63,-65,32,-78,32,-136,-137,-79,32,-138,-139,-121,-102,32,-103,-120,32,32,-88,-88,-95,32,-93,-90,-94,-91,-111,-98,-124,-125,302,32,32,-112,302,-99,-126,-127,]),'FLOAT_NUMBER':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,70,72,74,75,76,77,78,79,94,104,109,110,111,112,113,114,115,139,140,144,147,149,154,172,175,176,177,178,201,202,203,204,210,211,215,217,218,228,232,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,303,304,312,313,315,],[53,-38,53,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,53,-72,53,-53,-54,-55,-56,-57,53,-73,53,53,53,-38,-36,-37,-42,-36,-41,-71,-68,-70,53,-19,-67,-69,-64,-66,-17,-18,-63,-65,53,-78,53,-136,-137,-79,53,-138,-139,-121,-102,53,-103,-120,53,53,-88,-88,-95,53,-93,-90,-94,-91,-111,-98,-124,-125,53,53,-112,-99,-126,-127,]),'DECIMAL_NUMBER':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,70,72,74,75,76,77,78,79,94,104,109,110,111,112,113,114,115,139,140,144,147,149,154,172,175,176,177,178,201,202,203,204,210,211,215,217,218,228,232,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,303,304,312,313,315,],[54,-38,54,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,54,-72,54,-53,-54,-55,-56,-57,54,-73,54,54,54,-38,-36,-37,-42,-36,-41,-71,-68,-70,54,-19,-67,-69,-64,-66,-17,-18,-63,-65,54,-78,54,-136,-137,-79,54,-138,-139,-121,-102,54,-103,-120,54,54,-88,-88,-95,54,-93,-90,-94,-91,-111,-98,-124,-125,54,54,-112,-99,-126,-127,]),'LIST':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,237,238,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[55,-38,55,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,55,55,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,55,-136,-137,-138,-139,-121,247,248,-102,55,-103,-120,55,55,-88,-88,-95,55,-93,-90,-94,-91,-111,-98,-124,-125,55,-112,-99,-126,-127,]),'DICTIONARY':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,225,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[58,-38,58,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,58,58,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,58,-136,-137,239,-138,-139,-121,-102,58,-103,-120,58,58,-88,-88,-95,58,-93,-90,-94,-91,-111,-98,-124,-125,58,-112,-99,-126,-127,]),'FOR':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[60,-38,60,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,60,60,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,60,-136,-137,-138,-139,-121,-102,60,-103,-120,60,60,-88,-88,-95,60,-93,-90,-94,-91,-111,-98,-124,-125,60,-112,-99,-126,-127,]),'FOREACH':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[61,-38,61,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,61,61,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,61,-136,-137,-138,-139,-121,-102,61,-103,-120,61,61,-88,-88,-95,61,-93,-90,-94,-91,-111,-98,-124,-125,61,-112,-99,-126,-127,]),'TRY':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[62,-38,62,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,62,62,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,62,-136,-137,-138,-139,-121,-102,62,-103,-120,62,62,-88,-88,-95,62,-93,-90,-94,-91,-111,-98,-124,-125,62,-112,-99,-126,-127,]),'WHILE':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,191,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[63,-38,63,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,63,63,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,216,-17,-18,-63,-65,63,-136,-137,-138,-139,-121,-102,63,-103,-120,63,63,-88,-88,-95,63,-93,-90,-94,-91,-111,-98,-124,-125,63,-112,-99,-126,-127,]),'DO':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[64,-38,64,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,64,64,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,64,-136,-137,-138,-139,-121,-102,64,-103,-120,64,64,-88,-88,-95,64,-93,-90,-94,-91,-111,-98,-124,-125,64,-112,-99,-126,-127,]),'PRIVATE':([9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,104,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[65,-38,65,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-73,65,65,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,65,-136,-137,-138,-139,-121,-102,65,-103,-120,65,65,-88,-88,-95,65,-93,-90,-94,-91,-111,-98,-124,-125,65,-112,-99,-126,-127,]),'CHARTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,59,65,72,96,104,107,108,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,212,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[66,-58,-38,66,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,66,66,-34,-35,-92,-59,-72,66,-73,66,66,66,66,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,66,66,-136,-137,-138,-139,-121,-102,66,-103,-120,66,66,-88,-88,-95,66,-93,-90,-94,-91,-111,-98,-124,-125,66,-112,-99,-126,-127,]),'STRINGTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,59,65,72,96,104,105,107,108,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,212,215,217,218,233,234,236,244,252,254,255,256,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[56,-58,-38,56,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,56,56,-34,-35,-92,-59,-72,56,-73,151,56,56,56,56,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,56,56,-136,-137,-138,-139,-121,-102,56,-103,-120,263,56,56,-88,-88,-95,56,-93,-90,-94,-91,-111,-98,-124,-125,56,-112,-99,-126,-127,]),'FLOATTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,59,65,72,96,104,107,108,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,212,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[67,-58,-38,67,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,67,67,-34,-35,-92,-59,-72,67,-73,67,67,67,67,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,67,67,-136,-137,-138,-139,-121,-102,67,-103,-120,67,67,-88,-88,-95,67,-93,-90,-94,-91,-111,-98,-124,-125,67,-112,-99,-126,-127,]),'DECIMALTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,59,65,72,96,104,107,108,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,212,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[68,-58,-38,68,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,68,68,-34,-35,-92,-59,-72,68,-73,68,68,68,68,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,68,68,-136,-137,-138,-139,-121,-102,68,-103,-120,68,68,-88,-88,-95,68,-93,-90,-94,-91,-111,-98,-124,-125,68,-112,-99,-126,-127,]),'INTTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,59,65,72,96,104,105,107,108,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,212,215,217,218,233,234,236,244,252,254,255,257,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[57,-58,-38,57,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,57,57,-34,-35,-92,-59,-72,57,-73,152,57,57,57,57,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,57,57,-136,-137,-138,-139,-121,-102,57,-103,-120,264,57,57,-88,-88,-95,57,-93,-90,-94,-91,-111,-98,-124,-125,57,-112,-99,-126,-127,]),'BOOLTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,59,65,72,96,104,107,108,109,111,112,113,114,115,139,140,144,147,149,172,175,176,177,178,201,202,203,204,212,215,217,218,233,234,236,244,252,254,255,259,260,266,268,270,271,275,276,277,278,282,284,291,293,298,304,312,313,315,],[69,-58,-38,69,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,69,69,-34,-35,-92,-59,-72,69,-73,69,69,69,69,-38,-36,-37,-42,-36,-41,-71,-68,-70,-19,-67,-69,-64,-66,-17,-18,-63,-65,69,69,-136,-137,-138,-139,-121,-102,69,-103,-120,69,69,-88,-88,-95,69,-93,-90,-94,-91,-111,-98,-124,-125,69,-112,-99,-126,-127,]),'RKEY':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,59,72,91,104,112,113,114,115,122,124,125,126,127,128,129,130,131,132,133,134,139,140,144,147,149,157,161,172,175,176,177,178,198,199,201,202,203,204,217,218,231,233,234,236,244,254,255,261,266,267,268,269,270,275,276,277,278,279,282,284,288,289,291,293,299,300,301,302,304,305,306,311,312,313,314,315,316,317,],[-38,90,-15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-61,-62,-37,-33,-122,-123,-132,-133,-134,-135,-109,-110,-118,-119,-88,-89,-96,-97,-100,-101,-34,-35,-92,-72,-16,-73,-38,-36,-37,-42,-28,-22,-23,-24,-25,-36,-30,-31,-32,-20,-27,-29,-36,-41,-71,-68,-70,189,191,-19,-67,-69,-64,-66,-20,-21,-17,-18,-63,-65,-136,-137,244,-138,-139,-121,-102,-103,-120,270,275,276,277,278,-95,-93,-90,-94,-91,284,-111,-98,296,-113,-124,-125,307,-128,309,-130,-112,-114,312,317,-99,-126,-129,-127,-131,-115,]),'PLUS':([11,17,31,32,53,54,112,113,114,122,124,128,132,139,159,160,198,],[75,-36,75,-33,-34,-35,75,-36,75,75,75,-36,168,-36,75,75,168,]),'MINUS':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[76,-36,76,-33,-34,-35,76,-36,76,76,76,-36,-36,76,76,]),'TIMES':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[77,-36,77,-33,-34,-35,77,-36,77,77,77,-36,-36,77,77,]),'DIVIDE':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[78,-36,78,-33,-34,-35,78,-36,78,78,78,-36,-36,78,78,]),'PERCENT':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[79,-36,79,-33,-34,-35,79,-36,79,79,79,-36,-36,79,79,]),'GREATER_THAN':([11,17,31,32,53,54,106,112,113,114,122,124,128,139,151,152,159,160,249,263,264,],[80,-36,80,-33,-34,-35,153,-38,-36,-37,80,80,-36,-36,182,183,80,80,258,272,273,]),'SMALLER_THAN':([11,17,31,32,53,54,55,58,112,113,114,122,124,128,139,159,160,239,247,248,],[81,-36,81,-33,-34,-35,105,106,-38,-36,-37,81,81,-36,-36,81,81,249,256,257,]),'EQUAL_COMPARATION':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[82,-36,82,-33,-34,-35,-38,-36,-37,82,82,-36,-36,82,82,]),'INEQUALITY':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[83,-36,83,-33,-34,-35,-38,-36,-37,83,83,-36,-36,83,83,]),'GREATER_THAN_OR_EQUAL':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[84,-36,84,-33,-34,-35,-38,-36,-37,84,84,-36,-36,84,84,]),'SMALLER_THAN_OR_EQUAL':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[85,-36,85,-33,-34,-35,-38,-36,-37,85,85,-36,-36,85,85,]),'LOGICAND':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[86,-36,86,-33,-34,-35,-38,-36,-37,86,86,-36,-36,86,86,]),'LOGICOR':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[87,-36,87,-33,-34,-35,-38,-36,-37,87,87,-36,-36,87,87,]),'LOGICNOT':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[88,-36,88,-33,-34,-35,-38,-36,-37,88,88,-36,-36,88,88,]),'LOGICXOR':([11,17,31,32,53,54,112,113,114,122,124,128,139,159,160,],[89,-36,89,-33,-34,-35,-38,-36,-37,89,89,-36,-36,89,89,]),'DOT':([11,],[73,]),'ASSIGNATION':([11,102,184,205,206,],[74,74,207,223,224,]),'LPARENT':([29,30,60,61,63,103,116,117,118,119,120,121,135,214,216,258,272,273,],[92,93,107,108,110,150,162,163,164,165,166,167,169,230,232,265,280,281,]),'COMMA':([32,53,54,100,112,113,114,115,122,123,124,125,126,127,128,129,130,131,132,133,134,139,140,142,145,172,173,179,181,186,187,196,198,199,289,295,300,302,317,],[-33,-34,-35,148,-38,-36,-37,-42,-28,-74,-22,-23,-24,-25,-36,-30,-31,-32,-20,-27,-29,-36,-41,148,148,-19,148,148,-75,210,212,221,-20,-21,297,303,308,310,-115,]),'CLEAR':([73,],[116,]),'COUNT':([73,],[117,]),'ADD':([73,],[118,]),'REMOVEAT':([73,],[119,]),'PUT':([73,],[120,]),'REMOVE':([73,],[121,]),'BOOLTRUE':([74,303,],[129,129,]),'BOOLFALSE':([74,303,],[130,130,]),'STRING':([74,92,164,166,168,292,303,308,],[132,136,194,196,198,300,132,300,]),'CHAR':([74,303,],[133,133,]),'RPARENT':([93,115,136,137,140,150,158,162,163,169,194,195,197,229,235,240,241,245,253,265,280,281,],[138,-42,170,171,-41,181,190,192,193,200,219,220,222,242,246,250,251,254,262,274,285,286,]),'IN':([188,],[213,]),'CATCH':([189,],[214,]),'NEW':([207,223,224,],[225,237,238,]),'INCREMENT':([226,],[240,]),'DECREMENT':([226,],[241,]),'EXCEPTION':([230,],[243,]),'FINALLY':([284,],[290,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'all_block_code':([9,13,109,111,215,252,259,260,271,298,],[12,91,157,161,231,261,267,269,279,306,]),'block_code':([9,13,109,111,215,252,259,260,271,298,],[13,13,13,13,13,13,13,13,13,13,]),'def_const_or_var':([9,13,109,111,215,252,259,260,271,298,],[14,14,14,14,14,14,14,14,14,14,]),'print_data':([9,13,109,111,215,252,259,260,271,298,],[15,15,15,15,15,15,15,15,15,15,]),'read_data':([9,13,74,109,111,215,252,259,260,271,298,303,],[16,16,127,16,16,16,16,16,16,16,16,127,]),'arithmetic_operation':([9,13,70,74,94,109,110,111,154,210,215,232,252,259,260,271,298,303,],[17,17,113,128,139,17,128,17,128,128,17,128,17,17,17,17,17,128,]),'logic_operation':([9,13,74,109,110,111,154,210,215,232,252,259,260,271,298,303,],[18,18,131,18,158,18,186,186,18,245,18,18,18,18,18,131,]),'lists':([9,13,109,111,215,252,259,260,271,298,],[19,19,19,19,19,19,19,19,19,19,]),'functions_list':([9,13,109,111,215,252,259,260,271,298,],[20,20,20,20,20,20,20,20,20,20,]),'dict_estruct':([9,13,109,111,215,252,259,260,271,298,],[21,21,21,21,21,21,21,21,21,21,]),'functions_dict':([9,13,109,111,215,252,259,260,271,298,],[22,22,22,22,22,22,22,22,22,22,]),'block_for':([9,13,109,111,215,252,259,260,271,298,],[23,23,23,23,23,23,23,23,23,23,]),'block_try_catch':([9,13,109,111,215,252,259,260,271,298,],[24,24,24,24,24,24,24,24,24,24,]),'block_while':([9,13,109,111,215,252,259,260,271,298,],[25,25,25,25,25,25,25,25,25,25,]),'constant_assignation':([9,13,109,111,215,252,259,260,271,298,],[26,26,26,26,26,26,26,26,26,26,]),'variable_assignation':([9,13,109,111,215,252,259,260,271,298,],[27,27,27,27,27,27,27,27,27,27,]),'late_initialization':([9,13,109,111,215,252,259,260,271,298,],[28,28,28,28,28,28,28,28,28,28,]),'value_numeric':([9,13,70,74,94,109,110,111,154,210,215,232,252,259,260,271,298,303,],[31,31,114,124,114,31,159,31,159,159,31,159,31,31,31,31,31,124,]),'list_empty':([9,13,109,111,215,252,259,260,271,298,],[33,33,33,33,33,33,33,33,33,33,]),'list_full':([9,13,109,111,215,252,259,260,271,298,],[34,34,34,34,34,34,34,34,34,34,]),'list_func_clear':([9,13,109,111,215,252,259,260,271,298,],[35,35,35,35,35,35,35,35,35,35,]),'list_func_count':([9,13,109,111,215,252,259,260,271,298,],[36,36,36,36,36,36,36,36,36,36,]),'list_func_add':([9,13,109,111,215,252,259,260,271,298,],[37,37,37,37,37,37,37,37,37,37,]),'list_func_removeat':([9,13,109,111,215,252,259,260,271,298,],[38,38,38,38,38,38,38,38,38,38,]),'dict_empty':([9,13,109,111,215,252,259,260,271,298,],[39,39,39,39,39,39,39,39,39,39,]),'dict_full':([9,13,109,111,215,252,259,260,271,298,],[40,40,40,40,40,40,40,40,40,40,]),'dict_func_put':([9,13,109,111,215,252,259,260,271,298,],[41,41,41,41,41,41,41,41,41,41,]),'dict_func_remove':([9,13,109,111,215,252,259,260,271,298,],[42,42,42,42,42,42,42,42,42,42,]),'for_anidado':([9,13,109,111,215,252,259,260,271,298,],[43,43,43,43,43,43,266,268,43,43,]),'for_each':([9,13,109,111,215,252,259,260,271,298,],[44,44,44,44,44,44,44,44,44,44,]),'try_catch_simply':([9,13,109,111,215,252,259,260,271,298,],[45,45,45,45,45,45,45,45,45,45,]),'try_catch_finally':([9,13,109,111,215,252,259,260,271,298,],[46,46,46,46,46,46,46,46,46,46,]),'normal_while':([9,13,109,111,215,252,259,260,271,298,],[47,47,47,47,47,47,47,47,47,47,]),'do_while':([9,13,109,111,215,252,259,260,271,298,],[48,48,48,48,48,48,48,48,48,48,]),'access_modifiers':([9,13,109,111,215,252,259,260,271,298,],[49,49,49,49,49,49,49,49,49,49,]),'data_type':([9,13,49,50,96,107,108,109,111,212,215,252,259,260,271,298,],[51,51,97,99,141,155,156,51,51,155,51,51,51,51,51,51,]),'assignation_key_value':([9,13,51,97,99,109,111,141,148,155,215,252,259,260,271,298,],[52,52,100,142,145,52,52,173,179,187,52,52,52,52,52,52,]),'for_simple':([9,13,109,111,215,252,259,260,271,298,],[59,59,59,59,59,59,59,59,59,59,]),'arithmetic_operator':([11,31,112,114,122,124,159,160,],[70,94,70,94,70,94,94,70,]),'logic_operator':([11,31,122,124,159,160,],[71,95,71,95,95,71,]),'assignation_key_value_multiple':([51,97,99,141,148,],[101,143,146,174,180,]),'value':([74,303,],[123,311,]),'value_logic':([74,303,],[125,125,]),'value_string':([74,303,],[126,126,]),'concatenation':([74,168,303,],[134,199,134,]),'assignation_with_datatype':([107,212,],[154,228,]),'logic_operations':([154,210,],[185,227,]),'key_value_pairs':([283,297,],[288,305,]),'key_value_pair':([283,297,],[289,289,]),'strings_list':([292,308,],[299,314,]),'ints_list':([294,310,],[301,316,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico.py',68),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',71),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',74),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',75),
  ('block_code -> read_data','block_code',1,'p_block_code','sintactico.py',76),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico.py',77),
  ('block_code -> logic_operation','block_code',1,'p_block_code','sintactico.py',78),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico.py',80),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',81),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',83),
  ('block_code -> functions_dict','block_code',1,'p_block_code','sintactico.py',84),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico.py',86),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',88),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico.py',90),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',94),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',95),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',100),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',101),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico.py',105),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',109),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',110),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',114),
  ('value -> value_logic','value',1,'p_value','sintactico.py',115),
  ('value -> value_string','value',1,'p_value','sintactico.py',116),
  ('value -> read_data','value',1,'p_value','sintactico.py',117),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',121),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',122),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',123),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',124),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',128),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',129),
  ('value_logic -> logic_operation','value_logic',1,'p_value_logic','sintactico.py',130),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',134),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',135),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',136),
  ('value_numeric -> arithmetic_operation','value_numeric',1,'p_value_numeric','sintactico.py',137),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',142),
  ('arithmetic_operation -> VARIABLE','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',143),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',144),
  ('arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',145),
  ('logic_operation -> value_numeric logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',149),
  ('logic_operation -> VARIABLE logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',150),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',154),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',155),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',156),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',157),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',158),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',159),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',160),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',161),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',162),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',163),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',167),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',168),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',169),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',170),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',171),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',176),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',177),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',181),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',182),
  ('def_const_or_var -> late_initialization','def_const_or_var',1,'p_def_const_or_var','sintactico.py',183),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',187),
  ('constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',188),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',189),
  ('constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',190),
  ('variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',194),
  ('variable_assignation -> data_type assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',195),
  ('variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',196),
  ('variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',197),
  ('late_initialization -> access_modifiers VARIABLE DOTANDCOMMA','late_initialization',3,'p_late_initialization','sintactico.py',201),
  ('late_initialization -> VARIABLE DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',202),
  ('late_initialization -> assignation_key_value DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',203),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',207),
  ('assignation_key_value -> READ LPARENT RPARENT','assignation_key_value',3,'p_assignation_key_value','sintactico.py',208),
  ('assignation_key_value_multiple -> assignation_key_value','assignation_key_value_multiple',1,'p_assignation_key_value_multiple','sintactico.py',212),
  ('assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple','assignation_key_value_multiple',3,'p_assignation_key_value_multiple','sintactico.py',213),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',217),
  ('assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',218),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',222),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',223),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',224),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',225),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',226),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',227),
  ('logic_operations -> logic_operation DOTANDCOMMA','logic_operations',2,'p_logic_operations','sintactico.py',233),
  ('logic_operations -> logic_operation COMMA logic_operations','logic_operations',3,'p_logic_operations','sintactico.py',234),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',238),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',239),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',243),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',244),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',249),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',250),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',251),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico.py',255),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',259),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',260),
  ('try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',264),
  ('try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',267),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',271),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',272),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',276),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',279),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',282),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',286),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',287),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',292),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',293),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',302),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',303),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',309),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',314),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',319),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',320),
  ('key_value_pair -> LKEY VARIABLE COMMA value RKEY','key_value_pair',5,'p_key_value_pair','sintactico.py',325),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',330),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',331),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',336),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',337),
  ('dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',342),
  ('dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',347),
  ('lists -> list_empty','lists',1,'p_lists','sintactico.py',353),
  ('lists -> list_full','lists',1,'p_lists','sintactico.py',354),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',358),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',359),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',363),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',364),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',368),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',369),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',373),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',374),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',378),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',379),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',380),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',381),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',385),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',388),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',391),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',394),
  ('stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_assignation',8,'p_stack_assignation','sintactico.py',397),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico.py',400),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico.py',403),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',14,'p_queue_struct','sintactico.py',406),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico.py',410),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico.py',414),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico.py',418),
  ('queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_peek','sintactico.py',422),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico.py',426),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',432),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',436),
]
