
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    all_block_code           : def_const_or_var        \n    def_const_or_var         : variable_assignation\n    variable_assignation     : access_modifiers assignation_key_value DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_key_value    : INTTYPE VARIABLE ASSIGNATION INTEGER\n    '
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,12,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,26,31,36,],[4,32,34,-10,]),'PUBLIC':([4,21,],[6,27,]),'CLASS':([6,],[7,]),'VARIABLE':([7,18,29,],[8,19,33,]),'LKEY':([8,20,],[9,21,]),'STATIC':([9,],[11,]),'RKEY':([10,22,23,24,30,32,34,],[12,30,-4,-5,-3,-7,-6,]),'VOID':([11,],[13,]),'MAIN':([13,],[14,]),'LPARENT':([14,],[15,]),'STRINGTYPE':([15,],[16,]),'LBRACKET':([16,],[17,]),'RBRACKET':([17,],[18,]),'RPARENT':([19,],[20,]),'PRIVATE':([21,],[28,]),'INTTYPE':([21,25,27,28,],[29,29,-8,-9,]),'ASSIGNATION':([33,],[35,]),'INTEGER':([35,],[36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([9,],[10,]),'all_block_code':([21,],[22,]),'def_const_or_var':([21,],[23,]),'variable_assignation':([21,],[24,]),'access_modifiers':([21,],[25,]),'assignation_key_value':([21,25,],[26,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',15),
  ('all_block_code -> def_const_or_var','all_block_code',1,'p_all_block_code','sintactico2.py',19),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',23),
  ('variable_assignation -> access_modifiers assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',27),
  ('variable_assignation -> assignation_key_value DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',28),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',32),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',33),
  ('assignation_key_value -> INTTYPE VARIABLE ASSIGNATION INTEGER','assignation_key_value',4,'p_assignation_key_value','sintactico2.py',37),
]
