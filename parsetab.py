
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE ENUM EQUAL_COMPARATION ERROR EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JOIN JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK START STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK THREAD TIMES TRY USING VARIABLE VOID WHILE WRITEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_code               : def_const_or_var\n                                | print_data\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n                                | thread_main\n                                | concurrent_method\n                                | method_definition\n\n                                | block_try_catch\n\n                                | lists\n                                | functions_list\n                                \n                                | statement_lambda\n\n                                | enums\n                                | normal_if\n\n                                | block_for\n\n                                | block_while\n\n                                | stack_struct\n                                | functions_stack\n\n                                | queue_struct\n                                | functions_queue\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n                                | array_type\n                                | METHOD\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    array_assignation        : CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA\n                                | STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA\n                                | FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA\n                                | DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA\n                                | INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA\n                                | BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA\n    char_array_assignation     : VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKETchar_content_multiple    : CHAR\n                                | CHAR COMMA char_content_multiple\n    string_array_assignation   : VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKETstring_content_multiple  : STRING\n                                | STRING COMMA string_content_multiple\n    float_array_assignation    : VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKETfloat_content_multiple   : FLOAT_NUMBER\n                                | FLOAT_NUMBER COMMA float_content_multiple\n    int_array_assignation      : VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKETint_content_multiple     : INTEGER\n                                | INTEGER COMMA int_content_multiple\n    decimal_array_assignation  : VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKETdecimal_content_multiple : DECIMAL_NUMBER\n                                | DECIMAL_NUMBER COMMA decimal_content_multiple\n    bool_array_assignation     : VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKETbool_content_multiple    : BOOLTRUE\n                                | BOOLFALSE\n                                | BOOLTRUE COMMA bool_content_multiple\n                                | BOOLFALSE COMMA bool_content_multiple\n    array                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n                                | array\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n    constant_assignation     : access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA\n                                | CONST assignation_type_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers assignation_type_value_multiple DOTANDCOMMA\n                                | assignation_type_value_multiple DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_type_value   : INTTYPE assignation_int\n                                | STRINGTYPE assignation_string\n                                | FLOATTYPE assignation_float\n                                | BOOLTYPE assignation_true\n                                | BOOLTYPE assignation_false\n    assignation_int          : VARIABLE ASSIGNATION INTEGER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_string       : VARIABLE ASSIGNATION STRING\n                                | VARIABLE ASSIGNATION VARIABLE\n    assignation_float        : VARIABLE ASSIGNATION FLOAT_NUMBER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_true         : VARIABLE ASSIGNATION BOOLTRUE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_false        : VARIABLE ASSIGNATION BOOLFALSE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_type_value_multiple          : INTTYPE assignation_int_multiple\n                                                | STRINGTYPE assignation_string_multiple\n                                                | FLOATTYPE assignation_float_multiple\n                                                | BOOLTYPE assignation_true_multiple\n                                                | BOOLTYPE assignation_false_multiple\n    assignation_int_multiple                 : assignation_int\n                                                | assignation_int COMMA assignation_int_multiple\n    assignation_string_multiple              : assignation_string\n                                                | assignation_string COMMA assignation_string_multiple\n    assignation_float_multiple               : assignation_float\n                                                | assignation_float COMMA assignation_float_multiple\n    assignation_true_multiple                : assignation_true\n                                                | assignation_true COMMA assignation_true_multiple\n    assignation_false_multiple               : assignation_false\n                                                | assignation_false COMMA assignation_false_multiple\n    method_definition        : access_modifiers STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY\n                                | STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY\n\n                                | access_modifiers STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT RPARENT LKEY RKEY\n                                | STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | STATIC VOID METHOD LPARENT RPARENT LKEY RKEY\n    func_parameter           : data_type VARIABLEfunc_parameters          : func_parameter\n                                | func_parameter COMMA func_parameters\n    \n    thread_main                 : declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait\n    \n    declaration_thread          : THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA\n                                | THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA\n    \n    thread_init                 : thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA\n    \n    thread_wait                 : thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA\n    \n    concurrent_method           : STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY\n                                | WRITE\n    \n    thread_logic                : thread_sentence\n                                | thread_logic thread_sentence\n    \n    thread_sentence             : thread_expression DOTANDCOMMA\n    \n    thread_expression           : thread_identificator DOT concurrent_method LPARENT RPARENT\n                                | PRINT LPARENT STRING RPARENT\n    \n    thread_arguments            : thread_expression\n                                | thread_arguments COMMA thread_expression\n    \n    thread_identificator        : VARIABLE\n    statement_lambda           : LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENTenums                      : ENUM METHOD LKEY list_enums RKEYlist_enums               : METHOD\n                                | METHOD COMMA list_enums \n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEYtry_catch_finally          : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEYblock_code_try           : def_const_or_var\n                                | print_data\n    all_block_code_try       : block_code_try\n                                | block_code_try all_block_code_try        \n    block_if                 : normal_if\n                                | all_block_code\n    normal_if                : IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n                                | IF LPARENT boolean_operation RPARENT LKEY block_if RKEY \n    other_if                 : ELSE LKEY block_if RKEY\n                                | ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n    block_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENTblock_for                : for_simple\n                                | for_each\n    for_simple               : FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add            : VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA\n    list_func_removeat       : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT REMOVEAT LPARENT STRING RPARENT DOTANDCOMMA\n    stack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct               : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMAfunctions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n                                | queue_peek\n    queue_enqueue              : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_dequeue              : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAqueue_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAqueue_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAqueue_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,12,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,86,108,109,118,119,123,124,127,128,129,130,135,144,198,202,204,205,206,207,208,209,210,211,237,239,240,241,254,255,256,258,260,261,262,263,264,265,267,269,270,271,272,273,275,277,279,280,281,282,294,309,325,326,331,333,334,335,336,337,338,339,340,343,344,345,347,376,377,378,398,399,402,403,404,405,406,414,418,422,423,424,425,443,450,467,468,469,470,485,491,510,511,513,515,517,519,521,523,537,538,548,557,559,573,577,588,602,611,612,616,628,630,],[4,145,-144,-150,-145,-152,-143,-148,-146,-147,-154,-156,199,214,287,-111,-38,-39,-40,-41,-103,-42,-43,-44,321,-151,-133,-132,348,349,350,352,-153,-45,-43,-136,-96,360,362,-149,-45,-42,-131,364,-155,-157,-40,-38,-139,-39,-112,385,400,401,-40,-90,-91,-92,-94,-95,-35,-36,-37,411,412,413,415,-113,-104,-45,460,461,462,463,464,465,466,472,-97,-40,-139,-40,-142,499,506,-49,-50,513,-83,527,535,549,-66,-48,-63,-69,-75,-72,-78,564,565,574,576,578,-180,590,-179,609,617,619,622,633,635,]),'PUBLIC':([4,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,148,153,199,214,217,218,219,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[6,88,88,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,88,-121,88,88,-120,-119,88,-192,-193,88,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,88,88,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,88,-205,-159,88,-164,-173,-210,-160,-162,-200,88,88,-158,88,-242,-208,-209,-213,-214,-201,-190,-215,-216,88,-191,]),'CLASS':([6,],[7,]),'VARIABLE':([7,18,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,55,57,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,87,96,98,99,100,101,102,103,104,105,111,113,115,132,136,137,138,139,141,145,152,153,164,165,166,182,183,184,185,186,187,188,189,190,191,192,193,194,199,203,214,223,224,230,231,232,233,234,235,236,242,243,248,252,283,287,291,292,293,295,296,297,298,299,300,301,303,307,308,317,321,323,324,342,348,349,350,352,354,355,356,357,358,359,360,362,364,366,367,368,374,375,385,386,387,389,400,401,411,412,413,415,426,435,439,446,448,449,453,456,457,460,461,462,463,464,465,466,471,472,490,499,501,504,505,506,508,509,527,529,531,532,535,539,544,545,558,560,561,562,564,565,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[8,19,25,106,110,25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,120,125,131,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,142,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,147,147,-34,-27,-28,-29,-30,-31,-32,-33,167,25,181,147,125,110,120,131,206,-121,206,25,238,110,240,257,259,120,261,266,268,125,270,274,276,278,279,147,-120,206,-119,125,310,-51,-52,-53,-54,-55,-56,25,-86,-87,331,331,147,-118,206,-114,-115,378,-105,-106,-107,-108,-109,-110,380,383,384,393,-58,331,331,331,-46,-47,-57,-59,378,-98,-99,-100,-101,-102,-60,-61,-62,422,424,147,-185,25,378,444,25,147,-225,-226,-238,-240,-241,-249,-169,-18,147,206,147,-176,-165,510,-184,-88,-89,-227,-228,-229,-230,-237,331,-248,-199,543,-204,-174,-177,-178,-161,548,-172,559,-163,-198,-231,147,25,-205,577,-159,25,206,-170,-171,-164,-173,-210,-160,-162,-200,25,25,-158,25,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'LKEY':([8,20,90,95,140,163,290,311,313,315,319,390,394,430,432,486,488,500,533,566,585,586,593,611,612,632,],[9,21,148,153,200,236,375,387,389,391,395,452,455,487,489,528,530,544,561,582,598,599,601,618,620,637,]),'STATIC':([9,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,88,89,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,439,453,457,460,461,462,463,464,465,466,472,490,501,503,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[11,22,22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,133,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,-122,-123,22,-121,22,-120,-119,22,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,22,22,-225,-226,-238,-240,-241,-249,-169,-18,495,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,495,-174,-161,-163,-198,-231,22,-205,-159,22,-164,-173,-210,-160,-162,-200,22,22,-158,22,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'RKEY':([10,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,114,145,179,199,214,216,217,218,219,226,242,243,287,288,289,306,320,321,348,349,350,352,360,362,364,374,391,400,401,411,412,413,415,426,433,434,435,436,445,448,449,452,453,457,460,461,462,463,464,465,466,472,489,490,501,504,505,506,508,530,531,532,535,545,549,560,571,574,575,576,578,579,587,589,590,591,592,600,606,607,608,609,613,614,617,619,621,622,623,624,625,626,627,633,634,635,636,638,639,],[12,113,-25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,-3,-26,-121,-4,-120,-119,305,-194,-192,-193,312,-86,-87,-118,-186,374,-195,396,-58,-46,-47,-57,-59,-60,-61,-62,-185,453,-225,-226,-238,-240,-241,-249,-169,-187,490,-18,-197,501,504,-176,508,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,531,-199,-204,-174,-177,-178,-161,560,-163,-198,-231,-205,575,-159,587,589,-164,-173,591,592,-210,-160,600,-162,-200,-158,613,614,615,-242,-208,-209,-213,-214,-201,627,628,-217,630,-219,-190,-215,-218,-216,-220,639,-191,]),'VOID':([11,22,133,495,],[13,96,197,539,]),'MAIN':([13,],[14,]),'LPARENT':([14,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,59,60,61,62,63,64,65,66,68,69,70,71,72,74,75,76,77,78,80,81,82,83,84,92,93,94,113,145,147,153,154,155,156,169,170,171,172,173,174,175,176,177,178,199,214,236,242,243,285,286,287,321,341,348,349,350,352,360,362,364,370,374,375,379,381,382,387,388,400,401,411,412,413,415,426,435,451,453,457,460,461,462,463,464,465,466,472,484,490,501,504,508,531,532,534,535,544,545,546,560,561,575,576,581,587,589,591,592,595,596,597,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[15,23,23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,115,-175,-188,-189,-211,-212,-221,-222,-223,-224,141,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,150,151,152,23,-121,-183,23,227,228,229,244,245,246,247,248,249,250,251,252,253,-120,-119,23,-86,-87,371,372,-118,-58,408,-46,-47,-57,-59,-60,-61,-62,428,-185,23,437,439,440,23,446,-225,-226,-238,-240,-241,-249,-169,-18,507,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,526,-199,-204,-174,-161,-163,-198,562,-231,23,-205,572,-159,23,-164,-173,594,-210,-160,-162,-200,603,604,605,23,23,-158,23,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'STRINGTYPE':([15,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,85,88,89,113,133,134,143,145,148,149,151,153,199,214,217,218,219,220,228,229,236,242,243,287,321,348,349,350,352,360,362,364,371,372,374,375,387,392,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,567,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[16,24,100,24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,137,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,137,-122,-123,24,100,137,100,-121,137,221,100,24,-120,-119,137,-192,-193,137,100,100,24,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,100,100,-185,24,24,100,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,24,-205,-159,24,583,-164,-173,-210,-160,-162,-200,24,24,-158,24,-242,-208,-209,-213,-214,-201,-190,-215,-216,137,-191,]),'LBRACKET':([16,24,25,51,52,53,54,55,99,100,101,102,103,104,248,252,322,323,324,342,351,353,361,363,365,471,],[17,107,111,116,117,121,122,126,157,158,159,160,161,162,342,342,397,342,342,342,416,417,419,420,421,342,]),'RBRACKET':([17,107,116,117,121,122,126,157,158,159,160,161,162,167,168,204,205,207,208,209,210,211,331,333,334,335,336,337,338,339,340,377,378,409,410,458,459,467,468,470,473,474,475,476,477,478,479,480,481,482,483,513,514,550,551,552,553,554,555,556,],[18,164,182,183,186,187,190,230,231,232,233,234,235,242,243,-38,-39,-41,-103,-42,-43,-44,-40,-90,-91,-92,-94,-95,-35,-36,-37,-104,-45,470,-84,511,-67,-49,-50,-83,515,-64,517,-70,519,-76,521,-73,523,-79,-80,-48,-85,-68,-65,-71,-77,-74,-81,-82,]),'RPARENT':([19,57,147,180,181,201,202,204,205,206,207,208,209,210,211,225,227,228,229,244,245,249,250,251,253,294,314,316,318,327,328,329,330,331,332,333,334,335,336,337,338,339,340,346,371,372,376,377,378,393,396,408,428,429,431,437,444,454,467,468,470,493,494,502,504,513,526,540,547,569,570,572,580,594,604,605,610,],[20,-175,-183,254,255,290,-111,-38,-39,-40,-41,-103,-42,-43,-44,311,313,315,319,325,326,343,344,345,347,-112,390,-167,394,402,403,404,405,-40,406,-90,-91,-92,-94,-95,-35,-36,-37,414,430,432,-113,-104,-45,-166,457,469,485,486,488,491,500,-168,-49,-50,-83,537,538,545,-174,-48,557,566,573,585,586,588,593,602,611,612,616,]),'PRINT':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,148,153,199,214,217,218,219,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,389,400,401,411,412,413,415,426,435,448,449,453,457,460,461,462,463,464,465,466,472,490,501,504,505,506,508,531,532,535,544,545,560,561,575,576,582,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[50,50,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,50,-121,50,50,-120,-119,50,-192,-193,50,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,50,50,451,-225,-226,-238,-240,-241,-249,-169,-18,451,-176,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-177,-178,-161,-163,-198,-231,50,-205,-159,50,-164,-173,595,-210,-160,-162,-200,50,50,-158,50,-242,-208,-209,-213,-214,-201,-190,-215,-216,50,-191,]),'CHARTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,133,143,145,151,153,199,214,228,229,236,242,243,287,321,348,349,350,352,360,362,364,371,372,374,375,387,392,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[51,99,51,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,51,99,99,-121,99,51,-120,-119,99,99,51,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,99,99,-185,51,51,99,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,51,-205,-159,51,-164,-173,-210,-160,-162,-200,51,51,-158,51,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'FLOATTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,85,88,89,113,133,134,143,145,148,151,153,199,214,217,218,219,220,228,229,236,242,243,287,321,348,349,350,352,360,362,364,371,372,374,375,387,392,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[52,101,52,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,138,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,138,-122,-123,52,101,138,101,-121,138,101,52,-120,-119,138,-192,-193,138,101,101,52,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,101,101,-185,52,52,101,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,52,-205,-159,52,-164,-173,-210,-160,-162,-200,52,52,-158,52,-242,-208,-209,-213,-214,-201,-190,-215,-216,138,-191,]),'DECIMALTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,133,143,145,151,153,199,214,228,229,236,242,243,287,321,348,349,350,352,360,362,364,371,372,374,375,387,392,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[53,102,53,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,53,102,102,-121,102,53,-120,-119,102,102,53,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,102,102,-185,53,53,102,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,53,-205,-159,53,-164,-173,-210,-160,-162,-200,53,53,-158,53,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'INTTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,85,88,89,113,133,134,143,145,148,149,150,151,153,199,214,217,218,219,220,228,229,236,242,243,287,321,348,349,350,352,360,362,364,371,372,374,375,387,392,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,568,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[54,103,54,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,136,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,136,-122,-123,54,103,136,103,-121,136,222,223,103,54,-120,-119,136,-192,-193,136,103,103,54,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,103,103,-185,54,54,103,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,54,-205,-159,54,584,-164,-173,-210,-160,-162,-200,54,54,-158,54,-242,-208,-209,-213,-214,-201,-190,-215,-216,136,-191,]),'BOOLTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,85,88,89,113,133,134,143,145,148,151,153,199,214,217,218,219,220,228,229,236,242,243,287,321,348,349,350,352,360,362,364,371,372,374,375,387,392,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[55,104,55,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,139,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,139,-122,-123,55,104,139,104,-121,139,104,55,-120,-119,139,-192,-193,139,104,104,55,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,104,104,-185,55,55,104,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,55,-205,-159,55,-164,-173,-210,-160,-162,-200,55,55,-158,55,-242,-208,-209,-213,-214,-201,-190,-215,-216,139,-191,]),'WRITE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,439,453,457,460,461,462,463,464,465,466,472,490,501,503,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[57,57,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,57,-121,57,-120,-119,57,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,57,57,-225,-226,-238,-240,-241,-249,-169,-18,57,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,57,-174,-161,-163,-198,-231,57,-205,-159,57,-164,-173,-210,-160,-162,-200,57,57,-158,57,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'ENUM':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[67,67,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,67,-121,67,-120,-119,67,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,67,67,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,67,-205,-159,67,-164,-173,-210,-160,-162,-200,67,67,-158,67,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'IF':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[68,68,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,68,-121,68,-120,-119,68,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,68,68,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,68,-205,-159,68,-164,-173,-210,-160,-162,-200,68,68,-158,68,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'STACK':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,302,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[73,73,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,73,-121,73,-120,-119,73,-86,-87,-118,379,-58,-46,-47,-57,-59,-60,-61,-62,-185,73,73,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,73,-205,-159,73,-164,-173,-210,-160,-162,-200,73,73,-158,73,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'QUEUE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,492,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[79,79,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,79,-121,79,-120,-119,79,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,79,79,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,536,-204,-174,-161,-163,-198,-231,79,-205,-159,79,-164,-173,-210,-160,-162,-200,79,79,-158,79,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'CONST':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,88,89,113,145,148,153,199,214,217,218,219,220,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[85,85,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,134,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,-122,-123,85,-121,85,85,-120,-119,85,-192,-193,134,85,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,85,85,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,85,-205,-159,85,-164,-173,-210,-160,-162,-200,85,85,-158,85,-242,-208,-209,-213,-214,-201,-190,-215,-216,85,-191,]),'THREAD':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,304,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,564,565,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[87,87,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,87,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,87,-121,87,-120,-119,87,-86,-87,-118,381,-58,-46,-47,-57,-59,-60,-61,-62,-185,87,87,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,87,-205,-159,87,-170,-171,-164,-173,-210,-160,-162,-200,87,87,-158,87,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'PRIVATE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,148,153,199,214,217,218,219,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,637,639,],[89,89,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,89,-121,89,89,-120,-119,89,-192,-193,89,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,89,89,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,89,-205,-159,89,-164,-173,-210,-160,-162,-200,89,89,-158,89,-242,-208,-209,-213,-214,-201,-190,-215,-216,89,-191,]),'TRY':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[90,90,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,90,-121,90,-120,-119,90,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,90,90,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,90,-205,-159,90,-164,-173,-210,-160,-162,-200,90,90,-158,90,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'LIST':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,497,498,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[91,91,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,91,-121,91,-120,-119,91,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,91,91,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,541,542,-204,-174,-161,-163,-198,-231,91,-205,-159,91,-164,-173,-210,-160,-162,-200,91,91,-158,91,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'FOR':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[92,92,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,92,-121,92,-120,-119,92,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,92,92,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,92,-205,-159,92,-164,-173,-210,-160,-162,-200,92,92,-158,92,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'FOREACH':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[93,93,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,93,-121,93,-120,-119,93,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,93,93,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,93,-205,-159,93,-164,-173,-210,-160,-162,-200,93,93,-158,93,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'WHILE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,312,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[94,94,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,94,-121,94,-120,-119,94,-86,-87,-118,388,-58,-46,-47,-57,-59,-60,-61,-62,-185,94,94,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,94,-205,-159,94,-164,-173,-210,-160,-162,-200,94,94,-158,94,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'DO':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,59,60,61,62,63,64,65,66,69,70,71,72,74,75,76,77,78,80,81,82,83,84,113,145,153,199,214,236,242,243,287,321,348,349,350,352,360,362,364,374,375,387,400,401,411,412,413,415,426,435,453,457,460,461,462,463,464,465,466,472,490,501,504,508,531,532,535,544,545,560,561,575,576,587,589,591,592,598,599,600,601,609,613,614,617,619,621,627,633,635,639,],[95,95,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-175,-188,-189,-211,-212,-221,-222,-223,-224,-206,-207,-202,-203,-232,-233,-234,-235,-236,-243,-244,-245,-246,-247,95,-121,95,-120,-119,95,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-185,95,95,-225,-226,-238,-240,-241,-249,-169,-18,-165,-184,-88,-89,-227,-228,-229,-230,-237,-248,-199,-204,-174,-161,-163,-198,-231,95,-205,-159,95,-164,-173,-210,-160,-162,-200,95,95,-158,95,-242,-208,-209,-213,-214,-201,-190,-215,-216,-191,]),'METHOD':([22,67,96,97,98,99,100,101,102,103,104,105,133,143,151,196,197,200,228,229,230,231,232,233,234,235,371,372,373,392,],[98,140,155,156,-34,-27,-28,-29,-30,-31,-32,-33,98,98,98,285,286,288,98,98,-51,-52,-53,-54,-55,-56,98,98,288,98,]),'DOT':([25,147,195,369,447,],[112,-183,284,427,503,]),'SMALLER_THAN':([79,91,206,208,209,210,211,279,331,333,378,422,424,536,541,542,],[143,149,-45,297,-42,-43,-44,-45,-45,297,-45,-45,-45,563,567,568,]),'GREATER_THAN':([98,99,100,101,102,103,104,105,206,208,209,210,211,213,221,222,230,231,232,233,234,235,279,331,333,378,422,424,563,583,584,],[-34,-27,-28,-29,-30,-31,-32,-33,-45,296,-42,-43,-44,303,307,308,-51,-52,-53,-54,-55,-56,-45,-45,296,-45,-45,-45,581,596,597,]),'ARROW':([106,],[163,]),'COMMA':([109,119,124,129,130,202,204,205,206,207,208,209,210,211,240,241,261,262,263,264,270,271,272,279,280,281,282,288,294,316,331,333,334,335,336,337,338,339,340,376,377,378,393,410,418,422,423,424,425,459,467,468,470,474,476,478,480,482,483,513,624,626,],[165,184,188,191,192,-111,-38,-39,-40,-41,-103,-42,-43,-44,-133,-132,-45,-43,-136,-96,-45,-42,-131,-40,-38,-139,-39,373,-112,392,-40,-90,-91,-92,-94,-95,-35,-36,-37,-113,-104,-45,-166,471,-97,-40,-139,-40,-142,512,-49,-50,-83,516,518,520,522,524,525,-48,629,631,]),'ASSIGNATION':([110,120,125,131,142,146,147,238,242,243,257,259,266,268,274,276,278,380,383,384,],[166,185,189,193,212,215,-183,322,323,324,351,353,361,363,365,366,367,438,441,442,]),'INTEGER':([111,141,152,185,189,193,203,246,247,248,252,291,292,293,295,296,297,298,299,300,301,323,324,342,354,355,356,357,358,359,366,367,385,420,446,471,522,562,620,631,],[168,209,209,209,271,209,209,327,329,209,209,209,-114,-115,209,-105,-106,-107,-108,-109,-110,209,209,209,209,-98,-99,-100,-101,-102,209,209,209,480,209,209,480,209,626,626,]),'CLEAR':([112,],[169,]),'COUNT':([112,],[170,]),'ADD':([112,],[171,]),'REMOVEAT':([112,],[172,]),'PUSH':([112,],[173,]),'POP':([112,],[174,]),'PEEK':([112,],[175,]),'ISEMPTY':([112,],[176,]),'ENQUEUE':([112,],[177,]),'DEQUEUE':([112,],[178,]),'STRING':([115,166,246,247,248,252,323,324,342,397,407,471,507,512,618,629,],[180,241,328,330,338,338,338,338,338,459,467,338,547,459,624,624,]),'LOGICNOT':([141,152,193,291,292,293,366,367,446,562,],[203,203,203,203,-114,-115,203,203,203,203,]),'BOOLTRUE':([141,152,193,203,248,252,291,292,293,323,324,342,366,367,421,446,471,524,525,562,],[204,204,280,204,204,204,204,-114,-115,204,204,204,280,204,482,204,204,482,482,204,]),'BOOLFALSE':([141,152,193,203,248,252,291,292,293,323,324,342,366,367,421,446,471,524,525,562,],[205,205,282,205,205,205,205,-114,-115,205,205,205,205,282,483,205,205,483,483,205,]),'FLOAT_NUMBER':([141,152,185,189,193,203,248,252,291,292,293,295,296,297,298,299,300,301,323,324,342,354,355,356,357,358,359,366,367,385,417,446,471,518,562,],[210,210,262,210,210,210,210,210,210,-114,-115,210,-105,-106,-107,-108,-109,-110,210,210,210,210,-98,-99,-100,-101,-102,210,210,210,476,210,210,476,210,]),'DECIMAL_NUMBER':([141,152,185,189,193,203,248,252,291,292,293,295,296,297,298,299,300,301,323,324,342,354,355,356,357,358,359,366,367,385,419,446,471,520,562,],[211,211,211,211,211,211,211,211,211,-114,-115,211,-105,-106,-107,-108,-109,-110,211,211,211,211,-98,-99,-100,-101,-102,211,211,211,478,211,211,478,211,]),'LOGICAND':([202,204,205,206,207,208,209,210,211,279,280,282,377,378,422,424,],[292,-38,-39,-40,-41,-103,-42,-43,-44,-40,-38,-39,-104,-45,-40,-40,]),'LOGICOR':([202,204,205,206,207,208,209,210,211,279,280,282,377,378,422,424,],[293,-38,-39,-40,-41,-103,-42,-43,-44,-40,-38,-39,-104,-45,-40,-40,]),'EQUAL_COMPARATION':([206,208,209,210,211,279,331,333,378,422,424,],[-45,298,-42,-43,-44,-45,-45,298,-45,-45,-45,]),'INEQUALITY':([206,208,209,210,211,279,331,333,378,422,424,],[-45,299,-42,-43,-44,-45,-45,299,-45,-45,-45,]),'GREATER_THAN_OR_EQUAL':([206,208,209,210,211,279,331,333,378,422,424,],[-45,300,-42,-43,-44,-45,-45,300,-45,-45,-45,]),'SMALLER_THAN_OR_EQUAL':([206,208,209,210,211,279,331,333,378,422,424,],[-45,301,-42,-43,-44,-45,-45,301,-45,-45,-45,]),'PLUS':([209,210,211,261,262,264,270,271,338,378,467,],[-42,-43,-44,-45,-43,355,-45,-42,407,-45,407,]),'MINUS':([209,210,211,261,262,264,270,271,378,],[-42,-43,-44,-45,-43,356,-45,-42,-45,]),'TIMES':([209,210,211,261,262,264,270,271,378,],[-42,-43,-44,-45,-43,357,-45,-42,-45,]),'DIVIDE':([209,210,211,261,262,264,270,271,378,],[-42,-43,-44,-45,-43,358,-45,-42,-45,]),'PERCENT':([209,210,211,261,262,264,270,271,378,],[-42,-43,-44,-45,-43,359,-45,-42,-45,]),'NEW':([212,215,438,441,442,],[302,304,492,497,498,]),'CHAR':([248,252,323,324,342,416,471,516,],[339,339,339,339,339,474,339,474,]),'READ':([248,252,323,324,342,471,],[341,341,341,341,341,341,]),'START':([284,],[370,]),'CATCH':([305,],[382,]),'IN':([310,],[386,]),'RETURN':([395,455,487,528,],[456,509,529,558,]),'JOIN':([427,],[484,]),'EXCEPTION':([440,],[496,]),'ELSE':([490,615,],[533,533,]),'ELSE_IF':([490,615,],[534,534,]),'ERROR':([496,603,],[540,610,]),'INCREMENT':([543,],[569,]),'DECREMENT':([543,],[570,]),'FINALLY':([627,],[632,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([9,],[10,]),'all_block_code':([21,27,113,153,236,375,387,544,561,598,599,601,],[26,114,179,226,320,436,445,571,436,606,607,436,]),'block_code':([21,27,113,153,236,375,387,544,561,598,599,601,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'def_const_or_var':([21,27,113,148,153,217,236,375,387,544,561,598,599,601,637,],[28,28,28,218,28,218,28,28,28,28,28,28,28,28,218,]),'print_data':([21,27,113,148,153,217,236,375,387,544,561,598,599,601,637,],[29,29,29,219,29,219,29,29,29,29,29,29,29,29,219,]),'array_assignation':([21,27,113,153,236,375,387,544,561,598,599,601,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'array_value_assign':([21,27,113,153,236,375,387,544,561,598,599,601,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'array_indexing':([21,27,113,153,236,375,387,544,561,598,599,601,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'thread_main':([21,27,113,153,236,375,387,544,561,598,599,601,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'concurrent_method':([21,27,113,153,236,375,387,439,503,544,561,598,599,601,],[34,34,34,34,34,34,34,494,546,34,34,34,34,34,]),'method_definition':([21,27,113,153,236,375,387,544,561,598,599,601,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'block_try_catch':([21,27,113,153,236,375,387,544,561,598,599,601,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'lists':([21,27,113,153,236,375,387,544,561,598,599,601,],[37,37,37,37,37,37,37,37,37,37,37,37,]),'functions_list':([21,27,113,153,236,375,387,544,561,598,599,601,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'statement_lambda':([21,27,113,153,236,375,387,544,561,598,599,601,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'enums':([21,27,113,153,236,375,387,544,561,598,599,601,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'normal_if':([21,27,113,153,236,375,387,544,561,598,599,601,],[41,41,41,41,41,435,41,41,435,41,41,435,]),'block_for':([21,27,113,153,236,375,387,544,561,598,599,601,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'block_while':([21,27,113,153,236,375,387,544,561,598,599,601,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'stack_struct':([21,27,113,153,236,375,387,544,561,598,599,601,],[44,44,44,44,44,44,44,44,44,44,44,44,]),'functions_stack':([21,27,113,153,236,375,387,544,561,598,599,601,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'queue_struct':([21,27,113,153,236,375,387,544,561,598,599,601,],[46,46,46,46,46,46,46,46,46,46,46,46,]),'functions_queue':([21,27,113,153,236,375,387,544,561,598,599,601,],[47,47,47,47,47,47,47,47,47,47,47,47,]),'constant_assignation':([21,27,113,148,153,217,236,375,387,544,561,598,599,601,637,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'variable_assignation':([21,27,113,148,153,217,236,375,387,544,561,598,599,601,637,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'declaration_thread':([21,27,56,113,153,236,375,387,544,561,598,599,601,],[56,56,132,56,56,56,56,56,56,56,56,56,56,]),'access_modifiers':([21,27,113,148,153,217,236,375,387,544,561,598,599,601,637,],[58,58,58,220,58,220,58,58,58,58,58,58,58,58,220,]),'try_catch_simply':([21,27,113,153,236,375,387,544,561,598,599,601,],[59,59,59,59,59,59,59,59,59,59,59,59,]),'try_catch_finally':([21,27,113,153,236,375,387,544,561,598,599,601,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'list_empty':([21,27,113,153,236,375,387,544,561,598,599,601,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'list_full':([21,27,113,153,236,375,387,544,561,598,599,601,],[62,62,62,62,62,62,62,62,62,62,62,62,]),'list_func_clear':([21,27,113,153,236,375,387,544,561,598,599,601,],[63,63,63,63,63,63,63,63,63,63,63,63,]),'list_func_count':([21,27,113,153,236,375,387,544,561,598,599,601,],[64,64,64,64,64,64,64,64,64,64,64,64,]),'list_func_add':([21,27,113,153,236,375,387,544,561,598,599,601,],[65,65,65,65,65,65,65,65,65,65,65,65,]),'list_func_removeat':([21,27,113,153,236,375,387,544,561,598,599,601,],[66,66,66,66,66,66,66,66,66,66,66,66,]),'for_simple':([21,27,113,153,236,375,387,544,561,598,599,601,],[69,69,69,69,69,69,69,69,69,69,69,69,]),'for_each':([21,27,113,153,236,375,387,544,561,598,599,601,],[70,70,70,70,70,70,70,70,70,70,70,70,]),'normal_while':([21,27,113,153,236,375,387,544,561,598,599,601,],[71,71,71,71,71,71,71,71,71,71,71,71,]),'do_while':([21,27,113,153,236,375,387,544,561,598,599,601,],[72,72,72,72,72,72,72,72,72,72,72,72,]),'stack_push':([21,27,113,153,236,375,387,544,561,598,599,601,],[74,74,74,74,74,74,74,74,74,74,74,74,]),'stack_pop':([21,27,113,153,236,375,387,544,561,598,599,601,],[75,75,75,75,75,75,75,75,75,75,75,75,]),'stack_clear':([21,27,113,153,236,375,387,544,561,598,599,601,],[76,76,76,76,76,76,76,76,76,76,76,76,]),'stack_peek':([21,27,113,153,236,375,387,544,561,598,599,601,],[77,77,77,77,77,77,77,77,77,77,77,77,]),'stack_isEmpty':([21,27,113,153,236,375,387,544,561,598,599,601,],[78,78,78,78,78,78,78,78,78,78,78,78,]),'queue_enqueue':([21,27,113,153,236,375,387,544,561,598,599,601,],[80,80,80,80,80,80,80,80,80,80,80,80,]),'queue_dequeue':([21,27,113,153,236,375,387,544,561,598,599,601,],[81,81,81,81,81,81,81,81,81,81,81,81,]),'queue_clear':([21,27,113,153,236,375,387,544,561,598,599,601,],[82,82,82,82,82,82,82,82,82,82,82,82,]),'queue_isEmpty':([21,27,113,153,236,375,387,544,561,598,599,601,],[83,83,83,83,83,83,83,83,83,83,83,83,]),'queue_peek':([21,27,113,153,236,375,387,544,561,598,599,601,],[84,84,84,84,84,84,84,84,84,84,84,84,]),'assignation_type_value_multiple':([21,27,58,85,113,134,148,153,217,220,236,375,387,544,561,598,599,601,637,],[86,86,135,144,86,198,86,86,86,135,86,86,86,86,86,86,86,86,86,]),'data_type':([22,133,143,151,228,229,371,372,392,],[97,196,213,224,317,317,317,317,317,]),'array_type':([22,133,143,151,228,229,371,372,392,],[105,105,105,105,105,105,105,105,105,]),'assignation_string_multiple':([24,137,165,],[108,108,239,]),'assignation_string':([24,137,165,],[109,109,109,]),'assignation_float_multiple':([52,138,184,],[118,118,260,]),'assignation_float':([52,138,184,],[119,119,119,]),'assignation_int_multiple':([54,136,188,],[123,123,269,]),'assignation_int':([54,136,188,223,],[124,124,124,309,]),'assignation_true_multiple':([55,139,191,],[127,127,275,]),'assignation_false_multiple':([55,139,192,],[128,128,277,]),'assignation_true':([55,139,191,],[129,129,129,]),'assignation_false':([55,139,192,],[130,130,130,]),'thread_identificator':([87,96,132,194,283,368,389,439,448,539,],[146,154,195,195,369,369,447,493,447,154,]),'thread_init':([132,194,],[194,283,]),'boolean_operation':([141,152,193,291,366,367,446,562,],[201,225,281,376,423,425,502,580,]),'value_boolean':([141,152,193,203,248,252,291,323,324,342,366,367,446,471,562,],[202,202,202,294,334,334,202,334,334,334,202,202,202,334,202,]),'comparison_operation':([141,152,193,203,248,252,291,295,323,324,342,366,367,385,446,471,562,],[207,207,207,207,207,207,207,377,207,207,207,207,207,443,207,207,207,]),'value_numeric':([141,152,185,189,193,203,248,252,291,295,323,324,342,354,366,367,385,446,471,562,],[208,208,264,264,208,208,333,333,208,208,333,333,333,264,208,208,208,208,333,208,]),'all_block_code_try':([148,217,637,],[216,306,638,]),'block_code_try':([148,217,637,],[217,217,217,]),'string_array_assignation':([164,],[237,]),'char_array_assignation':([182,],[256,]),'float_array_assignation':([183,],[258,]),'arithmetic_operation':([185,189,354,],[263,272,418,]),'decimal_array_assignation':([186,],[265,]),'int_array_assignation':([187,],[267,]),'bool_array_assignation':([190,],[273,]),'list_enums':([200,373,],[289,433,]),'boolean_operator':([202,],[291,]),'comparison_operator':([208,333,],[295,295,]),'func_parameters':([228,229,371,372,392,],[314,318,429,431,454,]),'func_parameter':([228,229,371,372,392,],[316,316,316,316,316,]),'value':([248,252,323,324,342,471,],[332,346,398,399,410,410,]),'value_string':([248,252,323,324,342,471,],[335,335,335,335,335,335,]),'read_data':([248,252,323,324,342,471,],[336,336,336,336,336,336,]),'array':([248,252,323,324,342,471,],[337,337,337,337,337,337,]),'concatenation':([248,252,323,324,342,407,471,],[340,340,340,340,340,468,340,]),'arithmetic_operator':([264,],[354,]),'thread_wait':([283,368,],[368,426,]),'array_content':([342,471,],[409,514,]),'block_if':([375,561,601,],[434,579,608,]),'thread_logic':([389,],[448,]),'thread_sentence':([389,448,],[449,505,]),'thread_expression':([389,448,],[450,450,]),'string_content_multiple':([397,512,],[458,550,]),'char_content_multiple':([416,516,],[473,551,]),'float_content_multiple':([417,518,],[475,552,]),'decimal_content_multiple':([419,520,],[477,553,]),'int_content_multiple':([420,522,],[479,554,]),'bool_content_multiple':([421,524,525,],[481,555,556,]),'other_if':([490,615,],[532,621,]),'strings_list':([618,629,],[623,634,]),'ints_list':([620,631,],[625,636,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',15),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_main_method',13,'p_block_main_method','sintactico2.py',16),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',20),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> array_assignation','block_code',1,'p_block_code','sintactico2.py',22),
  ('block_code -> array_value_assign','block_code',1,'p_block_code','sintactico2.py',23),
  ('block_code -> array_indexing','block_code',1,'p_block_code','sintactico2.py',24),
  ('block_code -> thread_main','block_code',1,'p_block_code','sintactico2.py',25),
  ('block_code -> concurrent_method','block_code',1,'p_block_code','sintactico2.py',26),
  ('block_code -> method_definition','block_code',1,'p_block_code','sintactico2.py',27),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico2.py',29),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico2.py',31),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico2.py',32),
  ('block_code -> statement_lambda','block_code',1,'p_block_code','sintactico2.py',34),
  ('block_code -> enums','block_code',1,'p_block_code','sintactico2.py',36),
  ('block_code -> normal_if','block_code',1,'p_block_code','sintactico2.py',37),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico2.py',39),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico2.py',41),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico2.py',43),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico2.py',44),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico2.py',46),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico2.py',47),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',51),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',52),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',58),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',59),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',60),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',61),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',62),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',63),
  ('data_type -> array_type','data_type',1,'p_data_type','sintactico2.py',64),
  ('data_type -> METHOD','data_type',1,'p_data_type','sintactico2.py',65),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',71),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',72),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',73),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',77),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',78),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',79),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',80),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',84),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',85),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',86),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',87),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',91),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',92),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',96),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',100),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',101),
  ('array_type -> CHARTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',105),
  ('array_type -> STRINGTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',106),
  ('array_type -> FLOATTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',107),
  ('array_type -> DECIMALTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',108),
  ('array_type -> INTTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',109),
  ('array_type -> BOOLTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',110),
  ('array_assignation -> CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',114),
  ('array_assignation -> STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',115),
  ('array_assignation -> FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',116),
  ('array_assignation -> DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',117),
  ('array_assignation -> INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',118),
  ('array_assignation -> BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',119),
  ('char_array_assignation -> VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKET','char_array_assignation',5,'p_char_array_assignation','sintactico2.py',123),
  ('char_content_multiple -> CHAR','char_content_multiple',1,'p_char_content_multiple','sintactico2.py',126),
  ('char_content_multiple -> CHAR COMMA char_content_multiple','char_content_multiple',3,'p_char_content_multiple','sintactico2.py',127),
  ('string_array_assignation -> VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKET','string_array_assignation',5,'p_string_array_assignation','sintactico2.py',131),
  ('string_content_multiple -> STRING','string_content_multiple',1,'p_string_content_multiple','sintactico2.py',134),
  ('string_content_multiple -> STRING COMMA string_content_multiple','string_content_multiple',3,'p_string_content_multiple','sintactico2.py',135),
  ('float_array_assignation -> VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKET','float_array_assignation',5,'p_float_array_assignation','sintactico2.py',139),
  ('float_content_multiple -> FLOAT_NUMBER','float_content_multiple',1,'p_float_content_multiple','sintactico2.py',142),
  ('float_content_multiple -> FLOAT_NUMBER COMMA float_content_multiple','float_content_multiple',3,'p_float_content_multiple','sintactico2.py',143),
  ('int_array_assignation -> VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKET','int_array_assignation',5,'p_int_array_assignation','sintactico2.py',147),
  ('int_content_multiple -> INTEGER','int_content_multiple',1,'p_int_content_multiple','sintactico2.py',150),
  ('int_content_multiple -> INTEGER COMMA int_content_multiple','int_content_multiple',3,'p_int_content_multiple','sintactico2.py',151),
  ('decimal_array_assignation -> VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKET','decimal_array_assignation',5,'p_decimal_array_assignation','sintactico2.py',155),
  ('decimal_content_multiple -> DECIMAL_NUMBER','decimal_content_multiple',1,'p_decimal_content_multiple','sintactico2.py',158),
  ('decimal_content_multiple -> DECIMAL_NUMBER COMMA decimal_content_multiple','decimal_content_multiple',3,'p_decimal_content_multiple','sintactico2.py',159),
  ('bool_array_assignation -> VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKET','bool_array_assignation',5,'p_bool_array_assignation','sintactico2.py',163),
  ('bool_content_multiple -> BOOLTRUE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',166),
  ('bool_content_multiple -> BOOLFALSE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',167),
  ('bool_content_multiple -> BOOLTRUE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',168),
  ('bool_content_multiple -> BOOLFALSE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',169),
  ('array -> LBRACKET array_content RBRACKET','array',3,'p_array','sintactico2.py',173),
  ('array_content -> value','array_content',1,'p_array_content','sintactico2.py',176),
  ('array_content -> value COMMA array_content','array_content',3,'p_array_content','sintactico2.py',177),
  ('array_indexing -> VARIABLE LBRACKET VARIABLE RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',181),
  ('array_indexing -> VARIABLE LBRACKET INTEGER RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',182),
  ('array_value_assign -> VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',186),
  ('array_value_assign -> VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',187),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',191),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',192),
  ('value -> value_string','value',1,'p_value','sintactico2.py',193),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',194),
  ('value -> read_data','value',1,'p_value','sintactico2.py',195),
  ('value -> array','value',1,'p_value','sintactico2.py',196),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',202),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',203),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',207),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',208),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',209),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',210),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',211),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',215),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',216),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',220),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',221),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',222),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',223),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',224),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',225),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',229),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',230),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',231),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',235),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',236),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',242),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',243),
  ('constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico2.py',247),
  ('constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',3,'p_constant_assignation','sintactico2.py',248),
  ('variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',252),
  ('variable_assignation -> assignation_type_value_multiple DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',253),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',257),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',258),
  ('assignation_type_value -> INTTYPE assignation_int','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',262),
  ('assignation_type_value -> STRINGTYPE assignation_string','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',263),
  ('assignation_type_value -> FLOATTYPE assignation_float','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',264),
  ('assignation_type_value -> BOOLTYPE assignation_true','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',265),
  ('assignation_type_value -> BOOLTYPE assignation_false','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',266),
  ('assignation_int -> VARIABLE ASSIGNATION INTEGER','assignation_int',3,'p_assignation_int','sintactico2.py',270),
  ('assignation_int -> VARIABLE ASSIGNATION VARIABLE','assignation_int',3,'p_assignation_int','sintactico2.py',271),
  ('assignation_int -> VARIABLE ASSIGNATION arithmetic_operation','assignation_int',3,'p_assignation_int','sintactico2.py',272),
  ('assignation_string -> VARIABLE ASSIGNATION STRING','assignation_string',3,'p_assignation_string','sintactico2.py',276),
  ('assignation_string -> VARIABLE ASSIGNATION VARIABLE','assignation_string',3,'p_assignation_string','sintactico2.py',277),
  ('assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER','assignation_float',3,'p_assignation_float','sintactico2.py',281),
  ('assignation_float -> VARIABLE ASSIGNATION VARIABLE','assignation_float',3,'p_assignation_float','sintactico2.py',282),
  ('assignation_float -> VARIABLE ASSIGNATION arithmetic_operation','assignation_float',3,'p_assignation_float','sintactico2.py',283),
  ('assignation_true -> VARIABLE ASSIGNATION BOOLTRUE','assignation_true',3,'p_assignation_true','sintactico2.py',287),
  ('assignation_true -> VARIABLE ASSIGNATION VARIABLE','assignation_true',3,'p_assignation_true','sintactico2.py',288),
  ('assignation_true -> VARIABLE ASSIGNATION boolean_operation','assignation_true',3,'p_assignation_true','sintactico2.py',289),
  ('assignation_false -> VARIABLE ASSIGNATION BOOLFALSE','assignation_false',3,'p_assignation_false','sintactico2.py',293),
  ('assignation_false -> VARIABLE ASSIGNATION VARIABLE','assignation_false',3,'p_assignation_false','sintactico2.py',294),
  ('assignation_false -> VARIABLE ASSIGNATION boolean_operation','assignation_false',3,'p_assignation_false','sintactico2.py',295),
  ('assignation_type_value_multiple -> INTTYPE assignation_int_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',300),
  ('assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',301),
  ('assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',302),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',303),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',304),
  ('assignation_int_multiple -> assignation_int','assignation_int_multiple',1,'p_assignation_int_multiple','sintactico2.py',308),
  ('assignation_int_multiple -> assignation_int COMMA assignation_int_multiple','assignation_int_multiple',3,'p_assignation_int_multiple','sintactico2.py',309),
  ('assignation_string_multiple -> assignation_string','assignation_string_multiple',1,'p_assignation_string_multiple','sintactico2.py',313),
  ('assignation_string_multiple -> assignation_string COMMA assignation_string_multiple','assignation_string_multiple',3,'p_assignation_string_multiple','sintactico2.py',314),
  ('assignation_float_multiple -> assignation_float','assignation_float_multiple',1,'p_assignation_float_multiple','sintactico2.py',318),
  ('assignation_float_multiple -> assignation_float COMMA assignation_float_multiple','assignation_float_multiple',3,'p_assignation_float_multiple','sintactico2.py',319),
  ('assignation_true_multiple -> assignation_true','assignation_true_multiple',1,'p_assignation_true_multiple','sintactico2.py',323),
  ('assignation_true_multiple -> assignation_true COMMA assignation_true_multiple','assignation_true_multiple',3,'p_assignation_true_multiple','sintactico2.py',324),
  ('assignation_false_multiple -> assignation_false','assignation_false_multiple',1,'p_assignation_false_multiple','sintactico2.py',328),
  ('assignation_false_multiple -> assignation_false COMMA assignation_false_multiple','assignation_false_multiple',3,'p_assignation_false_multiple','sintactico2.py',329),
  ('method_definition -> access_modifiers STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',12,'p_method_definition','sintactico2.py',335),
  ('method_definition -> access_modifiers STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY','method_definition',9,'p_method_definition','sintactico2.py',336),
  ('method_definition -> STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',11,'p_method_definition','sintactico2.py',337),
  ('method_definition -> STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY','method_definition',8,'p_method_definition','sintactico2.py',338),
  ('method_definition -> access_modifiers STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',11,'p_method_definition','sintactico2.py',340),
  ('method_definition -> access_modifiers STATIC VOID METHOD LPARENT RPARENT LKEY RKEY','method_definition',8,'p_method_definition','sintactico2.py',341),
  ('method_definition -> STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',10,'p_method_definition','sintactico2.py',342),
  ('method_definition -> STATIC VOID METHOD LPARENT RPARENT LKEY RKEY','method_definition',7,'p_method_definition','sintactico2.py',343),
  ('func_parameter -> data_type VARIABLE','func_parameter',2,'p_func_parameter','sintactico2.py',347),
  ('func_parameters -> func_parameter','func_parameters',1,'p_func_parameters','sintactico2.py',350),
  ('func_parameters -> func_parameter COMMA func_parameters','func_parameters',3,'p_func_parameters','sintactico2.py',351),
  ('thread_main -> declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait','thread_main',6,'p_thread_main','sintactico2.py',357),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',362),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',363),
  ('thread_init -> thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA','thread_init',6,'p_thread_init','sintactico2.py',368),
  ('thread_wait -> thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA','thread_wait',6,'p_thread_wait','sintactico2.py',373),
  ('concurrent_method -> STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY','concurrent_method',8,'p_concurrent_method','sintactico2.py',378),
  ('concurrent_method -> WRITE','concurrent_method',1,'p_concurrent_method','sintactico2.py',379),
  ('thread_logic -> thread_sentence','thread_logic',1,'p_thread_logic','sintactico2.py',384),
  ('thread_logic -> thread_logic thread_sentence','thread_logic',2,'p_thread_logic','sintactico2.py',385),
  ('thread_sentence -> thread_expression DOTANDCOMMA','thread_sentence',2,'p_thread_sentence','sintactico2.py',390),
  ('thread_expression -> thread_identificator DOT concurrent_method LPARENT RPARENT','thread_expression',5,'p_thread_expression','sintactico2.py',395),
  ('thread_expression -> PRINT LPARENT STRING RPARENT','thread_expression',4,'p_thread_expression','sintactico2.py',396),
  ('thread_arguments -> thread_expression','thread_arguments',1,'p_thread_arguments','sintactico2.py',401),
  ('thread_arguments -> thread_arguments COMMA thread_expression','thread_arguments',3,'p_thread_arguments','sintactico2.py',402),
  ('thread_identificator -> VARIABLE','thread_identificator',1,'p_thread_identificator','sintactico2.py',407),
  ('statement_lambda -> LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENT','statement_lambda',7,'p_statement_lambda','sintactico2.py',414),
  ('enums -> ENUM METHOD LKEY list_enums RKEY','enums',5,'p_enums','sintactico2.py',418),
  ('list_enums -> METHOD','list_enums',1,'p_list_enums','sintactico2.py',421),
  ('list_enums -> METHOD COMMA list_enums','list_enums',3,'p_list_enums','sintactico2.py',422),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico2.py',431),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico2.py',432),
  ('try_catch_simply -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY','try_catch_simply',16,'p_try_catch_simply','sintactico2.py',436),
  ('try_catch_finally -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEY','try_catch_finally',20,'p_try_catch_finally','sintactico2.py',439),
  ('block_code_try -> def_const_or_var','block_code_try',1,'p_block_code_try','sintactico2.py',442),
  ('block_code_try -> print_data','block_code_try',1,'p_block_code_try','sintactico2.py',443),
  ('all_block_code_try -> block_code_try','all_block_code_try',1,'p_all_block_code_try','sintactico2.py',447),
  ('all_block_code_try -> block_code_try all_block_code_try','all_block_code_try',2,'p_all_block_code_try','sintactico2.py',448),
  ('block_if -> normal_if','block_if',1,'p_block_if','sintactico2.py',454),
  ('block_if -> all_block_code','block_if',1,'p_block_if','sintactico2.py',455),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','normal_if',8,'p_normal_if','sintactico2.py',458),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY','normal_if',7,'p_normal_if','sintactico2.py',459),
  ('other_if -> ELSE LKEY block_if RKEY','other_if',4,'p_other_if','sintactico2.py',463),
  ('other_if -> ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','other_if',8,'p_other_if','sintactico2.py',464),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico2.py',470),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico2.py',471),
  ('normal_while -> WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico2.py',475),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENT','do_while',8,'p_do_while','sintactico2.py',478),
  ('block_for -> for_simple','block_for',1,'p_block_for','sintactico2.py',483),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico2.py',484),
  ('for_simple -> FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',13,'p_for_simple','sintactico2.py',488),
  ('for_simple -> FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',13,'p_for_simple','sintactico2.py',489),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico2.py',494),
  ('lists -> list_empty','lists',1,'p_lists','sintactico2.py',503),
  ('lists -> list_full','lists',1,'p_lists','sintactico2.py',504),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',508),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',509),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',513),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',514),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico2.py',518),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico2.py',519),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico2.py',523),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico2.py',524),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico2.py',528),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico2.py',529),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico2.py',530),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico2.py',531),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico2.py',535),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico2.py',538),
  ('list_func_add -> VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',541),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',542),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',547),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT STRING RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',548),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico2.py',554),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico2.py',557),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico2.py',558),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico2.py',559),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico2.py',560),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico2.py',561),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico2.py',564),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico2.py',567),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico2.py',570),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico2.py',573),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico2.py',576),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',13,'p_queue_struct','sintactico2.py',581),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico2.py',584),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico2.py',585),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico2.py',586),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico2.py',587),
  ('functions_queue -> queue_peek','functions_queue',1,'p_functions_queue','sintactico2.py',588),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico2.py',592),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico2.py',595),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico2.py',598),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico2.py',601),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico2.py',604),
]
