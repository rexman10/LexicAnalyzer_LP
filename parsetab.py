
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    block_code               : def_const_or_var\n                                | print_data\n                                | boolean_operation\n                                | arithmetic_operation\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : variable_assignation\n    variable_assignation     : access_modifiers assignation_key_value DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_key_value    : data_type VARIABLE ASSIGNATION value\n    '
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,12,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,36,37,38,39,40,41,42,58,72,80,81,84,85,86,87,88,89,90,91,92,93,94,100,101,102,103,],[4,73,-19,-20,-22,-23,-24,-25,-44,82,-26,-45,96,97,-21,-62,-32,-33,-34,-36,-16,-17,-18,-30,-31,103,-29,]),'PUBLIC':([4,21,23,25,26,27,28,29,30,32,34,37,38,39,40,41,42,57,58,73,77,78,79,80,81,82,96,97,],[6,43,-21,43,-4,-5,-6,-7,-57,-52,-37,-19,-20,-22,-23,-24,-25,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'CLASS':([6,],[7,]),'VARIABLE':([7,18,21,22,23,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,77,78,79,80,81,82,83,96,97,],[8,19,23,-11,-21,23,-4,-5,-6,-7,-57,-52,23,-37,-19,-20,-22,-23,-24,-25,74,-10,-12,-13,-14,-15,76,23,-55,-56,-53,-44,80,80,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-59,-54,-37,-38,-26,-45,-58,86,-27,-28,]),'LKEY':([8,20,],[9,21,]),'STATIC':([9,],[11,]),'RKEY':([10,23,24,25,26,27,28,29,30,32,34,37,38,39,40,41,42,51,52,57,58,73,77,78,79,80,81,82,96,97,],[12,-21,51,-8,-4,-5,-6,-7,-57,-52,-37,-19,-20,-22,-23,-24,-25,-3,-9,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'VOID':([11,],[13,]),'MAIN':([13,],[14,]),'LPARENT':([14,31,95,],[15,53,99,]),'STRINGTYPE':([15,21,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,57,58,73,77,78,79,80,81,82,96,97,],[16,22,-21,22,-4,-5,-6,-7,-57,-52,-37,22,-19,-20,-22,-23,-24,-25,-60,-61,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'LBRACKET':([16,],[17,]),'RBRACKET':([17,],[18,]),'RPARENT':([19,75,76,99,],[20,84,85,102,]),'PRINT':([21,23,25,26,27,28,29,30,32,34,37,38,39,40,41,42,57,58,73,77,78,79,80,81,82,96,97,],[31,-21,31,-4,-5,-6,-7,-57,-52,-37,-19,-20,-22,-23,-24,-25,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'LOGICNOT':([21,23,25,26,27,28,29,30,32,34,37,38,39,40,41,42,54,55,56,57,58,73,77,78,79,80,81,82,96,97,],[33,-21,33,-4,-5,-6,-7,-57,-52,-37,-19,-20,-22,-23,-24,-25,33,-55,-56,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'BOOLTRUE':([21,23,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,54,55,56,57,58,73,77,78,79,80,81,82,83,96,97,],[37,-21,37,-4,-5,-6,-7,-57,-52,37,-37,-19,-20,-22,-23,-24,-25,37,-55,-56,-53,-44,-59,-54,-37,-38,-26,-45,-58,37,-27,-28,]),'BOOLFALSE':([21,23,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,54,55,56,57,58,73,77,78,79,80,81,82,83,96,97,],[38,-21,38,-4,-5,-6,-7,-57,-52,38,-37,-19,-20,-22,-23,-24,-25,38,-55,-56,-53,-44,-59,-54,-37,-38,-26,-45,-58,38,-27,-28,]),'INTEGER':([21,23,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,77,78,79,80,81,82,83,96,97,],[40,-21,40,-4,-5,-6,-7,-57,-52,40,-37,-19,-20,-22,-23,-24,-25,40,-55,-56,-53,-44,40,40,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-59,-54,-37,-38,-26,-45,-58,40,-27,-28,]),'FLOAT_NUMBER':([21,23,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,77,78,79,80,81,82,83,96,97,],[41,-21,41,-4,-5,-6,-7,-57,-52,41,-37,-19,-20,-22,-23,-24,-25,41,-55,-56,-53,-44,41,41,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-59,-54,-37,-38,-26,-45,-58,41,-27,-28,]),'DECIMAL_NUMBER':([21,23,25,26,27,28,29,30,32,33,34,37,38,39,40,41,42,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,77,78,79,80,81,82,83,96,97,],[42,-21,42,-4,-5,-6,-7,-57,-52,42,-37,-19,-20,-22,-23,-24,-25,42,-55,-56,-53,-44,42,42,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-59,-54,-37,-38,-26,-45,-58,42,-27,-28,]),'PRIVATE':([21,23,25,26,27,28,29,30,32,34,37,38,39,40,41,42,57,58,73,77,78,79,80,81,82,96,97,],[44,-21,44,-4,-5,-6,-7,-57,-52,-37,-19,-20,-22,-23,-24,-25,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'CHARTYPE':([21,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,57,58,73,77,78,79,80,81,82,96,97,],[46,-21,46,-4,-5,-6,-7,-57,-52,-37,46,-19,-20,-22,-23,-24,-25,-60,-61,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'FLOATTYPE':([21,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,57,58,73,77,78,79,80,81,82,96,97,],[47,-21,47,-4,-5,-6,-7,-57,-52,-37,47,-19,-20,-22,-23,-24,-25,-60,-61,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'DECIMALTYPE':([21,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,57,58,73,77,78,79,80,81,82,96,97,],[48,-21,48,-4,-5,-6,-7,-57,-52,-37,48,-19,-20,-22,-23,-24,-25,-60,-61,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'INTTYPE':([21,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,57,58,73,77,78,79,80,81,82,96,97,],[49,-21,49,-4,-5,-6,-7,-57,-52,-37,49,-19,-20,-22,-23,-24,-25,-60,-61,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'BOOLTYPE':([21,23,25,26,27,28,29,30,32,34,35,37,38,39,40,41,42,43,44,57,58,73,77,78,79,80,81,82,96,97,],[50,-21,50,-4,-5,-6,-7,-57,-52,-37,50,-19,-20,-22,-23,-24,-25,-60,-61,-53,-44,-59,-54,-37,-38,-26,-45,-58,-27,-28,]),'LOGICAND':([23,32,34,37,38,39,40,41,42,58,80,81,],[-21,55,-44,-19,-20,-22,-23,-24,-25,-44,-26,-45,]),'LOGICOR':([23,32,34,37,38,39,40,41,42,58,80,81,],[-21,56,-44,-19,-20,-22,-23,-24,-25,-44,-26,-45,]),'PLUS':([23,34,40,41,42,78,80,92,100,],[-26,61,-23,-24,-25,61,-26,98,98,]),'MINUS':([23,34,40,41,42,78,80,],[-26,62,-23,-24,-25,62,-26,]),'TIMES':([23,34,40,41,42,78,80,],[-26,63,-23,-24,-25,63,-26,]),'DIVIDE':([23,34,40,41,42,78,80,],[-26,64,-23,-24,-25,64,-26,]),'PERCENT':([23,34,40,41,42,78,80,],[-26,65,-23,-24,-25,65,-26,]),'GREATER_THAN':([23,34,40,41,42,58,80,86,88,],[-26,66,-23,-24,-25,66,-26,-26,66,]),'SMALLER_THAN':([23,34,40,41,42,58,80,86,88,],[-26,67,-23,-24,-25,67,-26,-26,67,]),'EQUAL_COMPARATION':([23,34,40,41,42,58,80,86,88,],[-26,68,-23,-24,-25,68,-26,-26,68,]),'INEQUALITY':([23,34,40,41,42,58,80,86,88,],[-26,69,-23,-24,-25,69,-26,-26,69,]),'GREATER_THAN_OR_EQUAL':([23,34,40,41,42,58,80,86,88,],[-26,70,-23,-24,-25,70,-26,-26,70,]),'SMALLER_THAN_OR_EQUAL':([23,34,40,41,42,58,80,86,88,],[-26,71,-23,-24,-25,71,-26,-26,71,]),'STRING':([53,83,98,],[75,92,100,]),'ASSIGNATION':([74,],[83,]),'CHAR':([83,],[93,]),'READ':([83,],[95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([9,],[10,]),'all_block_code':([21,25,],[24,52,]),'block_code':([21,25,],[25,25,]),'def_const_or_var':([21,25,],[26,26,]),'print_data':([21,25,],[27,27,]),'boolean_operation':([21,25,54,],[28,28,77,]),'arithmetic_operation':([21,25,59,],[29,29,79,]),'variable_assignation':([21,25,],[30,30,]),'value_boolean':([21,25,33,54,83,],[32,32,57,32,89,]),'value_numeric':([21,25,33,54,59,60,83,],[34,34,58,58,78,58,88,]),'access_modifiers':([21,25,],[35,35,]),'assignation_key_value':([21,25,35,],[36,36,72,]),'comparison_operation':([21,25,33,54,60,83,],[39,39,39,39,81,39,]),'data_type':([21,25,35,],[45,45,45,]),'boolean_operator':([32,],[54,]),'arithmetic_operator':([34,78,],[59,59,]),'comparison_operator':([34,58,88,],[60,60,60,]),'value':([83,],[87,]),'value_string':([83,],[90,]),'read_data':([83,],[91,]),'concatenation':([83,98,],[94,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',15),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',19),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',20),
  ('block_code -> boolean_operation','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico2.py',22),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',26),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',27),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',33),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',34),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',35),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',36),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',37),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',38),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',44),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',45),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',46),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',50),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',51),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',52),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',53),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',57),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',58),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',59),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',60),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',64),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',65),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',69),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',73),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',74),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',78),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',79),
  ('value -> value_string','value',1,'p_value','sintactico2.py',80),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',81),
  ('value -> read_data','value',1,'p_value','sintactico2.py',82),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',88),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',89),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',93),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',94),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',95),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',96),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',97),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',101),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',102),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',106),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',107),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',108),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',109),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',110),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',111),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',115),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',116),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',117),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',121),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',122),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',128),
  ('variable_assignation -> access_modifiers assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',132),
  ('variable_assignation -> assignation_key_value DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',133),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',137),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',138),
  ('assignation_key_value -> data_type VARIABLE ASSIGNATION value','assignation_key_value',4,'p_assignation_key_value','sintactico2.py',142),
]
