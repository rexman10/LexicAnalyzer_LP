
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY\n                                | PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    block_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n\n                                | lists\n                                | functions_list\n\n                                | dict_estruct\n                                | functions_dict\n\n                                | queue_struct\n                                | functions_queue\n\n                                | stack_struct\n                                | functions_stack\n\n                                | block_for\n\n                                | block_try_catch\n\n                                | block_while\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    method_definition        : simple_method\n                                | declaration_async\n                                | declaration_lambda\n    all_method_definitions   : method_definition\n                                | method_definition all_method_definitions  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric logic_operator INTEGER \n                                | VARIABLE logic_operator INTEGER\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers data_type VARIABLE DOTANDCOMMA\n                                | data_type VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : assignation_key_value\n                                        | assignation_key_value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value COMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    logic_operations         : logic_operation DOTANDCOMMA\n                                | logic_operation COMMA logic_operations\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : LKEY VARIABLE COMMA value RKEY\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct             : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    functions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA\n    queue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA\n    queue_peek               : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA\n    queue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA\n    simple_method            : STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n                                | access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n    function_return          : RETURN value DOTANDCOMMA\n    function_argument        : data_type VARIABLE\n                                | METHOD VARIABLE\n    function_arguments       : function_argument\n                                | function_argument COMMA function_arguments\n    declaration_async        : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda         : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,24,38,],[0,-1,-3,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,109,140,141,142,184,185,186,209,210,211,212,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,250,251,252,253,254,268,274,275,290,292,293,294,296,297,306,307,308,320,321,327,328,330,331,332,333,334,343,354,355,357,358,361,370,384,395,431,444,445,446,447,459,471,473,],[4,-44,192,-45,-46,243,245,246,-49,-47,-48,-53,-39,-85,-33,-34,-35,-36,-47,-41,-42,-43,-31,-38,-40,290,-47,-52,298,299,300,301,302,313,318,319,-30,-87,-88,-86,337,338,342,343,345,352,353,359,360,362,363,-31,-32,290,-97,377,378,380,381,382,-98,397,407,441,452,453,454,456,468,477,479,]),'PUBLIC':([4,9,13,15,16,17,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,158,192,197,199,204,206,209,210,211,212,240,241,243,245,246,267,270,290,298,299,300,301,302,314,315,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,462,468,476,477,479,],[6,10,10,-23,-24,-25,151,151,151,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,151,151,-173,-84,151,151,151,151,-49,-47,-48,-53,-47,-52,-79,-81,-83,-172,-175,-30,-78,-80,-82,-75,-77,-174,-182,-28,-29,-74,-76,151,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,151,-114,-131,151,151,151,-99,-99,-106,151,-104,-101,-105,-102,-122,-109,-162,-135,-136,151,-181,-123,-110,-137,-138,]),'CLASS':([6,],[7,]),'VARIABLE':([7,28,30,31,32,33,34,53,56,59,73,75,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,160,161,164,165,166,167,168,169,181,190,191,192,197,198,199,201,204,206,209,210,211,212,240,241,243,244,245,246,249,258,259,260,261,281,282,285,290,291,298,299,300,301,302,303,304,318,319,337,338,342,344,345,347,349,352,353,356,359,360,362,363,371,375,377,378,380,381,382,391,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,448,453,454,456,461,467,468,476,477,479,],[8,-92,-91,-93,-94,-95,-96,63,66,69,81,83,106,106,106,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,186,-163,-164,-165,-166,188,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,106,106,208,209,225,-64,-65,-66,-67,-68,209,252,255,-84,106,265,106,225,106,106,-49,-47,-48,-53,-47,-52,-79,255,-81,-83,255,305,265,255,309,325,225,225,-30,335,-78,-80,-82,-75,-77,339,340,-28,-29,-74,-76,369,265,-89,372,106,-147,-148,379,-168,-161,-158,-160,-90,265,-149,-150,-132,-167,-157,404,-113,-151,106,-114,-131,106,106,106,-99,-99,-106,106,-104,-101,-105,-102,-122,-109,458,-162,-135,-136,106,225,-123,-110,-137,-138,]),'LKEY':([8,67,70,74,79,80,148,150,155,157,311,390,401,402,406,415,431,442,446,447,451,460,],[9,76,78,82,153,154,197,199,204,206,349,403,412,413,416,426,442,448,455,457,461,448,]),'STATIC':([9,10,11,13,15,16,17,18,20,25,158,267,270,314,315,462,],[14,21,23,26,-23,-24,-25,35,-70,-27,-173,-172,-175,-174,-182,-181,]),'ACTION':([9,13,15,16,17,158,267,270,314,315,462,],[19,19,-23,-24,-25,-173,-172,-175,-174,-182,-181,]),'PRIVATE':([9,13,15,16,17,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,158,192,197,199,204,206,209,210,211,212,240,241,243,245,246,267,270,290,298,299,300,301,302,314,315,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,462,468,476,477,479,],[20,20,-23,-24,-25,20,20,20,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,20,20,-173,-84,20,20,20,20,-49,-47,-48,-53,-47,-52,-79,-81,-83,-172,-175,-30,-78,-80,-82,-75,-77,-174,-182,-28,-29,-74,-76,20,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,20,-114,-131,20,20,20,-99,-99,-106,20,-104,-101,-105,-102,-122,-109,-162,-135,-136,20,-181,-123,-110,-137,-138,]),'RKEY':([12,22,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,159,192,200,203,209,210,211,212,225,227,228,229,230,231,232,233,234,235,236,237,240,241,243,245,246,262,266,269,271,273,290,298,299,300,301,302,313,317,318,319,332,333,337,338,352,353,359,360,362,363,374,377,378,380,381,382,392,397,405,407,414,421,422,423,424,425,427,432,433,434,435,436,441,443,449,450,452,453,454,456,463,464,465,466,468,469,470,475,476,477,478,479,480,481,],[24,38,158,-21,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,-22,-84,267,270,-49,-47,-48,-53,-39,-33,-34,-35,-36,-47,-41,-42,-43,-31,-38,-40,-47,-52,-79,-81,-83,310,312,314,315,317,-30,-78,-80,-82,-75,-77,-176,-4,-28,-29,-31,-32,-74,-76,-147,-148,-168,-161,-158,-160,392,-149,-150,-132,-167,-157,-113,-151,-114,-131,425,432,433,434,435,-106,437,-104,-101,-105,-102,443,-122,-109,459,-124,462,-162,-135,-136,471,-139,473,-141,-123,-125,476,481,-110,-137,-140,-138,-142,-126,]),'VOID':([14,23,26,35,],[27,39,40,45,]),'CHARTYPE':([14,20,26,35,49,50,61,62,68,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,151,153,154,183,189,192,195,196,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,346,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,408,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[30,-70,30,30,30,30,30,30,30,30,30,30,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,30,30,-45,-46,-103,-69,30,30,30,30,-84,30,30,30,30,30,30,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,30,30,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,30,-114,-131,30,30,30,30,-99,-99,-106,30,-104,-101,-105,-102,-122,-109,-162,-135,-136,30,-123,-110,-137,-138,]),'STRINGTYPE':([14,20,26,35,36,48,49,50,61,62,68,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,151,153,154,183,189,192,193,195,196,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,346,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,408,409,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[28,-70,28,28,46,55,28,28,28,28,28,28,28,28,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,28,28,-45,-46,-103,-69,28,28,28,28,-84,256,28,28,28,28,28,28,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,28,28,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,28,-114,-131,28,418,28,28,28,-99,-99,-106,28,-104,-101,-105,-102,-122,-109,-162,-135,-136,28,-123,-110,-137,-138,]),'FLOATTYPE':([14,20,26,35,49,50,61,62,68,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,151,153,154,183,189,192,195,196,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,346,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,408,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[31,-70,31,31,31,31,31,31,31,31,31,31,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,31,31,-45,-46,-103,-69,31,31,31,31,-84,31,31,31,31,31,31,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,31,31,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,31,-114,-131,31,31,31,31,-99,-99,-106,31,-104,-101,-105,-102,-122,-109,-162,-135,-136,31,-123,-110,-137,-138,]),'DECIMALTYPE':([14,20,26,35,49,50,61,62,68,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,151,153,154,183,189,192,195,196,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,346,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,408,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[32,-70,32,32,32,32,32,32,32,32,32,32,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,32,32,-45,-46,-103,-69,32,32,32,32,-84,32,32,32,32,32,32,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,32,32,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,32,-114,-131,32,32,32,32,-99,-99,-106,32,-104,-101,-105,-102,-122,-109,-162,-135,-136,32,-123,-110,-137,-138,]),'INTTYPE':([14,20,26,35,49,50,61,62,68,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,151,153,154,183,189,192,193,195,196,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,346,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,408,410,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[33,-70,33,33,33,33,33,33,33,33,33,33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,33,33,-45,-46,-103,-69,33,33,33,33,-84,257,33,33,33,33,33,33,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,33,33,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,33,-114,-131,33,419,33,33,33,-99,-99,-106,33,-104,-101,-105,-102,-122,-109,-162,-135,-136,33,-123,-110,-137,-138,]),'BOOLTYPE':([14,20,26,35,49,50,61,62,68,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,145,151,153,154,183,189,192,195,196,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,346,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,408,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[34,-70,34,34,34,34,34,34,34,34,34,34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,34,34,-45,-46,-103,-69,34,34,34,34,-84,34,34,34,34,34,34,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,34,34,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,34,-114,-131,34,34,34,34,-99,-99,-106,34,-104,-101,-105,-102,-122,-109,-162,-135,-136,34,-123,-110,-137,-138,]),'SMALLER_THAN':([19,89,106,108,109,120,141,142,143,144,209,210,211,225,227,231,240,264,265,387,396,398,399,],[36,-47,171,171,-44,183,-45,-46,193,194,-49,-47,-48,171,171,-47,-47,171,171,400,408,409,410,]),'CONST':([20,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,141,142,145,151,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[-70,139,139,139,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,189,-45,-46,-103,-69,139,139,-84,139,139,139,139,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,139,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,139,-114,-131,139,139,139,-99,-99,-106,139,-104,-101,-105,-102,-122,-109,-162,-135,-136,139,-123,-110,-137,-138,]),'ASYNC':([21,],[37,]),'MAIN':([27,39,],[41,41,]),'METHOD':([27,28,29,30,31,32,33,34,40,44,45,47,49,50,61,62,68,272,],[42,-92,43,-91,-93,-94,-95,-96,42,51,52,54,56,56,56,56,56,316,]),'READ':([28,30,31,32,33,34,76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,164,190,191,192,197,199,201,204,206,209,210,211,212,240,241,243,244,245,246,249,260,282,285,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,467,468,476,477,479,],[-92,-91,-93,-94,-95,-96,107,107,107,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,187,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,107,107,238,187,187,-84,107,107,238,107,107,-49,-47,-48,-53,-47,-52,-79,187,-81,-83,187,187,238,238,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,107,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,107,-114,-131,107,107,107,-99,-99,-106,107,-104,-101,-105,-102,-122,-109,-162,-135,-136,107,238,-123,-110,-137,-138,]),'GREATER_THAN':([28,30,31,32,33,34,46,89,106,108,109,141,142,194,209,210,211,225,227,231,240,242,256,257,264,265,400,417,418,419,],[-92,-91,-93,-94,-95,-96,53,-47,170,170,-44,-45,-46,258,-49,-47,-48,170,170,-47,-47,291,303,304,170,170,411,428,429,430,]),'TASK':([37,156,],[47,205,]),'LPARENT':([41,42,43,51,52,54,105,107,146,147,149,187,213,214,215,216,217,218,219,220,221,222,223,224,238,316,336,348,350,351,411,428,429,430,],[48,49,50,61,62,64,160,180,195,196,198,247,276,277,278,279,280,281,282,283,284,285,286,287,289,351,365,373,375,376,420,438,439,440,]),'LBRACKET':([55,],[65,]),'RPARENT':([57,58,60,64,66,69,71,72,77,83,109,141,142,180,207,208,209,210,211,212,225,227,228,229,230,231,232,233,234,235,236,237,240,241,247,263,276,277,283,284,286,287,289,290,322,323,325,326,329,332,333,365,372,376,379,388,389,393,404,420,437,438,439,440,],[67,-179,70,74,-178,-177,79,80,-180,157,-44,-45,-46,239,274,275,-49,-47,-48,-53,-39,-33,-34,-35,-36,-47,-41,-42,-43,-31,-38,-40,-47,-52,294,311,320,321,327,328,330,331,334,-30,354,355,357,358,361,-31,-32,384,390,394,395,401,402,405,415,431,444,445,446,447,]),'COMMA':([58,66,69,109,141,142,184,209,210,211,212,225,226,227,228,229,230,231,232,233,234,235,236,237,240,241,250,253,290,292,294,296,307,308,324,332,333,450,458,464,466,481,],[68,-178,-177,-44,-45,-46,244,-49,-47,-48,-53,-39,-85,-33,-34,-35,-36,-47,-41,-42,-43,-31,-38,-40,-47,-52,244,244,-30,244,-86,244,344,346,356,-31,-32,460,467,472,474,-126,]),'ASSIGNATION':([63,106,186,188,252,255,305,335,339,340,],[73,164,164,248,164,164,341,364,366,367,]),'RBRACKET':([65,],[75,]),'PRINT':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[105,105,105,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,105,105,-84,105,105,105,105,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,105,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,105,-114,-131,105,105,105,-99,-99,-106,105,-104,-101,-105,-102,-122,-109,-162,-135,-136,105,-123,-110,-137,-138,]),'QUEUE':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,383,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[120,120,120,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,120,120,-84,120,120,120,120,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,120,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,396,-113,-151,120,-114,-131,120,120,120,-99,-99,-106,120,-104,-101,-105,-102,-122,-109,-162,-135,-136,120,-123,-110,-137,-138,]),'STACK':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,295,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[126,126,126,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,126,126,-84,126,126,126,126,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,336,-78,-80,-82,-75,-77,-28,-29,-74,-76,126,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,126,-114,-131,126,126,126,-99,-99,-106,126,-104,-101,-105,-102,-122,-109,-162,-135,-136,126,-123,-110,-137,-138,]),'INTEGER':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,192,197,198,199,201,204,206,209,210,211,212,240,241,243,245,246,259,279,282,285,290,298,299,300,301,302,318,319,337,338,344,345,349,352,353,359,360,362,363,371,375,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,457,461,467,468,474,476,477,479,],[109,109,109,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,109,109,109,212,109,-64,-65,-66,-67,-68,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,109,241,-84,109,109,109,109,109,109,-49,-47,-48,-53,-47,-52,-79,-81,-83,109,323,109,109,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,109,-89,109,-147,-148,-168,-161,-158,-160,-90,109,-149,-150,-132,-167,-157,-113,-151,109,-114,-131,109,109,109,-99,-99,-106,109,-104,-101,-105,-102,-122,-109,-162,-135,-136,466,109,109,-123,466,-110,-137,-138,]),'FLOAT_NUMBER':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,161,164,165,166,167,168,169,181,192,197,198,199,201,204,206,209,210,211,212,240,241,243,245,246,259,282,285,290,298,299,300,301,302,318,319,337,338,344,345,349,352,353,359,360,362,363,371,375,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,467,468,476,477,479,],[141,141,141,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,141,141,141,141,-64,-65,-66,-67,-68,141,-84,141,141,141,141,141,141,-49,-47,-48,-53,-47,-52,-79,-81,-83,141,141,141,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,141,-89,141,-147,-148,-168,-161,-158,-160,-90,141,-149,-150,-132,-167,-157,-113,-151,141,-114,-131,141,141,141,-99,-99,-106,141,-104,-101,-105,-102,-122,-109,-162,-135,-136,141,141,-123,-110,-137,-138,]),'DECIMAL_NUMBER':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,161,164,165,166,167,168,169,181,192,197,198,199,201,204,206,209,210,211,212,240,241,243,245,246,259,282,285,290,298,299,300,301,302,318,319,337,338,344,345,349,352,353,359,360,362,363,371,375,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,467,468,476,477,479,],[142,142,142,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,142,142,142,142,-64,-65,-66,-67,-68,142,-84,142,142,142,142,142,142,-49,-47,-48,-53,-47,-52,-79,-81,-83,142,142,142,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,142,-89,142,-147,-148,-168,-161,-158,-160,-90,142,-149,-150,-132,-167,-157,-113,-151,142,-114,-131,142,142,142,-99,-99,-106,142,-104,-101,-105,-102,-122,-109,-162,-135,-136,142,142,-123,-110,-137,-138,]),'LIST':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,385,386,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[143,143,143,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,143,143,-84,143,143,143,143,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,143,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,398,399,-113,-151,143,-114,-131,143,143,143,-99,-99,-106,143,-104,-101,-105,-102,-122,-109,-162,-135,-136,143,-123,-110,-137,-138,]),'DICTIONARY':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,368,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[144,144,144,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,144,144,-84,144,144,144,144,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,144,-147,-148,-168,-161,-158,-160,387,-149,-150,-132,-167,-157,-113,-151,144,-114,-131,144,144,144,-99,-99,-106,144,-104,-101,-105,-102,-122,-109,-162,-135,-136,144,-123,-110,-137,-138,]),'FOR':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[146,146,146,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,146,146,-84,146,146,146,146,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,146,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,146,-114,-131,146,146,146,-99,-99,-106,146,-104,-101,-105,-102,-122,-109,-162,-135,-136,146,-123,-110,-137,-138,]),'FOREACH':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[147,147,147,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,147,147,-84,147,147,147,147,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,147,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,147,-114,-131,147,147,147,-99,-99,-106,147,-104,-101,-105,-102,-122,-109,-162,-135,-136,147,-123,-110,-137,-138,]),'TRY':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[148,148,148,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,148,148,-84,148,148,148,148,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,148,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,148,-114,-131,148,148,148,-99,-99,-106,148,-104,-101,-105,-102,-122,-109,-162,-135,-136,148,-123,-110,-137,-138,]),'WHILE':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,312,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[149,149,149,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,149,149,-84,149,149,149,149,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,350,-28,-29,-74,-76,149,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,149,-114,-131,149,149,149,-99,-99,-106,149,-104,-101,-105,-102,-122,-109,-162,-135,-136,149,-123,-110,-137,-138,]),'DO':([76,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,153,154,192,197,199,204,206,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,349,352,353,359,360,362,363,377,378,380,381,382,392,397,403,405,407,412,413,416,421,423,425,426,432,433,434,435,441,443,453,454,456,461,468,476,477,479,],[150,150,150,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,150,150,-84,150,150,150,150,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,150,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,150,-114,-131,150,150,150,-99,-99,-106,150,-104,-101,-105,-102,-122,-109,-162,-135,-136,150,-123,-110,-137,-138,]),'ARROW':([81,394,],[155,406,]),'AWAIT':([82,],[156,]),'RETURN':([85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,141,142,145,152,159,192,202,209,210,211,212,240,241,243,245,246,290,298,299,300,301,302,318,319,337,338,352,353,359,360,362,363,377,378,380,381,382,392,397,405,407,425,432,433,434,435,441,443,453,454,456,468,476,477,479,],[-21,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-71,-72,-73,-49,-48,-44,-133,-134,-143,-144,-145,-146,-120,-121,-129,-130,-163,-164,-165,-166,-152,-153,-154,-155,-156,-99,-100,-107,-108,-111,-112,-45,-46,-103,201,-22,-84,201,-49,-47,-48,-53,-47,-52,-79,-81,-83,-30,-78,-80,-82,-75,-77,-28,-29,-74,-76,-147,-148,-168,-161,-158,-160,-149,-150,-132,-167,-157,-113,-151,-114,-131,-106,-104,-101,-105,-102,-122,-109,-162,-135,-136,-123,-110,-137,-138,]),'PLUS':([89,106,108,109,141,142,209,210,211,225,227,231,235,240,264,265,332,],[-47,165,165,-44,-45,-46,165,-47,165,165,165,-47,288,-47,165,165,288,]),'MINUS':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,166,166,-44,-45,-46,166,-47,166,166,166,-47,-47,166,166,]),'TIMES':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,167,167,-44,-45,-46,167,-47,167,167,167,-47,-47,167,167,]),'DIVIDE':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,168,168,-44,-45,-46,168,-47,168,168,168,-47,-47,168,168,]),'PERCENT':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,169,169,-44,-45,-46,169,-47,169,169,169,-47,-47,169,169,]),'EQUAL_COMPARATION':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,172,172,-44,-45,-46,-49,-47,-48,172,172,-47,-47,172,172,]),'INEQUALITY':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,173,173,-44,-45,-46,-49,-47,-48,173,173,-47,-47,173,173,]),'GREATER_THAN_OR_EQUAL':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,174,174,-44,-45,-46,-49,-47,-48,174,174,-47,-47,174,174,]),'SMALLER_THAN_OR_EQUAL':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,175,175,-44,-45,-46,-49,-47,-48,175,175,-47,-47,175,175,]),'LOGICAND':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,176,176,-44,-45,-46,-49,-47,-48,176,176,-47,-47,176,176,]),'LOGICOR':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,177,177,-44,-45,-46,-49,-47,-48,177,177,-47,-47,177,177,]),'LOGICNOT':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,178,178,-44,-45,-46,-49,-47,-48,178,178,-47,-47,178,178,]),'LOGICXOR':([89,106,108,109,141,142,209,210,211,225,227,231,240,264,265,],[-47,179,179,-44,-45,-46,-49,-47,-48,179,179,-47,-47,179,179,]),'DOT':([106,205,],[163,272,]),'STRING':([160,164,201,278,280,282,285,288,455,467,472,],[207,235,235,322,324,235,235,332,464,235,464,]),'CLEAR':([163,],[213,]),'COUNT':([163,],[214,]),'ADD':([163,],[215,]),'REMOVEAT':([163,],[216,]),'PUT':([163,],[217,]),'REMOVE':([163,],[218,]),'ENQUEUE':([163,],[219,]),'DEQUEUE':([163,],[220,]),'ISEMPTY':([163,],[221,]),'PUSH':([163,],[222,]),'POP':([163,],[223,]),'PEEK':([163,],[224,]),'BOOLTRUE':([164,201,282,285,467,],[232,232,232,232,232,]),'BOOLFALSE':([164,201,282,285,467,],[233,233,233,233,233,]),'CHAR':([164,201,282,285,467,],[236,236,236,236,236,]),'NEW':([248,341,364,366,367,],[295,368,383,385,386,]),'IN':([309,],[347,]),'CATCH':([310,],[348,]),'INCREMENT':([369,],[388,]),'DECREMENT':([369,],[389,]),'EXCEPTION':([373,],[391,]),'FINALLY':([443,],[451,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'all_method_definitions':([9,13,],[11,25,]),'block_main_method':([9,11,],[12,22,]),'method_definition':([9,13,],[13,13,]),'simple_method':([9,13,],[15,15,]),'declaration_async':([9,13,],[16,16,]),'declaration_lambda':([9,13,],[17,17,]),'access_modifiers':([9,13,76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[18,18,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'data_type':([14,26,35,49,50,61,62,68,76,78,85,138,139,153,154,183,189,195,196,197,199,204,206,346,349,403,408,412,413,416,426,461,],[29,29,44,59,59,59,59,59,121,121,121,190,191,121,121,242,249,260,261,121,121,121,121,260,121,121,417,121,121,121,121,121,]),'function_arguments':([49,50,61,62,68,],[57,60,71,72,77,]),'function_argument':([49,50,61,62,68,],[58,58,58,58,58,]),'all_block_code':([76,78,85,153,154,197,199,206,349,403,412,413,426,461,],[84,152,159,202,203,262,266,273,374,414,422,424,436,470,]),'block_code':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[85,85,85,85,85,85,85,271,85,85,85,85,85,427,85,85,]),'def_const_or_var':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'print_data':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'read_data':([76,78,85,153,154,164,197,199,201,204,206,282,285,349,403,412,413,416,426,461,467,],[88,88,88,88,88,230,88,88,230,88,88,230,230,88,88,88,88,88,88,88,230,]),'arithmetic_operation':([76,78,85,153,154,161,164,181,197,198,199,201,204,206,259,282,285,344,349,375,403,412,413,416,426,461,467,],[89,89,89,89,89,210,231,240,89,231,89,231,89,89,231,231,231,231,89,231,89,89,89,89,89,89,231,]),'logic_operation':([76,78,85,153,154,164,197,198,199,201,204,206,259,282,285,344,349,375,403,412,413,416,426,461,467,],[90,90,90,90,90,234,90,263,90,234,90,90,307,234,234,307,90,393,90,90,90,90,90,90,234,]),'lists':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'functions_list':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'dict_estruct':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'functions_dict':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'queue_struct':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'functions_queue':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'stack_struct':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'functions_stack':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'block_for':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'block_try_catch':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'block_while':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'constant_assignation':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'variable_assignation':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'late_initialization':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'value_numeric':([76,78,85,153,154,161,164,181,197,198,199,201,204,206,259,282,285,344,349,375,403,412,413,416,426,461,467,],[108,108,108,108,108,211,227,211,108,264,108,227,108,108,264,227,227,264,108,264,108,108,108,108,108,108,227,]),'list_empty':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'list_full':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'list_func_clear':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'list_func_count':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'list_func_add':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'list_func_removeat':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'dict_empty':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'dict_full':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'dict_func_put':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'dict_func_remove':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'queue_enqueue':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'queue_dequeue':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'queue_clear':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'queue_isEmpty':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'stack_push':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'stack_pop':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'stack_clear':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'stack_peek':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'stack_isEmpty':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'for_anidado':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[132,132,132,132,132,132,132,132,132,132,132,421,423,132,132,132,]),'for_each':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'try_catch_simply':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'try_catch_finally':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'normal_while':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'do_while':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'assignation_key_value':([76,78,85,121,153,154,190,191,197,199,204,206,244,249,260,349,403,412,413,416,426,461,],[140,140,140,184,140,140,250,253,140,140,140,140,292,296,308,140,140,140,140,140,140,140,]),'for_simple':([76,78,85,153,154,197,199,204,206,349,403,412,413,416,426,461,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'arithmetic_operator':([106,108,209,211,225,227,264,265,],[161,181,161,181,161,181,181,161,]),'logic_operator':([106,108,225,227,264,265,],[162,182,162,182,182,162,]),'assignation_key_value_multiple':([121,190,191,244,249,],[185,251,254,293,297,]),'function_return':([152,202,],[200,269,]),'value':([164,201,282,285,467,],[226,268,326,329,475,]),'value_logic':([164,201,282,285,467,],[228,228,228,228,228,]),'value_string':([164,201,282,285,467,],[229,229,229,229,229,]),'concatenation':([164,201,282,285,288,467,],[237,237,237,237,333,237,]),'assignation_with_datatype':([195,346,],[259,371,]),'logic_operations':([259,344,],[306,370,]),'key_value_pairs':([442,460,],[449,469,]),'key_value_pair':([442,460,],[450,450,]),'strings_list':([455,472,],[463,478,]),'ints_list':([457,474,],[465,480,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico.py',68),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY','block_publicClass',7,'p_block_publicClass','sintactico.py',71),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',72),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico.py',76),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',80),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',81),
  ('block_code -> read_data','block_code',1,'p_block_code','sintactico.py',82),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico.py',83),
  ('block_code -> logic_operation','block_code',1,'p_block_code','sintactico.py',84),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico.py',86),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',87),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',89),
  ('block_code -> functions_dict','block_code',1,'p_block_code','sintactico.py',90),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico.py',92),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico.py',93),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico.py',95),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico.py',96),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico.py',98),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',100),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico.py',102),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',106),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',107),
  ('method_definition -> simple_method','method_definition',1,'p_method_definition','sintactico.py',111),
  ('method_definition -> declaration_async','method_definition',1,'p_method_definition','sintactico.py',112),
  ('method_definition -> declaration_lambda','method_definition',1,'p_method_definition','sintactico.py',113),
  ('all_method_definitions -> method_definition','all_method_definitions',1,'p_all_method_definitions','sintactico.py',117),
  ('all_method_definitions -> method_definition all_method_definitions','all_method_definitions',2,'p_all_method_definitions','sintactico.py',118),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',123),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',124),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico.py',128),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',132),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',133),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',137),
  ('value -> value_logic','value',1,'p_value','sintactico.py',138),
  ('value -> value_string','value',1,'p_value','sintactico.py',139),
  ('value -> read_data','value',1,'p_value','sintactico.py',140),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',144),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',145),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',146),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',147),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',151),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',152),
  ('value_logic -> logic_operation','value_logic',1,'p_value_logic','sintactico.py',153),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',157),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',158),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',159),
  ('value_numeric -> arithmetic_operation','value_numeric',1,'p_value_numeric','sintactico.py',160),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',165),
  ('arithmetic_operation -> VARIABLE','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',166),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',167),
  ('arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',168),
  ('logic_operation -> value_numeric logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',172),
  ('logic_operation -> VARIABLE logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',173),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',177),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',178),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',179),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',180),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',181),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',182),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',183),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',184),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',185),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',186),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',190),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',191),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',192),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',193),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',194),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',199),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',200),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',204),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',205),
  ('def_const_or_var -> late_initialization','def_const_or_var',1,'p_def_const_or_var','sintactico.py',206),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',210),
  ('constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',211),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',212),
  ('constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',213),
  ('variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',217),
  ('variable_assignation -> data_type assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',218),
  ('variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',219),
  ('variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',220),
  ('late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA','late_initialization',4,'p_late_initialization','sintactico.py',224),
  ('late_initialization -> data_type VARIABLE DOTANDCOMMA','late_initialization',3,'p_late_initialization','sintactico.py',225),
  ('late_initialization -> assignation_key_value DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',226),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',230),
  ('assignation_key_value -> READ LPARENT RPARENT','assignation_key_value',3,'p_assignation_key_value','sintactico.py',231),
  ('assignation_key_value_multiple -> assignation_key_value','assignation_key_value_multiple',1,'p_assignation_key_value_multiple','sintactico.py',235),
  ('assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple','assignation_key_value_multiple',3,'p_assignation_key_value_multiple','sintactico.py',236),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',240),
  ('assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',241),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',245),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',246),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',247),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',248),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',249),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',250),
  ('logic_operations -> logic_operation DOTANDCOMMA','logic_operations',2,'p_logic_operations','sintactico.py',256),
  ('logic_operations -> logic_operation COMMA logic_operations','logic_operations',3,'p_logic_operations','sintactico.py',257),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',261),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',262),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',266),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',267),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',272),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',273),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',274),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico.py',278),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',282),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',283),
  ('try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',287),
  ('try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',290),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',294),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',295),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',299),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',302),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',305),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',309),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',310),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',315),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',316),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',325),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',326),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',332),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',337),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',342),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',343),
  ('key_value_pair -> LKEY VARIABLE COMMA value RKEY','key_value_pair',5,'p_key_value_pair','sintactico.py',348),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',353),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',354),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',359),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',360),
  ('dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',365),
  ('dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',370),
  ('lists -> list_empty','lists',1,'p_lists','sintactico.py',376),
  ('lists -> list_full','lists',1,'p_lists','sintactico.py',377),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',381),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',382),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',386),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',387),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',391),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',392),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',396),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',397),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',401),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',402),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',403),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',404),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',408),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',411),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',414),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',417),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico.py',420),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico.py',423),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico.py',424),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico.py',425),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico.py',426),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico.py',427),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico.py',431),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico.py',434),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico.py',437),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico.py',440),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico.py',443),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',14,'p_queue_struct','sintactico.py',446),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico.py',450),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico.py',451),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico.py',452),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico.py',453),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico.py',457),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico.py',461),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico.py',465),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico.py',469),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico.py',473),
  ('simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',10,'p_simple_method','sintactico.py',480),
  ('simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY','simple_method',9,'p_simple_method','sintactico.py',481),
  ('simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',11,'p_simple_method','sintactico.py',482),
  ('simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY','simple_method',10,'p_simple_method','sintactico.py',483),
  ('function_return -> RETURN value DOTANDCOMMA','function_return',3,'p_function_return','sintactico.py',487),
  ('function_argument -> data_type VARIABLE','function_argument',2,'p_function_argument','sintactico.py',491),
  ('function_argument -> METHOD VARIABLE','function_argument',2,'p_function_argument','sintactico.py',492),
  ('function_arguments -> function_argument','function_arguments',1,'p_function_arguments','sintactico.py',496),
  ('function_arguments -> function_argument COMMA function_arguments','function_arguments',3,'p_function_arguments','sintactico.py',497),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',501),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',505),
]
