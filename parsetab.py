
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    block_code               : def_const_or_var\n                                | print_data\n                                | boolean_operation\n                                | arithmetic_operation\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n    constant_assignation     : access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA\n                                | CONST assignation_type_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers assignation_type_value_multiple DOTANDCOMMA\n                                | assignation_type_value_multiple DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_type_value   : INTTYPE assignation_int\n                                | STRINGTYPE assignation_string\n                                | FLOATTYPE assignation_float\n                                | BOOLTYPE assignation_true\n                                | BOOLTYPE assignation_false\n    assignation_int          : VARIABLE ASSIGNATION INTEGER      assignation_string       : VARIABLE ASSIGNATION STRING       assignation_float        : VARIABLE ASSIGNATION FLOAT_NUMBER assignation_true         : VARIABLE ASSIGNATION BOOLTRUE     assignation_false        : VARIABLE ASSIGNATION BOOLFALSE     assignation_type_value_multiple          : INTTYPE assignation_int_multiple\n                                                | STRINGTYPE assignation_string_multiple\n                                                | FLOATTYPE assignation_float_multiple\n                                                | BOOLTYPE assignation_true_multiple\n                                                | BOOLTYPE assignation_false_multiple\n    assignation_int_multiple                 : assignation_int\n                                                | assignation_int COMMA assignation_int_multiple\n    assignation_string_multiple              : assignation_string\n                                                | assignation_string COMMA assignation_string_multiple\n    assignation_float_multiple               : assignation_float\n                                                | assignation_float COMMA assignation_float_multiple\n    assignation_true_multiple                : assignation_true\n                                                | assignation_true COMMA assignation_true_multiple\n    assignation_false_multiple               : assignation_false\n                                                | assignation_false COMMA assignation_false_multiple\n    '
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,12,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,38,50,51,75,76,78,79,81,82,84,85,86,87,98,108,109,110,111,113,114,115,116,117,119,121,122,],[4,77,-76,-82,99,100,-75,-80,-77,-84,-78,-79,-86,-88,112,-83,-71,123,124,-81,-70,-85,-72,-87,-89,-73,-74,]),'PUBLIC':([4,21,23,25,26,27,28,29,30,31,33,35,39,40,41,42,43,44,59,60,77,93,94,95,96,97,99,100,112,123,124,],[6,45,-21,45,-4,-5,-6,-7,-57,-58,-52,-37,-19,-20,-22,-23,-24,-25,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'CLASS':([6,],[7,]),'VARIABLE':([7,18,21,22,23,25,26,27,28,29,30,31,33,34,35,39,40,41,42,43,44,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,89,93,94,95,96,97,99,100,101,103,105,106,112,123,124,],[8,19,23,52,-21,23,-4,-5,-6,-7,-57,-58,-52,23,-37,-19,-20,-22,-23,-24,-25,80,83,88,92,23,-55,-56,-53,-44,96,96,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-62,52,-54,-37,-38,-26,-45,-61,-60,80,83,118,120,-59,-27,-28,]),'LKEY':([8,20,],[9,21,]),'STATIC':([9,],[11,]),'RKEY':([10,23,24,25,26,27,28,29,30,31,33,35,39,40,41,42,43,44,53,54,59,60,77,93,94,95,96,97,99,100,112,123,124,],[12,-21,53,-8,-4,-5,-6,-7,-57,-58,-52,-37,-19,-20,-22,-23,-24,-25,-3,-9,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'VOID':([11,],[13,]),'MAIN':([13,],[14,]),'LPARENT':([14,32,],[15,55,]),'STRINGTYPE':([15,21,23,25,26,27,28,29,30,31,33,35,36,37,39,40,41,42,43,44,45,46,59,60,74,77,93,94,95,96,97,99,100,112,123,124,],[16,22,-21,22,-4,-5,-6,-7,-57,-58,-52,-37,22,22,-19,-20,-22,-23,-24,-25,-63,-64,-53,-44,22,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'LBRACKET':([16,],[17,]),'RBRACKET':([17,],[18,]),'RPARENT':([19,91,92,],[20,110,111,]),'PRINT':([21,23,25,26,27,28,29,30,31,33,35,39,40,41,42,43,44,59,60,77,93,94,95,96,97,99,100,112,123,124,],[32,-21,32,-4,-5,-6,-7,-57,-58,-52,-37,-19,-20,-22,-23,-24,-25,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'LOGICNOT':([21,23,25,26,27,28,29,30,31,33,35,39,40,41,42,43,44,56,57,58,59,60,77,93,94,95,96,97,99,100,112,123,124,],[34,-21,34,-4,-5,-6,-7,-57,-58,-52,-37,-19,-20,-22,-23,-24,-25,34,-55,-56,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'CONST':([21,23,25,26,27,28,29,30,31,33,35,36,39,40,41,42,43,44,45,46,59,60,77,93,94,95,96,97,99,100,112,123,124,],[37,-21,37,-4,-5,-6,-7,-57,-58,-52,-37,74,-19,-20,-22,-23,-24,-25,-63,-64,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'BOOLTRUE':([21,23,25,26,27,28,29,30,31,33,34,35,39,40,41,42,43,44,56,57,58,59,60,77,93,94,95,96,97,99,100,107,112,123,124,125,],[39,-21,39,-4,-5,-6,-7,-57,-58,-52,39,-37,-19,-20,-22,-23,-24,-25,39,-55,-56,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,121,-59,-27,-28,121,]),'BOOLFALSE':([21,23,25,26,27,28,29,30,31,33,34,35,39,40,41,42,43,44,56,57,58,59,60,77,93,94,95,96,97,99,100,107,112,123,124,126,],[40,-21,40,-4,-5,-6,-7,-57,-58,-52,40,-37,-19,-20,-22,-23,-24,-25,40,-55,-56,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,122,-59,-27,-28,122,]),'INTEGER':([21,23,25,26,27,28,29,30,31,33,34,35,39,40,41,42,43,44,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,93,94,95,96,97,99,100,102,112,123,124,],[42,-21,42,-4,-5,-6,-7,-57,-58,-52,42,-37,-19,-20,-22,-23,-24,-25,42,-55,-56,-53,-44,42,42,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-62,-54,-37,-38,-26,-45,-61,-60,114,-59,-27,-28,]),'FLOAT_NUMBER':([21,23,25,26,27,28,29,30,31,33,34,35,39,40,41,42,43,44,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,93,94,95,96,97,99,100,104,112,123,124,],[43,-21,43,-4,-5,-6,-7,-57,-58,-52,43,-37,-19,-20,-22,-23,-24,-25,43,-55,-56,-53,-44,43,43,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-62,-54,-37,-38,-26,-45,-61,-60,116,-59,-27,-28,]),'DECIMAL_NUMBER':([21,23,25,26,27,28,29,30,31,33,34,35,39,40,41,42,43,44,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,93,94,95,96,97,99,100,112,123,124,],[44,-21,44,-4,-5,-6,-7,-57,-58,-52,44,-37,-19,-20,-22,-23,-24,-25,44,-55,-56,-53,-44,44,44,-39,-40,-41,-42,-43,-46,-47,-48,-49,-50,-51,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'PRIVATE':([21,23,25,26,27,28,29,30,31,33,35,39,40,41,42,43,44,59,60,77,93,94,95,96,97,99,100,112,123,124,],[46,-21,46,-4,-5,-6,-7,-57,-58,-52,-37,-19,-20,-22,-23,-24,-25,-53,-44,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'INTTYPE':([21,23,25,26,27,28,29,30,31,33,35,36,37,39,40,41,42,43,44,45,46,59,60,74,77,93,94,95,96,97,99,100,112,123,124,],[47,-21,47,-4,-5,-6,-7,-57,-58,-52,-37,47,47,-19,-20,-22,-23,-24,-25,-63,-64,-53,-44,47,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'FLOATTYPE':([21,23,25,26,27,28,29,30,31,33,35,36,37,39,40,41,42,43,44,45,46,59,60,74,77,93,94,95,96,97,99,100,112,123,124,],[48,-21,48,-4,-5,-6,-7,-57,-58,-52,-37,48,48,-19,-20,-22,-23,-24,-25,-63,-64,-53,-44,48,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'BOOLTYPE':([21,23,25,26,27,28,29,30,31,33,35,36,37,39,40,41,42,43,44,45,46,59,60,74,77,93,94,95,96,97,99,100,112,123,124,],[49,-21,49,-4,-5,-6,-7,-57,-58,-52,-37,49,49,-19,-20,-22,-23,-24,-25,-63,-64,-53,-44,49,-62,-54,-37,-38,-26,-45,-61,-60,-59,-27,-28,]),'LOGICAND':([23,33,35,39,40,41,42,43,44,60,96,97,],[-21,57,-44,-19,-20,-22,-23,-24,-25,-44,-26,-45,]),'LOGICOR':([23,33,35,39,40,41,42,43,44,60,96,97,],[-21,58,-44,-19,-20,-22,-23,-24,-25,-44,-26,-45,]),'PLUS':([23,35,42,43,44,94,96,],[-26,63,-23,-24,-25,63,-26,]),'MINUS':([23,35,42,43,44,94,96,],[-26,64,-23,-24,-25,64,-26,]),'TIMES':([23,35,42,43,44,94,96,],[-26,65,-23,-24,-25,65,-26,]),'DIVIDE':([23,35,42,43,44,94,96,],[-26,66,-23,-24,-25,66,-26,]),'PERCENT':([23,35,42,43,44,94,96,],[-26,67,-23,-24,-25,67,-26,]),'GREATER_THAN':([23,35,42,43,44,60,96,],[-26,68,-23,-24,-25,68,-26,]),'SMALLER_THAN':([23,35,42,43,44,60,96,],[-26,69,-23,-24,-25,69,-26,]),'EQUAL_COMPARATION':([23,35,42,43,44,60,96,],[-26,70,-23,-24,-25,70,-26,]),'INEQUALITY':([23,35,42,43,44,60,96,],[-26,71,-23,-24,-25,71,-26,]),'GREATER_THAN_OR_EQUAL':([23,35,42,43,44,60,96,],[-26,72,-23,-24,-25,72,-26,]),'SMALLER_THAN_OR_EQUAL':([23,35,42,43,44,60,96,],[-26,73,-23,-24,-25,73,-26,]),'COMMA':([51,79,82,86,87,109,114,116,121,122,],[89,101,103,105,106,-71,-70,-72,-73,-74,]),'ASSIGNATION':([52,80,83,88,118,120,],[90,102,104,107,125,126,]),'STRING':([55,90,],[91,109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([9,],[10,]),'all_block_code':([21,25,],[24,54,]),'block_code':([21,25,],[25,25,]),'def_const_or_var':([21,25,],[26,26,]),'print_data':([21,25,],[27,27,]),'boolean_operation':([21,25,56,],[28,28,93,]),'arithmetic_operation':([21,25,61,],[29,29,95,]),'constant_assignation':([21,25,],[30,30,]),'variable_assignation':([21,25,],[31,31,]),'value_boolean':([21,25,34,56,],[33,33,59,33,]),'value_numeric':([21,25,34,56,61,62,],[35,35,60,60,94,60,]),'access_modifiers':([21,25,],[36,36,]),'assignation_type_value_multiple':([21,25,36,37,74,],[38,38,75,76,98,]),'comparison_operation':([21,25,34,56,62,],[41,41,41,41,97,]),'assignation_string_multiple':([22,89,],[50,108,]),'assignation_string':([22,89,],[51,51,]),'boolean_operator':([33,],[56,]),'arithmetic_operator':([35,94,],[61,61,]),'comparison_operator':([35,60,],[62,62,]),'assignation_int_multiple':([47,101,],[78,113,]),'assignation_int':([47,101,],[79,79,]),'assignation_float_multiple':([48,103,],[81,115,]),'assignation_float':([48,103,],[82,82,]),'assignation_true_multiple':([49,105,],[84,117,]),'assignation_false_multiple':([49,106,],[85,119,]),'assignation_true':([49,105,],[86,86,]),'assignation_false':([49,106,],[87,87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',15),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',19),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',20),
  ('block_code -> boolean_operation','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico2.py',22),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',26),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',27),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',33),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',34),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',35),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',36),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',37),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',38),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',44),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',45),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',46),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',50),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',51),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',52),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',53),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',57),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',58),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',59),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',60),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',64),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',65),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',69),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',73),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',74),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',78),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',79),
  ('value -> value_string','value',1,'p_value','sintactico2.py',80),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',81),
  ('value -> read_data','value',1,'p_value','sintactico2.py',82),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',88),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',89),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',93),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',94),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',95),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',96),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',97),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',101),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',102),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',106),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',107),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',108),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',109),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',110),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',111),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',115),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',116),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',117),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',121),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',122),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',128),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',129),
  ('constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico2.py',133),
  ('constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',3,'p_constant_assignation','sintactico2.py',134),
  ('variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',138),
  ('variable_assignation -> assignation_type_value_multiple DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',139),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',143),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',144),
  ('assignation_type_value -> INTTYPE assignation_int','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',148),
  ('assignation_type_value -> STRINGTYPE assignation_string','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',149),
  ('assignation_type_value -> FLOATTYPE assignation_float','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',150),
  ('assignation_type_value -> BOOLTYPE assignation_true','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',151),
  ('assignation_type_value -> BOOLTYPE assignation_false','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',152),
  ('assignation_int -> VARIABLE ASSIGNATION INTEGER','assignation_int',3,'p_assignation_int','sintactico2.py',156),
  ('assignation_string -> VARIABLE ASSIGNATION STRING','assignation_string',3,'p_assignation_string','sintactico2.py',159),
  ('assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER','assignation_float',3,'p_assignation_float','sintactico2.py',162),
  ('assignation_true -> VARIABLE ASSIGNATION BOOLTRUE','assignation_true',3,'p_assignation_true','sintactico2.py',165),
  ('assignation_false -> VARIABLE ASSIGNATION BOOLFALSE','assignation_false',3,'p_assignation_false','sintactico2.py',168),
  ('assignation_type_value_multiple -> INTTYPE assignation_int_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',172),
  ('assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',173),
  ('assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',174),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',175),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',176),
  ('assignation_int_multiple -> assignation_int','assignation_int_multiple',1,'p_assignation_int_multiple','sintactico2.py',180),
  ('assignation_int_multiple -> assignation_int COMMA assignation_int_multiple','assignation_int_multiple',3,'p_assignation_int_multiple','sintactico2.py',181),
  ('assignation_string_multiple -> assignation_string','assignation_string_multiple',1,'p_assignation_string_multiple','sintactico2.py',185),
  ('assignation_string_multiple -> assignation_string COMMA assignation_string_multiple','assignation_string_multiple',3,'p_assignation_string_multiple','sintactico2.py',186),
  ('assignation_float_multiple -> assignation_float','assignation_float_multiple',1,'p_assignation_float_multiple','sintactico2.py',190),
  ('assignation_float_multiple -> assignation_float COMMA assignation_float_multiple','assignation_float_multiple',3,'p_assignation_float_multiple','sintactico2.py',191),
  ('assignation_true_multiple -> assignation_true','assignation_true_multiple',1,'p_assignation_true_multiple','sintactico2.py',195),
  ('assignation_true_multiple -> assignation_true COMMA assignation_true_multiple','assignation_true_multiple',3,'p_assignation_true_multiple','sintactico2.py',196),
  ('assignation_false_multiple -> assignation_false','assignation_false_multiple',1,'p_assignation_false_multiple','sintactico2.py',200),
  ('assignation_false_multiple -> assignation_false COMMA assignation_false_multiple','assignation_false_multiple',3,'p_assignation_false_multiple','sintactico2.py',201),
]
