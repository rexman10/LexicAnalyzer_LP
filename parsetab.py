
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JOIN JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK START STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK THREAD TIMES TRY USING VARIABLE VOID WHILE WRITEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_code               : def_const_or_var\n                                | print_data\n                                | thread_main\n                                | concurrent_method\n                                | normal_if\n                                | block_while\n                                | stack_struct\n                                | functions_stack\n                                | queue_struct\n                                | functions_queue\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n    constant_assignation     : access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA\n                                | CONST assignation_type_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers assignation_type_value_multiple DOTANDCOMMA\n                                | assignation_type_value_multiple DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_type_value   : INTTYPE assignation_int\n                                | STRINGTYPE assignation_string\n                                | FLOATTYPE assignation_float\n                                | BOOLTYPE assignation_true\n                                | BOOLTYPE assignation_false\n    assignation_int          : VARIABLE ASSIGNATION INTEGER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_string       : VARIABLE ASSIGNATION STRING\n                                | VARIABLE ASSIGNATION VARIABLE\n    assignation_float        : VARIABLE ASSIGNATION FLOAT_NUMBER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_true         : VARIABLE ASSIGNATION BOOLTRUE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_false        : VARIABLE ASSIGNATION BOOLFALSE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_type_value_multiple          : INTTYPE assignation_int_multiple\n                                                | STRINGTYPE assignation_string_multiple\n                                                | FLOATTYPE assignation_float_multiple\n                                                | BOOLTYPE assignation_true_multiple\n                                                | BOOLTYPE assignation_false_multiple\n    assignation_int_multiple                 : assignation_int\n                                                | assignation_int COMMA assignation_int_multiple\n    assignation_string_multiple              : assignation_string\n                                                | assignation_string COMMA assignation_string_multiple\n    assignation_float_multiple               : assignation_float\n                                                | assignation_float COMMA assignation_float_multiple\n    assignation_true_multiple                : assignation_true\n                                                | assignation_true COMMA assignation_true_multiple\n    assignation_false_multiple               : assignation_false\n                                                | assignation_false COMMA assignation_false_multiple\n    \n    thread_main                 : declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait\n    \n    declaration_thread          : THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA\n                                | THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA\n    \n    thread_init                 : thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA\n    \n    thread_wait                 : thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA\n    \n    concurrent_method           : STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY\n                                | WRITE\n    \n    thread_logic                : thread_sentence\n                                | thread_logic thread_sentence\n    \n    thread_sentence             : thread_expression DOTANDCOMMA\n    \n    thread_expression           : thread_identificator DOT concurrent_method LPARENT RPARENT\n                                | PRINT LPARENT STRING RPARENT\n    \n    thread_arguments            : thread_expression\n                                | thread_arguments COMMA thread_expression\n    \n    thread_identificator        : VARIABLE\n    block_if                 : normal_if\n                                | all_block_code\n    normal_if                : IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n                                | IF LPARENT boolean_operation RPARENT LKEY block_if RKEY \n    other_if                 : ELSE LKEY block_if RKEY\n                                | ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n    block_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENTstack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct               : QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMAfunctions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n                                | queue_peek\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAqueue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAqueue_peek               : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAqueue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,17,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,82,91,118,137,138,179,218,219,245,246,247,248,250,251,273,277,280,285,288,295,298,299,302,312,316,321,],[0,-1,-2,-16,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,-17,-70,-3,-69,-68,-67,-35,-36,-139,-140,-141,-142,-150,-107,-138,-149,-125,-130,-112,-124,-132,-143,-131,-111,-126,-127,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,66,77,78,89,90,96,97,99,100,102,103,104,105,124,126,127,128,129,130,131,132,133,136,151,152,153,161,162,169,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,212,213,214,215,217,224,225,226,242,249,262,263,264,265,266,271,276,279,281,282,300,301,305,311,315,],[4,91,-93,-99,137,138,-92,-97,-94,-101,-95,-96,-103,-105,-60,-27,-28,-29,-30,-52,-31,-32,-33,179,-100,-82,-81,218,219,-61,-98,-34,-31,-80,-45,-102,-34,-32,-85,-104,-106,-29,-27,-88,-28,245,246,247,248,250,-62,-53,-34,273,277,-46,-29,-88,-29,-91,290,292,294,298,299,308,309,312,-118,-117,]),'PUBLIC':([4,27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[6,70,70,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,70,-70,70,-69,-68,70,-67,-35,-36,70,70,70,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,70,-111,-126,70,-127,]),'STATIC':([4,12,27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,259,273,277,280,285,287,288,295,298,299,302,306,312,316,318,321,],[7,15,29,29,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,29,-70,29,-69,-68,29,-67,-35,-36,29,29,29,-139,-140,-141,-142,-150,-107,-10,29,-138,-149,-125,-130,29,-112,-124,-132,-143,-131,29,-111,-126,29,-127,]),'CLASS':([6,],[8,]),'VOID':([7,15,29,],[9,18,76,]),'VARIABLE':([8,21,27,28,30,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,72,73,74,76,81,83,84,85,91,94,95,109,110,121,125,137,138,142,143,144,145,146,147,148,149,154,159,163,166,167,168,170,171,172,173,174,175,176,179,218,219,220,223,230,232,233,234,235,236,237,238,239,240,241,245,246,247,248,250,251,255,259,261,269,270,273,277,280,285,288,289,290,294,295,298,299,302,306,307,308,309,312,316,318,321,],[10,23,31,75,79,31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,86,-133,-134,-135,-136,-137,87,-144,-145,-146,-147,-148,93,98,101,106,93,31,120,93,128,-70,128,31,79,152,93,128,-69,-68,98,184,101,189,193,195,196,31,202,202,93,128,-63,-64,226,-54,-55,-56,-57,-58,-59,-67,-35,-36,93,31,31,226,-47,-48,-49,-50,-51,263,265,31,93,-139,-140,-141,-142,-150,-107,-10,93,128,93,-114,-138,-149,-125,-130,-112,-115,-116,-110,-124,-132,-143,-131,31,128,-108,-109,-111,-126,31,-127,]),'MAIN':([9,18,],[11,20,]),'LKEY':([10,25,69,107,165,181,201,296,317,],[12,27,95,149,223,230,241,306,318,]),'LPARENT':([11,20,46,48,49,68,93,108,111,112,113,114,115,116,117,211,222,227,228,229,231,272,278,288,297,303,],[13,22,83,-113,85,94,-121,150,154,155,156,157,158,159,160,244,253,257,258,259,261,291,293,-112,307,310,]),'STRINGTYPE':([13,22,27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,64,65,70,71,81,88,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[16,24,30,30,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,30,30,-71,-72,30,30,-70,30,-69,-68,30,-67,-35,-36,30,30,30,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,30,-111,-126,30,-127,]),'RKEY':([14,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,82,91,137,138,141,179,200,218,219,240,245,246,247,248,250,251,254,255,256,260,267,269,270,273,277,280,285,288,289,290,295,298,299,302,312,313,316,319,321,],[17,81,-16,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,-17,-70,-69,-68,182,-67,240,-35,-36,-4,-139,-140,-141,-142,-150,-107,280,-10,-123,285,-5,288,-114,-138,-149,-125,-130,-112,-115,-116,-124,-132,-143,-131,-111,316,-126,320,-127,]),'LBRACKET':([16,24,],[19,26,]),'RBRACKET':([19,26,],[21,28,]),'RPARENT':([23,48,75,93,119,120,123,124,126,127,128,129,130,131,132,133,140,150,155,156,157,158,160,169,202,203,204,205,206,207,208,209,210,216,224,225,226,244,253,257,258,274,275,283,284,286,288,292,293,304,310,314,],[25,-113,107,-121,161,162,165,-60,-27,-28,-29,-30,-52,-31,-32,-33,181,201,212,213,214,215,217,-61,-29,242,-40,-41,-42,-44,-24,-25,-26,249,-62,-53,-34,276,279,281,282,-38,-39,300,301,302,-112,-37,305,311,315,317,]),'PRINT':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,241,245,246,247,248,250,251,255,269,270,273,277,280,285,288,289,290,295,298,299,302,306,312,316,318,321,],[46,46,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,46,-70,46,-69,-68,46,-67,-35,-36,46,46,46,272,-139,-140,-141,-142,-150,-107,-10,272,-114,-138,-149,-125,-130,-112,-115,-116,-124,-132,-143,-131,46,-111,-126,46,-127,]),'WRITE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,259,273,277,280,285,287,288,295,298,299,302,306,312,316,318,321,],[48,48,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,48,-70,48,-69,-68,48,-67,-35,-36,48,48,48,-139,-140,-141,-142,-150,-107,-10,48,-138,-149,-125,-130,48,-112,-124,-132,-143,-131,48,-111,-126,48,-127,]),'IF':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[49,49,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,49,-70,49,-69,-68,49,-67,-35,-36,49,49,49,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,49,-111,-126,49,-127,]),'STACK':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,177,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[52,52,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,52,-70,52,-69,-68,52,227,-67,-35,-36,52,52,52,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,52,-111,-126,52,-127,]),'QUEUE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,178,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[58,58,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,58,-70,58,-69,-68,58,228,-67,-35,-36,58,58,58,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,58,-111,-126,58,-127,]),'CONST':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,64,70,71,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[65,65,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,88,-71,-72,65,-70,65,-69,-68,65,-67,-35,-36,65,65,65,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,65,-111,-126,65,-127,]),'THREAD':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,180,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,308,309,312,316,318,321,],[67,67,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,67,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,67,-70,67,-69,-68,67,-67,229,-35,-36,67,67,67,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,67,-108,-109,-111,-126,67,-127,]),'WHILE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,182,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[68,68,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,68,-70,68,-69,-68,68,-67,231,-35,-36,68,68,68,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,68,-111,-126,68,-127,]),'DO':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[69,69,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,69,-70,69,-69,-68,69,-67,-35,-36,69,69,69,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,69,-111,-126,69,-127,]),'PRIVATE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,81,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[71,71,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,71,-70,71,-69,-68,71,-67,-35,-36,71,71,71,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,71,-111,-126,71,-127,]),'INTTYPE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,64,65,70,71,81,88,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[72,72,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,72,72,-71,-72,72,72,-70,72,-69,-68,72,-67,-35,-36,72,72,72,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,72,-111,-126,72,-127,]),'FLOATTYPE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,64,65,70,71,81,88,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[73,73,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,73,73,-71,-72,73,73,-70,73,-69,-68,73,-67,-35,-36,73,73,73,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,73,-111,-126,73,-127,]),'BOOLTYPE':([27,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,56,57,59,60,61,62,63,64,65,70,71,81,88,91,95,137,138,149,179,218,219,223,230,240,245,246,247,248,250,251,255,273,277,280,285,288,295,298,299,302,306,312,316,318,321,],[74,74,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-65,-66,-113,-128,-129,-133,-134,-135,-136,-137,-144,-145,-146,-147,-148,74,74,-71,-72,74,74,-70,74,-69,-68,74,-67,-35,-36,74,74,74,-139,-140,-141,-142,-150,-107,-10,-138,-149,-125,-130,-112,-124,-132,-143,-131,74,-111,-126,74,-127,]),'DOT':([31,93,122,221,268,],[80,-121,164,252,287,]),'COMMA':([78,97,100,104,105,124,126,127,128,129,130,131,132,133,152,153,169,184,185,186,187,189,190,191,196,197,198,199,224,225,226,262,263,264,265,266,],[109,142,144,146,147,-60,-27,-28,-29,-30,-52,-31,-32,-33,-82,-81,-61,-34,-31,-80,-45,-34,-32,-85,-29,-27,-88,-28,-62,-53,-34,-46,-29,-88,-29,-91,]),'ASSIGNATION':([79,86,87,92,93,98,101,106,193,195,],[110,134,135,139,-121,143,145,148,238,239,]),'PUSH':([80,],[111,]),'POP':([80,],[112,]),'CLEAR':([80,],[113,]),'PEEK':([80,],[114,]),'ISEMPTY':([80,],[115,]),'ENQUEUE':([80,],[116,]),'DEQUEUE':([80,],[117,]),'STRING':([83,110,154,159,243,291,],[119,153,208,208,274,304,]),'LOGICNOT':([85,94,148,166,167,168,238,239,261,307,],[125,125,125,125,-63,-64,125,125,125,125,]),'BOOLTRUE':([85,94,125,148,154,159,166,167,168,238,239,261,307,],[126,126,126,197,126,126,126,-63,-64,197,126,126,126,]),'BOOLFALSE':([85,94,125,148,154,159,166,167,168,238,239,261,307,],[127,127,127,199,127,127,127,-63,-64,127,199,127,127,]),'INTEGER':([85,94,125,143,145,148,154,159,166,167,168,170,171,172,173,174,175,176,232,233,234,235,236,237,238,239,261,307,],[131,131,131,185,131,131,131,131,131,-63,-64,131,-54,-55,-56,-57,-58,-59,131,-47,-48,-49,-50,-51,131,131,131,131,]),'FLOAT_NUMBER':([85,94,125,143,145,148,154,159,166,167,168,170,171,172,173,174,175,176,232,233,234,235,236,237,238,239,261,307,],[132,132,132,132,190,132,132,132,132,-63,-64,132,-54,-55,-56,-57,-58,-59,132,-47,-48,-49,-50,-51,132,132,132,132,]),'DECIMAL_NUMBER':([85,94,125,143,145,148,154,159,166,167,168,170,171,172,173,174,175,176,232,233,234,235,236,237,238,239,261,307,],[133,133,133,133,133,133,133,133,133,-63,-64,133,-54,-55,-56,-57,-58,-59,133,-47,-48,-49,-50,-51,133,133,133,133,]),'LOGICAND':([124,126,127,128,129,130,131,132,133,196,197,199,225,226,263,265,],[167,-27,-28,-29,-30,-52,-31,-32,-33,-29,-27,-28,-53,-34,-29,-29,]),'LOGICOR':([124,126,127,128,129,130,131,132,133,196,197,199,225,226,263,265,],[168,-27,-28,-29,-30,-52,-31,-32,-33,-29,-27,-28,-53,-34,-29,-29,]),'GREATER_THAN':([128,130,131,132,133,196,202,204,226,263,265,],[-34,171,-31,-32,-33,-34,-34,171,-34,-34,-34,]),'SMALLER_THAN':([128,130,131,132,133,196,202,204,226,263,265,],[-34,172,-31,-32,-33,-34,-34,172,-34,-34,-34,]),'EQUAL_COMPARATION':([128,130,131,132,133,196,202,204,226,263,265,],[-34,173,-31,-32,-33,-34,-34,173,-34,-34,-34,]),'INEQUALITY':([128,130,131,132,133,196,202,204,226,263,265,],[-34,174,-31,-32,-33,-34,-34,174,-34,-34,-34,]),'GREATER_THAN_OR_EQUAL':([128,130,131,132,133,196,202,204,226,263,265,],[-34,175,-31,-32,-33,-34,-34,175,-34,-34,-34,]),'SMALLER_THAN_OR_EQUAL':([128,130,131,132,133,196,202,204,226,263,265,],[-34,176,-31,-32,-33,-34,-34,176,-34,-34,-34,]),'PLUS':([131,132,133,184,185,187,189,190,208,226,274,],[-31,-32,-33,-34,-31,233,-34,-32,243,-34,243,]),'MINUS':([131,132,133,184,185,187,189,190,226,],[-31,-32,-33,-34,-31,234,-34,-32,-34,]),'TIMES':([131,132,133,184,185,187,189,190,226,],[-31,-32,-33,-34,-31,235,-34,-32,-34,]),'DIVIDE':([131,132,133,184,185,187,189,190,226,],[-31,-32,-33,-34,-31,236,-34,-32,-34,]),'PERCENT':([131,132,133,184,185,187,189,190,226,],[-31,-32,-33,-34,-31,237,-34,-32,-34,]),'NEW':([134,135,139,],[177,178,180,]),'CHAR':([154,159,],[209,209,]),'READ':([154,159,],[211,211,]),'START':([164,],[222,]),'JOIN':([252,],[278,]),'ELSE':([280,320,],[296,296,]),'ELSE_IF':([280,320,],[297,297,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([12,],[14,]),'all_block_code':([27,33,81,95,149,223,230,240,306,318,],[32,82,118,141,200,256,260,267,256,256,]),'block_code':([27,33,81,95,149,223,230,240,306,318,],[33,33,33,33,33,33,33,33,33,33,]),'def_const_or_var':([27,33,81,95,149,223,230,240,306,318,],[34,34,34,34,34,34,34,34,34,34,]),'print_data':([27,33,81,95,149,223,230,240,306,318,],[35,35,35,35,35,35,35,35,35,35,]),'thread_main':([27,33,81,95,149,223,230,240,306,318,],[36,36,36,36,36,36,36,36,36,36,]),'concurrent_method':([27,33,81,95,149,223,230,240,259,287,306,318,],[37,37,37,37,37,37,37,37,284,303,37,37,]),'normal_if':([27,33,81,95,149,223,230,240,306,318,],[38,38,38,38,38,255,38,38,255,255,]),'block_while':([27,33,81,95,149,223,230,240,306,318,],[39,39,39,39,39,39,39,39,39,39,]),'stack_struct':([27,33,81,95,149,223,230,240,306,318,],[40,40,40,40,40,40,40,40,40,40,]),'functions_stack':([27,33,81,95,149,223,230,240,306,318,],[41,41,41,41,41,41,41,41,41,41,]),'queue_struct':([27,33,81,95,149,223,230,240,306,318,],[42,42,42,42,42,42,42,42,42,42,]),'functions_queue':([27,33,81,95,149,223,230,240,306,318,],[43,43,43,43,43,43,43,43,43,43,]),'constant_assignation':([27,33,81,95,149,223,230,240,306,318,],[44,44,44,44,44,44,44,44,44,44,]),'variable_assignation':([27,33,81,95,149,223,230,240,306,318,],[45,45,45,45,45,45,45,45,45,45,]),'declaration_thread':([27,33,47,81,95,149,223,230,240,306,318,],[47,47,84,47,47,47,47,47,47,47,47,]),'normal_while':([27,33,81,95,149,223,230,240,306,318,],[50,50,50,50,50,50,50,50,50,50,]),'do_while':([27,33,81,95,149,223,230,240,306,318,],[51,51,51,51,51,51,51,51,51,51,]),'stack_push':([27,33,81,95,149,223,230,240,306,318,],[53,53,53,53,53,53,53,53,53,53,]),'stack_pop':([27,33,81,95,149,223,230,240,306,318,],[54,54,54,54,54,54,54,54,54,54,]),'stack_clear':([27,33,81,95,149,223,230,240,306,318,],[55,55,55,55,55,55,55,55,55,55,]),'stack_peek':([27,33,81,95,149,223,230,240,306,318,],[56,56,56,56,56,56,56,56,56,56,]),'stack_isEmpty':([27,33,81,95,149,223,230,240,306,318,],[57,57,57,57,57,57,57,57,57,57,]),'queue_enqueue':([27,33,81,95,149,223,230,240,306,318,],[59,59,59,59,59,59,59,59,59,59,]),'queue_dequeue':([27,33,81,95,149,223,230,240,306,318,],[60,60,60,60,60,60,60,60,60,60,]),'queue_clear':([27,33,81,95,149,223,230,240,306,318,],[61,61,61,61,61,61,61,61,61,61,]),'queue_isEmpty':([27,33,81,95,149,223,230,240,306,318,],[62,62,62,62,62,62,62,62,62,62,]),'queue_peek':([27,33,81,95,149,223,230,240,306,318,],[63,63,63,63,63,63,63,63,63,63,]),'access_modifiers':([27,33,81,95,149,223,230,240,306,318,],[64,64,64,64,64,64,64,64,64,64,]),'assignation_type_value_multiple':([27,33,64,65,81,88,95,149,223,230,240,306,318,],[66,66,89,90,66,136,66,66,66,66,66,66,66,]),'assignation_string_multiple':([30,109,],[77,151,]),'assignation_string':([30,109,],[78,78,]),'thread_identificator':([67,76,84,121,163,220,241,259,269,],[92,108,122,122,221,221,268,283,268,]),'assignation_int_multiple':([72,142,],[96,183,]),'assignation_int':([72,142,],[97,97,]),'assignation_float_multiple':([73,144,],[99,188,]),'assignation_float':([73,144,],[100,100,]),'assignation_true_multiple':([74,146,],[102,192,]),'assignation_false_multiple':([74,147,],[103,194,]),'assignation_true':([74,146,],[104,104,]),'assignation_false':([74,147,],[105,105,]),'thread_init':([84,121,],[121,163,]),'boolean_operation':([85,94,148,166,238,239,261,307,],[123,140,198,224,264,266,286,314,]),'value_boolean':([85,94,125,148,154,159,166,238,239,261,307,],[124,124,169,124,205,205,124,124,124,124,124,]),'comparison_operation':([85,94,125,148,154,159,166,170,238,239,261,307,],[129,129,129,129,129,129,129,225,129,129,129,129,]),'value_numeric':([85,94,125,143,145,148,154,159,166,170,232,238,239,261,307,],[130,130,130,187,187,130,204,204,130,130,187,130,130,130,130,]),'boolean_operator':([124,],[166,]),'comparison_operator':([130,204,],[170,170,]),'arithmetic_operation':([143,145,232,],[186,191,262,]),'value':([154,159,],[203,216,]),'value_string':([154,159,],[206,206,]),'read_data':([154,159,],[207,207,]),'concatenation':([154,159,243,],[210,210,275,]),'thread_wait':([163,220,],[220,251,]),'arithmetic_operator':([187,],[232,]),'block_if':([223,306,318,],[254,313,319,]),'thread_logic':([241,],[269,]),'thread_sentence':([241,269,],[270,289,]),'thread_expression':([241,269,],[271,271,]),'other_if':([280,320,],[295,321,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_publicClass -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_publicClass',13,'p_block_publicClass','sintactico2.py',12),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',16),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_main_method',13,'p_block_main_method','sintactico2.py',17),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',22),
  ('block_code -> thread_main','block_code',1,'p_block_code','sintactico2.py',23),
  ('block_code -> concurrent_method','block_code',1,'p_block_code','sintactico2.py',24),
  ('block_code -> normal_if','block_code',1,'p_block_code','sintactico2.py',25),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico2.py',26),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico2.py',27),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico2.py',28),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico2.py',29),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico2.py',30),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',34),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',35),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',41),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',42),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',43),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',44),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',45),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',46),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',52),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',53),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',54),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',58),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',59),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',60),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',61),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',65),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',66),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',67),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',68),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',72),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',73),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',77),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',81),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',82),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',86),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',87),
  ('value -> value_string','value',1,'p_value','sintactico2.py',88),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',89),
  ('value -> read_data','value',1,'p_value','sintactico2.py',90),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',96),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',97),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',101),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',102),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',103),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',104),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',105),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',109),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',110),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',114),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',115),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',116),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',117),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',118),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',119),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',123),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',124),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',125),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',129),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',130),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',136),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',137),
  ('constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico2.py',141),
  ('constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',3,'p_constant_assignation','sintactico2.py',142),
  ('variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',146),
  ('variable_assignation -> assignation_type_value_multiple DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',147),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',151),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',152),
  ('assignation_type_value -> INTTYPE assignation_int','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',156),
  ('assignation_type_value -> STRINGTYPE assignation_string','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',157),
  ('assignation_type_value -> FLOATTYPE assignation_float','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',158),
  ('assignation_type_value -> BOOLTYPE assignation_true','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',159),
  ('assignation_type_value -> BOOLTYPE assignation_false','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',160),
  ('assignation_int -> VARIABLE ASSIGNATION INTEGER','assignation_int',3,'p_assignation_int','sintactico2.py',164),
  ('assignation_int -> VARIABLE ASSIGNATION VARIABLE','assignation_int',3,'p_assignation_int','sintactico2.py',165),
  ('assignation_int -> VARIABLE ASSIGNATION arithmetic_operation','assignation_int',3,'p_assignation_int','sintactico2.py',166),
  ('assignation_string -> VARIABLE ASSIGNATION STRING','assignation_string',3,'p_assignation_string','sintactico2.py',170),
  ('assignation_string -> VARIABLE ASSIGNATION VARIABLE','assignation_string',3,'p_assignation_string','sintactico2.py',171),
  ('assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER','assignation_float',3,'p_assignation_float','sintactico2.py',175),
  ('assignation_float -> VARIABLE ASSIGNATION VARIABLE','assignation_float',3,'p_assignation_float','sintactico2.py',176),
  ('assignation_float -> VARIABLE ASSIGNATION arithmetic_operation','assignation_float',3,'p_assignation_float','sintactico2.py',177),
  ('assignation_true -> VARIABLE ASSIGNATION BOOLTRUE','assignation_true',3,'p_assignation_true','sintactico2.py',181),
  ('assignation_true -> VARIABLE ASSIGNATION VARIABLE','assignation_true',3,'p_assignation_true','sintactico2.py',182),
  ('assignation_true -> VARIABLE ASSIGNATION boolean_operation','assignation_true',3,'p_assignation_true','sintactico2.py',183),
  ('assignation_false -> VARIABLE ASSIGNATION BOOLFALSE','assignation_false',3,'p_assignation_false','sintactico2.py',187),
  ('assignation_false -> VARIABLE ASSIGNATION VARIABLE','assignation_false',3,'p_assignation_false','sintactico2.py',188),
  ('assignation_false -> VARIABLE ASSIGNATION boolean_operation','assignation_false',3,'p_assignation_false','sintactico2.py',189),
  ('assignation_type_value_multiple -> INTTYPE assignation_int_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',194),
  ('assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',195),
  ('assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',196),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',197),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',198),
  ('assignation_int_multiple -> assignation_int','assignation_int_multiple',1,'p_assignation_int_multiple','sintactico2.py',202),
  ('assignation_int_multiple -> assignation_int COMMA assignation_int_multiple','assignation_int_multiple',3,'p_assignation_int_multiple','sintactico2.py',203),
  ('assignation_string_multiple -> assignation_string','assignation_string_multiple',1,'p_assignation_string_multiple','sintactico2.py',207),
  ('assignation_string_multiple -> assignation_string COMMA assignation_string_multiple','assignation_string_multiple',3,'p_assignation_string_multiple','sintactico2.py',208),
  ('assignation_float_multiple -> assignation_float','assignation_float_multiple',1,'p_assignation_float_multiple','sintactico2.py',212),
  ('assignation_float_multiple -> assignation_float COMMA assignation_float_multiple','assignation_float_multiple',3,'p_assignation_float_multiple','sintactico2.py',213),
  ('assignation_true_multiple -> assignation_true','assignation_true_multiple',1,'p_assignation_true_multiple','sintactico2.py',217),
  ('assignation_true_multiple -> assignation_true COMMA assignation_true_multiple','assignation_true_multiple',3,'p_assignation_true_multiple','sintactico2.py',218),
  ('assignation_false_multiple -> assignation_false','assignation_false_multiple',1,'p_assignation_false_multiple','sintactico2.py',222),
  ('assignation_false_multiple -> assignation_false COMMA assignation_false_multiple','assignation_false_multiple',3,'p_assignation_false_multiple','sintactico2.py',223),
  ('thread_main -> declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait','thread_main',6,'p_thread_main','sintactico2.py',229),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',234),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',235),
  ('thread_init -> thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA','thread_init',6,'p_thread_init','sintactico2.py',240),
  ('thread_wait -> thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA','thread_wait',6,'p_thread_wait','sintactico2.py',245),
  ('concurrent_method -> STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY','concurrent_method',8,'p_concurrent_method','sintactico2.py',250),
  ('concurrent_method -> WRITE','concurrent_method',1,'p_concurrent_method','sintactico2.py',251),
  ('thread_logic -> thread_sentence','thread_logic',1,'p_thread_logic','sintactico2.py',256),
  ('thread_logic -> thread_logic thread_sentence','thread_logic',2,'p_thread_logic','sintactico2.py',257),
  ('thread_sentence -> thread_expression DOTANDCOMMA','thread_sentence',2,'p_thread_sentence','sintactico2.py',262),
  ('thread_expression -> thread_identificator DOT concurrent_method LPARENT RPARENT','thread_expression',5,'p_thread_expression','sintactico2.py',267),
  ('thread_expression -> PRINT LPARENT STRING RPARENT','thread_expression',4,'p_thread_expression','sintactico2.py',268),
  ('thread_arguments -> thread_expression','thread_arguments',1,'p_thread_arguments','sintactico2.py',273),
  ('thread_arguments -> thread_arguments COMMA thread_expression','thread_arguments',3,'p_thread_arguments','sintactico2.py',274),
  ('thread_identificator -> VARIABLE','thread_identificator',1,'p_thread_identificator','sintactico2.py',279),
  ('block_if -> normal_if','block_if',1,'p_block_if','sintactico2.py',288),
  ('block_if -> all_block_code','block_if',1,'p_block_if','sintactico2.py',289),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','normal_if',8,'p_normal_if','sintactico2.py',292),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY','normal_if',7,'p_normal_if','sintactico2.py',293),
  ('other_if -> ELSE LKEY block_if RKEY','other_if',4,'p_other_if','sintactico2.py',297),
  ('other_if -> ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','other_if',8,'p_other_if','sintactico2.py',298),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico2.py',304),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico2.py',305),
  ('normal_while -> WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico2.py',309),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENT','do_while',8,'p_do_while','sintactico2.py',312),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico2.py',319),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico2.py',322),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico2.py',323),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico2.py',324),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico2.py',325),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico2.py',326),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico2.py',329),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico2.py',332),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico2.py',335),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico2.py',338),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico2.py',341),
  ('queue_struct -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA','queue_struct',8,'p_queue_struct','sintactico2.py',346),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico2.py',349),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico2.py',350),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico2.py',351),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico2.py',352),
  ('functions_queue -> queue_peek','functions_queue',1,'p_functions_queue','sintactico2.py',353),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico2.py',357),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico2.py',360),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico2.py',363),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico2.py',366),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico2.py',369),
]
