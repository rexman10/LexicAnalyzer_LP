
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC PUT RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass          : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYblock_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric\n                                | VARIABLE\n                                | value_numeric logic_operator logic_operation\n                                | VARIABLE logic_operator logic_operation\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers VARIABLE DOTANDCOMMA\n                                | VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : VARIABLE ASSIGNATION value\n                                        | VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA\n    dictionary_value         : LKEY key_value_pair RKEY\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : STRING DOUBLEPOINT valueHash\n    valueHash                : INTTYPE\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,58,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,11,28,29,30,31,66,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,98,99,101,102,109,110,111,112,117,118,119,120,121,127,129,],[4,41,72,-25,-26,-27,100,103,104,-30,-28,-29,-30,-36,-29,-28,-20,-68,-14,-15,-16,-17,-22,-23,-24,-12,-19,-21,110,-28,-35,113,114,115,116,122,-11,123,124,-68,-69,-12,-13,110,-71,-70,]),'PUBLIC':([4,9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[6,10,-30,10,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'CLASS':([6,],[7,]),'VARIABLE':([7,9,10,11,13,14,15,16,17,18,19,20,21,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,65,67,72,73,74,75,76,77,78,79,95,96,97,100,103,104,105,110,113,114,115,116,122,123,124,125,128,],[8,11,-52,-30,11,-3,-4,-5,-6,-7,-54,-55,-56,-29,66,70,-25,-26,-27,-53,-74,-75,-76,-77,-78,-79,73,76,-66,80,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,73,76,70,70,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,70,-65,-62,-64,80,-11,-61,-63,-58,-60,-10,-57,-59,126,80,]),'LKEY':([8,],[9,]),'PRINT':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[22,-30,22,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'READ':([9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,31,33,34,35,36,37,38,41,42,65,67,72,73,74,75,76,77,78,79,95,96,97,100,103,104,105,110,113,114,115,116,122,123,124,128,],[23,-30,23,-3,-4,-5,-6,-7,-54,-55,-56,-29,71,-25,-26,-27,-74,-75,-76,-77,-78,-79,-66,92,71,71,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,71,-65,-62,-64,92,-11,-61,-63,-58,-60,-10,-57,-59,92,]),'CONST':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,29,30,31,32,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[26,-52,-30,26,-3,-4,-5,-6,-7,-54,-55,-56,-29,64,-25,-26,-27,-53,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'INTEGER':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,72,73,74,75,76,77,78,79,95,96,100,103,104,105,110,113,114,115,116,122,123,124,128,],[29,-30,29,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,29,29,-66,29,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,29,29,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,29,-11,-61,-63,-58,-60,-10,-57,-59,29,]),'FLOAT_NUMBER':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,72,73,74,75,76,77,78,79,95,96,100,103,104,105,110,113,114,115,116,122,123,124,128,],[30,-30,30,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,30,30,-66,30,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,30,30,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,30,-11,-61,-63,-58,-60,-10,-57,-59,30,]),'DECIMAL_NUMBER':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,72,73,74,75,76,77,78,79,95,96,100,103,104,105,110,113,114,115,116,122,123,124,128,],[31,-30,31,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,31,31,-66,31,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,31,31,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,31,-11,-61,-63,-58,-60,-10,-57,-59,31,]),'PRIVATE':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[32,-30,32,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'CHARTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[33,-52,-30,33,-3,-4,-5,-6,-7,-54,-55,-56,-29,33,33,-25,-26,-27,-53,-66,33,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'STRINGTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[34,-52,-30,34,-3,-4,-5,-6,-7,-54,-55,-56,-29,34,34,-25,-26,-27,-53,-66,34,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'FLOATTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[35,-52,-30,35,-3,-4,-5,-6,-7,-54,-55,-56,-29,35,35,-25,-26,-27,-53,-66,35,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'DECIMALTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[36,-52,-30,36,-3,-4,-5,-6,-7,-54,-55,-56,-29,36,36,-25,-26,-27,-53,-66,36,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'INTTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[37,-52,-30,37,-3,-4,-5,-6,-7,-54,-55,-56,-29,37,37,-25,-26,-27,-53,-66,37,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'BOOLTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[38,-52,-30,38,-3,-4,-5,-6,-7,-54,-55,-56,-29,38,38,-25,-26,-27,-53,-66,38,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'RKEY':([11,12,13,14,15,16,17,18,19,20,21,24,29,30,31,41,59,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[-30,58,-8,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-9,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'PLUS':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,89,95,119,],[43,-28,43,-25,-26,-27,43,-28,43,43,43,-28,43,43,107,-28,107,]),'MINUS':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[44,-28,44,-25,-26,-27,44,-28,44,44,44,-28,44,44,-28,]),'TIMES':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[45,-28,45,-25,-26,-27,45,-28,45,45,45,-28,45,45,-28,]),'DIVIDE':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[46,-28,46,-25,-26,-27,46,-28,46,46,46,-28,46,46,-28,]),'PERCENT':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[47,-28,47,-25,-26,-27,47,-28,47,47,47,-28,47,47,-28,]),'GREATER_THAN':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[48,-28,48,-25,-26,-27,-30,-28,-29,48,48,-28,48,48,-28,]),'SMALLER_THAN':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[49,-28,49,-25,-26,-27,-30,-28,-29,49,49,-28,49,49,-28,]),'EQUAL_COMPARATION':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[50,-28,50,-25,-26,-27,-30,-28,-29,50,50,-28,50,50,-28,]),'INEQUALITY':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[51,-28,51,-25,-26,-27,-30,-28,-29,51,51,-28,51,51,-28,]),'GREATER_THAN_OR_EQUAL':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[52,-28,52,-25,-26,-27,-30,-28,-29,52,52,-28,52,52,-28,]),'SMALLER_THAN_OR_EQUAL':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[53,-28,53,-25,-26,-27,-30,-28,-29,53,53,-28,53,53,-28,]),'LOGICAND':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[54,-28,54,-25,-26,-27,-30,-28,-29,54,54,-28,54,54,-28,]),'LOGICOR':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[55,-28,55,-25,-26,-27,-30,-28,-29,55,55,-28,55,55,-28,]),'LOGICNOT':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[56,-28,56,-25,-26,-27,-30,-28,-29,56,56,-28,56,56,-28,]),'LOGICXOR':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[57,-28,57,-25,-26,-27,-30,-28,-29,57,57,-28,57,57,-28,]),'ASSIGNATION':([11,70,126,],[42,105,128,]),'LPARENT':([22,23,71,92,],[60,61,106,108,]),'COMMA':([29,30,31,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,95,96,110,117,119,120,129,],[-25,-26,-27,-30,-28,-29,-30,-36,-29,-28,-20,-14,-15,-16,-17,-22,-23,-24,-12,-19,-21,-28,-35,-11,125,-12,-13,125,]),'BOOLTRUE':([42,105,128,],[86,86,86,]),'BOOLFALSE':([42,105,128,],[87,87,87,]),'STRING':([42,60,105,107,128,],[89,93,89,119,89,]),'CHAR':([42,105,128,],[90,90,90,]),'RPARENT':([61,93,106,108,],[94,109,118,121,]),}
=======
_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYall_block_code : block_code\n                        | block_code all_block_code  \n    block_code   : def_const_or_var\n                    | estruct_of_data\n                    | block_try_catch\n                    | block_while\n                    | VARIABLE\n                    | dict_estruct\n                    | functions_dict\n                    | functions_list\n                    | declaration_lambda\n                    | block_if\n                    | print_data\n                    | block_for\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers all_asignations\n                            | all_asignations\n\n    constant_assignation : access_modifiers CONST all_asignations\n                            | CONST all_asignations\n                            | CONST data_type assignation_key_value COMMA some_assignation_constant\n    all_asignations : assignation_with_datatype\n                        | assignation_without_datatype\n    assignation_with_datatype : data_type assignation_key_value DOTANDCOMMA\n                            | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype   \n                            | data_type assignation_key_value DOTANDCOMMA assignation_without_datatype                     \n    assignation_without_datatype : assignation_key_value DOTANDCOMMA\n                                    | assignation_key_value DOTANDCOMMA assignation_without_datatype\n                                    | assignation_key_value DOTANDCOMMA assignation_with_datatype\n    some_assignation_constant : assignation_key_value DOTANDCOMMA\n                                | assignation_key_value COMMA some_assignation_constant\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    print_data       : PRINT RPARENT STRING LPARENT DOTANDCOMMA\n    read_data        : READ RPARENT LPARENT\n    value    : value_numeric\n                | value_logic\n                | value_string\n                | read_data\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_for        : for_anidado\n                        | for_each\n    for_simple       : FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY\n                        | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY\n\n    for_anidado      : for_simple\n                        | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                        | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each         : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    block_while : normal_while\n                   | do_while             \n    normal_while : WHILE LPARENT logic_operation RPARENT LKEY block_code RKEYdo_while : DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if : ELSE LKEY not_yes_nested_if RKEY\n               | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if : block_if\n                       | block_code\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    \n    dict_estruct : dict_empty\n                   | dict_full\n    \n    dict_empty : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA\n    dictionary_value : LKEY key_value_pair RKEYkey_value_pairs : key_value_pair\n                       | key_value_pair COMMA key_value_pairskey_value_pair : STRING DOUBLEPOINT valueHashvalueHash : INTTYPE\n                estruct_of_data : list_empty\n                        | list_full\n    \n    functions_dict : dict_func_put\n                    | dict_func_remove\n    \n    dict_func_put : STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA\n    \n    dict_func_remove : STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA\n    list_empty : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list : STRING\n                    | STRING COMMA strings_list\n    ints_list : INTEGER\n                | INTEGER COMMA ints_list\n    functions_list : list_func_clear\n                        | list_func_count\n                        | list_func_add\n                        | list_func_removeat\n    list_func_clear : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_assignation : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAstack_push : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAqueue_assignation : QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMAqueue_push : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_pop : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAdeclaration_async    : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,72,],[0,-1,-3,]),'PUBLIC':([2,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[5,-2,11,-10,11,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,11,11,-22,-27,-31,-32,-28,-29,11,-42,-24,11,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,11,11,11,-116,11,11,11,-65,-141,-77,-63,-60,-64,-61,11,-68,-105,-118,-119,11,-78,-106,-120,-121,-69,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,53,83,96,97,98,99,100,101,102,103,104,105,106,107,108,110,113,118,150,162,164,165,168,169,170,171,174,178,190,191,197,228,266,278,279,291,],[8,84,119,-50,-35,-44,-45,-46,-47,-55,-56,-57,-53,-54,-48,-49,-52,-83,119,175,186,188,189,-85,-86,-51,-43,-84,198,208,209,213,240,275,284,286,300,]),'VARIABLE':([7,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,47,48,49,50,51,52,55,60,62,64,65,66,67,68,69,71,78,79,81,82,84,86,88,117,119,120,121,127,129,137,153,154,155,156,157,173,175,179,183,186,187,188,189,192,198,199,208,209,213,214,217,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[9,12,-70,-10,12,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-37,-58,-59,80,80,-21,80,-40,-62,-25,-71,-26,-36,-38,-39,-41,96,80,-20,-23,80,80,12,12,-22,80,-31,-32,161,163,172,80,-28,-29,180,181,12,-42,-24,12,206,207,-130,-131,210,-33,80,-132,-133,-117,-34,231,-74,-76,-75,12,12,12,-116,12,12,12,-65,-141,-77,-63,-60,-64,-61,12,-68,-105,-118,-119,12,-78,-106,-120,-121,-69,]),'LKEY':([9,56,58,138,159,223,224,226,234,235,243,262,266,276,278,279,280,],[10,86,88,173,183,236,237,238,245,246,253,271,276,281,285,287,288,]),'ACTION':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[42,-10,42,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,42,42,-22,-27,-31,-32,-28,-29,42,-42,-24,42,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,42,42,42,-116,42,42,42,-65,-141,-77,-63,-60,-64,-61,42,-68,-105,-118,-119,42,-78,-106,-120,-121,-69,]),'IF':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[44,-10,44,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,44,44,-22,-27,-31,-32,-28,-29,44,-42,-24,44,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,44,44,44,-116,44,44,44,-65,-141,-77,-63,-60,-64,-61,44,-68,-105,-118,-119,44,-78,-106,-120,-121,-69,]),'PRINT':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[45,-10,45,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,45,45,-22,-27,-31,-32,-28,-29,45,-42,-24,45,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,45,45,45,-116,45,45,45,-65,-141,-77,-63,-60,-64,-61,45,-68,-105,-118,-119,45,-78,-106,-120,-121,-69,]),'CONST':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,51,60,62,64,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[50,-70,-10,50,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,78,-21,-62,-25,-71,-26,-20,-23,-30,50,50,-22,-27,-31,-32,-28,-29,50,-42,-24,50,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,50,50,50,-116,50,50,50,-65,-141,-77,-63,-60,-64,-61,50,-68,-105,-118,-119,50,-78,-106,-120,-121,-69,]),'LIST':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,215,216,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[54,-10,54,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,54,54,-22,-27,-31,-32,-28,-29,54,-42,-24,54,-130,-131,-33,-132,-133,-117,-34,229,230,-74,-76,-75,54,54,54,-116,54,54,54,-65,-141,-77,-63,-60,-64,-61,54,-68,-105,-118,-119,54,-78,-106,-120,-121,-69,]),'TRY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[56,-10,56,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,56,56,-22,-27,-31,-32,-28,-29,56,-42,-24,56,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,56,56,56,-116,56,56,56,-65,-141,-77,-63,-60,-64,-61,56,-68,-105,-118,-119,56,-78,-106,-120,-121,-69,]),'WHILE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,160,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[57,-10,57,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,57,57,-22,-27,-31,-32,-28,-29,184,57,-42,-24,57,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,57,57,57,-116,57,57,57,-65,-141,-77,-63,-60,-64,-61,57,-68,-105,-118,-119,57,-78,-106,-120,-121,-69,]),'DO':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[58,-10,58,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,58,58,-22,-27,-31,-32,-28,-29,58,-42,-24,58,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,58,58,58,-116,58,58,58,-65,-141,-77,-63,-60,-64,-61,58,-68,-105,-118,-119,58,-78,-106,-120,-121,-69,]),'DICTIONARY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,205,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[59,-10,59,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,59,59,-22,-27,-31,-32,-28,-29,59,-42,-24,59,-130,-131,-33,220,-132,-133,-117,-34,-74,-76,-75,59,59,59,-116,59,59,59,-65,-141,-77,-63,-60,-64,-61,59,-68,-105,-118,-119,59,-78,-106,-120,-121,-69,]),'STRING':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,71,76,79,81,84,86,88,117,119,120,121,132,134,151,152,154,155,173,175,179,183,188,189,196,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,281,284,285,286,288,292,300,301,302,303,305,],[46,-10,46,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,107,114,-20,-23,-30,46,46,-22,-27,-31,-32,166,168,176,177,-28,-29,46,-42,-24,46,-130,-131,212,-33,-132,-133,-117,-34,-74,-76,-75,46,46,46,-116,46,46,46,-65,-141,-77,-63,-60,-64,-61,46,-68,-105,290,-118,294,-119,46,-78,-106,-120,294,-121,-69,]),'FOR':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[61,-10,61,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,61,61,-22,-27,-31,-32,-28,-29,61,-42,-24,61,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,61,61,61,-116,61,61,61,-65,-141,-77,-63,-60,-64,-61,61,-68,-105,-118,-119,61,-78,-106,-120,-121,-69,]),'FOREACH':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[63,-10,63,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,63,63,-22,-27,-31,-32,-28,-29,63,-42,-24,63,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,63,63,63,-116,63,63,63,-65,-141,-77,-63,-60,-64,-61,63,-68,-105,-118,-119,63,-78,-106,-120,-121,-69,]),'PRIVATE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,79,81,84,86,88,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[64,-10,64,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-20,-23,-30,64,64,-22,-27,-31,-32,-28,-29,64,-42,-24,64,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,64,64,64,-116,64,64,64,-65,-141,-77,-63,-60,-64,-61,64,-68,-105,-118,-119,64,-78,-106,-120,-121,-69,]),'CHARTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,60,62,64,65,78,79,81,84,86,88,90,91,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[66,-70,-10,66,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,66,66,-21,-62,-25,-71,-26,66,-20,-23,66,66,66,66,66,-22,66,-31,-32,-28,-29,66,-42,-24,66,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,66,66,66,-116,66,66,66,-65,-141,-77,-63,-60,-64,-61,66,-68,-105,-118,-119,66,-78,-106,-120,-121,-69,]),'STRINGTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,60,62,64,65,74,78,79,81,84,85,86,88,90,91,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,241,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[43,-70,-10,43,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,43,43,-21,-62,-25,-71,-26,111,43,-20,-23,43,122,43,43,43,43,-22,43,-31,-32,-28,-29,43,-42,-24,43,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,43,43,43,-116,251,43,43,43,-65,-141,-77,-63,-60,-64,-61,43,-68,-105,-118,-119,43,-78,-106,-120,-121,-69,]),'FLOATTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,60,62,64,65,78,79,81,84,86,88,90,91,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[67,-70,-10,67,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,67,67,-21,-62,-25,-71,-26,67,-20,-23,67,67,67,67,67,-22,67,-31,-32,-28,-29,67,-42,-24,67,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,67,67,67,-116,67,67,67,-65,-141,-77,-63,-60,-64,-61,67,-68,-105,-118,-119,67,-78,-106,-120,-121,-69,]),'DECIMALTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,60,62,64,65,78,79,81,84,86,88,90,91,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[68,-70,-10,68,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,68,68,-21,-62,-25,-71,-26,68,-20,-23,68,68,68,68,68,-22,68,-31,-32,-28,-29,68,-42,-24,68,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,68,68,68,-116,68,68,68,-65,-141,-77,-63,-60,-64,-61,68,-68,-105,-118,-119,68,-78,-106,-120,-121,-69,]),'INTTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,60,62,64,65,78,79,81,84,85,86,88,90,91,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,242,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,299,300,301,303,305,],[55,-70,-10,55,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,55,55,-21,-62,-25,-71,-26,55,-20,-23,55,123,55,55,55,55,-22,55,-31,-32,-28,-29,55,-42,-24,55,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,55,55,55,-116,252,55,55,55,-65,-141,-77,-63,-60,-64,-61,55,-68,-105,-118,-119,55,-78,307,-106,-120,-121,-69,]),'BOOLTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,49,50,51,60,62,64,65,78,79,81,84,86,88,90,91,117,119,120,121,154,155,173,175,179,183,188,189,198,208,209,213,214,218,225,232,236,237,238,240,245,246,253,259,260,261,267,268,269,270,271,274,275,284,286,288,292,300,301,303,305,],[69,-70,-10,69,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,69,69,-21,-62,-25,-71,-26,69,-20,-23,69,69,69,69,69,-22,69,-31,-32,-28,-29,69,-42,-24,69,-130,-131,-33,-132,-133,-117,-34,-74,-76,-75,69,69,69,-116,69,69,69,-65,-141,-77,-63,-60,-64,-61,69,-68,-105,-118,-119,69,-78,-106,-120,-121,-69,]),'RKEY':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,47,48,51,60,62,65,73,79,81,84,117,119,120,121,124,126,154,155,175,179,188,189,193,194,195,198,203,208,209,213,214,218,225,232,240,247,248,249,255,256,257,258,259,260,261,265,267,268,269,270,274,275,277,282,284,286,289,292,293,294,295,296,297,298,300,301,303,305,306,307,308,309,],[-10,72,-4,-6,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-113,-66,-67,-72,-73,-103,-104,-114,-115,-126,-127,-128,-129,-58,-59,-21,-62,-25,-26,-5,-20,-23,-30,-22,-27,-31,-32,158,160,-28,-29,-42,-24,-130,-131,211,-15,-80,-33,218,-132,-133,-117,-34,-74,-76,-75,-116,259,260,261,267,268,269,270,-65,-141,-77,274,-63,-60,-64,-61,-68,-105,283,291,-118,-119,298,-78,301,-122,303,-124,305,-107,-106,-120,-121,-69,-110,-111,-123,-125,]),'DOT':([12,46,],[70,77,]),'ASSIGNATION':([12,80,161,172,180,181,],[71,71,185,192,200,201,]),'SMALLER_THAN':([42,54,59,105,106,113,220,229,230,],[74,85,89,-53,-54,141,233,241,242,]),'LPARENT':([44,57,61,63,92,93,94,95,109,114,115,116,136,182,184,227,244,263,264,],[75,87,90,91,130,131,132,133,135,150,151,152,171,202,204,239,254,272,273,]),'RPARENT':([45,105,106,109,112,113,125,130,131,135,166,167,174,177,207,212,219,221,222,231,250,254,272,273,],[76,-53,-54,136,138,-83,159,164,165,170,190,191,-84,197,223,228,232,234,235,243,262,266,278,279,]),'CLEAR':([70,],[92,]),'COUNT':([70,],[93,]),'ADD':([70,],[94,]),'REMOVEAT':([70,],[95,]),'INTEGER':([71,133,287,304,],[102,167,296,296,]),'FLOAT_NUMBER':([71,],[103,]),'DECIMAL_NUMBER':([71,],[104,]),'BOOLTRUE':([71,75,84,87,119,120,121,128,139,140,141,142,143,144,145,146,147,148,149,154,155,204,239,],[105,105,-30,105,-27,-31,-32,105,105,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-28,-29,105,105,]),'BOOLFALSE':([71,75,84,87,119,120,121,128,139,140,141,142,143,144,145,146,147,148,149,154,155,204,239,],[106,106,-30,106,-27,-31,-32,106,106,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-28,-29,106,106,]),'CHAR':([71,],[108,]),'READ':([71,],[109,]),'PUT':([77,],[115,]),'REMOVE':([77,],[116,]),'GREATER_THAN':([89,105,106,111,113,122,123,233,251,252,],[127,-53,-54,137,140,156,157,244,263,264,]),'COMMA':([96,97,98,99,100,101,102,103,104,105,106,107,108,110,118,168,169,170,171,176,178,294,296,],[-50,-35,-44,-45,-46,-47,-55,-56,-57,-53,-54,-48,-49,-52,153,-85,-86,-51,-43,196,199,302,304,]),'EQUAL_COMPARATION':([105,106,113,],[-53,-54,142,]),'INEQUALITY':([105,106,113,],[-53,-54,143,]),'GREATER_THAN_OR_EQUAL':([105,106,113,],[-53,-54,144,]),'SMALLER_THAN_OR_EQUAL':([105,106,113,],[-53,-54,145,]),'LOGICAND':([105,106,113,],[-53,-54,146,]),'LOGICOR':([105,106,113,],[-53,-54,147,]),'LOGICNOT':([105,106,113,],[-53,-54,148,]),'LOGICXOR':([105,106,113,],[-53,-54,149,]),'PLUS':([107,168,],[134,134,]),'CATCH':([158,],[182,]),'IN':([163,],[187,]),'NEW':([185,200,201,],[205,215,216,]),'EXCEPTION':([202,],[217,]),'INCREMENT':([206,],[221,]),'DECREMENT':([206,],[222,]),'ARROW':([210,],[224,]),'ELSE':([211,283,],[226,226,]),'ELSE_IF':([211,283,],[227,227,]),'FINALLY':([274,],[280,]),'DOUBLEPOINT':([290,],[299,]),}
>>>>>>> a9bcc47f761567b774c79acb9df84399095047cf

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'all_block_code':([9,13,],[12,59,]),'block_code':([9,13,],[13,13,]),'def_const_or_var':([9,13,],[14,14,]),'print_data':([9,13,],[15,15,]),'read_data':([9,13,42,105,128,],[16,16,85,85,85,]),'arithmetic_operation':([9,13,39,40,42,62,63,105,128,],[17,17,74,79,79,95,79,79,79,]),'logic_operation':([9,13,40,42,63,105,128,],[18,18,77,88,96,88,88,]),'constant_assignation':([9,13,],[19,19,]),'variable_assignation':([9,13,],[20,20,]),'late_initialization':([9,13,],[21,21,]),'value_numeric':([9,13,39,40,42,62,63,105,128,],[24,24,75,78,82,75,78,82,82,]),'access_modifiers':([9,13,],[25,25,]),'data_type':([9,13,25,26,64,],[27,27,65,67,97,]),'assignation_key_value':([9,13,27,65,67,97,],[28,28,68,98,101,111,]),'arithmetic_operator':([11,24,73,75,76,78,80,82,],[39,62,39,62,39,62,39,62,]),'logic_operator':([11,24,76,78,80,82,],[40,63,40,63,40,63,]),'assignation_key_value_multiple':([27,65,67,97,125,],[69,99,102,112,127,]),'value':([42,105,128,],[81,117,129,]),'value_logic':([42,105,128,],[83,83,83,]),'value_string':([42,105,128,],[84,84,84,]),'concatenation':([42,105,107,128,],[91,91,120,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
<<<<<<< HEAD
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico.py',47),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',50),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',53),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',54),
  ('block_code -> read_data','block_code',1,'p_block_code','sintactico.py',55),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico.py',56),
  ('block_code -> logic_operation','block_code',1,'p_block_code','sintactico.py',57),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',61),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',62),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',67),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico.py',71),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',75),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',76),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',80),
  ('value -> value_logic','value',1,'p_value','sintactico.py',81),
  ('value -> value_string','value',1,'p_value','sintactico.py',82),
  ('value -> read_data','value',1,'p_value','sintactico.py',83),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',87),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',88),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',89),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',90),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',94),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',95),
  ('value_logic -> logic_operation','value_logic',1,'p_value_logic','sintactico.py',96),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',100),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',101),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',102),
  ('value_numeric -> arithmetic_operation','value_numeric',1,'p_value_numeric','sintactico.py',103),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',108),
  ('arithmetic_operation -> VARIABLE','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',109),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',110),
  ('arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',111),
  ('logic_operation -> value_numeric','logic_operation',1,'p_logic_operation','sintactico.py',115),
  ('logic_operation -> VARIABLE','logic_operation',1,'p_logic_operation','sintactico.py',116),
  ('logic_operation -> value_numeric logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',117),
  ('logic_operation -> VARIABLE logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',118),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',122),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',123),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',124),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',125),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',126),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',127),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',128),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',129),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',130),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',131),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',135),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',136),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',137),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',138),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',139),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',144),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',145),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',149),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',150),
  ('def_const_or_var -> late_initialization','def_const_or_var',1,'p_def_const_or_var','sintactico.py',151),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',155),
  ('constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',156),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',157),
  ('constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',158),
  ('variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',162),
  ('variable_assignation -> data_type assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',163),
  ('variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',164),
  ('variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',165),
  ('late_initialization -> access_modifiers VARIABLE DOTANDCOMMA','late_initialization',3,'p_late_initialization','sintactico.py',169),
  ('late_initialization -> VARIABLE DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',170),
  ('late_initialization -> assignation_key_value DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',171),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',175),
  ('assignation_key_value -> READ LPARENT RPARENT','assignation_key_value',3,'p_assignation_key_value','sintactico.py',176),
  ('assignation_key_value_multiple -> VARIABLE ASSIGNATION value','assignation_key_value_multiple',3,'p_assignation_key_value_multiple','sintactico.py',180),
  ('assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple','assignation_key_value_multiple',5,'p_assignation_key_value_multiple','sintactico.py',181),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',185),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',186),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',190),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',191),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',192),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',193),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',194),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',195),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',201),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',202),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',206),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',207),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',212),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',213),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',214),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico.py',218),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',222),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',223),
  ('try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',227),
  ('try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',230),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',234),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',235),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',239),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',242),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',245),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',249),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',250),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',255),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',256),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',265),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',266),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',272),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',277),
  ('dictionary_value -> LKEY key_value_pair RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',281),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',285),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',286),
  ('key_value_pair -> STRING DOUBLEPOINT valueHash','key_value_pair',3,'p_key_value_pair','sintactico.py',291),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',296),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',299),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',300),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',305),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',306),
  ('dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',311),
  ('dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',316),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',322),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',323),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',327),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',328),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',332),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',333),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',337),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',338),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',342),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',343),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',344),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',345),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',349),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',352),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',355),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',358),
=======
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',47),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',50),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',53),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',57),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',58),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',62),
  ('block_code -> estruct_of_data','block_code',1,'p_block_code','sintactico.py',63),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',64),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico.py',65),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',66),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',67),
  ('block_code -> functions_dict','block_code',1,'p_block_code','sintactico.py',68),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',69),
  ('block_code -> declaration_lambda','block_code',1,'p_block_code','sintactico.py',70),
  ('block_code -> block_if','block_code',1,'p_block_code','sintactico.py',71),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',72),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico.py',73),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',79),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',80),
  ('variable_assignation -> access_modifiers all_asignations','variable_assignation',2,'p_variable_assignation','sintactico.py',84),
  ('variable_assignation -> all_asignations','variable_assignation',1,'p_variable_assignation','sintactico.py',85),
  ('constant_assignation -> access_modifiers CONST all_asignations','constant_assignation',3,'p_constant_assignation','sintactico.py',90),
  ('constant_assignation -> CONST all_asignations','constant_assignation',2,'p_constant_assignation','sintactico.py',91),
  ('constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant','constant_assignation',5,'p_constant_assignation','sintactico.py',92),
  ('all_asignations -> assignation_with_datatype','all_asignations',1,'p_all_asignations','sintactico.py',96),
  ('all_asignations -> assignation_without_datatype','all_asignations',1,'p_all_asignations','sintactico.py',97),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',101),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',102),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',103),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA','assignation_without_datatype',2,'p_assignation_without_datatype','sintactico.py',107),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',108),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',109),
  ('some_assignation_constant -> assignation_key_value DOTANDCOMMA','some_assignation_constant',2,'p_some_assignation_constant','sintactico.py',113),
  ('some_assignation_constant -> assignation_key_value COMMA some_assignation_constant','some_assignation_constant',3,'p_some_assignation_constant','sintactico.py',114),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',118),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',121),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',122),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',123),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',124),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',125),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',126),
  ('print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',134),
  ('read_data -> READ RPARENT LPARENT','read_data',3,'p_read_data','sintactico.py',138),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',142),
  ('value -> value_logic','value',1,'p_value','sintactico.py',143),
  ('value -> value_string','value',1,'p_value','sintactico.py',144),
  ('value -> read_data','value',1,'p_value','sintactico.py',145),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',149),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',150),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',151),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',152),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',153),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',157),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',158),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',162),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',163),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',164),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',173),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',174),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',178),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',179),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',184),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',185),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',186),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY','for_each',10,'p_for_each','sintactico.py',190),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',194),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',195),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',199),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',202),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',206),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',207),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',211),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',212),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',216),
  ('do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',219),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',222),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',226),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',227),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',232),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',233),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',239),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',240),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',244),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',245),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',249),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',250),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',254),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',255),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',256),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',257),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',258),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',259),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',260),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',261),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',262),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',263),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',267),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',268),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',269),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',270),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',271),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',275),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',284),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',285),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',291),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',296),
  ('dictionary_value -> LKEY key_value_pair RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',300),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',303),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',304),
  ('key_value_pair -> STRING DOUBLEPOINT valueHash','key_value_pair',3,'p_key_value_pair','sintactico.py',308),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',312),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',315),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',316),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',321),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',322),
  ('dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',327),
  ('dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',332),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',338),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',339),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',343),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',344),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',348),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',349),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',353),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',354),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',358),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',359),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',360),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',361),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',365),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',368),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',371),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',374),
  ('stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_assignation',8,'p_stack_assignation','sintactico.py',377),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico.py',380),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico.py',383),
  ('queue_assignation -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA','queue_assignation',8,'p_queue_assignation','sintactico.py',386),
  ('queue_push -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_push',7,'p_queue_enqueue','sintactico.py',389),
  ('queue_pop -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_pop',6,'p_queue_dequeue','sintactico.py',392),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',399),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',403),
>>>>>>> a9bcc47f761567b774c79acb9df84399095047cf
]
