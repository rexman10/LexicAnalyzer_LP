
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADDITION_ASSIGNMENT ASSIGNATION BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DICTIONARY DIVIDE DIVISION_ASSIGNMENT DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC RBRACKET READ REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYall_block_code : block_code\n                        | block_code all_block_code  \n    block_code : def_const_or_var\n                    | estruct_of_data\n                    | block_try_catch\n                    | VARIABLE\n                    | declaration_dict\n                    | functions_list\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers all_asignations\n                            | all_asignations\n\n    constant_assignation : access_modifiers CONST all_asignations\n                            | CONST all_asignations\n                            | CONST data_type assignation_key_value COMMA some_assignation_constant\n    all_asignations : assignation_with_datatype\n                        | assignation_without_datatype\n    assignation_with_datatype : data_type assignation_key_value DOTANDCOMMA\n                            | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype   \n                            | data_type assignation_key_value DOTANDCOMMA assignation_without_datatype                     \n    assignation_without_datatype : assignation_key_value DOTANDCOMMA\n                                    | assignation_key_value DOTANDCOMMA assignation_without_datatype\n                                    | assignation_key_value DOTANDCOMMA assignation_with_datatype\n    some_assignation_constant : assignation_key_value DOTANDCOMMA\n                                | assignation_key_value COMMA some_assignation_constant\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    value    : value_numeric\n                | value_logic\n                | value_string\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    declaration_dict : DICTIONARY VARIABLE ASSIGNATION dictionary_valuedictionary_value : LKEY key_value_pairs RKEYkey_value_pairs : key_value_pair\n                       | key_value_pair COMMA key_value_pairskey_value_pair : STRING DOUBLEPOINT valuevalueHash : INTTYPE\n             | STRINGestruct_of_data : list_empty\n                        | list_full\n    list_empty : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list : STRING\n                    | STRING COMMA strings_list\n    ints_list : INTEGER\n                | INTEGER COMMA ints_list\n    functions_list : list_func_clear\n                        | list_func_count\n                        | list_func_add\n                        | list_func_removeat\n    list_func_clear : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,49,],[0,-1,-3,]),'PUBLIC':([2,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,41,42,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[5,-2,11,-9,11,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,-15,-19,-20,-14,-17,-24,11,-16,-21,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,11,-51,-86,-87,11,-88,-89,-52,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,35,57,65,66,67,68,69,70,71,72,73,74,75,76,78,81,102,103,106,107,108,112,119,120,152,153,],[8,58,82,-41,-29,-36,-37,-38,-46,-47,-48,-44,-45,-39,-40,-43,82,117,118,-59,-60,-42,124,129,130,155,157,]),'VARIABLE':([7,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,48,52,53,55,56,58,60,80,82,83,84,94,96,97,98,99,100,113,117,118,121,123,124,125,129,130,133,136,145,151,155,157,159,165,167,169,],[9,12,-53,-9,12,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,51,-94,-95,-96,-97,54,54,-15,54,-31,-34,-54,-19,-20,-30,-32,-33,-35,65,54,-14,-17,54,54,12,-16,54,-25,-26,-77,54,-22,-23,114,115,-18,-98,-99,-78,65,-27,54,-100,-101,-28,139,12,-51,-86,-87,12,-88,-89,-52,]),'LKEY':([9,39,79,142,152,153,154,],[10,60,95,145,156,158,159,]),'DICTIONARY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,41,42,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[26,-9,26,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,-15,-19,-20,-14,-17,-24,26,-16,-21,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,26,-51,-86,-87,26,-88,-89,-52,]),'CONST':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,40,41,42,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[32,-53,-9,32,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,52,-15,-54,-19,-20,-14,-17,-24,32,-16,-21,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,32,-51,-86,-87,32,-88,-89,-52,]),'LIST':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,41,42,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,134,135,145,151,155,157,159,165,167,169,],[36,-9,36,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,-15,-19,-20,-14,-17,-24,36,-16,-21,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,137,138,36,-51,-86,-87,36,-88,-89,-52,]),'TRY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,41,42,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[39,-9,39,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,-15,-19,-20,-14,-17,-24,39,-16,-21,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,39,-51,-86,-87,39,-88,-89,-52,]),'PRIVATE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,41,42,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[40,-9,40,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,-15,-19,-20,-14,-17,-24,40,-16,-21,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,40,-51,-86,-87,40,-88,-89,-52,]),'CHARTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,40,41,42,52,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[43,-53,-9,43,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,43,43,-15,-54,-19,-20,43,-14,-17,43,43,-16,43,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,43,-51,-86,-87,43,-88,-89,-52,]),'STRINGTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,40,41,42,52,53,55,58,59,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,140,145,151,155,157,159,165,167,169,],[37,-53,-9,37,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,37,37,-15,-54,-19,-20,37,-14,-17,37,85,37,-16,37,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,143,37,-51,-86,-87,37,-88,-89,-52,]),'FLOATTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,40,41,42,52,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[44,-53,-9,44,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,44,44,-15,-54,-19,-20,44,-14,-17,44,44,-16,44,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,44,-51,-86,-87,44,-88,-89,-52,]),'DECIMALTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,40,41,42,52,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[45,-53,-9,45,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,45,45,-15,-54,-19,-20,45,-14,-17,45,45,-16,45,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,45,-51,-86,-87,45,-88,-89,-52,]),'INTTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,40,41,42,52,53,55,58,59,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,141,145,151,155,157,159,165,167,169,],[38,-53,-9,38,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,38,38,-15,-54,-19,-20,38,-14,-17,38,86,38,-16,38,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,144,38,-51,-86,-87,38,-88,-89,-52,]),'BOOLTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,40,41,42,52,53,55,58,60,80,82,83,84,94,97,98,113,117,118,121,124,129,130,133,145,151,155,157,159,165,167,169,],[46,-53,-9,46,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,46,46,-15,-54,-19,-20,46,-14,-17,46,46,-16,46,-25,-26,-77,-22,-23,-18,-98,-99,-78,-27,-100,-101,-28,46,-51,-86,-87,46,-88,-89,-52,]),'RKEY':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,33,41,42,50,53,55,58,65,67,68,69,70,71,72,73,74,75,76,78,80,82,83,84,87,94,97,98,106,107,108,109,110,113,117,118,121,124,129,130,131,132,133,148,151,155,157,160,161,162,163,164,165,167,169,170,171,],[-9,49,-4,-6,-7,-8,-10,-11,-12,-13,-84,-85,-49,-50,-94,-95,-96,-97,-15,-19,-20,-5,-14,-17,-24,-41,-36,-37,-38,-46,-47,-48,-44,-45,-39,-40,-43,-16,-21,-25,-26,101,-77,-22,-23,-59,-60,-42,121,-79,-18,-98,-99,-78,-27,-100,-101,-80,-81,-28,151,-51,-86,-87,165,-90,167,-92,169,-88,-89,-52,-91,-93,]),'DOT':([12,],[47,]),'ASSIGNATION':([12,51,54,114,115,],[48,79,48,126,127,]),'SMALLER_THAN':([36,137,138,],[59,140,141,]),'CLEAR':([47,],[61,]),'COUNT':([47,],[62,]),'ADD':([47,],[63,]),'REMOVEAT':([47,],[64,]),'INTEGER':([48,91,123,158,168,],[70,105,70,163,163,]),'FLOAT_NUMBER':([48,123,],[71,71,]),'DECIMAL_NUMBER':([48,123,],[72,72,]),'BOOLTRUE':([48,123,],[73,73,]),'BOOLFALSE':([48,123,],[74,74,]),'STRING':([48,90,92,95,122,123,156,166,],[75,104,106,111,111,75,161,161,]),'CHAR':([48,123,],[76,76,]),'READ':([48,123,],[77,77,]),'LPARENT':([61,62,63,64,77,116,146,147,],[88,89,90,91,93,128,149,150,]),'COMMA':([65,66,67,68,69,70,71,72,73,74,75,76,78,81,106,107,108,110,112,132,161,163,],[-41,-29,-36,-37,-38,-46,-47,-48,-44,-45,-39,-40,-43,96,-59,-60,-42,122,125,-81,166,168,]),'PLUS':([75,106,],[92,92,]),'GREATER_THAN':([85,86,143,144,],[99,100,146,147,]),'RPARENT':([88,89,93,104,105,139,149,150,],[102,103,108,119,120,142,152,153,]),'CATCH':([101,],[116,]),'DOUBLEPOINT':([111,],[123,]),'NEW':([126,127,],[134,135,]),'EXCEPTION':([128,],[136,]),'FINALLY':([151,],[154,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_using':([0,],[2,]),'block_publicClass':([2,],[4,]),'all_block_code':([10,14,],[13,50,]),'block_code':([10,14,60,145,159,],[14,14,87,148,164,]),'def_const_or_var':([10,14,60,145,159,],[15,15,15,15,15,]),'estruct_of_data':([10,14,60,145,159,],[16,16,16,16,16,]),'block_try_catch':([10,14,60,145,159,],[17,17,17,17,17,]),'declaration_dict':([10,14,60,145,159,],[18,18,18,18,18,]),'functions_list':([10,14,60,145,159,],[19,19,19,19,19,]),'constant_assignation':([10,14,60,145,159,],[20,20,20,20,20,]),'variable_assignation':([10,14,60,145,159,],[21,21,21,21,21,]),'list_empty':([10,14,60,145,159,],[22,22,22,22,22,]),'list_full':([10,14,60,145,159,],[23,23,23,23,23,]),'try_catch_simply':([10,14,60,145,159,],[24,24,24,24,24,]),'try_catch_finally':([10,14,60,145,159,],[25,25,25,25,25,]),'list_func_clear':([10,14,60,145,159,],[27,27,27,27,27,]),'list_func_count':([10,14,60,145,159,],[28,28,28,28,28,]),'list_func_add':([10,14,60,145,159,],[29,29,29,29,29,]),'list_func_removeat':([10,14,60,145,159,],[30,30,30,30,30,]),'access_modifiers':([10,14,60,145,159,],[31,31,31,31,31,]),'all_asignations':([10,14,31,32,52,60,145,159,],[33,33,53,55,80,33,33,33,]),'data_type':([10,14,31,32,52,58,60,82,145,159,],[34,34,34,56,34,34,34,34,34,34,]),'assignation_key_value':([10,14,31,32,34,52,56,58,60,82,96,125,145,159,],[35,35,35,35,57,35,81,35,35,35,112,112,35,35,]),'assignation_with_datatype':([10,14,31,32,52,58,60,82,145,159,],[41,41,41,41,41,84,41,97,41,41,]),'assignation_without_datatype':([10,14,31,32,52,58,60,82,145,159,],[42,42,42,42,42,83,42,98,42,42,]),'value':([48,123,],[66,132,]),'value_numeric':([48,123,],[67,67,]),'value_logic':([48,123,],[68,68,]),'value_string':([48,123,],[69,69,]),'concatenation':([48,92,123,],[78,107,78,]),'dictionary_value':([79,],[94,]),'key_value_pairs':([95,122,],[109,131,]),'key_value_pair':([95,122,],[110,110,]),'some_assignation_constant':([96,125,],[113,133,]),'strings_list':([156,166,],[160,170,]),'ints_list':([158,168,],[162,171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',37),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',40),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',43),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',47),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',48),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',52),
  ('block_code -> estruct_of_data','block_code',1,'p_block_code','sintactico.py',53),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',54),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',55),
  ('block_code -> declaration_dict','block_code',1,'p_block_code','sintactico.py',56),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',57),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',63),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',64),
  ('variable_assignation -> access_modifiers all_asignations','variable_assignation',2,'p_variable_assignation','sintactico.py',68),
  ('variable_assignation -> all_asignations','variable_assignation',1,'p_variable_assignation','sintactico.py',69),
  ('constant_assignation -> access_modifiers CONST all_asignations','constant_assignation',3,'p_constant_assignation','sintactico.py',74),
  ('constant_assignation -> CONST all_asignations','constant_assignation',2,'p_constant_assignation','sintactico.py',75),
  ('constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant','constant_assignation',5,'p_constant_assignation','sintactico.py',76),
  ('all_asignations -> assignation_with_datatype','all_asignations',1,'p_all_asignations','sintactico.py',80),
  ('all_asignations -> assignation_without_datatype','all_asignations',1,'p_all_asignations','sintactico.py',81),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',85),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',86),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',87),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA','assignation_without_datatype',2,'p_assignation_without_datatype','sintactico.py',91),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',92),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',93),
  ('some_assignation_constant -> assignation_key_value DOTANDCOMMA','some_assignation_constant',2,'p_some_assignation_constant','sintactico.py',97),
  ('some_assignation_constant -> assignation_key_value COMMA some_assignation_constant','some_assignation_constant',3,'p_some_assignation_constant','sintactico.py',98),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',102),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',105),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',106),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',107),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',108),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',109),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',110),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',119),
  ('value -> value_logic','value',1,'p_value','sintactico.py',120),
  ('value -> value_string','value',1,'p_value','sintactico.py',121),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',125),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',126),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',127),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',128),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',129),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',133),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',134),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',138),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',139),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',140),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',149),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',150),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',154),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',157),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',161),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',162),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',172),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',173),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',177),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',178),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',182),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',183),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',187),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',188),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',189),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',190),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',191),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',192),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',193),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',194),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',195),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',196),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',200),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',201),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',202),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',203),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',204),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',208),
  ('declaration_dict -> DICTIONARY VARIABLE ASSIGNATION dictionary_value','declaration_dict',4,'p_declaration_dict','sintactico.py',216),
  ('dictionary_value -> LKEY key_value_pairs RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',219),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',222),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',223),
  ('key_value_pair -> STRING DOUBLEPOINT value','key_value_pair',3,'p_key_value_pair','sintactico.py',226),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',230),
  ('valueHash -> STRING','valueHash',1,'p_valueHash','sintactico.py',231),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',236),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',237),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',241),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',242),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',246),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',247),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',251),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',252),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',256),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',257),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',261),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',262),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',263),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',264),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',268),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',271),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',274),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',277),
]
