
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE ENUM EQUAL_COMPARATION ERROR EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JOIN JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK START STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK THREAD TIMES TRY USING VARIABLE VOID WHILE WRITEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_code               : def_const_or_var\n                                | print_data\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n                                | thread_main\n                                | concurrent_method\n                                | method_definition\n\n                                | block_try_catch\n\n                                | lists\n                                | functions_list\n                                \n                                | statement_lambda\n\n                                | enums\n                                | normal_if\n\n                                | block_for\n\n                                | block_while\n\n                                | stack_struct\n                                | functions_stack\n\n                                | queue_struct\n                                | functions_queue\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n                                | array_type\n                                | METHOD\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    array_assignation        : CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA\n                                | STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA\n                                | FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA\n                                | DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA\n                                | INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA\n                                | BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA\n    char_array_assignation     : VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKETchar_content_multiple    : CHAR\n                                | CHAR COMMA char_content_multiple\n    string_array_assignation   : VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKETstring_content_multiple  : STRING\n                                | STRING COMMA string_content_multiple\n    float_array_assignation    : VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKETfloat_content_multiple   : FLOAT_NUMBER\n                                | FLOAT_NUMBER COMMA float_content_multiple\n    int_array_assignation      : VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKETint_content_multiple     : INTEGER\n                                | INTEGER COMMA int_content_multiple\n    decimal_array_assignation  : VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKETdecimal_content_multiple : DECIMAL_NUMBER\n                                | DECIMAL_NUMBER COMMA decimal_content_multiple\n    bool_array_assignation     : VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKETbool_content_multiple    : BOOLTRUE\n                                | BOOLFALSE\n                                | BOOLTRUE COMMA bool_content_multiple\n                                | BOOLFALSE COMMA bool_content_multiple\n    array                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n                                | array\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n    constant_assignation     : access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA\n                                | CONST assignation_type_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers assignation_type_value_multiple DOTANDCOMMA\n                                | assignation_type_value_multiple DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_type_value   : INTTYPE assignation_int\n                                | STRINGTYPE assignation_string\n                                | FLOATTYPE assignation_float\n                                | BOOLTYPE assignation_true\n                                | BOOLTYPE assignation_false\n    assignation_int          : VARIABLE ASSIGNATION INTEGER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_string       : VARIABLE ASSIGNATION STRING\n                                | VARIABLE ASSIGNATION VARIABLE\n    assignation_float        : VARIABLE ASSIGNATION FLOAT_NUMBER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_true         : VARIABLE ASSIGNATION BOOLTRUE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_false        : VARIABLE ASSIGNATION BOOLFALSE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_type_value_multiple          : INTTYPE assignation_int_multiple\n                                                | STRINGTYPE assignation_string_multiple\n                                                | FLOATTYPE assignation_float_multiple\n                                                | BOOLTYPE assignation_true_multiple\n                                                | BOOLTYPE assignation_false_multiple\n    assignation_int_multiple                 : assignation_int\n                                                | assignation_int COMMA assignation_int_multiple\n    assignation_string_multiple              : assignation_string\n                                                | assignation_string COMMA assignation_string_multiple\n    assignation_float_multiple               : assignation_float\n                                                | assignation_float COMMA assignation_float_multiple\n    assignation_true_multiple                : assignation_true\n                                                | assignation_true COMMA assignation_true_multiple\n    assignation_false_multiple               : assignation_false\n                                                | assignation_false COMMA assignation_false_multiple\n    method_definition        : access_modifiers STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY\n                                | STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY\n\n                                | access_modifiers STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT RPARENT LKEY RKEY\n                                | STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY\n                                | STATIC VOID METHOD LPARENT RPARENT LKEY RKEY\n\n                                | data_type METHOD LPARENT func_parameters RPARENT LKEY block_code RETURN VARIABLE DOTANDCOMMA RKEY\n    func_parameter           : data_type VARIABLEfunc_parameters          : func_parameter\n                                | func_parameter COMMA func_parameters\n    \n    thread_main                 : declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait\n    \n    declaration_thread          : THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA\n                                | THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA\n    \n    thread_init                 : thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA\n    \n    thread_wait                 : thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA\n    \n    concurrent_method           : STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY\n                                | WRITE\n    \n    thread_logic                : thread_sentence\n                                | thread_logic thread_sentence\n    \n    thread_sentence             : thread_expression DOTANDCOMMA\n    \n    thread_expression           : thread_identificator DOT concurrent_method LPARENT RPARENT\n                                | PRINT LPARENT STRING RPARENT\n    \n    thread_arguments            : thread_expression\n                                | thread_arguments COMMA thread_expression\n    \n    thread_identificator        : VARIABLE\n    statement_lambda           : LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENTenums                      : ENUM METHOD LKEY list_enums RKEYlist_enums               : METHOD\n                                | METHOD COMMA list_enums \n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEYtry_catch_finally          : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEYblock_code_try           : def_const_or_var\n                                | print_data\n    all_block_code_try       : block_code_try\n                                | block_code_try all_block_code_try        \n    block_if                 : normal_if\n                                | all_block_code\n    normal_if                : IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n                                | IF LPARENT boolean_operation RPARENT LKEY block_if RKEY \n    other_if                 : ELSE LKEY block_if RKEY\n                                | ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n    block_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENTblock_for                : for_simple\n                                | for_each\n    for_simple               : FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add            : VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA\n                                | VARIABLE DOT ADD LPARENT VARIABLE RPARENT DOTANDCOMMA\n    list_func_removeat       : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA\n    stack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct               : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMAfunctions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n                                | queue_peek\n    queue_enqueue              : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_dequeue              : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAqueue_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAqueue_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAqueue_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,12,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,88,109,110,119,120,124,125,128,129,130,131,136,146,200,205,207,208,209,210,211,212,213,214,240,242,243,244,257,258,259,261,263,264,265,266,267,268,270,272,273,274,275,276,278,280,282,283,284,285,300,315,329,330,335,337,338,339,340,341,342,343,344,347,348,349,351,383,384,385,403,404,407,408,409,410,411,419,423,427,428,429,430,450,457,473,474,475,476,491,498,517,518,520,522,524,526,528,530,545,546,556,565,567,569,582,586,598,613,622,623,627,639,641,],[4,147,-144,-150,-145,-152,-143,-148,-146,-147,-154,-156,201,217,290,-111,-38,-39,-40,-41,-103,-42,-43,-44,325,-151,-133,-132,352,353,354,356,-153,-45,-43,-136,-96,364,366,-149,-45,-42,-131,368,-155,-157,-40,-38,-139,-39,-112,392,405,406,-40,-90,-91,-92,-94,-95,-35,-36,-37,416,417,418,420,-113,-104,-45,466,467,468,469,470,471,472,478,-97,-40,-139,-40,-142,506,513,-49,-50,520,-83,534,543,557,-66,-48,-63,-69,-75,-72,-78,573,574,583,585,587,588,-181,600,-180,620,628,630,633,644,646,]),'PUBLIC':([4,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,150,155,201,217,220,221,222,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[6,90,90,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,90,-121,90,90,-120,-119,90,-193,-194,90,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,90,90,-226,-227,-239,-241,-242,-250,-170,90,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,90,-206,-159,90,-164,-174,-211,-160,-162,-166,-201,90,90,-158,90,-243,-209,-210,-214,-215,-202,-191,-216,-217,90,-192,]),'CLASS':([6,],[7,]),'VARIABLE':([7,18,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,55,57,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,89,92,99,101,102,103,104,105,106,112,114,116,133,137,138,139,140,143,147,154,155,166,167,168,184,185,186,187,188,189,190,191,192,193,194,195,196,201,206,217,226,227,233,234,235,236,237,238,239,245,246,249,251,255,286,290,291,297,298,299,301,302,303,304,305,306,307,309,313,314,325,327,328,346,352,353,354,356,358,359,360,361,362,363,364,366,368,370,371,372,381,382,392,393,394,396,405,406,416,417,418,420,431,438,442,446,453,455,456,460,462,463,466,467,468,469,470,471,472,477,478,497,506,508,511,512,513,515,516,534,536,538,539,540,543,547,552,553,566,568,570,571,573,574,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[8,19,25,107,111,25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,121,126,132,-176,-34,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,144,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,149,-33,149,-27,-28,-29,-30,-31,-32,169,25,183,149,126,111,121,132,209,-121,209,25,241,111,243,260,262,121,264,269,271,126,273,277,279,281,282,149,-120,209,-119,126,316,-51,-52,-53,-54,-55,-56,25,-86,-87,331,335,335,149,-118,377,209,-114,-115,385,-105,-106,-107,-108,-109,-110,387,390,391,-58,335,335,335,-46,-47,-57,-59,385,-98,-99,-100,-101,-102,-60,-61,-62,427,429,149,-186,25,385,451,25,149,-226,-227,-239,-241,-242,-250,-170,25,-18,149,209,149,-177,-165,517,-185,-88,-89,-230,-228,-229,-231,-238,335,-249,-200,551,-205,-175,-178,-179,-161,556,-173,567,-163,569,-199,-232,149,25,-206,586,-159,25,209,-171,-172,-164,-174,-211,-160,-162,-166,-201,25,25,-158,25,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'LKEY':([8,20,93,98,142,165,296,317,319,321,323,378,397,399,435,437,492,494,507,541,575,595,596,604,622,623,643,],[9,21,150,155,203,239,382,394,396,398,400,438,459,461,493,495,535,537,552,570,592,609,610,612,629,631,648,]),'STATIC':([9,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,90,91,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,446,460,463,466,467,468,469,470,471,472,478,497,508,510,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[11,22,22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,134,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,-122,-123,22,-121,22,-120,-119,22,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,22,22,-226,-227,-239,-241,-242,-250,-170,22,-18,502,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,502,-175,-161,-163,-199,-232,22,-206,-159,22,-164,-174,-211,-160,-162,-166,-201,22,22,-158,22,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'RKEY':([10,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,115,147,181,201,217,219,220,221,222,229,245,246,290,294,295,312,324,325,352,353,354,356,364,366,368,381,398,405,406,416,417,418,420,431,440,441,442,443,452,455,456,459,460,463,466,467,468,469,470,471,472,478,495,497,508,511,512,513,515,537,538,540,543,553,557,568,580,583,584,585,587,588,589,597,599,600,601,602,603,611,617,618,619,620,624,625,628,630,632,633,634,635,636,637,638,644,645,646,647,649,650,],[12,114,-25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,-3,-26,-121,-4,-120,-119,311,-195,-193,-194,318,-86,-87,-118,-187,381,-196,401,-58,-46,-47,-57,-59,-60,-61,-62,-186,460,-226,-227,-239,-241,-242,-250,-170,-188,497,-18,-198,508,511,-177,515,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,538,-200,-205,-175,-178,-179,-161,568,-163,-199,-232,-206,584,-159,597,599,-164,-174,601,602,603,-211,-160,611,-162,-166,-201,-158,624,625,626,-243,-209,-210,-214,-215,-202,638,639,-218,641,-220,-191,-216,-219,-217,-221,650,-192,]),'VOID':([11,22,134,502,],[13,99,199,547,]),'MAIN':([13,],[14,]),'LPARENT':([14,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,57,61,62,63,64,65,66,67,68,70,71,72,73,74,76,77,78,79,80,82,83,84,85,86,95,96,97,114,141,147,149,155,156,157,158,171,172,173,174,175,176,177,178,179,180,201,217,239,245,246,288,289,290,325,345,352,353,354,356,364,366,368,374,381,382,386,388,389,394,395,405,406,416,417,418,420,431,438,442,458,460,463,466,467,468,469,470,471,472,478,490,497,508,511,515,538,540,542,543,552,553,554,568,570,584,585,591,597,599,601,602,603,606,607,608,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[15,23,23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,116,-176,-189,-190,-212,-213,-222,-223,-224,-225,143,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,152,153,154,23,202,-121,-184,23,230,231,232,247,248,249,250,251,252,253,254,255,256,-120,-119,23,-86,-87,375,376,-118,-58,413,-46,-47,-57,-59,-60,-61,-62,433,-186,23,444,446,447,23,453,-226,-227,-239,-241,-242,-250,-170,23,-18,514,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,533,-200,-205,-175,-161,-163,-199,571,-232,23,-206,581,-159,23,-164,-174,605,-211,-160,-162,-166,-201,614,615,616,23,23,-158,23,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'STRINGTYPE':([15,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,90,91,114,134,135,145,147,150,151,153,155,201,202,217,220,221,222,223,231,232,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,576,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[16,24,102,24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,138,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,138,-122,-123,24,102,138,102,-121,138,224,102,24,-120,102,-119,138,-193,-194,138,102,102,24,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,102,102,102,-186,24,24,-226,-227,-239,-241,-242,-250,-170,24,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,24,-206,-159,24,593,-164,-174,-211,-160,-162,-166,-201,24,24,-158,24,-243,-209,-210,-214,-215,-202,-191,-216,-217,138,-192,]),'LBRACKET':([16,24,25,51,52,53,54,55,101,102,103,104,105,106,251,255,326,327,328,346,355,357,365,367,369,477,],[17,108,112,117,118,122,123,127,159,160,161,162,163,164,346,346,402,346,346,346,421,422,424,425,426,346,]),'RBRACKET':([17,108,117,118,122,123,127,159,160,161,162,163,164,169,170,207,208,210,211,212,213,214,335,337,338,339,340,341,342,343,344,384,385,414,415,464,465,473,474,476,479,480,481,482,483,484,485,486,487,488,489,520,521,558,559,560,561,562,563,564,],[18,166,184,185,188,189,192,233,234,235,236,237,238,245,246,-38,-39,-41,-103,-42,-43,-44,-40,-90,-91,-92,-94,-95,-35,-36,-37,-104,-45,476,-84,518,-67,-49,-50,-83,522,-64,524,-70,526,-76,528,-73,530,-79,-80,-48,-85,-68,-65,-71,-77,-74,-81,-82,]),'RPARENT':([19,57,149,182,183,204,205,207,208,209,210,211,212,213,214,228,230,231,232,247,248,252,253,254,256,292,293,300,320,322,331,332,333,334,335,336,337,338,339,340,341,342,343,344,350,375,376,377,383,384,385,401,413,433,434,436,439,444,451,473,474,476,500,501,509,511,520,533,548,555,578,579,581,590,605,615,616,621,],[20,-176,-184,257,258,296,-111,-38,-39,-40,-41,-103,-42,-43,-44,317,319,321,323,329,330,347,348,349,351,378,-168,-112,397,399,407,408,409,410,-40,411,-90,-91,-92,-94,-95,-35,-36,-37,419,435,437,-167,-113,-104,-45,463,475,491,492,494,-169,498,507,-49,-50,-83,545,546,553,-175,-48,565,575,582,595,596,598,604,613,622,623,627,]),'PRINT':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,150,155,201,217,220,221,222,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,396,405,406,416,417,418,420,431,438,442,455,456,460,463,466,467,468,469,470,471,472,478,497,508,511,512,513,515,538,540,543,552,553,568,570,584,585,592,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[50,50,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,50,-121,50,50,-120,-119,50,-193,-194,50,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,50,50,458,-226,-227,-239,-241,-242,-250,-170,50,-18,458,-177,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-178,-179,-161,-163,-199,-232,50,-206,-159,50,-164,-174,606,-211,-160,-162,-166,-201,50,50,-158,50,-243,-209,-210,-214,-215,-202,-191,-216,-217,50,-192,]),'CHARTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,134,145,147,153,155,201,202,217,231,232,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[51,101,51,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,51,101,101,-121,101,51,-120,101,-119,101,101,51,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,101,101,101,-186,51,51,-226,-227,-239,-241,-242,-250,-170,51,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,51,-206,-159,51,-164,-174,-211,-160,-162,-166,-201,51,51,-158,51,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'FLOATTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,90,91,114,134,135,145,147,150,153,155,201,202,217,220,221,222,223,231,232,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[52,103,52,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,139,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,139,-122,-123,52,103,139,103,-121,139,103,52,-120,103,-119,139,-193,-194,139,103,103,52,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,103,103,103,-186,52,52,-226,-227,-239,-241,-242,-250,-170,52,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,52,-206,-159,52,-164,-174,-211,-160,-162,-166,-201,52,52,-158,52,-243,-209,-210,-214,-215,-202,-191,-216,-217,139,-192,]),'DECIMALTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,134,145,147,153,155,201,202,217,231,232,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[53,104,53,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,53,104,104,-121,104,53,-120,104,-119,104,104,53,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,104,104,104,-186,53,53,-226,-227,-239,-241,-242,-250,-170,53,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,53,-206,-159,53,-164,-174,-211,-160,-162,-166,-201,53,53,-158,53,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'INTTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,90,91,114,134,135,145,147,150,151,152,153,155,201,202,217,220,221,222,223,231,232,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,577,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[54,105,54,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,137,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,137,-122,-123,54,105,137,105,-121,137,225,226,105,54,-120,105,-119,137,-193,-194,137,105,105,54,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,105,105,105,-186,54,54,-226,-227,-239,-241,-242,-250,-170,54,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,54,-206,-159,54,594,-164,-174,-211,-160,-162,-166,-201,54,54,-158,54,-243,-209,-210,-214,-215,-202,-191,-216,-217,137,-192,]),'BOOLTYPE':([21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,87,90,91,114,134,135,145,147,150,153,155,201,202,217,220,221,222,223,231,232,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[55,106,55,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,140,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,140,-122,-123,55,106,140,106,-121,140,106,55,-120,106,-119,140,-193,-194,140,106,106,55,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,106,106,106,-186,55,55,-226,-227,-239,-241,-242,-250,-170,55,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,55,-206,-159,55,-164,-174,-211,-160,-162,-166,-201,55,55,-158,55,-243,-209,-210,-214,-215,-202,-191,-216,-217,140,-192,]),'WRITE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,446,460,463,466,467,468,469,470,471,472,478,497,508,510,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[57,57,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,57,-121,57,-120,-119,57,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,57,57,-226,-227,-239,-241,-242,-250,-170,57,-18,57,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,57,-175,-161,-163,-199,-232,57,-206,-159,57,-164,-174,-211,-160,-162,-166,-201,57,57,-158,57,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'ENUM':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[69,69,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,69,-121,69,-120,-119,69,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,69,69,-226,-227,-239,-241,-242,-250,-170,69,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,69,-206,-159,69,-164,-174,-211,-160,-162,-166,-201,69,69,-158,69,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'IF':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[70,70,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,70,-121,70,-120,-119,70,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,70,70,-226,-227,-239,-241,-242,-250,-170,70,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,70,-206,-159,70,-164,-174,-211,-160,-162,-166,-201,70,70,-158,70,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'STACK':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,308,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[75,75,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,75,-121,75,-120,-119,75,-86,-87,-118,386,-58,-46,-47,-57,-59,-60,-61,-62,-186,75,75,-226,-227,-239,-241,-242,-250,-170,75,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,75,-206,-159,75,-164,-174,-211,-160,-162,-166,-201,75,75,-158,75,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'QUEUE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,499,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[81,81,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,81,-121,81,-120,-119,81,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,81,81,-226,-227,-239,-241,-242,-250,-170,81,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,544,-205,-175,-161,-163,-199,-232,81,-206,-159,81,-164,-174,-211,-160,-162,-166,-201,81,81,-158,81,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'CONST':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,58,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,90,91,114,147,150,155,201,217,220,221,222,223,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[87,87,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,135,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,-122,-123,87,-121,87,87,-120,-119,87,-193,-194,135,87,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,87,87,-226,-227,-239,-241,-242,-250,-170,87,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,87,-206,-159,87,-164,-174,-211,-160,-162,-166,-201,87,87,-158,87,-243,-209,-210,-214,-215,-202,-191,-216,-217,87,-192,]),'THREAD':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,310,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,573,574,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[89,89,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,89,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,89,-121,89,-120,-119,89,-86,-87,-118,388,-58,-46,-47,-57,-59,-60,-61,-62,-186,89,89,-226,-227,-239,-241,-242,-250,-170,89,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,89,-206,-159,89,-171,-172,-164,-174,-211,-160,-162,-166,-201,89,89,-158,89,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'PRIVATE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,150,155,201,217,220,221,222,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,648,650,],[91,91,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,91,-121,91,91,-120,-119,91,-193,-194,91,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,91,91,-226,-227,-239,-241,-242,-250,-170,91,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,91,-206,-159,91,-164,-174,-211,-160,-162,-166,-201,91,91,-158,91,-243,-209,-210,-214,-215,-202,-191,-216,-217,91,-192,]),'METHOD':([21,22,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,77,78,79,80,82,83,84,85,86,92,99,100,101,102,103,104,105,106,114,134,145,147,153,155,166,184,185,188,189,192,198,199,201,202,203,217,231,232,233,234,235,236,237,238,239,245,246,290,325,352,353,354,356,364,366,368,375,376,379,380,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[60,60,-28,60,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-27,-29,-30,-31,-32,-176,141,-34,-189,-190,-212,-213,-222,-223,-224,-225,142,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,-33,157,158,-27,-28,-29,-30,-31,-32,60,60,60,-121,60,60,-52,-51,-53,-54,-55,-56,288,289,-120,60,294,-119,60,60,-51,-52,-53,-54,-55,-56,60,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,60,60,60,294,-186,60,60,-226,-227,-239,-241,-242,-250,-170,60,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,60,-206,-159,60,-164,-174,-211,-160,-162,-166,-201,60,60,-158,60,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'TRY':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[93,93,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,93,-121,93,-120,-119,93,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,93,93,-226,-227,-239,-241,-242,-250,-170,93,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,93,-206,-159,93,-164,-174,-211,-160,-162,-166,-201,93,93,-158,93,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'LIST':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,504,505,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[94,94,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,94,-121,94,-120,-119,94,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,94,94,-226,-227,-239,-241,-242,-250,-170,94,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,549,550,-205,-175,-161,-163,-199,-232,94,-206,-159,94,-164,-174,-211,-160,-162,-166,-201,94,94,-158,94,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'FOR':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[95,95,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,95,-121,95,-120,-119,95,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,95,95,-226,-227,-239,-241,-242,-250,-170,95,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,95,-206,-159,95,-164,-174,-211,-160,-162,-166,-201,95,95,-158,95,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'FOREACH':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[96,96,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,96,-121,96,-120,-119,96,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,96,96,-226,-227,-239,-241,-242,-250,-170,96,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,96,-206,-159,96,-164,-174,-211,-160,-162,-166,-201,96,96,-158,96,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'WHILE':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,318,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[97,97,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,97,-121,97,-120,-119,97,-86,-87,-118,395,-58,-46,-47,-57,-59,-60,-61,-62,-186,97,97,-226,-227,-239,-241,-242,-250,-170,97,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,97,-206,-159,97,-164,-174,-211,-160,-162,-166,-201,97,97,-158,97,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'DO':([21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,114,147,155,201,217,239,245,246,290,325,352,353,354,356,364,366,368,381,382,394,405,406,416,417,418,420,431,438,442,460,463,466,467,468,469,470,471,472,478,497,508,511,515,538,540,543,552,553,568,570,584,585,597,599,601,602,603,609,610,611,612,620,624,625,628,630,632,638,644,646,650,],[98,98,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,98,-121,98,-120,-119,98,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,98,98,-226,-227,-239,-241,-242,-250,-170,98,-18,-165,-185,-88,-89,-230,-228,-229,-231,-238,-249,-200,-205,-175,-161,-163,-199,-232,98,-206,-159,98,-164,-174,-211,-160,-162,-166,-201,98,98,-158,98,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'DOT':([25,149,197,373,454,],[113,-184,287,432,510,]),'RETURN':([28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,57,61,62,63,64,65,66,67,68,71,72,73,74,76,77,78,79,80,82,83,84,85,86,147,201,217,245,246,290,325,352,353,354,356,364,366,368,381,400,405,406,416,417,418,420,431,460,461,463,466,467,468,469,470,471,472,478,493,496,497,508,511,515,535,538,540,543,553,568,584,585,597,599,601,602,603,611,620,624,625,628,630,632,638,644,646,650,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-116,-117,-176,-189,-190,-212,-213,-222,-223,-224,-225,-207,-208,-203,-204,-233,-234,-235,-236,-237,-244,-245,-246,-247,-248,-121,-120,-119,-86,-87,-118,-58,-46,-47,-57,-59,-60,-61,-62,-186,462,-226,-227,-239,-241,-242,-250,-170,-165,516,-185,-88,-89,-230,-228,-229,-231,-238,-249,536,539,-200,-205,-175,-161,566,-163,-199,-232,-206,-159,-164,-174,-211,-160,-162,-166,-201,-158,-243,-209,-210,-214,-215,-202,-191,-216,-217,-192,]),'GREATER_THAN':([60,92,101,102,103,104,105,106,209,211,212,213,214,216,224,225,233,234,235,236,237,238,282,335,337,385,427,429,572,593,594,],[-34,-33,-27,-28,-29,-30,-31,-32,-45,302,-42,-43,-44,309,313,314,-51,-52,-53,-54,-55,-56,-45,-45,302,-45,-45,-45,591,607,608,]),'SMALLER_THAN':([81,94,209,211,212,213,214,282,335,337,385,427,429,544,549,550,],[145,151,-45,303,-42,-43,-44,-45,-45,303,-45,-45,-45,572,576,577,]),'ARROW':([107,],[165,]),'COMMA':([110,120,125,130,131,205,207,208,209,210,211,212,213,214,243,244,264,265,266,267,273,274,275,282,283,284,285,293,294,300,335,337,338,339,340,341,342,343,344,377,383,384,385,415,423,427,428,429,430,465,473,474,476,480,482,484,486,488,489,520,635,637,],[167,186,190,193,194,-111,-38,-39,-40,-41,-103,-42,-43,-44,-133,-132,-45,-43,-136,-96,-45,-42,-131,-40,-38,-139,-39,379,380,-112,-40,-90,-91,-92,-94,-95,-35,-36,-37,-167,-113,-104,-45,477,-97,-40,-139,-40,-142,519,-49,-50,-83,523,525,527,529,531,532,-48,640,642,]),'ASSIGNATION':([111,121,126,132,144,148,149,241,245,246,260,262,269,271,277,279,281,387,390,391,],[168,187,191,195,215,218,-184,326,327,328,355,357,365,367,369,370,371,445,448,449,]),'INTEGER':([112,143,154,187,191,195,206,249,250,251,255,297,298,299,301,302,303,304,305,306,307,327,328,346,358,359,360,361,362,363,370,371,392,425,453,477,529,571,631,642,],[170,212,212,212,274,212,212,332,334,212,212,212,-114,-115,212,-105,-106,-107,-108,-109,-110,212,212,212,212,-98,-99,-100,-101,-102,212,212,212,486,212,212,486,212,637,637,]),'CLEAR':([113,],[171,]),'COUNT':([113,],[172,]),'ADD':([113,],[173,]),'REMOVEAT':([113,],[174,]),'PUSH':([113,],[175,]),'POP':([113,],[176,]),'PEEK':([113,],[177,]),'ISEMPTY':([113,],[178,]),'ENQUEUE':([113,],[179,]),'DEQUEUE':([113,],[180,]),'STRING':([116,168,249,251,255,327,328,346,402,412,477,514,519,629,640,],[182,244,333,342,342,342,342,342,465,473,342,555,465,635,635,]),'LOGICNOT':([143,154,195,297,298,299,370,371,453,571,],[206,206,206,206,-114,-115,206,206,206,206,]),'BOOLTRUE':([143,154,195,206,251,255,297,298,299,327,328,346,370,371,426,453,477,531,532,571,],[207,207,283,207,207,207,207,-114,-115,207,207,207,283,207,488,207,207,488,488,207,]),'BOOLFALSE':([143,154,195,206,251,255,297,298,299,327,328,346,370,371,426,453,477,531,532,571,],[208,208,285,208,208,208,208,-114,-115,208,208,208,208,285,489,208,208,489,489,208,]),'FLOAT_NUMBER':([143,154,187,191,195,206,251,255,297,298,299,301,302,303,304,305,306,307,327,328,346,358,359,360,361,362,363,370,371,392,422,453,477,525,571,],[213,213,265,213,213,213,213,213,213,-114,-115,213,-105,-106,-107,-108,-109,-110,213,213,213,213,-98,-99,-100,-101,-102,213,213,213,482,213,213,482,213,]),'DECIMAL_NUMBER':([143,154,187,191,195,206,251,255,297,298,299,301,302,303,304,305,306,307,327,328,346,358,359,360,361,362,363,370,371,392,424,453,477,527,571,],[214,214,214,214,214,214,214,214,214,-114,-115,214,-105,-106,-107,-108,-109,-110,214,214,214,214,-98,-99,-100,-101,-102,214,214,214,484,214,214,484,214,]),'LOGICAND':([205,207,208,209,210,211,212,213,214,282,283,285,384,385,427,429,],[298,-38,-39,-40,-41,-103,-42,-43,-44,-40,-38,-39,-104,-45,-40,-40,]),'LOGICOR':([205,207,208,209,210,211,212,213,214,282,283,285,384,385,427,429,],[299,-38,-39,-40,-41,-103,-42,-43,-44,-40,-38,-39,-104,-45,-40,-40,]),'EQUAL_COMPARATION':([209,211,212,213,214,282,335,337,385,427,429,],[-45,304,-42,-43,-44,-45,-45,304,-45,-45,-45,]),'INEQUALITY':([209,211,212,213,214,282,335,337,385,427,429,],[-45,305,-42,-43,-44,-45,-45,305,-45,-45,-45,]),'GREATER_THAN_OR_EQUAL':([209,211,212,213,214,282,335,337,385,427,429,],[-45,306,-42,-43,-44,-45,-45,306,-45,-45,-45,]),'SMALLER_THAN_OR_EQUAL':([209,211,212,213,214,282,335,337,385,427,429,],[-45,307,-42,-43,-44,-45,-45,307,-45,-45,-45,]),'PLUS':([212,213,214,264,265,267,273,274,342,385,473,],[-42,-43,-44,-45,-43,359,-45,-42,412,-45,412,]),'MINUS':([212,213,214,264,265,267,273,274,385,],[-42,-43,-44,-45,-43,360,-45,-42,-45,]),'TIMES':([212,213,214,264,265,267,273,274,385,],[-42,-43,-44,-45,-43,361,-45,-42,-45,]),'DIVIDE':([212,213,214,264,265,267,273,274,385,],[-42,-43,-44,-45,-43,362,-45,-42,-45,]),'PERCENT':([212,213,214,264,265,267,273,274,385,],[-42,-43,-44,-45,-43,363,-45,-42,-45,]),'NEW':([215,218,445,448,449,],[308,310,499,504,505,]),'CHAR':([251,255,327,328,346,421,477,523,],[343,343,343,343,343,480,343,480,]),'READ':([251,255,327,328,346,477,],[345,345,345,345,345,345,]),'START':([287,],[374,]),'CATCH':([311,],[389,]),'IN':([316,],[393,]),'JOIN':([432,],[490,]),'EXCEPTION':([447,],[503,]),'ELSE':([497,626,],[541,541,]),'ELSE_IF':([497,626,],[542,542,]),'ERROR':([503,614,],[548,621,]),'INCREMENT':([551,],[578,]),'DECREMENT':([551,],[579,]),'FINALLY':([638,],[643,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([9,],[10,]),'all_block_code':([21,27,114,155,239,382,394,552,570,609,610,612,],[26,115,181,229,324,443,452,580,443,617,618,443,]),'block_code':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[27,27,27,27,27,27,27,496,27,27,27,27,27,]),'def_const_or_var':([21,27,114,150,155,220,239,382,394,438,552,570,609,610,612,648,],[28,28,28,221,28,221,28,28,28,28,28,28,28,28,28,221,]),'print_data':([21,27,114,150,155,220,239,382,394,438,552,570,609,610,612,648,],[29,29,29,222,29,222,29,29,29,29,29,29,29,29,29,222,]),'array_assignation':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[30,30,30,30,30,30,30,30,30,30,30,30,30,]),'array_value_assign':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'array_indexing':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'thread_main':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'concurrent_method':([21,27,114,155,239,382,394,438,446,510,552,570,609,610,612,],[34,34,34,34,34,34,34,34,501,554,34,34,34,34,34,]),'method_definition':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'block_try_catch':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[36,36,36,36,36,36,36,36,36,36,36,36,36,]),'lists':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[37,37,37,37,37,37,37,37,37,37,37,37,37,]),'functions_list':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[38,38,38,38,38,38,38,38,38,38,38,38,38,]),'statement_lambda':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'enums':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[40,40,40,40,40,40,40,40,40,40,40,40,40,]),'normal_if':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[41,41,41,41,41,442,41,41,41,442,41,41,442,]),'block_for':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'block_while':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[43,43,43,43,43,43,43,43,43,43,43,43,43,]),'stack_struct':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[44,44,44,44,44,44,44,44,44,44,44,44,44,]),'functions_stack':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'queue_struct':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'functions_queue':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'constant_assignation':([21,27,114,150,155,220,239,382,394,438,552,570,609,610,612,648,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'variable_assignation':([21,27,114,150,155,220,239,382,394,438,552,570,609,610,612,648,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'declaration_thread':([21,27,56,114,155,239,382,394,438,552,570,609,610,612,],[56,56,133,56,56,56,56,56,56,56,56,56,56,56,]),'access_modifiers':([21,27,114,150,155,220,239,382,394,438,552,570,609,610,612,648,],[58,58,58,223,58,223,58,58,58,58,58,58,58,58,58,223,]),'data_type':([21,22,27,114,134,145,153,155,202,231,232,239,375,376,379,382,394,438,552,570,609,610,612,],[59,100,59,59,198,216,227,59,291,291,291,59,291,291,291,59,59,59,59,59,59,59,59,]),'try_catch_simply':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[61,61,61,61,61,61,61,61,61,61,61,61,61,]),'try_catch_finally':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[62,62,62,62,62,62,62,62,62,62,62,62,62,]),'list_empty':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[63,63,63,63,63,63,63,63,63,63,63,63,63,]),'list_full':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[64,64,64,64,64,64,64,64,64,64,64,64,64,]),'list_func_clear':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[65,65,65,65,65,65,65,65,65,65,65,65,65,]),'list_func_count':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'list_func_add':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'list_func_removeat':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'for_simple':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[71,71,71,71,71,71,71,71,71,71,71,71,71,]),'for_each':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[72,72,72,72,72,72,72,72,72,72,72,72,72,]),'normal_while':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[73,73,73,73,73,73,73,73,73,73,73,73,73,]),'do_while':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[74,74,74,74,74,74,74,74,74,74,74,74,74,]),'stack_push':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[76,76,76,76,76,76,76,76,76,76,76,76,76,]),'stack_pop':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[77,77,77,77,77,77,77,77,77,77,77,77,77,]),'stack_clear':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[78,78,78,78,78,78,78,78,78,78,78,78,78,]),'stack_peek':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[79,79,79,79,79,79,79,79,79,79,79,79,79,]),'stack_isEmpty':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[80,80,80,80,80,80,80,80,80,80,80,80,80,]),'queue_enqueue':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[82,82,82,82,82,82,82,82,82,82,82,82,82,]),'queue_dequeue':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[83,83,83,83,83,83,83,83,83,83,83,83,83,]),'queue_clear':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[84,84,84,84,84,84,84,84,84,84,84,84,84,]),'queue_isEmpty':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[85,85,85,85,85,85,85,85,85,85,85,85,85,]),'queue_peek':([21,27,114,155,239,382,394,438,552,570,609,610,612,],[86,86,86,86,86,86,86,86,86,86,86,86,86,]),'assignation_type_value_multiple':([21,27,58,87,114,135,150,155,220,223,239,382,394,438,552,570,609,610,612,648,],[88,88,136,146,88,200,88,88,88,136,88,88,88,88,88,88,88,88,88,88,]),'array_type':([21,22,27,114,134,145,153,155,202,231,232,239,375,376,379,382,394,438,552,570,609,610,612,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'assignation_string_multiple':([24,138,167,],[109,109,242,]),'assignation_string':([24,138,167,],[110,110,110,]),'assignation_float_multiple':([52,139,186,],[119,119,263,]),'assignation_float':([52,139,186,],[120,120,120,]),'assignation_int_multiple':([54,137,190,],[124,124,272,]),'assignation_int':([54,137,190,226,],[125,125,125,315,]),'assignation_true_multiple':([55,140,193,],[128,128,278,]),'assignation_false_multiple':([55,140,194,],[129,129,280,]),'assignation_true':([55,140,193,],[130,130,130,]),'assignation_false':([55,140,194,],[131,131,131,]),'thread_identificator':([89,99,133,196,286,372,396,446,455,547,],[148,156,197,197,373,373,454,500,454,156,]),'thread_init':([133,196,],[196,286,]),'boolean_operation':([143,154,195,297,370,371,453,571,],[204,228,284,383,428,430,509,590,]),'value_boolean':([143,154,195,206,251,255,297,327,328,346,370,371,453,477,571,],[205,205,205,300,338,338,205,338,338,338,205,205,205,338,205,]),'comparison_operation':([143,154,195,206,251,255,297,301,327,328,346,370,371,392,453,477,571,],[210,210,210,210,210,210,210,384,210,210,210,210,210,450,210,210,210,]),'value_numeric':([143,154,187,191,195,206,251,255,297,301,327,328,346,358,370,371,392,453,477,571,],[211,211,267,267,211,211,337,337,211,211,337,337,337,267,211,211,211,211,337,211,]),'all_block_code_try':([150,220,648,],[219,312,649,]),'block_code_try':([150,220,648,],[220,220,220,]),'string_array_assignation':([166,],[240,]),'char_array_assignation':([184,],[259,]),'float_array_assignation':([185,],[261,]),'arithmetic_operation':([187,191,358,],[266,275,423,]),'decimal_array_assignation':([188,],[268,]),'int_array_assignation':([189,],[270,]),'bool_array_assignation':([192,],[276,]),'func_parameters':([202,231,232,375,376,379,],[292,320,322,434,436,439,]),'func_parameter':([202,231,232,375,376,379,],[293,293,293,293,293,293,]),'list_enums':([203,380,],[295,440,]),'boolean_operator':([205,],[297,]),'comparison_operator':([211,337,],[301,301,]),'value':([251,255,327,328,346,477,],[336,350,403,404,415,415,]),'value_string':([251,255,327,328,346,477,],[339,339,339,339,339,339,]),'read_data':([251,255,327,328,346,477,],[340,340,340,340,340,340,]),'array':([251,255,327,328,346,477,],[341,341,341,341,341,341,]),'concatenation':([251,255,327,328,346,412,477,],[344,344,344,344,344,474,344,]),'arithmetic_operator':([267,],[358,]),'thread_wait':([286,372,],[372,431,]),'array_content':([346,477,],[414,521,]),'block_if':([382,570,612,],[441,589,619,]),'thread_logic':([396,],[455,]),'thread_sentence':([396,455,],[456,512,]),'thread_expression':([396,455,],[457,457,]),'string_content_multiple':([402,519,],[464,558,]),'char_content_multiple':([421,523,],[479,559,]),'float_content_multiple':([422,525,],[481,560,]),'decimal_content_multiple':([424,527,],[483,561,]),'int_content_multiple':([425,529,],[485,562,]),'bool_content_multiple':([426,531,532,],[487,563,564,]),'other_if':([497,626,],[540,632,]),'strings_list':([629,640,],[634,645,]),'ints_list':([631,642,],[636,647,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',15),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_main_method',13,'p_block_main_method','sintactico2.py',16),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',20),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> array_assignation','block_code',1,'p_block_code','sintactico2.py',22),
  ('block_code -> array_value_assign','block_code',1,'p_block_code','sintactico2.py',23),
  ('block_code -> array_indexing','block_code',1,'p_block_code','sintactico2.py',24),
  ('block_code -> thread_main','block_code',1,'p_block_code','sintactico2.py',25),
  ('block_code -> concurrent_method','block_code',1,'p_block_code','sintactico2.py',26),
  ('block_code -> method_definition','block_code',1,'p_block_code','sintactico2.py',27),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico2.py',29),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico2.py',31),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico2.py',32),
  ('block_code -> statement_lambda','block_code',1,'p_block_code','sintactico2.py',34),
  ('block_code -> enums','block_code',1,'p_block_code','sintactico2.py',36),
  ('block_code -> normal_if','block_code',1,'p_block_code','sintactico2.py',37),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico2.py',39),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico2.py',41),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico2.py',43),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico2.py',44),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico2.py',46),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico2.py',47),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',51),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',52),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',58),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',59),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',60),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',61),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',62),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',63),
  ('data_type -> array_type','data_type',1,'p_data_type','sintactico2.py',64),
  ('data_type -> METHOD','data_type',1,'p_data_type','sintactico2.py',65),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',71),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',72),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',73),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',77),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',78),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',79),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',80),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',84),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',85),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',86),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',87),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',91),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',92),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',96),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',100),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',101),
  ('array_type -> CHARTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',105),
  ('array_type -> STRINGTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',106),
  ('array_type -> FLOATTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',107),
  ('array_type -> DECIMALTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',108),
  ('array_type -> INTTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',109),
  ('array_type -> BOOLTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',110),
  ('array_assignation -> CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',114),
  ('array_assignation -> STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',115),
  ('array_assignation -> FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',116),
  ('array_assignation -> DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',117),
  ('array_assignation -> INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',118),
  ('array_assignation -> BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',119),
  ('char_array_assignation -> VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKET','char_array_assignation',5,'p_char_array_assignation','sintactico2.py',123),
  ('char_content_multiple -> CHAR','char_content_multiple',1,'p_char_content_multiple','sintactico2.py',126),
  ('char_content_multiple -> CHAR COMMA char_content_multiple','char_content_multiple',3,'p_char_content_multiple','sintactico2.py',127),
  ('string_array_assignation -> VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKET','string_array_assignation',5,'p_string_array_assignation','sintactico2.py',131),
  ('string_content_multiple -> STRING','string_content_multiple',1,'p_string_content_multiple','sintactico2.py',134),
  ('string_content_multiple -> STRING COMMA string_content_multiple','string_content_multiple',3,'p_string_content_multiple','sintactico2.py',135),
  ('float_array_assignation -> VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKET','float_array_assignation',5,'p_float_array_assignation','sintactico2.py',139),
  ('float_content_multiple -> FLOAT_NUMBER','float_content_multiple',1,'p_float_content_multiple','sintactico2.py',142),
  ('float_content_multiple -> FLOAT_NUMBER COMMA float_content_multiple','float_content_multiple',3,'p_float_content_multiple','sintactico2.py',143),
  ('int_array_assignation -> VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKET','int_array_assignation',5,'p_int_array_assignation','sintactico2.py',147),
  ('int_content_multiple -> INTEGER','int_content_multiple',1,'p_int_content_multiple','sintactico2.py',150),
  ('int_content_multiple -> INTEGER COMMA int_content_multiple','int_content_multiple',3,'p_int_content_multiple','sintactico2.py',151),
  ('decimal_array_assignation -> VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKET','decimal_array_assignation',5,'p_decimal_array_assignation','sintactico2.py',155),
  ('decimal_content_multiple -> DECIMAL_NUMBER','decimal_content_multiple',1,'p_decimal_content_multiple','sintactico2.py',158),
  ('decimal_content_multiple -> DECIMAL_NUMBER COMMA decimal_content_multiple','decimal_content_multiple',3,'p_decimal_content_multiple','sintactico2.py',159),
  ('bool_array_assignation -> VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKET','bool_array_assignation',5,'p_bool_array_assignation','sintactico2.py',163),
  ('bool_content_multiple -> BOOLTRUE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',166),
  ('bool_content_multiple -> BOOLFALSE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',167),
  ('bool_content_multiple -> BOOLTRUE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',168),
  ('bool_content_multiple -> BOOLFALSE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',169),
  ('array -> LBRACKET array_content RBRACKET','array',3,'p_array','sintactico2.py',173),
  ('array_content -> value','array_content',1,'p_array_content','sintactico2.py',176),
  ('array_content -> value COMMA array_content','array_content',3,'p_array_content','sintactico2.py',177),
  ('array_indexing -> VARIABLE LBRACKET VARIABLE RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',181),
  ('array_indexing -> VARIABLE LBRACKET INTEGER RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',182),
  ('array_value_assign -> VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',186),
  ('array_value_assign -> VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',187),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',191),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',192),
  ('value -> value_string','value',1,'p_value','sintactico2.py',193),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',194),
  ('value -> read_data','value',1,'p_value','sintactico2.py',195),
  ('value -> array','value',1,'p_value','sintactico2.py',196),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',202),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',203),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',207),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',208),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',209),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',210),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',211),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',215),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',216),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',220),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',221),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',222),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',223),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',224),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',225),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',229),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',230),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',231),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',235),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',236),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',242),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',243),
  ('constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico2.py',247),
  ('constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',3,'p_constant_assignation','sintactico2.py',248),
  ('variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',252),
  ('variable_assignation -> assignation_type_value_multiple DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',253),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',257),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',258),
  ('assignation_type_value -> INTTYPE assignation_int','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',262),
  ('assignation_type_value -> STRINGTYPE assignation_string','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',263),
  ('assignation_type_value -> FLOATTYPE assignation_float','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',264),
  ('assignation_type_value -> BOOLTYPE assignation_true','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',265),
  ('assignation_type_value -> BOOLTYPE assignation_false','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',266),
  ('assignation_int -> VARIABLE ASSIGNATION INTEGER','assignation_int',3,'p_assignation_int','sintactico2.py',270),
  ('assignation_int -> VARIABLE ASSIGNATION VARIABLE','assignation_int',3,'p_assignation_int','sintactico2.py',271),
  ('assignation_int -> VARIABLE ASSIGNATION arithmetic_operation','assignation_int',3,'p_assignation_int','sintactico2.py',272),
  ('assignation_string -> VARIABLE ASSIGNATION STRING','assignation_string',3,'p_assignation_string','sintactico2.py',276),
  ('assignation_string -> VARIABLE ASSIGNATION VARIABLE','assignation_string',3,'p_assignation_string','sintactico2.py',277),
  ('assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER','assignation_float',3,'p_assignation_float','sintactico2.py',281),
  ('assignation_float -> VARIABLE ASSIGNATION VARIABLE','assignation_float',3,'p_assignation_float','sintactico2.py',282),
  ('assignation_float -> VARIABLE ASSIGNATION arithmetic_operation','assignation_float',3,'p_assignation_float','sintactico2.py',283),
  ('assignation_true -> VARIABLE ASSIGNATION BOOLTRUE','assignation_true',3,'p_assignation_true','sintactico2.py',287),
  ('assignation_true -> VARIABLE ASSIGNATION VARIABLE','assignation_true',3,'p_assignation_true','sintactico2.py',288),
  ('assignation_true -> VARIABLE ASSIGNATION boolean_operation','assignation_true',3,'p_assignation_true','sintactico2.py',289),
  ('assignation_false -> VARIABLE ASSIGNATION BOOLFALSE','assignation_false',3,'p_assignation_false','sintactico2.py',293),
  ('assignation_false -> VARIABLE ASSIGNATION VARIABLE','assignation_false',3,'p_assignation_false','sintactico2.py',294),
  ('assignation_false -> VARIABLE ASSIGNATION boolean_operation','assignation_false',3,'p_assignation_false','sintactico2.py',295),
  ('assignation_type_value_multiple -> INTTYPE assignation_int_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',300),
  ('assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',301),
  ('assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',302),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',303),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',304),
  ('assignation_int_multiple -> assignation_int','assignation_int_multiple',1,'p_assignation_int_multiple','sintactico2.py',308),
  ('assignation_int_multiple -> assignation_int COMMA assignation_int_multiple','assignation_int_multiple',3,'p_assignation_int_multiple','sintactico2.py',309),
  ('assignation_string_multiple -> assignation_string','assignation_string_multiple',1,'p_assignation_string_multiple','sintactico2.py',313),
  ('assignation_string_multiple -> assignation_string COMMA assignation_string_multiple','assignation_string_multiple',3,'p_assignation_string_multiple','sintactico2.py',314),
  ('assignation_float_multiple -> assignation_float','assignation_float_multiple',1,'p_assignation_float_multiple','sintactico2.py',318),
  ('assignation_float_multiple -> assignation_float COMMA assignation_float_multiple','assignation_float_multiple',3,'p_assignation_float_multiple','sintactico2.py',319),
  ('assignation_true_multiple -> assignation_true','assignation_true_multiple',1,'p_assignation_true_multiple','sintactico2.py',323),
  ('assignation_true_multiple -> assignation_true COMMA assignation_true_multiple','assignation_true_multiple',3,'p_assignation_true_multiple','sintactico2.py',324),
  ('assignation_false_multiple -> assignation_false','assignation_false_multiple',1,'p_assignation_false_multiple','sintactico2.py',328),
  ('assignation_false_multiple -> assignation_false COMMA assignation_false_multiple','assignation_false_multiple',3,'p_assignation_false_multiple','sintactico2.py',329),
  ('method_definition -> access_modifiers STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',12,'p_method_definition','sintactico2.py',335),
  ('method_definition -> access_modifiers STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY','method_definition',9,'p_method_definition','sintactico2.py',336),
  ('method_definition -> STATIC data_type METHOD LPARENT func_parameters RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',11,'p_method_definition','sintactico2.py',337),
  ('method_definition -> STATIC VOID METHOD LPARENT func_parameters RPARENT LKEY RKEY','method_definition',8,'p_method_definition','sintactico2.py',338),
  ('method_definition -> access_modifiers STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',11,'p_method_definition','sintactico2.py',340),
  ('method_definition -> access_modifiers STATIC VOID METHOD LPARENT RPARENT LKEY RKEY','method_definition',8,'p_method_definition','sintactico2.py',341),
  ('method_definition -> STATIC data_type METHOD LPARENT RPARENT LKEY RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',10,'p_method_definition','sintactico2.py',342),
  ('method_definition -> STATIC VOID METHOD LPARENT RPARENT LKEY RKEY','method_definition',7,'p_method_definition','sintactico2.py',343),
  ('method_definition -> data_type METHOD LPARENT func_parameters RPARENT LKEY block_code RETURN VARIABLE DOTANDCOMMA RKEY','method_definition',11,'p_method_definition','sintactico2.py',345),
  ('func_parameter -> data_type VARIABLE','func_parameter',2,'p_func_parameter','sintactico2.py',349),
  ('func_parameters -> func_parameter','func_parameters',1,'p_func_parameters','sintactico2.py',352),
  ('func_parameters -> func_parameter COMMA func_parameters','func_parameters',3,'p_func_parameters','sintactico2.py',353),
  ('thread_main -> declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait','thread_main',6,'p_thread_main','sintactico2.py',359),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',364),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',365),
  ('thread_init -> thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA','thread_init',6,'p_thread_init','sintactico2.py',370),
  ('thread_wait -> thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA','thread_wait',6,'p_thread_wait','sintactico2.py',375),
  ('concurrent_method -> STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY','concurrent_method',8,'p_concurrent_method','sintactico2.py',380),
  ('concurrent_method -> WRITE','concurrent_method',1,'p_concurrent_method','sintactico2.py',381),
  ('thread_logic -> thread_sentence','thread_logic',1,'p_thread_logic','sintactico2.py',386),
  ('thread_logic -> thread_logic thread_sentence','thread_logic',2,'p_thread_logic','sintactico2.py',387),
  ('thread_sentence -> thread_expression DOTANDCOMMA','thread_sentence',2,'p_thread_sentence','sintactico2.py',392),
  ('thread_expression -> thread_identificator DOT concurrent_method LPARENT RPARENT','thread_expression',5,'p_thread_expression','sintactico2.py',397),
  ('thread_expression -> PRINT LPARENT STRING RPARENT','thread_expression',4,'p_thread_expression','sintactico2.py',398),
  ('thread_arguments -> thread_expression','thread_arguments',1,'p_thread_arguments','sintactico2.py',403),
  ('thread_arguments -> thread_arguments COMMA thread_expression','thread_arguments',3,'p_thread_arguments','sintactico2.py',404),
  ('thread_identificator -> VARIABLE','thread_identificator',1,'p_thread_identificator','sintactico2.py',409),
  ('statement_lambda -> LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENT','statement_lambda',7,'p_statement_lambda','sintactico2.py',416),
  ('enums -> ENUM METHOD LKEY list_enums RKEY','enums',5,'p_enums','sintactico2.py',420),
  ('list_enums -> METHOD','list_enums',1,'p_list_enums','sintactico2.py',423),
  ('list_enums -> METHOD COMMA list_enums','list_enums',3,'p_list_enums','sintactico2.py',424),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico2.py',433),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico2.py',434),
  ('try_catch_simply -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY','try_catch_simply',16,'p_try_catch_simply','sintactico2.py',438),
  ('try_catch_finally -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEY','try_catch_finally',20,'p_try_catch_finally','sintactico2.py',441),
  ('block_code_try -> def_const_or_var','block_code_try',1,'p_block_code_try','sintactico2.py',444),
  ('block_code_try -> print_data','block_code_try',1,'p_block_code_try','sintactico2.py',445),
  ('all_block_code_try -> block_code_try','all_block_code_try',1,'p_all_block_code_try','sintactico2.py',449),
  ('all_block_code_try -> block_code_try all_block_code_try','all_block_code_try',2,'p_all_block_code_try','sintactico2.py',450),
  ('block_if -> normal_if','block_if',1,'p_block_if','sintactico2.py',456),
  ('block_if -> all_block_code','block_if',1,'p_block_if','sintactico2.py',457),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','normal_if',8,'p_normal_if','sintactico2.py',460),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY','normal_if',7,'p_normal_if','sintactico2.py',461),
  ('other_if -> ELSE LKEY block_if RKEY','other_if',4,'p_other_if','sintactico2.py',465),
  ('other_if -> ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','other_if',8,'p_other_if','sintactico2.py',466),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico2.py',472),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico2.py',473),
  ('normal_while -> WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico2.py',477),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENT','do_while',8,'p_do_while','sintactico2.py',480),
  ('block_for -> for_simple','block_for',1,'p_block_for','sintactico2.py',485),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico2.py',486),
  ('for_simple -> FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',13,'p_for_simple','sintactico2.py',490),
  ('for_simple -> FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',13,'p_for_simple','sintactico2.py',491),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico2.py',496),
  ('lists -> list_empty','lists',1,'p_lists','sintactico2.py',505),
  ('lists -> list_full','lists',1,'p_lists','sintactico2.py',506),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',510),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',511),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',515),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',516),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico2.py',520),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico2.py',521),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico2.py',525),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico2.py',526),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico2.py',530),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico2.py',531),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico2.py',532),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico2.py',533),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico2.py',537),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico2.py',540),
  ('list_func_add -> VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',543),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',544),
  ('list_func_add -> VARIABLE DOT ADD LPARENT VARIABLE RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',545),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',550),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico2.py',556),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico2.py',559),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico2.py',560),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico2.py',561),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico2.py',562),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico2.py',563),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico2.py',566),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico2.py',569),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico2.py',572),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico2.py',575),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico2.py',578),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',13,'p_queue_struct','sintactico2.py',583),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico2.py',586),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico2.py',587),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico2.py',588),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico2.py',589),
  ('functions_queue -> queue_peek','functions_queue',1,'p_functions_queue','sintactico2.py',590),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico2.py',594),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico2.py',597),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico2.py',600),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico2.py',603),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico2.py',606),
]
