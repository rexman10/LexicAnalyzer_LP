
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass          : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYblock_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric\n                                | VARIABLE\n                                | value_numeric logic_operator logic_operation\n                                | VARIABLE logic_operator logic_operation\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers VARIABLE DOTANDCOMMA\n                                | VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : VARIABLE ASSIGNATION value\n                                        | VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA\n    dictionary_value         : LKEY key_value_pair RKEY\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : STRING DOUBLEPOINT valueHash\n    valueHash                : INTTYPE\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_assignation : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAstack_push : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAqueue_assignation : QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMAqueue_push : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_pop : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAdeclaration_async    : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY'
=======
_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass          : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYblock_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric\n                                | VARIABLE\n                                | value_numeric logic_operator logic_operation\n                                | VARIABLE logic_operator logic_operation\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers VARIABLE DOTANDCOMMA\n                                | VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : VARIABLE ASSIGNATION value\n                                        | VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA\n    dictionary_value         : LKEY key_value_pair RKEY\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : STRING DOUBLEPOINT valueHash\n    valueHash                : INTTYPE\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_assignation          : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAstack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAqueue_struct             : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA\n    queue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA\n    queue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA\n    declaration_async    : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY'
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,58,],[0,-1,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,11,28,29,30,31,66,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,98,99,101,102,109,110,111,112,117,118,119,120,121,127,129,],[4,41,72,-25,-26,-27,100,103,104,-30,-28,-29,-30,-36,-29,-28,-20,-68,-14,-15,-16,-17,-22,-23,-24,-12,-19,-21,110,-28,-35,113,114,115,116,122,-11,123,124,-68,-69,-12,-13,110,-71,-70,]),'PUBLIC':([4,9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[6,10,-30,10,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'CLASS':([6,],[7,]),'VARIABLE':([7,9,10,11,13,14,15,16,17,18,19,20,21,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,65,67,72,73,74,75,76,77,78,79,95,96,97,100,103,104,105,110,113,114,115,116,122,123,124,125,128,],[8,11,-52,-30,11,-3,-4,-5,-6,-7,-54,-55,-56,-29,66,70,-25,-26,-27,-53,-74,-75,-76,-77,-78,-79,73,76,-66,80,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,73,76,70,70,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,70,-65,-62,-64,80,-11,-61,-63,-58,-60,-10,-57,-59,126,80,]),'LKEY':([8,],[9,]),'PRINT':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[22,-30,22,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'READ':([9,11,13,14,15,16,17,18,19,20,21,24,27,29,30,31,33,34,35,36,37,38,41,42,65,67,72,73,74,75,76,77,78,79,95,96,97,100,103,104,105,110,113,114,115,116,122,123,124,128,],[23,-30,23,-3,-4,-5,-6,-7,-54,-55,-56,-29,71,-25,-26,-27,-74,-75,-76,-77,-78,-79,-66,92,71,71,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,71,-65,-62,-64,92,-11,-61,-63,-58,-60,-10,-57,-59,92,]),'CONST':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,29,30,31,32,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[26,-52,-30,26,-3,-4,-5,-6,-7,-54,-55,-56,-29,64,-25,-26,-27,-53,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'INTEGER':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,72,73,74,75,76,77,78,79,95,96,100,103,104,105,110,113,114,115,116,122,123,124,128,],[29,-30,29,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,29,29,-66,29,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,29,29,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,29,-11,-61,-63,-58,-60,-10,-57,-59,29,]),'FLOAT_NUMBER':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,72,73,74,75,76,77,78,79,95,96,100,103,104,105,110,113,114,115,116,122,123,124,128,],[30,-30,30,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,30,30,-66,30,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,30,30,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,30,-11,-61,-63,-58,-60,-10,-57,-59,30,]),'DECIMAL_NUMBER':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,72,73,74,75,76,77,78,79,95,96,100,103,104,105,110,113,114,115,116,122,123,124,128,],[31,-30,31,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,31,31,-66,31,-47,-48,-49,-50,-51,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,31,31,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,31,-11,-61,-63,-58,-60,-10,-57,-59,31,]),'PRIVATE':([9,11,13,14,15,16,17,18,19,20,21,24,29,30,31,41,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[32,-30,32,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'CHARTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[33,-52,-30,33,-3,-4,-5,-6,-7,-54,-55,-56,-29,33,33,-25,-26,-27,-53,-66,33,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'STRINGTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[34,-52,-30,34,-3,-4,-5,-6,-7,-54,-55,-56,-29,34,34,-25,-26,-27,-53,-66,34,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'FLOATTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[35,-52,-30,35,-3,-4,-5,-6,-7,-54,-55,-56,-29,35,35,-25,-26,-27,-53,-66,35,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'DECIMALTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[36,-52,-30,36,-3,-4,-5,-6,-7,-54,-55,-56,-29,36,36,-25,-26,-27,-53,-66,36,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'INTTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[37,-52,-30,37,-3,-4,-5,-6,-7,-54,-55,-56,-29,37,37,-25,-26,-27,-53,-66,37,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'BOOLTYPE':([9,10,11,13,14,15,16,17,18,19,20,21,24,25,26,29,30,31,32,41,64,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[38,-52,-30,38,-3,-4,-5,-6,-7,-54,-55,-56,-29,38,38,-25,-26,-27,-53,-66,38,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'RKEY':([11,12,13,14,15,16,17,18,19,20,21,24,29,30,31,41,59,72,73,74,75,76,77,78,79,95,96,100,103,104,110,113,114,115,116,122,123,124,],[-30,58,-8,-3,-4,-5,-6,-7,-54,-55,-56,-29,-25,-26,-27,-66,-9,-67,-30,-28,-29,-30,-36,-29,-28,-28,-35,-65,-62,-64,-11,-61,-63,-58,-60,-10,-57,-59,]),'PLUS':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,89,95,119,],[43,-28,43,-25,-26,-27,43,-28,43,43,43,-28,43,43,107,-28,107,]),'MINUS':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[44,-28,44,-25,-26,-27,44,-28,44,44,44,-28,44,44,-28,]),'TIMES':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[45,-28,45,-25,-26,-27,45,-28,45,45,45,-28,45,45,-28,]),'DIVIDE':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[46,-28,46,-25,-26,-27,46,-28,46,46,46,-28,46,46,-28,]),'PERCENT':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[47,-28,47,-25,-26,-27,47,-28,47,47,47,-28,47,47,-28,]),'GREATER_THAN':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[48,-28,48,-25,-26,-27,-30,-28,-29,48,48,-28,48,48,-28,]),'SMALLER_THAN':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[49,-28,49,-25,-26,-27,-30,-28,-29,49,49,-28,49,49,-28,]),'EQUAL_COMPARATION':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[50,-28,50,-25,-26,-27,-30,-28,-29,50,50,-28,50,50,-28,]),'INEQUALITY':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[51,-28,51,-25,-26,-27,-30,-28,-29,51,51,-28,51,51,-28,]),'GREATER_THAN_OR_EQUAL':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[52,-28,52,-25,-26,-27,-30,-28,-29,52,52,-28,52,52,-28,]),'SMALLER_THAN_OR_EQUAL':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[53,-28,53,-25,-26,-27,-30,-28,-29,53,53,-28,53,53,-28,]),'LOGICAND':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[54,-28,54,-25,-26,-27,-30,-28,-29,54,54,-28,54,54,-28,]),'LOGICOR':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[55,-28,55,-25,-26,-27,-30,-28,-29,55,55,-28,55,55,-28,]),'LOGICNOT':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[56,-28,56,-25,-26,-27,-30,-28,-29,56,56,-28,56,56,-28,]),'LOGICXOR':([11,17,24,29,30,31,73,74,75,76,78,79,80,82,95,],[57,-28,57,-25,-26,-27,-30,-28,-29,57,57,-28,57,57,-28,]),'ASSIGNATION':([11,70,126,],[42,105,128,]),'LPARENT':([22,23,71,92,],[60,61,106,108,]),'COMMA':([29,30,31,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,95,96,110,117,119,120,129,],[-25,-26,-27,-30,-28,-29,-30,-36,-29,-28,-20,-14,-15,-16,-17,-22,-23,-24,-12,-19,-21,-28,-35,-11,125,-12,-13,125,]),'BOOLTRUE':([42,105,128,],[86,86,86,]),'BOOLFALSE':([42,105,128,],[87,87,87,]),'STRING':([42,60,105,107,128,],[89,93,89,119,89,]),'CHAR':([42,105,128,],[90,90,90,]),'RPARENT':([61,93,106,108,],[94,109,118,121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'all_block_code':([9,13,],[12,59,]),'block_code':([9,13,],[13,13,]),'def_const_or_var':([9,13,],[14,14,]),'print_data':([9,13,],[15,15,]),'read_data':([9,13,42,105,128,],[16,16,85,85,85,]),'arithmetic_operation':([9,13,39,40,42,62,63,105,128,],[17,17,74,79,79,95,79,79,79,]),'logic_operation':([9,13,40,42,63,105,128,],[18,18,77,88,96,88,88,]),'constant_assignation':([9,13,],[19,19,]),'variable_assignation':([9,13,],[20,20,]),'late_initialization':([9,13,],[21,21,]),'value_numeric':([9,13,39,40,42,62,63,105,128,],[24,24,75,78,82,75,78,82,82,]),'access_modifiers':([9,13,],[25,25,]),'data_type':([9,13,25,26,64,],[27,27,65,67,97,]),'assignation_key_value':([9,13,27,65,67,97,],[28,28,68,98,101,111,]),'arithmetic_operator':([11,24,73,75,76,78,80,82,],[39,62,39,62,39,62,39,62,]),'logic_operator':([11,24,76,78,80,82,],[40,63,40,63,40,63,]),'assignation_key_value_multiple':([27,65,67,97,125,],[69,99,102,112,127,]),'value':([42,105,128,],[81,117,129,]),'value_logic':([42,105,128,],[83,83,83,]),'value_string':([42,105,128,],[84,84,84,]),'concatenation':([42,105,107,128,],[91,91,120,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico.py',47),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',50),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',53),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',54),
  ('block_code -> read_data','block_code',1,'p_block_code','sintactico.py',55),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico.py',56),
  ('block_code -> logic_operation','block_code',1,'p_block_code','sintactico.py',57),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',61),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',62),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',67),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico.py',71),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',75),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',76),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',80),
  ('value -> value_logic','value',1,'p_value','sintactico.py',81),
  ('value -> value_string','value',1,'p_value','sintactico.py',82),
  ('value -> read_data','value',1,'p_value','sintactico.py',83),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',87),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',88),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',89),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',90),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',94),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',95),
  ('value_logic -> logic_operation','value_logic',1,'p_value_logic','sintactico.py',96),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',100),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',101),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',102),
  ('value_numeric -> arithmetic_operation','value_numeric',1,'p_value_numeric','sintactico.py',103),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',108),
  ('arithmetic_operation -> VARIABLE','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',109),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',110),
  ('arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',111),
  ('logic_operation -> value_numeric','logic_operation',1,'p_logic_operation','sintactico.py',115),
  ('logic_operation -> VARIABLE','logic_operation',1,'p_logic_operation','sintactico.py',116),
  ('logic_operation -> value_numeric logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',117),
  ('logic_operation -> VARIABLE logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',118),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',122),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',123),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',124),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',125),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',126),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',127),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',128),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',129),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',130),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',131),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',135),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',136),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',137),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',138),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',139),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',144),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',145),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',149),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',150),
  ('def_const_or_var -> late_initialization','def_const_or_var',1,'p_def_const_or_var','sintactico.py',151),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',155),
  ('constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',156),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',157),
  ('constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',158),
  ('variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',162),
  ('variable_assignation -> data_type assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',163),
  ('variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',164),
  ('variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',165),
  ('late_initialization -> access_modifiers VARIABLE DOTANDCOMMA','late_initialization',3,'p_late_initialization','sintactico.py',169),
  ('late_initialization -> VARIABLE DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',170),
  ('late_initialization -> assignation_key_value DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',171),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',175),
  ('assignation_key_value -> READ LPARENT RPARENT','assignation_key_value',3,'p_assignation_key_value','sintactico.py',176),
  ('assignation_key_value_multiple -> VARIABLE ASSIGNATION value','assignation_key_value_multiple',3,'p_assignation_key_value_multiple','sintactico.py',180),
  ('assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple','assignation_key_value_multiple',5,'p_assignation_key_value_multiple','sintactico.py',181),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',185),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',186),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',190),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',191),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',192),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',193),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',194),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',195),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',201),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',202),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',206),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',207),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',212),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',213),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',214),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico.py',218),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',222),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',223),
  ('try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',227),
  ('try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',230),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',234),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',235),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',239),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',242),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',245),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',249),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',250),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',255),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',256),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',265),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',266),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',272),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',277),
  ('dictionary_value -> LKEY key_value_pair RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',281),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',285),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',286),
  ('key_value_pair -> STRING DOUBLEPOINT valueHash','key_value_pair',3,'p_key_value_pair','sintactico.py',291),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',296),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',299),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',300),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',305),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',306),
  ('dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',311),
  ('dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',316),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',322),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',323),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',327),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',328),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',332),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',333),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',337),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',338),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',342),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',343),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',344),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',345),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',349),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',352),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',355),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',358),
  ('stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_assignation',8,'p_stack_assignation','sintactico.py',361),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico.py',364),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico.py',367),
<<<<<<< HEAD
  ('queue_assignation -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA','queue_assignation',8,'p_queue_assignation','sintactico.py',370),
  ('queue_push -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_push',7,'p_queue_enqueue','sintactico.py',373),
  ('queue_pop -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_pop',6,'p_queue_dequeue','sintactico.py',376),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',383),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',387),
=======
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',14,'p_queue_struct','sintactico.py',370),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico.py',374),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico.py',378),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico.py',382),
  ('queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_peek','sintactico.py',386),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico.py',390),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',398),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',402),
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
]
