
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY\n                                | PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    block_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n\n                                | lists\n                                | functions_list\n\n                                | dict_estruct\n                                | functions_dict\n\n                                | queue_struct\n                                | functions_queue\n\n                                | stack_struct\n                                | functions_stack\n\n                                | block_if\n\n                                | block_for\n\n                                | block_try_catch\n\n                                | block_while\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    method_definition        : simple_method\n                                | declaration_async\n                                | declaration_lambda\n    all_method_definitions   : method_definition\n                                | method_definition all_method_definitions  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n                                | METHOD\n                                | array\n    array_assignation          : array_type VARIABLE ASSIGNATION LBRACKET array_content RBRACKET DOTANDCOMMAarray                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric logic_operator INTEGER \n                                | VARIABLE logic_operator INTEGER\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers data_type VARIABLE DOTANDCOMMA\n                                | data_type VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : assignation_key_value\n                                        | assignation_key_value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value COMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n                                | array_type\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    logic_operations         : logic_operation DOTANDCOMMA\n                                | logic_operation COMMA logic_operations\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : LKEY VARIABLE COMMA value RKEY\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct             : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    functions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA\n    queue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA\n    queue_peek               : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA\n    queue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA\n    simple_method            : STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n                                | access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n    function_return          : RETURN value DOTANDCOMMA\n    function_argument        : data_type VARIABLE\n                                | METHOD VARIABLE\n    function_arguments       : function_argument\n                                | function_argument COMMA function_arguments\n    declaration_async        : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda         : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,24,39,],[0,-1,-3,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,126,159,160,161,211,212,213,237,238,239,240,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,272,273,274,287,288,289,290,291,303,309,310,329,332,333,334,337,338,347,348,349,363,364,365,366,368,369,375,376,378,379,390,399,400,404,405,407,408,411,414,424,441,453,498,512,513,515,516,529,542,544,],[4,-58,220,-59,-60,277,279,280,-63,-61,-62,-67,-53,-99,-37,-38,-39,-40,-41,-42,-61,-55,-56,-57,-35,-52,-54,329,-61,-66,339,340,341,342,343,354,359,360,-34,-101,-102,-100,384,385,389,390,392,-35,-36,329,-44,402,403,409,410,412,413,-118,431,432,433,434,436,437,438,439,-119,455,468,509,521,522,524,526,539,548,550,]),'PUBLIC':([4,9,13,15,16,17,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,183,220,225,227,232,234,237,238,239,240,273,274,277,279,280,302,305,311,312,329,339,340,341,342,343,355,356,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,532,533,539,547,548,550,],[6,10,10,-27,-28,-29,176,176,176,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,176,176,-194,-98,176,176,176,176,-63,-61,-62,-67,-61,-66,-93,-95,-97,-193,-196,-47,-48,-34,-92,-94,-96,-89,-91,-195,-203,-32,-33,176,-88,-90,176,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,176,-135,-152,176,176,176,176,-120,-120,-127,176,-137,-125,-122,-126,-123,176,-143,-130,-183,-156,-157,176,-202,-138,-144,-131,-158,-159,]),'CLASS':([6,],[7,]),'VARIABLE':([7,28,30,31,32,33,34,35,57,59,60,61,62,63,66,69,72,86,88,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,160,161,162,163,164,165,166,167,170,178,179,185,186,188,189,191,192,193,194,195,207,216,218,219,220,225,226,227,229,232,234,237,238,239,240,259,273,274,277,278,279,280,286,295,296,297,298,311,312,322,323,326,329,330,331,339,340,341,342,343,344,345,359,360,361,362,367,383,384,385,389,391,392,394,396,402,403,406,409,410,412,413,425,429,431,432,433,434,436,437,438,439,449,450,455,456,464,466,468,470,471,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,517,522,524,526,531,533,538,539,547,548,550,],[8,-106,-105,-107,-108,-109,-110,-111,-113,-112,-114,-115,-116,-117,76,79,82,94,96,123,123,123,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,209,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,213,-184,-185,-186,-187,215,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-105,-106,-107,-108,-109,-110,-124,123,123,236,237,241,243,-78,-79,-80,-81,-82,237,285,289,292,-98,123,285,123,243,123,123,-63,-61,-62,-67,243,-61,-66,-93,292,-95,-97,292,346,285,292,350,-47,-48,373,243,243,-34,243,381,-92,-94,-96,-89,-91,386,387,-32,-33,243,243,243,123,-88,-90,423,285,-103,426,123,-168,-169,435,-189,-182,-179,-181,-104,285,-49,-50,-170,-171,-153,-188,-178,-43,465,-134,-172,-136,123,-135,-152,123,285,123,123,123,-120,-120,-127,123,-137,-125,-122,-126,-123,123,-143,-130,528,-183,-156,-157,123,-138,243,-144,-131,-158,-159,]),'LKEY':([8,80,83,87,92,93,173,175,180,182,336,352,448,457,462,463,467,478,495,498,510,515,516,520,530,],[9,89,91,95,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,510,517,525,527,531,517,]),'STATIC':([9,10,11,13,15,16,17,18,20,25,183,302,305,355,356,532,],[14,21,23,26,-27,-28,-29,36,-84,-31,-194,-193,-196,-195,-203,-202,]),'ACTION':([9,13,15,16,17,183,302,305,355,356,532,],[19,19,-27,-28,-29,-194,-193,-196,-195,-203,-202,]),'PRIVATE':([9,13,15,16,17,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,183,220,225,227,232,234,237,238,239,240,273,274,277,279,280,302,305,311,312,329,339,340,341,342,343,355,356,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,532,533,539,547,548,550,],[20,20,-27,-28,-29,20,20,20,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,20,20,-194,-98,20,20,20,20,-63,-61,-62,-67,-61,-66,-93,-95,-97,-193,-196,-47,-48,-34,-92,-94,-96,-89,-91,-195,-203,-32,-33,20,-88,-90,20,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,20,-135,-152,20,20,20,20,-120,-120,-127,20,-137,-125,-122,-126,-123,20,-143,-130,-183,-156,-157,20,-202,-138,-144,-131,-158,-159,]),'RKEY':([12,22,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,184,220,228,231,237,238,239,240,243,245,246,247,248,249,250,251,252,253,254,255,256,257,273,274,277,279,280,299,301,304,306,308,311,312,329,339,340,341,342,343,354,358,359,360,363,364,366,384,385,402,403,409,410,412,413,417,418,419,428,431,432,433,434,436,437,438,439,450,455,456,466,468,477,481,486,487,488,489,490,492,494,499,500,501,502,503,509,511,514,518,519,521,522,524,526,533,534,535,536,537,539,540,541,546,547,548,549,550,551,552,],[24,39,183,-25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,-26,-98,302,305,-63,-61,-62,-67,-53,-37,-38,-39,-40,-41,-42,-61,-55,-56,-57,-35,-52,-54,-61,-66,-93,-95,-97,351,353,355,356,358,-47,-48,-34,-92,-94,-96,-89,-91,-197,-4,-32,-33,-35,-36,-44,-88,-90,-168,-169,-189,-182,-179,-181,442,-21,-140,450,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,-135,-152,490,494,499,500,501,502,-127,504,-137,-125,-122,-126,-123,511,-143,-130,523,529,-145,532,-183,-156,-157,-138,542,-160,544,-162,-144,-146,547,552,-131,-158,-161,-159,-163,-147,]),'VOID':([14,23,26,36,],[27,40,41,52,]),'CHARTYPE':([14,20,26,36,56,58,74,75,81,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,170,176,178,179,210,217,220,223,224,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,393,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,469,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[30,-84,30,30,30,30,30,30,30,162,162,162,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,30,30,-59,-60,-124,-83,162,162,30,30,-98,30,30,162,162,162,162,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,162,-88,-90,30,162,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,162,-135,-152,30,162,162,162,162,-120,-120,-127,162,-137,-125,-122,-126,-123,162,-143,-130,-183,-156,-157,162,-138,-144,-131,-158,-159,]),'STRINGTYPE':([14,20,26,36,37,55,56,58,74,75,81,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,170,176,178,179,210,217,220,221,223,224,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,393,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,469,470,472,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[28,-84,28,28,53,68,28,28,28,28,28,163,163,163,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,28,28,-59,-60,-124,-83,163,163,28,28,-98,293,28,28,163,163,163,163,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,163,-88,-90,28,163,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,163,-135,-152,28,163,483,163,163,163,-120,-120,-127,163,-137,-125,-122,-126,-123,163,-143,-130,-183,-156,-157,163,-138,-144,-131,-158,-159,]),'FLOATTYPE':([14,20,26,36,56,58,74,75,81,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,170,176,178,179,210,217,220,223,224,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,393,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,469,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[31,-84,31,31,31,31,31,31,31,164,164,164,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,31,31,-59,-60,-124,-83,164,164,31,31,-98,31,31,164,164,164,164,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,164,-88,-90,31,164,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,164,-135,-152,31,164,164,164,164,-120,-120,-127,164,-137,-125,-122,-126,-123,164,-143,-130,-183,-156,-157,164,-138,-144,-131,-158,-159,]),'DECIMALTYPE':([14,20,26,36,56,58,74,75,81,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,170,176,178,179,210,217,220,223,224,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,393,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,469,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[32,-84,32,32,32,32,32,32,32,165,165,165,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,32,32,-59,-60,-124,-83,165,165,32,32,-98,32,32,165,165,165,165,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,165,-88,-90,32,165,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,165,-135,-152,32,165,165,165,165,-120,-120,-127,165,-137,-125,-122,-126,-123,165,-143,-130,-183,-156,-157,165,-138,-144,-131,-158,-159,]),'INTTYPE':([14,20,26,36,56,58,74,75,81,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,170,176,178,179,210,217,220,221,223,224,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,393,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,469,470,473,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[33,-84,33,33,33,33,33,33,33,166,166,166,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,33,33,-59,-60,-124,-83,166,166,33,33,-98,294,33,33,166,166,166,166,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,166,-88,-90,33,166,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,166,-135,-152,33,166,484,166,166,166,-120,-120,-127,166,-137,-125,-122,-126,-123,166,-143,-130,-183,-156,-157,166,-138,-144,-131,-158,-159,]),'BOOLTYPE':([14,20,26,36,56,58,74,75,81,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,158,160,161,170,176,178,179,210,217,220,223,224,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,393,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,469,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[34,-84,34,34,34,34,34,34,34,167,167,167,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,34,34,-59,-60,-124,-83,167,167,34,34,-98,34,34,167,167,167,167,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,167,-88,-90,34,167,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,167,-135,-152,34,167,167,167,167,-120,-120,-127,167,-137,-125,-122,-126,-123,167,-143,-130,-183,-156,-157,167,-138,-144,-131,-158,-159,]),'SMALLER_THAN':([19,102,123,125,126,138,160,161,168,169,237,238,239,243,245,251,273,284,285,445,454,459,460,],[37,-61,197,197,-58,210,-59,-60,221,222,-63,-61,-62,197,197,-61,-61,197,197,461,469,472,473,]),'CONST':([20,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,157,160,161,170,176,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[-84,158,158,158,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,217,-59,-60,-124,-83,158,158,-98,158,158,158,158,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,158,-88,-90,158,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,158,-135,-152,158,158,158,158,-120,-120,-127,158,-137,-125,-122,-126,-123,158,-143,-130,-183,-156,-157,158,-138,-144,-131,-158,-159,]),'ASYNC':([21,],[38,]),'MAIN':([27,40,],[42,42,]),'METHOD':([27,28,29,30,31,32,33,34,35,41,51,52,54,56,57,58,59,60,61,62,63,74,75,81,189,229,259,307,323,326,330,361,362,367,538,],[43,-106,45,-105,-107,-108,-109,-110,-111,43,64,65,67,69,-113,69,-112,-114,-115,-116,-117,69,69,69,249,249,249,357,249,249,249,249,249,249,249,]),'READ':([28,30,31,32,33,34,35,57,59,60,61,62,63,89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,162,163,164,165,166,167,170,178,179,189,218,219,220,225,227,229,232,234,237,238,239,240,259,273,274,277,278,279,280,286,297,311,312,323,326,329,330,339,340,341,342,343,359,360,361,362,367,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,538,539,547,548,550,],[-106,-105,-107,-108,-109,-110,-111,-113,-112,-114,-115,-116,-117,124,124,124,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-111,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,214,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-105,-106,-107,-108,-109,-110,-124,124,124,258,214,214,-98,124,124,258,124,124,-63,-61,-62,-67,258,-61,-66,-93,214,-95,-97,214,214,-47,-48,258,258,-34,258,-92,-94,-96,-89,-91,-32,-33,258,258,258,124,-88,-90,124,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,124,-135,-152,124,124,124,124,-120,-120,-127,124,-137,-125,-122,-126,-123,124,-143,-130,-183,-156,-157,124,-138,258,-144,-131,-158,-159,]),'GREATER_THAN':([28,30,31,32,33,34,35,53,57,59,60,61,62,63,102,123,125,126,160,161,222,237,238,239,243,245,251,273,276,284,285,293,294,461,480,483,484,],[-106,-105,-107,-108,-109,-110,-111,66,-113,-112,-114,-115,-116,-117,-61,196,196,-58,-59,-60,295,-63,-61,-62,196,196,-61,-61,331,196,196,344,345,474,493,496,497,]),'LBRACKET':([28,30,31,32,33,34,68,123,162,163,164,165,166,167,189,229,259,275,323,326,330,361,362,367,538,],[44,46,47,48,49,50,78,188,46,44,47,48,49,50,259,259,259,330,259,259,259,259,259,259,259,]),'TASK':([38,181,],[54,233,]),'LPARENT':([42,43,45,64,65,67,122,124,150,171,172,174,214,258,260,261,262,263,264,265,266,267,268,269,270,271,357,382,395,397,398,458,474,493,496,497,],[55,56,58,74,75,77,185,206,216,223,224,226,281,314,317,318,319,320,321,322,323,324,325,326,327,328,398,416,427,429,430,471,485,505,507,508,]),'RBRACKET':([44,46,47,48,49,50,78,126,160,161,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,273,274,315,316,329,363,364,366,380,401,],[57,59,60,61,62,63,88,-58,-59,-60,-63,-61,-62,-67,311,312,-53,-37,-38,-39,-40,-41,-42,-61,-55,-56,-57,-35,-52,-54,-61,-66,366,-45,-34,-35,-36,-44,414,-46,]),'RPARENT':([70,71,73,77,79,82,84,85,90,96,126,160,161,206,235,236,237,238,239,240,243,245,246,247,248,249,250,251,252,253,254,255,256,257,273,274,281,283,300,314,317,318,324,325,327,328,329,363,364,366,370,371,373,374,377,416,426,430,435,446,447,451,465,482,485,504,505,507,508,],[80,-200,83,87,-199,-198,92,93,-201,182,-58,-59,-60,272,309,310,-63,-61,-62,-67,-53,-37,-38,-39,-40,-41,-42,-61,-55,-56,-57,-35,-52,-54,-61,-66,334,336,352,365,368,369,375,376,378,379,-34,-35,-36,-44,404,405,407,408,411,441,448,452,453,462,463,466,478,495,498,512,513,515,516,]),'COMMA':([71,79,82,126,160,161,211,237,238,239,240,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,273,274,287,290,316,329,332,334,337,348,349,363,364,366,372,519,528,535,537,552,],[81,-199,-198,-58,-59,-60,278,-63,-61,-62,-67,-53,-99,-37,-38,-39,-40,-41,-42,-61,-55,-56,-57,-35,-52,-54,-61,-66,278,278,367,-34,278,-100,278,391,393,-35,-36,-44,406,530,538,543,545,-147,]),'ASSIGNATION':([76,123,209,213,215,289,292,311,312,346,381,386,387,],[86,189,275,189,282,189,189,361,362,388,415,420,421,]),'PRINT':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[122,122,122,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,122,122,-98,122,122,122,122,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,122,-88,-90,122,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,122,-135,-152,122,122,122,122,-120,-120,-127,122,-137,-125,-122,-126,-123,122,-143,-130,-183,-156,-157,122,-138,-144,-131,-158,-159,]),'QUEUE':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,440,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[138,138,138,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,138,138,-98,138,138,138,138,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,138,-88,-90,138,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,454,-134,-172,-136,138,-135,-152,138,138,138,138,-120,-120,-127,138,-137,-125,-122,-126,-123,138,-143,-130,-183,-156,-157,138,-138,-144,-131,-158,-159,]),'STACK':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,335,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[144,144,144,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,144,144,-98,144,144,144,144,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,382,-92,-94,-96,-89,-91,-32,-33,144,-88,-90,144,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,144,-135,-152,144,144,144,144,-120,-120,-127,144,-137,-125,-122,-126,-123,144,-143,-130,-183,-156,-157,144,-138,-144,-131,-158,-159,]),'IF':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[150,150,150,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,150,150,-98,150,150,150,150,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,150,-88,-90,150,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,150,-135,-152,150,150,150,150,-120,-120,-127,150,-137,-125,-122,-126,-123,150,-143,-130,-183,-156,-157,150,-138,-144,-131,-158,-159,]),'INTEGER':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,216,220,225,226,227,229,232,234,237,238,239,240,259,273,274,277,279,280,296,311,312,320,323,326,329,330,339,340,341,342,343,359,360,361,362,367,383,384,385,391,392,396,402,403,409,410,412,413,425,429,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,471,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,527,531,533,538,539,545,547,548,550,],[126,126,126,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,126,126,126,240,242,126,-78,-79,-80,-81,-82,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,126,274,126,-98,126,126,126,126,126,126,-63,-61,-62,-67,126,-61,-66,-93,-95,-97,126,-47,-48,371,126,126,-34,126,-92,-94,-96,-89,-91,-32,-33,126,126,126,126,-88,-90,126,-103,126,-168,-169,-189,-182,-179,-181,-104,126,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,126,-135,-152,126,126,126,126,126,-120,-120,-127,126,-137,-125,-122,-126,-123,126,-143,-130,-183,-156,-157,537,126,-138,126,-144,537,-131,-158,-159,]),'FLOAT_NUMBER':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,186,189,191,192,193,194,195,207,216,220,225,226,227,229,232,234,237,238,239,240,259,273,274,277,279,280,296,311,312,323,326,329,330,339,340,341,342,343,359,360,361,362,367,383,384,385,391,392,396,402,403,409,410,412,413,425,429,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,471,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,538,539,547,548,550,],[160,160,160,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,160,160,160,160,-78,-79,-80,-81,-82,160,160,-98,160,160,160,160,160,160,-63,-61,-62,-67,160,-61,-66,-93,-95,-97,160,-47,-48,160,160,-34,160,-92,-94,-96,-89,-91,-32,-33,160,160,160,160,-88,-90,160,-103,160,-168,-169,-189,-182,-179,-181,-104,160,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,160,-135,-152,160,160,160,160,160,-120,-120,-127,160,-137,-125,-122,-126,-123,160,-143,-130,-183,-156,-157,160,-138,160,-144,-131,-158,-159,]),'DECIMAL_NUMBER':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,186,189,191,192,193,194,195,207,216,220,225,226,227,229,232,234,237,238,239,240,259,273,274,277,279,280,296,311,312,323,326,329,330,339,340,341,342,343,359,360,361,362,367,383,384,385,391,392,396,402,403,409,410,412,413,425,429,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,471,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,538,539,547,548,550,],[161,161,161,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,161,161,161,161,-78,-79,-80,-81,-82,161,161,-98,161,161,161,161,161,161,-63,-61,-62,-67,161,-61,-66,-93,-95,-97,161,-47,-48,161,161,-34,161,-92,-94,-96,-89,-91,-32,-33,161,161,161,161,-88,-90,161,-103,161,-168,-169,-189,-182,-179,-181,-104,161,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,161,-135,-152,161,161,161,161,161,-120,-120,-127,161,-137,-125,-122,-126,-123,161,-143,-130,-183,-156,-157,161,-138,161,-144,-131,-158,-159,]),'LIST':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,443,444,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[168,168,168,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,168,168,-98,168,168,168,168,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,168,-88,-90,168,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,459,460,-134,-172,-136,168,-135,-152,168,168,168,168,-120,-120,-127,168,-137,-125,-122,-126,-123,168,-143,-130,-183,-156,-157,168,-138,-144,-131,-158,-159,]),'DICTIONARY':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,422,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[169,169,169,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,169,169,-98,169,169,169,169,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,169,-88,-90,169,-168,-169,-189,-182,-179,-181,445,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,169,-135,-152,169,169,169,169,-120,-120,-127,169,-137,-125,-122,-126,-123,169,-143,-130,-183,-156,-157,169,-138,-144,-131,-158,-159,]),'FOR':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[171,171,171,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,171,171,-98,171,171,171,171,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,171,-88,-90,171,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,171,-135,-152,171,171,171,171,-120,-120,-127,171,-137,-125,-122,-126,-123,171,-143,-130,-183,-156,-157,171,-138,-144,-131,-158,-159,]),'FOREACH':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[172,172,172,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,172,172,-98,172,172,172,172,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,172,-88,-90,172,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,172,-135,-152,172,172,172,172,-120,-120,-127,172,-137,-125,-122,-126,-123,172,-143,-130,-183,-156,-157,172,-138,-144,-131,-158,-159,]),'TRY':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[173,173,173,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,173,173,-98,173,173,173,173,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,173,-88,-90,173,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,173,-135,-152,173,173,173,173,-120,-120,-127,173,-137,-125,-122,-126,-123,173,-143,-130,-183,-156,-157,173,-138,-144,-131,-158,-159,]),'WHILE':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,353,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[174,174,174,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,174,174,-98,174,174,174,174,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,397,-32,-33,174,-88,-90,174,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,174,-135,-152,174,174,174,174,-120,-120,-127,174,-137,-125,-122,-126,-123,174,-143,-130,-183,-156,-157,174,-138,-144,-131,-158,-159,]),'DO':([89,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,178,179,220,225,227,232,234,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,383,384,385,396,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,464,466,468,470,475,476,479,486,488,490,491,494,499,500,501,502,506,509,511,522,524,526,531,533,539,547,548,550,],[175,175,175,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,175,175,-98,175,175,175,175,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,175,-88,-90,175,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,175,-135,-152,175,175,175,175,-120,-120,-127,175,-137,-125,-122,-126,-123,175,-143,-130,-183,-156,-157,175,-138,-144,-131,-158,-159,]),'ARROW':([94,452,],[180,467,]),'AWAIT':([95,],[181,]),'RETURN':([98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,133,134,135,136,137,140,141,142,143,145,146,147,148,149,151,152,153,154,155,156,160,161,170,177,184,220,230,237,238,239,240,273,274,277,279,280,311,312,329,339,340,341,342,343,359,360,384,385,402,403,409,410,412,413,431,432,433,434,436,437,438,439,450,455,456,466,468,490,494,499,500,501,502,509,511,522,524,526,533,539,547,548,550,],[-25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-85,-86,-87,-63,-62,-58,-154,-155,-164,-165,-166,-167,-141,-142,-150,-151,-184,-185,-186,-187,-173,-174,-175,-176,-177,-120,-121,-128,-129,-132,-133,-59,-60,-124,229,-26,-98,229,-63,-61,-62,-67,-61,-66,-93,-95,-97,-47,-48,-34,-92,-94,-96,-89,-91,-32,-33,-88,-90,-168,-169,-189,-182,-179,-181,-49,-50,-170,-171,-153,-188,-178,-43,-134,-172,-136,-135,-152,-127,-137,-125,-122,-126,-123,-143,-130,-183,-156,-157,-138,-144,-131,-158,-159,]),'PLUS':([102,123,125,126,160,161,237,238,239,243,245,251,255,273,284,285,363,],[-61,191,191,-58,-59,-60,191,-61,191,191,191,-61,313,-61,191,191,313,]),'MINUS':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,192,192,-58,-59,-60,192,-61,192,192,192,-61,-61,192,192,]),'TIMES':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,193,193,-58,-59,-60,193,-61,193,193,193,-61,-61,193,193,]),'DIVIDE':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,194,194,-58,-59,-60,194,-61,194,194,194,-61,-61,194,194,]),'PERCENT':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,195,195,-58,-59,-60,195,-61,195,195,195,-61,-61,195,195,]),'EQUAL_COMPARATION':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,198,198,-58,-59,-60,-63,-61,-62,198,198,-61,-61,198,198,]),'INEQUALITY':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,199,199,-58,-59,-60,-63,-61,-62,199,199,-61,-61,199,199,]),'GREATER_THAN_OR_EQUAL':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,200,200,-58,-59,-60,-63,-61,-62,200,200,-61,-61,200,200,]),'SMALLER_THAN_OR_EQUAL':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,201,201,-58,-59,-60,-63,-61,-62,201,201,-61,-61,201,201,]),'LOGICAND':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,202,202,-58,-59,-60,-63,-61,-62,202,202,-61,-61,202,202,]),'LOGICOR':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,203,203,-58,-59,-60,-63,-61,-62,203,203,-61,-61,203,203,]),'LOGICNOT':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,204,204,-58,-59,-60,-63,-61,-62,204,204,-61,-61,204,204,]),'LOGICXOR':([102,123,125,126,160,161,237,238,239,243,245,251,273,284,285,],[-61,205,205,-58,-59,-60,-63,-61,-62,205,205,-61,-61,205,205,]),'DOT':([123,233,],[190,307,]),'STRING':([185,189,229,259,313,319,321,323,326,330,361,362,367,525,538,543,],[235,255,255,255,363,370,372,255,255,255,255,255,255,535,255,535,]),'BOOLTRUE':([189,229,259,323,326,330,361,362,367,538,],[252,252,252,252,252,252,252,252,252,252,]),'BOOLFALSE':([189,229,259,323,326,330,361,362,367,538,],[253,253,253,253,253,253,253,253,253,253,]),'CHAR':([189,229,259,323,326,330,361,362,367,538,],[256,256,256,256,256,256,256,256,256,256,]),'CLEAR':([190,],[260,]),'COUNT':([190,],[261,]),'ADD':([190,],[262,]),'REMOVEAT':([190,],[263,]),'PUT':([190,],[264,]),'REMOVE':([190,],[265,]),'ENQUEUE':([190,],[266,]),'DEQUEUE':([190,],[267,]),'ISEMPTY':([190,],[268,]),'PUSH':([190,],[269,]),'POP':([190,],[270,]),'PEEK':([190,],[271,]),'NEW':([282,388,415,420,421,],[335,422,440,443,444,]),'IN':([350,],[394,]),'CATCH':([351,],[395,]),'INCREMENT':([423,],[446,]),'DECREMENT':([423,],[447,]),'EXCEPTION':([427,],[449,]),'ELSE':([442,523,],[457,457,]),'ELSE_IF':([442,523,],[458,458,]),'FINALLY':([511,],[520,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'all_method_definitions':([9,13,],[11,25,]),'block_main_method':([9,11,],[12,22,]),'method_definition':([9,13,],[13,13,]),'simple_method':([9,13,],[15,15,]),'declaration_async':([9,13,],[16,16,]),'declaration_lambda':([9,13,],[17,17,]),'access_modifiers':([9,13,89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[18,18,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'data_type':([14,26,36,56,58,74,75,81,89,91,98,157,158,178,179,210,217,223,224,225,227,232,234,383,393,396,464,469,470,475,476,479,491,506,531,],[29,29,51,72,72,72,72,72,139,139,139,218,219,139,139,276,286,297,298,139,139,139,139,139,297,139,139,480,139,139,139,139,139,139,139,]),'array_type':([14,26,36,56,58,74,75,81,89,91,98,157,158,178,179,210,217,223,224,225,227,232,234,383,393,396,464,469,470,475,476,479,491,506,531,],[35,35,35,35,35,35,35,35,127,127,127,35,35,127,127,35,35,35,35,127,127,127,127,127,35,127,127,35,127,127,127,127,127,127,127,]),'function_arguments':([56,58,74,75,81,],[70,73,84,85,90,]),'function_argument':([56,58,74,75,81,],[71,71,71,71,71,]),'all_block_code':([89,91,98,178,179,225,227,234,396,464,475,476,491,531,],[97,177,184,230,231,299,301,308,428,477,487,489,503,541,]),'block_code':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[98,98,98,98,98,98,98,306,98,419,98,98,419,98,98,492,98,419,98,]),'def_const_or_var':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'print_data':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'read_data':([89,91,98,178,179,189,225,227,229,232,234,259,323,326,330,361,362,367,383,396,464,470,475,476,479,491,506,531,538,],[101,101,101,101,101,248,101,101,248,101,101,248,248,248,248,248,248,248,101,101,101,101,101,101,101,101,101,101,248,]),'arithmetic_operation':([89,91,98,178,179,186,189,207,216,225,226,227,229,232,234,259,296,323,326,330,361,362,367,383,391,396,429,464,470,471,475,476,479,491,506,531,538,],[102,102,102,102,102,238,251,273,251,102,251,102,251,102,102,251,251,251,251,251,251,251,251,102,251,102,251,102,102,251,102,102,102,102,102,102,251,]),'logic_operation':([89,91,98,178,179,189,216,225,226,227,229,232,234,259,296,323,326,330,361,362,367,383,391,396,429,464,470,471,475,476,479,491,506,531,538,],[103,103,103,103,103,254,283,103,300,103,254,103,103,254,348,254,254,254,254,254,254,103,348,103,451,103,103,482,103,103,103,103,103,103,254,]),'array_assignation':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'array_value_assign':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'array_indexing':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'lists':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'functions_list':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'dict_estruct':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'functions_dict':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'queue_struct':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'functions_queue':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'stack_struct':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'functions_stack':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'block_if':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[115,115,115,115,115,115,115,115,115,418,115,115,418,115,115,115,115,418,115,]),'block_for':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'block_try_catch':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'block_while':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'constant_assignation':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'variable_assignation':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'late_initialization':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'value_numeric':([89,91,98,178,179,186,189,207,216,225,226,227,229,232,234,259,296,323,326,330,361,362,367,383,391,396,429,464,470,471,475,476,479,491,506,531,538,],[125,125,125,125,125,239,245,239,284,125,284,125,245,125,125,245,284,245,245,245,245,245,245,125,284,125,284,125,125,284,125,125,125,125,125,125,245,]),'list_empty':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'list_full':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'list_func_clear':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'list_func_count':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'list_func_add':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'list_func_removeat':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'dict_empty':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'dict_full':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'dict_func_put':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'dict_func_remove':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'queue_enqueue':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'queue_dequeue':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'queue_clear':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'queue_isEmpty':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'stack_push':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'stack_pop':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'stack_clear':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'stack_peek':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'stack_isEmpty':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'for_anidado':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[151,151,151,151,151,151,151,151,151,151,151,151,151,486,488,151,151,151,151,]),'for_each':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'try_catch_simply':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'try_catch_finally':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'normal_while':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'do_while':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'assignation_key_value':([89,91,98,139,178,179,218,219,225,227,232,234,278,286,297,383,396,464,470,475,476,479,491,506,531,],[159,159,159,211,159,159,287,290,159,159,159,159,332,337,349,159,159,159,159,159,159,159,159,159,159,]),'for_simple':([89,91,98,178,179,225,227,232,234,383,396,464,470,475,476,479,491,506,531,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'arithmetic_operator':([123,125,237,239,243,245,284,285,],[186,207,186,207,186,207,207,186,]),'logic_operator':([123,125,243,245,284,285,],[187,208,187,208,208,187,]),'assignation_key_value_multiple':([139,218,219,278,286,],[212,288,291,333,338,]),'function_return':([177,230,],[228,304,]),'value':([189,229,259,323,326,330,361,362,367,538,],[244,303,316,374,377,316,399,400,316,546,]),'value_logic':([189,229,259,323,326,330,361,362,367,538,],[246,246,246,246,246,246,246,246,246,246,]),'value_string':([189,229,259,323,326,330,361,362,367,538,],[247,247,247,247,247,247,247,247,247,247,]),'array':([189,229,259,323,326,330,361,362,367,538,],[250,250,250,250,250,250,250,250,250,250,]),'concatenation':([189,229,259,313,323,326,330,361,362,367,538,],[257,257,257,364,257,257,257,257,257,257,257,]),'assignation_with_datatype':([223,393,],[296,425,]),'array_content':([259,330,367,],[315,380,401,]),'logic_operations':([296,391,],[347,424,]),'not_yes_nested_if':([383,470,506,],[417,481,514,]),'other_if':([442,523,],[456,533,]),'key_value_pairs':([510,530,],[518,540,]),'key_value_pair':([510,530,],[519,519,]),'strings_list':([525,543,],[534,549,]),'ints_list':([527,545,],[536,551,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico.py',68),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY','block_publicClass',7,'p_block_publicClass','sintactico.py',71),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',72),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico.py',76),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',80),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',81),
  ('block_code -> read_data','block_code',1,'p_block_code','sintactico.py',82),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico.py',83),
  ('block_code -> logic_operation','block_code',1,'p_block_code','sintactico.py',84),
  ('block_code -> array_assignation','block_code',1,'p_block_code','sintactico.py',85),
  ('block_code -> array_value_assign','block_code',1,'p_block_code','sintactico.py',86),
  ('block_code -> array_indexing','block_code',1,'p_block_code','sintactico.py',87),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico.py',89),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',90),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',92),
  ('block_code -> functions_dict','block_code',1,'p_block_code','sintactico.py',93),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico.py',95),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico.py',96),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico.py',98),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico.py',99),
  ('block_code -> block_if','block_code',1,'p_block_code','sintactico.py',101),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico.py',103),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',105),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico.py',107),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',111),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',112),
  ('method_definition -> simple_method','method_definition',1,'p_method_definition','sintactico.py',116),
  ('method_definition -> declaration_async','method_definition',1,'p_method_definition','sintactico.py',117),
  ('method_definition -> declaration_lambda','method_definition',1,'p_method_definition','sintactico.py',118),
  ('all_method_definitions -> method_definition','all_method_definitions',1,'p_all_method_definitions','sintactico.py',122),
  ('all_method_definitions -> method_definition all_method_definitions','all_method_definitions',2,'p_all_method_definitions','sintactico.py',123),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',128),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',129),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico.py',133),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',137),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',138),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',142),
  ('value -> value_logic','value',1,'p_value','sintactico.py',143),
  ('value -> value_string','value',1,'p_value','sintactico.py',144),
  ('value -> read_data','value',1,'p_value','sintactico.py',145),
  ('value -> METHOD','value',1,'p_value','sintactico.py',146),
  ('value -> array','value',1,'p_value','sintactico.py',147),
  ('array_assignation -> array_type VARIABLE ASSIGNATION LBRACKET array_content RBRACKET DOTANDCOMMA','array_assignation',7,'p_array_assignation','sintactico.py',151),
  ('array -> LBRACKET array_content RBRACKET','array',3,'p_array','sintactico.py',154),
  ('array_content -> value','array_content',1,'p_array_content','sintactico.py',157),
  ('array_content -> value COMMA array_content','array_content',3,'p_array_content','sintactico.py',158),
  ('array_indexing -> VARIABLE LBRACKET VARIABLE RBRACKET','array_indexing',4,'p_array_indexing','sintactico.py',162),
  ('array_indexing -> VARIABLE LBRACKET INTEGER RBRACKET','array_indexing',4,'p_array_indexing','sintactico.py',163),
  ('array_value_assign -> VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico.py',167),
  ('array_value_assign -> VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico.py',168),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',172),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',173),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',174),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',175),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',179),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',180),
  ('value_logic -> logic_operation','value_logic',1,'p_value_logic','sintactico.py',181),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',185),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',186),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',187),
  ('value_numeric -> arithmetic_operation','value_numeric',1,'p_value_numeric','sintactico.py',188),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',193),
  ('arithmetic_operation -> VARIABLE','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',194),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',195),
  ('arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',196),
  ('logic_operation -> value_numeric logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',200),
  ('logic_operation -> VARIABLE logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',201),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',205),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',206),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',207),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',208),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',209),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',210),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',211),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',212),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',213),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',214),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',218),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',219),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',220),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',221),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',222),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',227),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',228),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',232),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',233),
  ('def_const_or_var -> late_initialization','def_const_or_var',1,'p_def_const_or_var','sintactico.py',234),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',238),
  ('constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',239),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',240),
  ('constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',241),
  ('variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',245),
  ('variable_assignation -> data_type assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',246),
  ('variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',247),
  ('variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',248),
  ('late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA','late_initialization',4,'p_late_initialization','sintactico.py',252),
  ('late_initialization -> data_type VARIABLE DOTANDCOMMA','late_initialization',3,'p_late_initialization','sintactico.py',253),
  ('late_initialization -> assignation_key_value DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',254),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',258),
  ('assignation_key_value -> READ LPARENT RPARENT','assignation_key_value',3,'p_assignation_key_value','sintactico.py',259),
  ('assignation_key_value_multiple -> assignation_key_value','assignation_key_value_multiple',1,'p_assignation_key_value_multiple','sintactico.py',263),
  ('assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple','assignation_key_value_multiple',3,'p_assignation_key_value_multiple','sintactico.py',264),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',268),
  ('assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',269),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',273),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',274),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',275),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',276),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',277),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',278),
  ('data_type -> array_type','data_type',1,'p_data_type','sintactico.py',279),
  ('array_type -> CHARTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',283),
  ('array_type -> STRINGTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',284),
  ('array_type -> FLOATTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',285),
  ('array_type -> DECIMALTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',286),
  ('array_type -> INTTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',287),
  ('array_type -> BOOLTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',288),
  ('logic_operations -> logic_operation DOTANDCOMMA','logic_operations',2,'p_logic_operations','sintactico.py',294),
  ('logic_operations -> logic_operation COMMA logic_operations','logic_operations',3,'p_logic_operations','sintactico.py',295),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',299),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',300),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',304),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',305),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',310),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',311),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',312),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico.py',316),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',320),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',321),
  ('try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',325),
  ('try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',328),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',332),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',333),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',337),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',340),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',343),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',347),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',348),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',353),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',354),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',363),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',364),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',370),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',375),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',380),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',381),
  ('key_value_pair -> LKEY VARIABLE COMMA value RKEY','key_value_pair',5,'p_key_value_pair','sintactico.py',386),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',391),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',392),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',397),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',398),
  ('dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',403),
  ('dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',408),
  ('lists -> list_empty','lists',1,'p_lists','sintactico.py',414),
  ('lists -> list_full','lists',1,'p_lists','sintactico.py',415),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',419),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',420),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',424),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',425),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',429),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',430),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',434),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',435),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',439),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',440),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',441),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',442),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',446),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',449),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',452),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',455),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico.py',458),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico.py',461),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico.py',462),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico.py',463),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico.py',464),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico.py',465),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico.py',469),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico.py',472),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico.py',475),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico.py',478),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico.py',481),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',14,'p_queue_struct','sintactico.py',484),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico.py',488),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico.py',489),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico.py',490),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico.py',491),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico.py',495),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico.py',499),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico.py',503),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico.py',507),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico.py',511),
  ('simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',10,'p_simple_method','sintactico.py',518),
  ('simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY','simple_method',9,'p_simple_method','sintactico.py',519),
  ('simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',11,'p_simple_method','sintactico.py',520),
  ('simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY','simple_method',10,'p_simple_method','sintactico.py',521),
  ('function_return -> RETURN value DOTANDCOMMA','function_return',3,'p_function_return','sintactico.py',525),
  ('function_argument -> data_type VARIABLE','function_argument',2,'p_function_argument','sintactico.py',529),
  ('function_argument -> METHOD VARIABLE','function_argument',2,'p_function_argument','sintactico.py',530),
  ('function_arguments -> function_argument','function_arguments',1,'p_function_arguments','sintactico.py',534),
  ('function_arguments -> function_argument COMMA function_arguments','function_arguments',3,'p_function_arguments','sintactico.py',535),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',539),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',543),
]
