
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DICTIONARY DIVIDE DIVISION_ASSIGNMENT DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC RBRACKET READ REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYall_block_code : block_code\n                        | block_code all_block_code  \n    block_code : def_const_or_var\n                    | estruct_of_data\n                    | block_try_catch\n                    | VARIABLE\n                    | declaration_dict\n                    | functions_list\n                    | declaration_lambda\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers all_asignations\n                            | all_asignations\n\n    constant_assignation : access_modifiers CONST all_asignations\n                            | CONST all_asignations\n                            | CONST data_type assignation_key_value COMMA some_assignation_constant\n    all_asignations : assignation_with_datatype\n                        | assignation_without_datatype\n    assignation_with_datatype : data_type assignation_key_value DOTANDCOMMA\n                            | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype   \n                            | data_type assignation_key_value DOTANDCOMMA assignation_without_datatype                     \n    assignation_without_datatype : assignation_key_value DOTANDCOMMA\n                                    | assignation_key_value DOTANDCOMMA assignation_without_datatype\n                                    | assignation_key_value DOTANDCOMMA assignation_with_datatype\n    some_assignation_constant : assignation_key_value DOTANDCOMMA\n                                | assignation_key_value COMMA some_assignation_constant\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    value    : value_numeric\n                | value_logic\n                | value_string\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    declaration_dict : DICTIONARY VARIABLE ASSIGNATION dictionary_valuedictionary_value : LKEY key_value_pairs RKEYkey_value_pairs : key_value_pair\n                       | key_value_pair COMMA key_value_pairskey_value_pair : STRING DOUBLEPOINT valuevalueHash : INTTYPE\n             | STRINGestruct_of_data : list_empty\n                        | list_full\n    list_empty : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list : STRING\n                    | STRING COMMA strings_list\n    ints_list : INTEGER\n                | INTEGER COMMA ints_list\n    functions_list : list_func_clear\n                        | list_func_count\n                        | list_func_add\n                        | list_func_removeat\n    list_func_clear : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAdeclaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,51,],[0,-1,-3,]),'PUBLIC':([2,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[5,-2,11,-9,11,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-15,-18,-25,11,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,11,-52,-87,-88,11,-89,-90,-53,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,38,60,68,69,70,71,72,73,74,75,76,77,78,79,81,85,107,108,111,112,113,118,125,126,163,164,],[8,61,86,-42,-30,-37,-38,-39,-47,-48,-49,-45,-46,-40,-41,-44,86,123,124,-60,-61,-43,131,136,137,166,168,]),'VARIABLE':([7,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,40,42,43,44,45,46,47,48,50,55,56,58,59,61,63,84,86,87,88,98,100,101,102,103,104,105,119,123,124,127,129,130,131,132,136,137,141,144,153,156,162,166,168,170,176,178,180,],[9,12,-54,-9,12,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,53,-95,-96,-97,-98,-32,57,57,-16,57,-35,-55,-20,-21,-31,-33,-34,-36,68,57,-15,-18,57,57,12,-17,57,-26,-27,-78,117,57,-23,-24,120,121,-19,-99,-100,-79,68,140,-28,57,-101,-102,-29,148,-103,12,-52,-87,-88,12,-89,-90,-53,]),'LKEY':([9,41,82,145,152,163,164,165,],[10,63,99,149,156,167,169,170,]),'DICTIONARY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[27,-9,27,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-15,-18,-25,27,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,27,-52,-87,-88,27,-89,-90,-53,]),'ACTION':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[32,-9,32,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-15,-18,-25,32,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,32,-52,-87,-88,32,-89,-90,-53,]),'CONST':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,36,42,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[35,-54,-9,35,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,55,-16,-55,-20,-21,-15,-18,-25,35,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,35,-52,-87,-88,35,-89,-90,-53,]),'LIST':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,142,143,153,156,162,166,168,170,176,178,180,],[39,-9,39,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-15,-18,-25,39,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,146,147,-103,39,-52,-87,-88,39,-89,-90,-53,]),'TRY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[41,-9,41,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-15,-18,-25,41,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,41,-52,-87,-88,41,-89,-90,-53,]),'PRIVATE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[42,-9,42,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-15,-18,-25,42,-17,-22,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,42,-52,-87,-88,42,-89,-90,-53,]),'CHARTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,35,36,42,43,44,55,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[45,-54,-9,45,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,45,45,-16,-55,-20,-21,45,-15,-18,45,45,-17,45,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,45,-52,-87,-88,45,-89,-90,-53,]),'STRINGTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,35,36,42,43,44,54,55,56,58,61,62,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,150,153,156,162,166,168,170,176,178,180,],[33,-54,-9,33,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,33,33,-16,-55,-20,-21,83,33,-15,-18,33,89,33,-17,33,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,154,-103,33,-52,-87,-88,33,-89,-90,-53,]),'FLOATTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,35,36,42,43,44,55,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[46,-54,-9,46,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,46,46,-16,-55,-20,-21,46,-15,-18,46,46,-17,46,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,46,-52,-87,-88,46,-89,-90,-53,]),'DECIMALTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,35,36,42,43,44,55,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[47,-54,-9,47,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,47,47,-16,-55,-20,-21,47,-15,-18,47,47,-17,47,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,47,-52,-87,-88,47,-89,-90,-53,]),'INTTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,35,36,42,43,44,55,56,58,61,62,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,151,153,156,162,166,168,170,176,178,180,],[40,-54,-9,40,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,40,40,-16,-55,-20,-21,40,-15,-18,40,90,40,-17,40,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,155,-103,40,-52,-87,-88,40,-89,-90,-53,]),'BOOLTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,35,36,42,43,44,55,56,58,61,63,84,86,87,88,98,102,103,119,123,124,127,131,136,137,141,153,156,162,166,168,170,176,178,180,],[48,-54,-9,48,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,48,48,-16,-55,-20,-21,48,-15,-18,48,48,-17,48,-26,-27,-78,-23,-24,-19,-99,-100,-79,-28,-101,-102,-29,-103,48,-52,-87,-88,48,-89,-90,-53,]),'RKEY':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,36,43,44,52,56,58,61,68,70,71,72,73,74,75,76,77,78,79,81,84,86,87,88,91,98,102,103,111,112,113,114,115,119,123,124,127,131,136,137,138,139,141,149,153,159,162,166,168,171,172,173,174,175,176,178,180,181,182,],[-9,51,-4,-6,-7,-8,-10,-11,-12,-13,-14,-85,-86,-50,-51,-95,-96,-97,-98,-16,-20,-21,-5,-15,-18,-25,-42,-37,-38,-39,-47,-48,-49,-45,-46,-40,-41,-44,-17,-22,-26,-27,106,-78,-23,-24,-60,-61,-43,127,-80,-19,-99,-100,-79,-28,-101,-102,-81,-82,-29,153,-103,162,-52,-87,-88,176,-91,178,-93,180,-89,-90,-53,-92,-94,]),'DOT':([12,],[49,]),'ASSIGNATION':([12,53,57,117,120,121,],[50,82,50,130,133,134,]),'SMALLER_THAN':([32,39,146,147,],[54,62,150,151,]),'CLEAR':([49,],[64,]),'COUNT':([49,],[65,]),'ADD':([49,],[66,]),'REMOVEAT':([49,],[67,]),'INTEGER':([50,95,129,169,179,],[73,110,73,174,174,]),'FLOAT_NUMBER':([50,129,],[74,74,]),'DECIMAL_NUMBER':([50,129,],[75,75,]),'BOOLTRUE':([50,129,],[76,76,]),'BOOLFALSE':([50,129,],[77,77,]),'STRING':([50,94,96,99,128,129,167,177,],[78,109,111,116,116,78,172,172,]),'CHAR':([50,129,],[79,79,]),'READ':([50,129,],[80,80,]),'LPARENT':([64,65,66,67,80,122,157,158,],[92,93,94,95,97,135,160,161,]),'COMMA':([68,69,70,71,72,73,74,75,76,77,78,79,81,85,111,112,113,115,118,139,172,174,],[-42,-30,-37,-38,-39,-47,-48,-49,-45,-46,-40,-41,-44,101,-60,-61,-43,128,132,-82,177,179,]),'PLUS':([78,111,],[96,96,]),'GREATER_THAN':([83,89,90,154,155,],[100,104,105,157,158,]),'RPARENT':([92,93,97,109,110,148,160,161,],[107,108,113,125,126,152,163,164,]),'CATCH':([106,],[122,]),'DOUBLEPOINT':([116,],[129,]),'NEW':([133,134,],[142,143,]),'EXCEPTION':([135,],[144,]),'ARROW':([140,],[145,]),'FINALLY':([162,],[165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_using':([0,],[2,]),'block_publicClass':([2,],[4,]),'all_block_code':([10,14,],[13,52,]),'block_code':([10,14,63,156,170,],[14,14,91,159,175,]),'def_const_or_var':([10,14,63,156,170,],[15,15,15,15,15,]),'estruct_of_data':([10,14,63,156,170,],[16,16,16,16,16,]),'block_try_catch':([10,14,63,156,170,],[17,17,17,17,17,]),'declaration_dict':([10,14,63,156,170,],[18,18,18,18,18,]),'functions_list':([10,14,63,156,170,],[19,19,19,19,19,]),'declaration_lambda':([10,14,63,156,170,],[20,20,20,20,20,]),'constant_assignation':([10,14,63,156,170,],[21,21,21,21,21,]),'variable_assignation':([10,14,63,156,170,],[22,22,22,22,22,]),'list_empty':([10,14,63,156,170,],[23,23,23,23,23,]),'list_full':([10,14,63,156,170,],[24,24,24,24,24,]),'try_catch_simply':([10,14,63,156,170,],[25,25,25,25,25,]),'try_catch_finally':([10,14,63,156,170,],[26,26,26,26,26,]),'list_func_clear':([10,14,63,156,170,],[28,28,28,28,28,]),'list_func_count':([10,14,63,156,170,],[29,29,29,29,29,]),'list_func_add':([10,14,63,156,170,],[30,30,30,30,30,]),'list_func_removeat':([10,14,63,156,170,],[31,31,31,31,31,]),'access_modifiers':([10,14,63,156,170,],[34,34,34,34,34,]),'all_asignations':([10,14,34,35,55,63,156,170,],[36,36,56,58,84,36,36,36,]),'data_type':([10,14,34,35,55,61,63,86,156,170,],[37,37,37,59,37,37,37,37,37,37,]),'assignation_key_value':([10,14,34,35,37,55,59,61,63,86,101,132,156,170,],[38,38,38,38,60,38,85,38,38,38,118,118,38,38,]),'assignation_with_datatype':([10,14,34,35,55,61,63,86,156,170,],[43,43,43,43,43,88,43,102,43,43,]),'assignation_without_datatype':([10,14,34,35,55,61,63,86,156,170,],[44,44,44,44,44,87,44,103,44,44,]),'value':([50,129,],[69,139,]),'value_numeric':([50,129,],[70,70,]),'value_logic':([50,129,],[71,71,]),'value_string':([50,129,],[72,72,]),'concatenation':([50,96,129,],[81,112,81,]),'dictionary_value':([82,],[98,]),'key_value_pairs':([99,128,],[114,138,]),'key_value_pair':([99,128,],[115,115,]),'some_assignation_constant':([101,132,],[119,141,]),'strings_list':([167,177,],[171,181,]),'ints_list':([169,179,],[173,182,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',40),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',43),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',46),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',50),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',51),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',55),
  ('block_code -> estruct_of_data','block_code',1,'p_block_code','sintactico.py',56),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',57),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',58),
  ('block_code -> declaration_dict','block_code',1,'p_block_code','sintactico.py',59),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',60),
  ('block_code -> declaration_lambda','block_code',1,'p_block_code','sintactico.py',61),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',67),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',68),
  ('variable_assignation -> access_modifiers all_asignations','variable_assignation',2,'p_variable_assignation','sintactico.py',72),
  ('variable_assignation -> all_asignations','variable_assignation',1,'p_variable_assignation','sintactico.py',73),
  ('constant_assignation -> access_modifiers CONST all_asignations','constant_assignation',3,'p_constant_assignation','sintactico.py',78),
  ('constant_assignation -> CONST all_asignations','constant_assignation',2,'p_constant_assignation','sintactico.py',79),
  ('constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant','constant_assignation',5,'p_constant_assignation','sintactico.py',80),
  ('all_asignations -> assignation_with_datatype','all_asignations',1,'p_all_asignations','sintactico.py',84),
  ('all_asignations -> assignation_without_datatype','all_asignations',1,'p_all_asignations','sintactico.py',85),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',89),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',90),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',91),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA','assignation_without_datatype',2,'p_assignation_without_datatype','sintactico.py',95),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',96),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',97),
  ('some_assignation_constant -> assignation_key_value DOTANDCOMMA','some_assignation_constant',2,'p_some_assignation_constant','sintactico.py',101),
  ('some_assignation_constant -> assignation_key_value COMMA some_assignation_constant','some_assignation_constant',3,'p_some_assignation_constant','sintactico.py',102),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',106),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',109),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',110),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',111),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',112),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',113),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',114),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',123),
  ('value -> value_logic','value',1,'p_value','sintactico.py',124),
  ('value -> value_string','value',1,'p_value','sintactico.py',125),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',129),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',130),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',131),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',132),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',133),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',137),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',138),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',142),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',143),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',144),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',153),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',154),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',158),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',161),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',165),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',166),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',176),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',177),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',181),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',182),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',186),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',187),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',191),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',192),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',193),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',194),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',195),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',196),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',197),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',198),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',199),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',200),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',204),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',205),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',206),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',207),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',208),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',212),
  ('declaration_dict -> DICTIONARY VARIABLE ASSIGNATION dictionary_value','declaration_dict',4,'p_declaration_dict','sintactico.py',220),
  ('dictionary_value -> LKEY key_value_pairs RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',223),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',226),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',227),
  ('key_value_pair -> STRING DOUBLEPOINT value','key_value_pair',3,'p_key_value_pair','sintactico.py',230),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',234),
  ('valueHash -> STRING','valueHash',1,'p_valueHash','sintactico.py',235),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',240),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',241),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',245),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',246),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',250),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',251),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',255),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',256),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',260),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',261),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',265),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',266),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',267),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',268),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',272),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',275),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',278),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',281),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY','declaration_lambda',10,'p_declration_lambda','sintactico.py',289),
]
