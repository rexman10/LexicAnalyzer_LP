
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION_ASSIGNMENT ASSIGNATION BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS COMMA CONST DECIMALTYPE DECIMAL_NUMBER DECREMENT DIVIDE DIVISION_ASSIGNMENT DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR GREATER_THAN GREATER_THAN_OR_EQUAL IF INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC RBRACKET READ RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY block_code RKEYblock_code : def_const_or_var\n                    | block_try_catch\n                    | VARIABLE\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers data_type multi_or_one_assignation DOTANDCOMMA\n                                    | data_type multi_or_one_assignation DOTANDCOMMA\n                                    | data_type VARIABLE DOTANDCOMMA\n                                    | multi_or_one_assignation DOTANDCOMMA\n                                    | data_type block_assignations\n\n    constant_assignation : access_modifiers CONST data_type multi_or_one_assignation DOTANDCOMMA\n                            | CONST data_type multi_or_one_assignation DOTANDCOMMA\n                            | CONST data_type VARIABLE DOTANDCOMMA\n                            | CONST data_type block_assignations\n    block_assignations : assignation_key_value DOTANDCOMMA\n                            | assignation_key_value DOTANDCOMMA block_assignations                       \n    multi_or_one_assignation : assignation_key_value\n                                | assignation_key_value COMMA multi_or_one_assignation\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    value    : value_numeric\n                | value_logic\n                | value_string\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    '
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,34,],[0,-1,-3,]),'PUBLIC':([2,8,10,43,88,92,],[5,-2,11,11,11,11,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,23,32,38,39,41,45,46,47,48,49,50,51,52,53,54,55,56,58,60,62,63,69,72,76,79,80,81,],[8,42,-20,65,66,67,-34,-22,-29,-30,-31,-39,-40,-41,-37,-38,-32,-33,-36,73,74,75,-21,82,67,-52,-53,-35,]),'VARIABLE':([7,10,22,26,27,28,29,30,31,33,36,37,43,44,59,67,85,88,92,],[9,12,39,-23,-24,-25,-26,-27,-28,45,61,63,12,61,61,61,86,12,12,]),'LKEY':([9,24,87,91,],[10,43,88,92,]),'CONST':([10,11,20,25,43,88,92,],[21,-46,35,-47,21,21,21,]),'TRY':([10,43,88,92,],[24,24,24,24,]),'PRIVATE':([10,43,88,92,],[25,25,25,25,]),'CHARTYPE':([10,11,20,21,25,35,43,88,92,],[26,-46,26,26,-47,26,26,26,26,]),'STRINGTYPE':([10,11,20,21,25,35,43,88,92,],[27,-46,27,27,-47,27,27,27,27,]),'FLOATTYPE':([10,11,20,21,25,35,43,88,92,],[28,-46,28,28,-47,28,28,28,28,]),'DECIMALTYPE':([10,11,20,21,25,35,43,88,92,],[29,-46,29,29,-47,29,29,29,29,]),'INTTYPE':([10,11,20,21,25,35,43,88,92,],[30,-46,30,30,-47,30,30,30,30,]),'BOOLTYPE':([10,11,20,21,25,35,43,88,92,],[31,-46,31,31,-47,31,31,31,31,]),'RKEY':([12,13,14,15,16,17,18,19,40,42,64,65,66,67,68,73,74,75,77,82,89,90,93,94,],[-6,34,-4,-5,-7,-8,-42,-43,-13,-12,-17,-10,-11,-18,78,-9,-15,-16,-19,-14,90,-44,94,-45,]),'ASSIGNATION':([12,39,61,63,],[33,33,33,33,]),'COMMA':([32,41,45,46,47,48,49,50,51,52,53,54,55,56,58,79,80,81,],[44,44,-34,-22,-29,-30,-31,-39,-40,-41,-37,-38,-32,-33,-36,-52,-53,-35,]),'INTEGER':([33,],[50,]),'FLOAT_NUMBER':([33,],[51,]),'DECIMAL_NUMBER':([33,],[52,]),'BOOLTRUE':([33,],[53,]),'BOOLFALSE':([33,],[54,]),'STRING':([33,70,],[55,79,]),'CHAR':([33,],[56,]),'READ':([33,],[57,]),'PLUS':([55,79,],[70,70,]),'LPARENT':([57,83,],[71,84,]),'RPARENT':([71,86,],[81,87,]),'CATCH':([78,],[83,]),'EXCEPTION':([84,],[85,]),'FINALLY':([90,],[91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_using':([0,],[2,]),'block_publicClass':([2,],[4,]),'block_code':([10,43,88,92,],[13,68,89,93,]),'def_const_or_var':([10,43,88,92,],[14,14,14,14,]),'block_try_catch':([10,43,88,92,],[15,15,15,15,]),'constant_assignation':([10,43,88,92,],[16,16,16,16,]),'variable_assignation':([10,43,88,92,],[17,17,17,17,]),'try_catch_simply':([10,43,88,92,],[18,18,18,18,]),'try_catch_finally':([10,43,88,92,],[19,19,19,19,]),'access_modifiers':([10,43,88,92,],[20,20,20,20,]),'data_type':([10,20,21,35,43,88,92,],[22,36,37,59,22,22,22,]),'multi_or_one_assignation':([10,22,36,37,43,44,59,88,92,],[23,38,60,62,23,69,72,23,23,]),'assignation_key_value':([10,22,36,37,43,44,59,67,88,92,],[32,41,32,41,32,32,32,76,32,32,]),'block_assignations':([22,37,67,],[40,64,77,]),'value':([33,],[46,]),'value_numeric':([33,],[47,]),'value_logic':([33,],[48,]),'value_string':([33,],[49,]),'concatenation':([33,70,],[58,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',18),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',21),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',24),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',29),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',30),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',31),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',40),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',41),
  ('variable_assignation -> access_modifiers data_type multi_or_one_assignation DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',45),
  ('variable_assignation -> data_type multi_or_one_assignation DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',46),
  ('variable_assignation -> data_type VARIABLE DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',47),
  ('variable_assignation -> multi_or_one_assignation DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico.py',48),
  ('variable_assignation -> data_type block_assignations','variable_assignation',2,'p_variable_assignation','sintactico.py',49),
  ('constant_assignation -> access_modifiers CONST data_type multi_or_one_assignation DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',53),
  ('constant_assignation -> CONST data_type multi_or_one_assignation DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',54),
  ('constant_assignation -> CONST data_type VARIABLE DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',55),
  ('constant_assignation -> CONST data_type block_assignations','constant_assignation',3,'p_constant_assignation','sintactico.py',56),
  ('block_assignations -> assignation_key_value DOTANDCOMMA','block_assignations',2,'p_block_assignations','sintactico.py',60),
  ('block_assignations -> assignation_key_value DOTANDCOMMA block_assignations','block_assignations',3,'p_block_assignations','sintactico.py',61),
  ('multi_or_one_assignation -> assignation_key_value','multi_or_one_assignation',1,'p_multi_or_one_assignation','sintactico.py',65),
  ('multi_or_one_assignation -> assignation_key_value COMMA multi_or_one_assignation','multi_or_one_assignation',3,'p_multi_or_one_assignation','sintactico.py',66),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',70),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',73),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',74),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',75),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',76),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',77),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',78),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',87),
  ('value -> value_logic','value',1,'p_value','sintactico.py',88),
  ('value -> value_string','value',1,'p_value','sintactico.py',89),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',93),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',94),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',95),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',96),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',97),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',101),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',102),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',106),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',107),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',108),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',117),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',118),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',122),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',125),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',129),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',130),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',140),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',141),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',145),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',146),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',150),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',151),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',155),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',156),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',157),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',158),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',159),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',160),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',161),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',162),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',163),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',164),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',168),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',169),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',170),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',171),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',172),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',176),
]
