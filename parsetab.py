
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY\n                                | PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n                                | PUBLIC CLASS VARIABLE LKEY all_method_definitions RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    block_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n\n                                | lists\n                                | functions_list\n\n                                | dict_estruct\n                                | functions_dict\n                                | concurrent_method\n\n                                | queue_struct\n                                | functions_queue\n\n                                | stack_struct\n                                | functions_stack\n\n                                | block_if\n\n                                | block_for\n\n                                | block_try_catch\n\n                                | block_while\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    method_definition        : simple_method\n                                | declaration_async\n                                | declaration_lambda\n    all_method_definitions   : method_definition\n                                | method_definition all_method_definitions  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n                                | METHOD\n                                | array\n    array_assignation          : array_type VARIABLE ASSIGNATION LBRACKET array_content RBRACKET DOTANDCOMMAarray                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric logic_operator INTEGER \n                                | VARIABLE logic_operator INTEGER\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers data_type VARIABLE DOTANDCOMMA\n                                | data_type VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : assignation_key_value\n                                        | assignation_key_value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value COMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n                                | array_type\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    logic_operations         : logic_operation DOTANDCOMMA\n                                | logic_operation COMMA logic_operations\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : LKEY VARIABLE COMMA value RKEY\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct             : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    functions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n                                | queue_peek\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA\n    queue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA\n    queue_peek               : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA\n    queue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA\n    simple_method            : STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n                                | STATIC VOID MAIN LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | PUBLIC STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n    function_return          : RETURN value DOTANDCOMMA\n    function_argument        : data_type VARIABLE\n                                | data_type CHAR    \n                                | METHOD VARIABLE\n                                | data_type LBRACKET RBRACKET VARIABLE\n    function_arguments       : function_argument\n                                | function_argument COMMA function_arguments\n    declaration_async        : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda         : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEYconcurrent_method        : method_declaration CONCURRENT LKEY concurrent_block RKEYmethod_declaration       : METHOD IDENTIFIER LPARENT RPARENT DOTANDCOMMAconcurrent_block         : statement_liststatement_list           : statement\n                                | statement_list statementstatement                : assignment_concurrent\n                                | if_statement_concurrent\n                                | while_loop_concurrent\n                                | method_call_concurrent\n                                | return_statement_concurrentassignment_concurrent    : VARIABLE ASSIGNATION expression DOTANDCOMMAif_statement_concurrent  : IF LPARENT condition RPARENT LKEY concurrent_block RKEYwhile_loop_concurrent    : WHILE LPARENT condition RPARENT LKEY concurrent_block RKEYmethod_call_concurrent   : IDENTIFIER LPARENT RPARENT DOTANDCOMMAreturn_statement_concurrent : RETURN expression DOTANDCOMMAexpression               : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator expression\n                                | VARIABLE arithmetic_operator expression\n    condition                : value_numeric logic_operator value_numeric\n                                | VARIABLE logic_operator value_numeric\n                                | value_numeric logic_operator VARIABLE\n                                | VARIABLE logic_operator VARIABLE\n    '
_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK TIMES TRY USING VARIABLE VOID WHILEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY\n                                | PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n    block_code               : def_const_or_var\n                                | print_data\n                                | read_data\n                                | arithmetic_operation\n                                | logic_operation\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n\n                                | lists\n                                | functions_list\n\n                                | dict_estruct\n                                | functions_dict\n                                | concurrent_method\n\n                                | queue_struct\n                                | functions_queue\n\n                                | stack_struct\n                                | functions_stack\n\n                                | block_if\n\n                                | block_for\n\n                                | block_try_catch\n\n                                | block_while\n    all_block_code           : block_code\n                                | block_code all_block_code  \n    method_definition        : simple_method\n                                | declaration_async\n                                | declaration_lambda\n    all_method_definitions   : method_definition\n                                | method_definition all_method_definitions  \n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    value                    : value_numeric\n                                | value_logic\n                                | value_string\n                                | read_data\n                                | METHOD\n                                | array\n    array_assignation          : array_type VARIABLE ASSIGNATION LBRACKET array_content RBRACKET DOTANDCOMMAarray                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value_string             : STRING\n                                | CHAR\n                                | VARIABLE\n                                | concatenation\n    value_logic              : BOOLTRUE\n                                | BOOLFALSE\n                                | logic_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | arithmetic_operation\n    arithmetic_operation     : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator arithmetic_operation\n                                | VARIABLE arithmetic_operator arithmetic_operation\n    logic_operation          : value_numeric logic_operator INTEGER \n                                | VARIABLE logic_operator INTEGER\n    logic_operator           : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n                                | LOGICAND\n                                | LOGICOR\n                                | LOGICNOT\n                                | LOGICXOR\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n                                | late_initialization\n    constant_assignation     : access_modifiers CONST data_type assignation_key_value DOTANDCOMMA\n                                | CONST data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA\n                                | CONST data_type assignation_key_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers data_type assignation_key_value DOTANDCOMMA\n                                | data_type assignation_key_value DOTANDCOMMA\n                                | access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA\n                                | data_type assignation_key_value_multiple DOTANDCOMMA\n    late_initialization      : access_modifiers data_type VARIABLE DOTANDCOMMA\n                                | data_type VARIABLE DOTANDCOMMA\n                                | assignation_key_value DOTANDCOMMA\n    assignation_key_value    : VARIABLE ASSIGNATION value\n                                | READ LPARENT RPARENT\n    assignation_key_value_multiple   : assignation_key_value\n                                        | assignation_key_value COMMA assignation_key_value_multiple   \n    assignation_with_datatype        : data_type assignation_key_value DOTANDCOMMA\n                                        | data_type assignation_key_value COMMA assignation_with_datatype                    \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n                                | array_type\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    logic_operations         : logic_operation DOTANDCOMMA\n                                | logic_operation COMMA logic_operations\n    block_for                : for_anidado\n                                | for_each\n    for_simple               : FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_anidado              : for_simple\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY\n                                | FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY \n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEYtry_catch_finally          : TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEYblock_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENTblock_if                   : IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    other_if                    : ELSE LKEY not_yes_nested_if RKEY\n                                | ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if\n    \n    not_yes_nested_if           : block_if\n                                | block_code\n    \n    dict_estruct                : dict_empty\n                                | dict_full\n    \n    dict_empty                  : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full                   : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA\n    key_value_pairs          : key_value_pair\n                                | key_value_pair COMMA key_value_pairs\n    key_value_pair           : LKEY VARIABLE COMMA value RKEY\n    estruct_of_data          : list_empty\n                                | list_full\n    \n    functions_dict              : dict_func_put\n                                | dict_func_remove\n    \n    dict_func_put               : VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA\n    \n    dict_func_remove            : VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add              : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat         : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAstack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct             : QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    functions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n    queue_enqueue            : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA\n    queue_dequeue            : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA\n    queue_clear              : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA\n    queue_peek               : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA\n    queue_isEmpty            : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA\n    simple_method            : STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n                                | access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY\n                                | access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY\n    function_return          : RETURN value DOTANDCOMMA\n    function_argument        : data_type VARIABLE\n                                | METHOD VARIABLE\n    function_arguments       : function_argument\n                                | function_argument COMMA function_arguments\n    declaration_async        : PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY\n    declaration_lambda         : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEYconcurrent_method        : method_declaration CONCURRENT LKEY concurrent_block RKEYmethod_declaration       : METHOD IDENTIFIER LPARENT RPARENT DOTANDCOMMAconcurrent_block         : statement_liststatement_list           : statement\n                                | statement_list statementstatement                : assignment_concurrent\n                                | if_statement_concurrent\n                                | while_loop_concurrent\n                                | method_call_concurrent\n                                | return_statement_concurrentassignment_concurrent    : VARIABLE ASSIGNATION expression DOTANDCOMMAif_statement_concurrent  : IF LPARENT condition RPARENT LKEY concurrent_block RKEYwhile_loop_concurrent    : WHILE LPARENT condition RPARENT LKEY concurrent_block RKEYmethod_call_concurrent   : IDENTIFIER LPARENT RPARENT DOTANDCOMMAreturn_statement_concurrent : RETURN expression DOTANDCOMMAexpression               : value_numeric\n                                | VARIABLE\n                                | value_numeric arithmetic_operator expression\n                                | VARIABLE arithmetic_operator expression\n    condition                : value_numeric logic_operator value_numeric\n                                | VARIABLE logic_operator value_numeric\n                                | value_numeric logic_operator VARIABLE\n                                | VARIABLE logic_operator VARIABLE\n    '
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,23,25,41,],[0,-1,-4,-3,-2,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,142,177,178,179,234,235,236,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,279,280,281,282,285,298,299,300,314,315,316,317,318,340,341,356,372,373,374,377,378,387,388,389,390,399,400,401,402,408,409,415,416,417,419,427,428,429,440,450,451,454,455,457,458,462,464,465,470,483,505,506,508,520,577,585,592,593,596,597,610,623,625,],[4,-60,243,-61,-62,304,306,307,335,-39,-40,-41,-42,-43,-44,-63,-57,-58,-59,-37,-54,-55,-56,-65,-63,-64,-69,-101,356,-63,-68,379,380,381,382,383,404,405,-36,-103,-104,-102,433,434,438,439,440,442,-37,-38,356,-46,452,453,459,460,461,463,471,-64,-65,-120,490,491,492,493,495,496,497,498,499,504,-121,-228,-229,528,541,589,594,602,603,605,607,620,629,631,]),'PUBLIC':([4,9,13,15,16,17,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,252,255,256,258,259,279,280,281,282,299,300,304,306,307,330,342,343,356,379,380,381,382,383,395,396,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,613,614,620,628,629,631,],[6,10,10,-29,-30,-31,195,195,195,195,195,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,195,-100,195,195,-198,195,-201,195,-199,-65,-63,-64,-69,-63,-68,-95,-97,-99,-197,-49,-50,-36,-94,-96,-98,-91,-93,-200,-210,-34,-35,-211,195,-90,-92,195,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,195,-137,-154,195,195,195,195,-122,-122,-129,195,-139,-127,-124,-128,-125,195,-145,-132,-186,-185,-158,-159,195,-209,-140,-146,-133,-160,-161,]),'CLASS':([6,],[7,]),'VARIABLE':([7,29,31,32,33,34,35,36,61,63,64,65,66,67,69,74,77,78,96,100,101,103,104,105,108,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,178,179,180,181,182,183,184,185,189,199,205,207,208,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,239,241,242,243,249,250,251,255,258,276,279,280,281,282,299,300,302,304,305,306,307,313,322,324,325,326,342,343,349,350,354,356,357,359,360,361,362,363,364,365,370,371,379,380,381,382,383,384,385,403,404,405,406,407,421,422,423,424,425,432,433,434,439,441,442,444,446,452,453,456,459,460,461,463,471,472,473,484,488,490,491,492,493,495,496,497,498,499,501,502,504,516,517,521,526,528,529,537,539,541,545,546,550,551,554,555,556,564,566,568,569,573,578,579,580,581,586,589,591,594,598,603,605,607,612,614,619,620,628,629,631,],[8,-108,-107,-109,-110,-111,-112,-113,-115,-114,-116,-117,-118,-119,82,-108,89,92,107,111,139,196,139,139,139,111,139,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,231,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,236,-187,-188,-189,-190,-191,238,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-107,-108,-109,-110,-111,-112,-126,139,273,278,279,283,273,-80,-81,-82,-83,-84,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,279,312,316,319,-100,139,312,139,139,139,273,-65,-63,-64,-69,-63,-68,366,-95,319,-97,-99,319,386,312,319,391,-49,-50,413,273,273,-36,273,366,-214,-216,-217,-218,-219,-220,429,430,-94,-96,-98,-91,-93,435,436,273,-34,-35,273,273,-211,-215,429,468,468,139,-90,-92,482,312,-105,485,139,-170,-171,494,-193,-184,-183,-181,-225,429,429,-106,312,-51,-52,-172,-173,-155,-192,-180,-45,-221,523,524,-224,538,-136,366,366,-174,-138,139,-137,-154,139,312,139,139,139,-222,-223,-122,-122,-129,139,-139,-127,-124,-128,-125,139,-145,-132,-186,609,-185,-158,-159,139,-140,273,-146,-133,-160,-161,]),'LKEY':([8,87,93,94,97,98,106,192,194,200,203,232,376,393,500,503,515,530,535,536,540,553,574,577,590,596,597,601,611,],[9,101,104,105,108,109,199,249,251,255,258,302,432,446,521,526,537,545,550,551,554,569,586,590,598,606,608,612,598,]),'STATIC':([9,10,11,13,15,16,17,18,20,26,252,256,259,330,395,396,613,],[14,21,24,27,-29,-30,-31,37,-86,-33,-198,-201,-199,-197,-200,-210,-209,]),'ACTION':([9,13,15,16,17,252,256,259,330,395,396,613,],[19,19,-29,-30,-31,-198,-201,-199,-197,-200,-210,-209,]),'PRIVATE':([9,13,15,16,17,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,252,255,256,258,259,279,280,281,282,299,300,304,306,307,330,342,343,356,379,380,381,382,383,395,396,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,613,614,620,628,629,631,],[20,20,-29,-30,-31,20,20,20,20,20,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,20,-100,20,20,-198,20,-201,20,-199,-65,-63,-64,-69,-63,-68,-95,-97,-99,-197,-49,-50,-36,-94,-96,-98,-91,-93,-200,-210,-34,-35,-211,20,-90,-92,20,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,20,-137,-154,20,20,20,20,-122,-122,-129,20,-139,-127,-124,-128,-125,20,-145,-132,-186,-185,-158,-159,20,-209,-140,-146,-133,-160,-161,]),'RKEY':([11,12,13,15,16,17,22,26,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,197,201,204,206,243,252,253,256,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,279,280,281,282,299,300,304,306,307,327,329,330,331,332,334,335,342,343,356,358,359,360,361,362,363,364,365,379,380,381,382,383,395,396,398,399,400,402,404,405,421,422,433,434,452,453,459,460,461,463,471,476,477,478,487,490,491,492,493,495,496,497,498,499,504,517,528,529,539,541,542,543,552,555,556,559,564,565,566,567,568,570,573,578,579,580,581,582,589,591,594,595,599,600,602,603,605,607,613,614,615,616,617,618,620,621,622,627,628,629,630,631,632,633,],[23,25,-32,-29,-30,-31,41,-33,-27,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,252,256,259,-28,-100,-198,330,-201,-199,-39,-40,-41,-42,-43,-44,-63,-57,-58,-59,-37,-54,-55,-56,-65,-63,-64,-69,-63,-68,-95,-97,-99,392,394,-197,395,396,398,-202,-49,-50,-36,421,-213,-214,-216,-217,-218,-219,-220,-94,-96,-98,-91,-93,-200,-210,-5,-37,-38,-46,-34,-35,-211,-215,-90,-92,-170,-171,-193,-184,-183,-181,-225,509,-23,-142,517,-51,-52,-172,-173,-155,-192,-180,-45,-221,-224,-136,-174,-138,-137,-154,555,556,568,-222,-223,573,578,579,580,581,-129,583,-139,-127,-124,-128,-125,591,-145,-132,-186,604,610,-147,613,-185,-158,-159,-209,-140,623,-162,625,-164,-146,-148,628,633,-133,-160,-163,-161,-165,-149,]),'VOID':([14,21,24,27,],[28,39,42,43,]),'CHARTYPE':([14,20,27,37,59,60,62,70,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,189,195,199,233,240,243,247,248,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,443,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,544,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[31,-86,31,31,31,31,31,31,31,31,31,180,180,180,180,180,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,31,31,-61,-62,-126,-85,180,31,31,-100,31,31,180,180,180,180,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,180,-90,-92,31,180,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,180,-137,-154,31,180,180,180,180,-122,-122,-129,180,-139,-127,-124,-128,-125,180,-145,-132,-186,-185,-158,-159,180,-140,-146,-133,-160,-161,]),'STRINGTYPE':([14,20,27,37,38,59,60,62,70,72,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,189,195,199,233,240,243,244,247,248,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,443,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,544,545,547,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[29,-86,29,29,54,74,29,29,29,85,29,29,29,181,181,181,181,181,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,29,29,-61,-62,-126,-85,181,29,29,-100,320,29,29,181,181,181,181,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,181,-90,-92,29,181,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,181,-137,-154,29,181,561,181,181,181,-122,-122,-129,181,-139,-127,-124,-128,-125,181,-145,-132,-186,-185,-158,-159,181,-140,-146,-133,-160,-161,]),'FLOATTYPE':([14,20,27,37,59,60,62,70,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,189,195,199,233,240,243,247,248,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,443,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,544,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[32,-86,32,32,32,32,32,32,32,32,32,182,182,182,182,182,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,32,32,-61,-62,-126,-85,182,32,32,-100,32,32,182,182,182,182,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,182,-90,-92,32,182,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,182,-137,-154,32,182,182,182,182,-122,-122,-129,182,-139,-127,-124,-128,-125,182,-145,-132,-186,-185,-158,-159,182,-140,-146,-133,-160,-161,]),'DECIMALTYPE':([14,20,27,37,59,60,62,70,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,189,195,199,233,240,243,247,248,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,443,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,544,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[33,-86,33,33,33,33,33,33,33,33,33,183,183,183,183,183,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,33,33,-61,-62,-126,-85,183,33,33,-100,33,33,183,183,183,183,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,183,-90,-92,33,183,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,183,-137,-154,33,183,183,183,183,-122,-122,-129,183,-139,-127,-124,-128,-125,183,-145,-132,-186,-185,-158,-159,183,-140,-146,-133,-160,-161,]),'INTTYPE':([14,20,27,37,59,60,62,70,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,189,195,199,233,240,243,244,247,248,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,443,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,544,545,548,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[34,-86,34,34,34,34,34,34,34,34,34,184,184,184,184,184,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,34,34,-61,-62,-126,-85,184,34,34,-100,321,34,34,184,184,184,184,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,184,-90,-92,34,184,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,184,-137,-154,34,184,562,184,184,184,-122,-122,-129,184,-139,-127,-124,-128,-125,184,-145,-132,-186,-185,-158,-159,184,-140,-146,-133,-160,-161,]),'BOOLTYPE':([14,20,27,37,59,60,62,70,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,189,195,199,233,240,243,247,248,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,443,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,544,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[35,-86,35,35,35,35,35,35,35,35,35,185,185,185,185,185,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,35,35,-61,-62,-126,-85,185,35,35,-100,35,35,185,185,185,185,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,185,-90,-92,35,185,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,185,-137,-154,35,185,185,185,185,-122,-122,-129,185,-139,-127,-124,-128,-125,185,-145,-132,-186,-185,-158,-159,185,-140,-146,-133,-160,-161,]),'SMALLER_THAN':([19,117,139,141,142,155,178,179,186,187,261,267,273,279,280,281,299,311,312,467,468,512,527,532,533,],[38,-63,219,219,-60,233,-61,-62,244,245,219,-63,219,-65,-63,-64,-63,219,219,219,219,534,544,547,548,]),'CONST':([20,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,175,178,179,189,195,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[-86,176,176,176,176,176,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,240,-61,-62,-126,-85,176,-100,176,176,176,176,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,176,-90,-92,176,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,176,-137,-154,176,176,176,176,-122,-122,-129,176,-139,-127,-124,-128,-125,176,-145,-132,-186,-185,-158,-159,176,-140,-146,-133,-160,-161,]),'ASYNC':([21,],[40,]),'MAIN':([28,42,43,],[44,57,58,]),'METHOD':([28,29,30,31,32,33,34,35,36,39,43,53,56,59,60,61,62,63,64,65,66,67,70,73,81,88,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,205,211,243,249,251,255,258,276,279,280,281,282,299,300,304,306,307,333,342,343,350,354,356,357,379,380,381,382,383,403,404,405,406,407,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,619,620,628,629,631,],[45,-108,47,-107,-109,-110,-111,-112,-113,55,45,68,71,78,78,-115,78,-114,-116,-117,-118,-119,78,78,78,78,188,188,188,188,188,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,188,265,265,-100,188,188,188,188,265,-65,-63,-64,-69,-63,-68,-95,-97,-99,397,-49,-50,265,265,-36,265,-94,-96,-98,-91,-93,265,-34,-35,265,265,-211,188,-90,-92,188,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,188,-137,-154,188,188,188,188,-122,-122,-129,188,-139,-127,-124,-128,-125,188,-145,-132,-186,-185,-158,-159,188,-140,265,-146,-133,-160,-161,]),'CHAR':([29,31,32,33,34,35,36,61,63,64,65,66,67,74,77,100,205,211,276,350,354,357,403,406,407,619,],[-108,-107,-109,-110,-111,-112,-113,-115,-114,-116,-117,-118,-119,-108,90,-115,272,272,272,272,272,272,272,272,272,272,]),'LBRACKET':([29,31,32,33,34,35,36,61,63,64,65,66,67,74,77,85,100,139,180,181,182,183,184,185,205,211,276,301,350,354,357,403,406,407,619,],[46,48,49,50,51,52,-113,-115,-114,-116,-117,-118,-119,86,91,99,-115,210,48,46,49,50,51,52,276,276,276,357,276,276,276,276,276,276,276,]),'READ':([29,31,32,33,34,35,36,61,63,64,65,66,67,101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,180,181,182,183,184,185,189,199,205,211,241,242,243,249,251,255,258,276,279,280,281,282,299,300,304,305,306,307,313,325,342,343,350,354,356,357,379,380,381,382,383,403,404,405,406,407,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,619,620,628,629,631,],[-108,-107,-109,-110,-111,-112,-113,-115,-114,-116,-117,-118,-119,140,140,140,140,140,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-113,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,237,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-107,-108,-109,-110,-111,-112,-126,140,275,275,237,237,-100,140,140,140,140,275,-65,-63,-64,-69,-63,-68,-95,237,-97,-99,237,237,-49,-50,275,275,-36,275,-94,-96,-98,-91,-93,275,-34,-35,275,275,-211,140,-90,-92,140,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,140,-137,-154,140,140,140,140,-122,-122,-129,140,-139,-127,-124,-128,-125,140,-145,-132,-186,-185,-158,-159,140,-140,275,-146,-133,-160,-161,]),'GREATER_THAN':([29,31,32,33,34,35,36,54,61,63,64,65,66,67,117,139,141,142,178,179,245,261,267,273,279,280,281,299,303,311,312,320,321,467,468,534,544,557,561,562,],[-108,-107,-109,-110,-111,-112,-113,69,-115,-114,-116,-117,-118,-119,-63,218,218,-60,-61,-62,322,218,-63,218,-65,-63,-64,-63,371,218,218,384,385,218,218,549,558,571,575,576,]),'TASK':([40,202,],[56,257,]),'LPARENT':([44,45,47,55,57,58,68,71,138,140,168,190,191,193,237,246,275,286,287,288,289,290,291,292,293,294,295,296,297,367,368,369,397,431,445,447,448,531,549,558,571,575,576,],[59,60,62,70,72,73,81,84,207,228,239,247,248,250,308,323,337,344,345,346,347,348,349,350,351,352,353,354,355,424,425,426,448,475,486,488,489,546,563,572,584,587,588,]),'RBRACKET':([46,48,49,50,51,52,86,91,99,142,178,179,261,262,263,264,265,266,267,268,269,270,271,272,273,274,279,280,281,282,283,284,299,300,338,339,356,399,400,402,420,449,],[61,63,64,65,66,67,100,103,110,-60,-61,-62,-39,-40,-41,-42,-43,-44,-63,-57,-58,-59,-37,-54,-55,-56,-65,-63,-64,-69,342,343,-63,-68,402,-47,-36,-37,-38,-46,464,-48,]),'RPARENT':([75,76,79,80,83,84,89,90,92,95,102,111,142,178,179,196,228,261,262,263,264,265,266,267,268,269,270,271,272,273,274,277,278,279,280,281,282,299,300,308,310,323,328,337,344,345,351,352,353,355,356,399,400,402,410,411,413,414,418,426,466,469,475,485,489,494,513,514,518,522,523,524,525,538,560,563,572,583,584,587,588,],[87,-207,93,94,97,98,-203,-204,-205,106,-208,203,-60,-61,-62,-206,298,-39,-40,-41,-42,-43,-44,-63,-57,-58,-59,-37,-54,-55,-56,340,341,-65,-63,-64,-69,-63,-68,374,376,387,393,401,408,409,415,416,417,419,-36,-37,-38,-46,454,455,457,458,462,470,500,503,508,515,519,520,535,536,539,-64,-65,-65,-64,553,574,577,585,592,593,596,597,]),'COMMA':([76,89,90,92,142,178,179,196,234,261,262,263,264,265,266,267,268,269,270,271,272,273,274,279,280,281,282,285,299,300,314,317,339,356,372,374,377,389,390,399,400,402,412,600,609,616,618,633,],[88,-203,-204,-205,-60,-61,-62,-206,305,-39,-40,-41,-42,-43,-44,-63,-57,-58,-59,-37,-54,-55,-56,-65,-63,-64,-69,-101,-63,-68,305,305,403,-36,305,-102,305,441,443,-37,-38,-46,456,611,619,624,626,-149,]),'ASSIGNATION':([82,139,231,236,238,316,319,342,343,366,386,430,435,436,],[96,211,301,211,309,211,211,406,407,423,437,474,479,480,]),'PRINT':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[138,138,138,138,138,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,138,-100,138,138,138,138,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,138,-90,-92,138,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,138,-137,-154,138,138,138,138,-122,-122,-129,138,-139,-127,-124,-128,-125,138,-145,-132,-186,-185,-158,-159,138,-140,-146,-133,-160,-161,]),'QUEUE':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,507,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[155,155,155,155,155,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,155,-100,155,155,155,155,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,155,-90,-92,155,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,527,-136,-174,-138,155,-137,-154,155,155,155,155,-122,-122,-129,155,-139,-127,-124,-128,-125,155,-145,-132,-186,-185,-158,-159,155,-140,-146,-133,-160,-161,]),'STACK':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,375,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[162,162,162,162,162,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,162,-100,162,162,162,162,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,431,-94,-96,-98,-91,-93,-34,-35,-211,162,-90,-92,162,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,162,-137,-154,162,162,162,162,-122,-122,-129,162,-139,-127,-124,-128,-125,162,-145,-132,-186,-185,-158,-159,162,-140,-146,-133,-160,-161,]),'IF':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,302,304,306,307,342,343,356,359,360,361,362,363,364,365,379,380,381,382,383,404,405,421,422,432,433,434,446,452,453,459,460,461,463,471,490,491,492,493,495,496,497,498,499,504,517,521,526,528,529,537,539,541,545,550,551,554,555,556,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[168,168,168,168,168,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,168,-100,168,168,168,168,-65,-63,-64,-69,-63,-68,367,-95,-97,-99,-49,-50,-36,367,-214,-216,-217,-218,-219,-220,-94,-96,-98,-91,-93,-34,-35,-211,-215,168,-90,-92,168,-170,-171,-193,-184,-183,-181,-225,-51,-52,-172,-173,-155,-192,-180,-45,-221,-224,-136,367,367,-174,-138,168,-137,-154,168,168,168,168,-222,-223,-122,-122,-129,168,-139,-127,-124,-128,-125,168,-145,-132,-186,-185,-158,-159,168,-140,-146,-133,-160,-161,]),'INTEGER':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,205,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,239,243,249,250,251,255,258,276,279,280,281,282,299,300,304,306,307,324,342,343,347,350,354,356,357,370,379,380,381,382,383,403,404,405,406,407,421,423,424,425,432,433,434,441,442,446,452,453,459,460,461,463,472,473,484,488,490,491,492,493,495,496,497,498,501,502,517,528,529,537,539,541,545,546,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,608,612,614,619,620,626,628,629,631,],[142,142,142,142,142,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,142,142,142,282,284,142,-80,-81,-82,-83,-84,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,142,300,142,-100,142,142,142,142,142,142,-65,-63,-64,-69,-63,-68,-95,-97,-99,142,-49,-50,411,142,142,-36,142,142,-94,-96,-98,-91,-93,142,-34,-35,142,142,-211,142,142,142,142,-90,-92,142,-105,142,-170,-171,-193,-184,-183,-181,142,142,-106,142,-51,-52,-172,-173,-155,-192,-180,-45,142,142,-136,-174,-138,142,-137,-154,142,142,142,142,142,-122,-122,-129,142,-139,-127,-124,-128,-125,142,-145,-132,-186,-185,-158,-159,618,142,-140,142,-146,618,-133,-160,-161,]),'FLOAT_NUMBER':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,205,208,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,239,243,249,250,251,255,258,276,279,280,281,282,299,300,304,306,307,324,342,343,350,354,356,357,370,379,380,381,382,383,403,404,405,406,407,421,423,424,425,432,433,434,441,442,446,452,453,459,460,461,463,472,473,484,488,490,491,492,493,495,496,497,498,501,502,517,528,529,537,539,541,545,546,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,619,620,628,629,631,],[178,178,178,178,178,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,178,178,178,178,-80,-81,-82,-83,-84,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,178,178,-100,178,178,178,178,178,178,-65,-63,-64,-69,-63,-68,-95,-97,-99,178,-49,-50,178,178,-36,178,178,-94,-96,-98,-91,-93,178,-34,-35,178,178,-211,178,178,178,178,-90,-92,178,-105,178,-170,-171,-193,-184,-183,-181,178,178,-106,178,-51,-52,-172,-173,-155,-192,-180,-45,178,178,-136,-174,-138,178,-137,-154,178,178,178,178,178,-122,-122,-129,178,-139,-127,-124,-128,-125,178,-145,-132,-186,-185,-158,-159,178,-140,178,-146,-133,-160,-161,]),'DECIMAL_NUMBER':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,205,208,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,239,243,249,250,251,255,258,276,279,280,281,282,299,300,304,306,307,324,342,343,350,354,356,357,370,379,380,381,382,383,403,404,405,406,407,421,423,424,425,432,433,434,441,442,446,452,453,459,460,461,463,472,473,484,488,490,491,492,493,495,496,497,498,501,502,517,528,529,537,539,541,545,546,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,619,620,628,629,631,],[179,179,179,179,179,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,179,179,179,179,-80,-81,-82,-83,-84,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,179,179,-100,179,179,179,179,179,179,-65,-63,-64,-69,-63,-68,-95,-97,-99,179,-49,-50,179,179,-36,179,179,-94,-96,-98,-91,-93,179,-34,-35,179,179,-211,179,179,179,179,-90,-92,179,-105,179,-170,-171,-193,-184,-183,-181,179,179,-106,179,-51,-52,-172,-173,-155,-192,-180,-45,179,179,-136,-174,-138,179,-137,-154,179,179,179,179,179,-122,-122,-129,179,-139,-127,-124,-128,-125,179,-145,-132,-186,-185,-158,-159,179,-140,179,-146,-133,-160,-161,]),'LIST':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,510,511,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[186,186,186,186,186,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,186,-100,186,186,186,186,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,186,-90,-92,186,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,532,533,-136,-174,-138,186,-137,-154,186,186,186,186,-122,-122,-129,186,-139,-127,-124,-128,-125,186,-145,-132,-186,-185,-158,-159,186,-140,-146,-133,-160,-161,]),'DICTIONARY':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,481,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[187,187,187,187,187,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,187,-100,187,187,187,187,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,187,-90,-92,187,-170,-171,-193,-184,-183,-181,512,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,187,-137,-154,187,187,187,187,-122,-122,-129,187,-139,-127,-124,-128,-125,187,-145,-132,-186,-185,-158,-159,187,-140,-146,-133,-160,-161,]),'FOR':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[190,190,190,190,190,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,190,-100,190,190,190,190,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,190,-90,-92,190,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,190,-137,-154,190,190,190,190,-122,-122,-129,190,-139,-127,-124,-128,-125,190,-145,-132,-186,-185,-158,-159,190,-140,-146,-133,-160,-161,]),'FOREACH':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[191,191,191,191,191,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,191,-100,191,191,191,191,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,191,-90,-92,191,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,191,-137,-154,191,191,191,191,-122,-122,-129,191,-139,-127,-124,-128,-125,191,-145,-132,-186,-185,-158,-159,191,-140,-146,-133,-160,-161,]),'TRY':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[192,192,192,192,192,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,192,-100,192,192,192,192,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,192,-90,-92,192,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,192,-137,-154,192,192,192,192,-122,-122,-129,192,-139,-127,-124,-128,-125,192,-145,-132,-186,-185,-158,-159,192,-140,-146,-133,-160,-161,]),'WHILE':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,302,304,306,307,342,343,356,359,360,361,362,363,364,365,379,380,381,382,383,394,404,405,421,422,432,433,434,446,452,453,459,460,461,463,471,490,491,492,493,495,496,497,498,499,504,517,521,526,528,529,537,539,541,545,550,551,554,555,556,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[193,193,193,193,193,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,193,-100,193,193,193,193,-65,-63,-64,-69,-63,-68,368,-95,-97,-99,-49,-50,-36,368,-214,-216,-217,-218,-219,-220,-94,-96,-98,-91,-93,447,-34,-35,-211,-215,193,-90,-92,193,-170,-171,-193,-184,-183,-181,-225,-51,-52,-172,-173,-155,-192,-180,-45,-221,-224,-136,368,368,-174,-138,193,-137,-154,193,193,193,193,-222,-223,-122,-122,-129,193,-139,-127,-124,-128,-125,193,-145,-132,-186,-185,-158,-159,193,-140,-146,-133,-160,-161,]),'DO':([101,104,105,108,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,199,243,249,251,255,258,279,280,281,282,299,300,304,306,307,342,343,356,379,380,381,382,383,404,405,421,432,433,434,446,452,453,459,460,461,463,490,491,492,493,495,496,497,498,517,528,529,537,539,541,545,550,551,554,564,566,568,569,573,578,579,580,581,586,589,591,594,603,605,607,612,614,620,628,629,631,],[194,194,194,194,194,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,194,-100,194,194,194,194,-65,-63,-64,-69,-63,-68,-95,-97,-99,-49,-50,-36,-94,-96,-98,-91,-93,-34,-35,-211,194,-90,-92,194,-170,-171,-193,-184,-183,-181,-51,-52,-172,-173,-155,-192,-180,-45,-136,-174,-138,194,-137,-154,194,194,194,194,-122,-122,-129,194,-139,-127,-124,-128,-125,194,-145,-132,-186,-185,-158,-159,194,-140,-146,-133,-160,-161,]),'ARROW':([107,519,],[200,540,]),'AWAIT':([109,],[202,]),'RETURN':([112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,163,164,165,166,167,169,170,171,172,173,174,178,179,189,198,206,243,254,279,280,281,282,299,300,302,304,306,307,342,343,356,359,360,361,362,363,364,365,379,380,381,382,383,404,405,421,422,433,434,452,453,459,460,461,463,471,490,491,492,493,495,496,497,498,499,504,517,521,526,528,529,539,541,555,556,568,573,578,579,580,581,589,591,594,603,605,607,614,620,628,629,631,],[205,-27,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-87,-88,-89,-65,-64,-60,-156,-157,-166,-167,-168,-169,-143,-144,-152,-153,-187,-188,-189,-190,-191,-175,-176,-177,-178,-179,-122,-123,-130,-131,-134,-135,-61,-62,-126,205,-28,-100,205,-65,-63,-64,-69,-63,-68,370,-95,-97,-99,-49,-50,-36,370,-214,-216,-217,-218,-219,-220,-94,-96,-98,-91,-93,-34,-35,-211,-215,-90,-92,-170,-171,-193,-184,-183,-181,-225,-51,-52,-172,-173,-155,-192,-180,-45,-221,-224,-136,370,370,-174,-138,-137,-154,-222,-223,-129,-139,-127,-124,-128,-125,-145,-132,-186,-185,-158,-159,-140,-146,-133,-160,-161,]),'PLUS':([117,139,141,142,178,179,261,267,271,273,279,280,281,299,311,312,399,428,429,467,468,522,523,524,525,],[-63,213,213,-60,-61,-62,213,-63,336,213,213,-63,213,-63,213,213,336,213,213,213,213,213,213,213,213,]),'MINUS':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,428,429,467,468,522,523,524,525,],[-63,214,214,-60,-61,-62,214,-63,214,214,-63,214,-63,214,214,214,214,214,214,214,214,214,214,]),'TIMES':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,428,429,467,468,522,523,524,525,],[-63,215,215,-60,-61,-62,215,-63,215,215,-63,215,-63,215,215,215,215,215,215,215,215,215,215,]),'DIVIDE':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,428,429,467,468,522,523,524,525,],[-63,216,216,-60,-61,-62,216,-63,216,216,-63,216,-63,216,216,216,216,216,216,216,216,216,216,]),'PERCENT':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,428,429,467,468,522,523,524,525,],[-63,217,217,-60,-61,-62,217,-63,217,217,-63,217,-63,217,217,217,217,217,217,217,217,217,217,]),'EQUAL_COMPARATION':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,220,220,-60,-61,-62,220,-63,220,-65,-63,-64,-63,220,220,220,220,]),'INEQUALITY':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,221,221,-60,-61,-62,221,-63,221,-65,-63,-64,-63,221,221,221,221,]),'GREATER_THAN_OR_EQUAL':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,222,222,-60,-61,-62,222,-63,222,-65,-63,-64,-63,222,222,222,222,]),'SMALLER_THAN_OR_EQUAL':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,223,223,-60,-61,-62,223,-63,223,-65,-63,-64,-63,223,223,223,223,]),'LOGICAND':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,224,224,-60,-61,-62,224,-63,224,-65,-63,-64,-63,224,224,224,224,]),'LOGICOR':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,225,225,-60,-61,-62,225,-63,225,-65,-63,-64,-63,225,225,225,225,]),'LOGICNOT':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,226,226,-60,-61,-62,226,-63,226,-65,-63,-64,-63,226,226,226,226,]),'LOGICXOR':([117,139,141,142,178,179,261,267,273,279,280,281,299,311,312,467,468,],[-63,227,227,-60,-61,-62,227,-63,227,-65,-63,-64,-63,227,227,227,227,]),'DOT':([139,257,],[212,333,]),'CONCURRENT':([154,438,],[232,-212,]),'IDENTIFIER':([188,302,359,360,361,362,363,364,365,422,471,499,504,521,526,555,556,],[246,369,369,-214,-216,-217,-218,-219,-220,-215,-225,-221,-224,369,369,-222,-223,]),'BOOLTRUE':([205,211,276,350,354,357,403,406,407,619,],[268,268,268,268,268,268,268,268,268,268,]),'BOOLFALSE':([205,211,276,350,354,357,403,406,407,619,],[269,269,269,269,269,269,269,269,269,269,]),'STRING':([205,207,211,276,336,346,348,350,354,357,403,406,407,606,619,624,],[271,277,271,271,399,410,412,271,271,271,271,271,271,616,271,616,]),'CLEAR':([212,],[286,]),'COUNT':([212,],[287,]),'ADD':([212,],[288,]),'REMOVEAT':([212,],[289,]),'PUT':([212,],[290,]),'REMOVE':([212,],[291,]),'ENQUEUE':([212,],[292,]),'DEQUEUE':([212,],[293,]),'ISEMPTY':([212,],[294,]),'PEEK':([212,],[295,]),'PUSH':([212,],[296,]),'POP':([212,],[297,]),'NEW':([309,437,474,479,480,],[375,481,507,510,511,]),'IN':([391,],[444,]),'CATCH':([392,],[445,]),'INCREMENT':([482,],[513,]),'DECREMENT':([482,],[514,]),'EXCEPTION':([486,],[516,]),'ELSE':([509,604,],[530,530,]),'ELSE_IF':([509,604,],[531,531,]),'FINALLY':([591,],[601,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'all_method_definitions':([9,13,],[11,26,]),'block_main_method':([9,11,],[12,22,]),'method_definition':([9,13,],[13,13,]),'simple_method':([9,13,],[15,15,]),'declaration_async':([9,13,],[16,16,]),'declaration_lambda':([9,13,],[17,17,]),'access_modifiers':([9,13,101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[18,18,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'data_type':([14,27,37,59,60,62,70,73,81,88,101,104,105,108,113,175,176,199,233,240,247,248,249,251,255,258,432,443,446,537,544,545,550,551,554,569,586,612,],[30,30,53,77,77,77,77,77,77,77,156,156,156,156,156,241,242,156,303,313,325,326,156,156,156,156,156,325,156,156,557,156,156,156,156,156,156,156,]),'array_type':([14,27,37,59,60,62,70,73,81,88,101,104,105,108,113,175,176,199,233,240,247,248,249,251,255,258,432,443,446,537,544,545,550,551,554,569,586,612,],[36,36,36,36,36,36,36,36,36,36,143,143,143,143,143,36,36,143,36,36,36,36,143,143,143,143,143,36,143,143,36,143,143,143,143,143,143,143,]),'function_arguments':([59,60,62,70,73,81,88,],[75,79,80,83,75,95,102,]),'function_argument':([59,60,62,70,73,81,88,],[76,76,76,76,76,76,76,]),'all_block_code':([101,104,105,108,113,199,249,251,258,446,537,550,551,569,612,],[112,197,198,201,206,254,327,329,334,487,552,565,567,582,622,]),'block_code':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[113,113,113,113,113,113,113,113,332,113,478,113,113,478,113,113,570,113,478,113,]),'def_const_or_var':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'print_data':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'read_data':([101,104,105,108,113,199,205,211,249,251,255,258,276,350,354,357,403,406,407,432,446,537,545,550,551,554,569,586,612,619,],[116,116,116,116,116,116,264,264,116,116,116,116,264,264,264,264,264,264,264,116,116,116,116,116,116,116,116,116,116,264,]),'arithmetic_operation':([101,104,105,108,113,199,205,208,211,229,239,249,250,251,255,258,276,324,350,354,357,370,403,406,407,423,424,425,432,441,446,472,473,488,501,502,537,545,546,550,551,554,569,586,612,619,],[117,117,117,117,117,117,267,280,267,299,267,117,267,117,117,117,267,267,267,267,267,267,267,267,267,267,267,267,117,267,117,299,280,267,267,267,117,117,267,117,117,117,117,117,117,267,]),'logic_operation':([101,104,105,108,113,199,205,211,239,249,250,251,255,258,276,324,350,354,357,403,406,407,432,441,446,488,537,545,546,550,551,554,569,586,612,619,],[118,118,118,118,118,118,270,270,310,118,328,118,118,118,270,389,270,270,270,270,270,270,118,389,118,518,118,118,560,118,118,118,118,118,118,270,]),'array_assignation':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'array_value_assign':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'array_indexing':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'lists':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'functions_list':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'dict_estruct':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'functions_dict':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'concurrent_method':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'queue_struct':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'functions_queue':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'stack_struct':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'functions_stack':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'block_if':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[131,131,131,131,131,131,131,131,131,131,477,131,131,477,131,131,131,131,477,131,]),'block_for':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'block_try_catch':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'block_while':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'constant_assignation':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'variable_assignation':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'late_initialization':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'value_numeric':([101,104,105,108,113,199,205,208,211,229,239,249,250,251,255,258,276,324,350,354,357,370,403,406,407,423,424,425,432,441,446,472,473,488,501,502,537,545,546,550,551,554,569,586,612,619,],[141,141,141,141,141,141,261,281,261,281,311,141,311,141,141,141,261,311,261,261,261,428,261,261,261,428,467,467,141,311,141,428,428,311,522,525,141,141,311,141,141,141,141,141,141,261,]),'list_empty':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'list_full':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'list_func_clear':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'list_func_count':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'list_func_add':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'list_func_removeat':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'dict_empty':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'dict_full':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'dict_func_put':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'dict_func_remove':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'method_declaration':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'queue_enqueue':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'queue_dequeue':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'queue_clear':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'queue_isEmpty':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'queue_peek':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'stack_push':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'stack_pop':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'stack_clear':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'stack_peek':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'stack_isEmpty':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'for_anidado':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,564,566,169,169,169,169,]),'for_each':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'try_catch_simply':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'try_catch_finally':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'normal_while':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'do_while':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'assignation_key_value':([101,104,105,108,113,156,199,241,242,249,251,255,258,305,313,325,432,446,537,545,550,551,554,569,586,612,],[177,177,177,177,177,234,177,314,317,177,177,177,177,372,377,390,177,177,177,177,177,177,177,177,177,177,]),'for_simple':([101,104,105,108,113,199,249,251,255,258,432,446,537,545,550,551,554,569,586,612,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'function_return':([112,198,254,],[204,253,331,]),'arithmetic_operator':([139,141,261,273,279,281,311,312,428,429,467,468,522,523,524,525,],[208,229,229,208,208,229,229,208,472,473,229,208,229,208,208,229,]),'logic_operator':([139,141,261,273,311,312,467,468,],[209,230,230,209,230,209,501,502,]),'assignation_key_value_multiple':([156,241,242,305,313,],[235,315,318,373,378,]),'value':([205,211,276,350,354,357,403,406,407,619,],[260,285,339,414,418,339,339,450,451,627,]),'value_logic':([205,211,276,350,354,357,403,406,407,619,],[262,262,262,262,262,262,262,262,262,262,]),'value_string':([205,211,276,350,354,357,403,406,407,619,],[263,263,263,263,263,263,263,263,263,263,]),'array':([205,211,276,350,354,357,403,406,407,619,],[266,266,266,266,266,266,266,266,266,266,]),'concatenation':([205,211,276,336,350,354,357,403,406,407,619,],[274,274,274,400,274,274,274,274,274,274,274,]),'assignation_with_datatype':([247,443,],[324,484,]),'array_content':([276,357,403,],[338,420,449,]),'concurrent_block':([302,521,526,],[358,542,543,]),'statement_list':([302,521,526,],[359,359,359,]),'statement':([302,359,521,526,],[360,422,360,360,]),'assignment_concurrent':([302,359,521,526,],[361,361,361,361,]),'if_statement_concurrent':([302,359,521,526,],[362,362,362,362,]),'while_loop_concurrent':([302,359,521,526,],[363,363,363,363,]),'method_call_concurrent':([302,359,521,526,],[364,364,364,364,]),'return_statement_concurrent':([302,359,521,526,],[365,365,365,365,]),'logic_operations':([324,441,],[388,483,]),'expression':([370,423,472,473,],[427,465,505,506,]),'condition':([424,425,],[466,469,]),'not_yes_nested_if':([432,545,586,],[476,559,595,]),'other_if':([509,604,],[529,614,]),'key_value_pairs':([590,611,],[599,621,]),'key_value_pair':([590,611,],[600,600,]),'strings_list':([606,624,],[615,630,]),'ints_list':([608,626,],[617,632,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico.py',68),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY','block_publicClass',7,'p_block_publicClass','sintactico.py',71),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',72),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',73),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico.py',77),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',81),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico.py',82),
  ('block_code -> read_data','block_code',1,'p_block_code','sintactico.py',83),
  ('block_code -> arithmetic_operation','block_code',1,'p_block_code','sintactico.py',84),
  ('block_code -> logic_operation','block_code',1,'p_block_code','sintactico.py',85),
  ('block_code -> array_assignation','block_code',1,'p_block_code','sintactico.py',86),
  ('block_code -> array_value_assign','block_code',1,'p_block_code','sintactico.py',87),
  ('block_code -> array_indexing','block_code',1,'p_block_code','sintactico.py',88),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico.py',90),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',91),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',93),
  ('block_code -> functions_dict','block_code',1,'p_block_code','sintactico.py',94),
  ('block_code -> concurrent_method','block_code',1,'p_block_code','sintactico.py',95),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico.py',97),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico.py',98),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico.py',100),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico.py',101),
  ('block_code -> block_if','block_code',1,'p_block_code','sintactico.py',103),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico.py',105),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',107),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico.py',109),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',113),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',114),
  ('method_definition -> simple_method','method_definition',1,'p_method_definition','sintactico.py',118),
  ('method_definition -> declaration_async','method_definition',1,'p_method_definition','sintactico.py',119),
  ('method_definition -> declaration_lambda','method_definition',1,'p_method_definition','sintactico.py',120),
  ('all_method_definitions -> method_definition','all_method_definitions',1,'p_all_method_definitions','sintactico.py',124),
  ('all_method_definitions -> method_definition all_method_definitions','all_method_definitions',2,'p_all_method_definitions','sintactico.py',125),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',130),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico.py',131),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico.py',135),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',139),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',140),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',144),
  ('value -> value_logic','value',1,'p_value','sintactico.py',145),
  ('value -> value_string','value',1,'p_value','sintactico.py',146),
  ('value -> read_data','value',1,'p_value','sintactico.py',147),
  ('value -> METHOD','value',1,'p_value','sintactico.py',148),
  ('value -> array','value',1,'p_value','sintactico.py',149),
  ('array_assignation -> array_type VARIABLE ASSIGNATION LBRACKET array_content RBRACKET DOTANDCOMMA','array_assignation',7,'p_array_assignation','sintactico.py',153),
  ('array -> LBRACKET array_content RBRACKET','array',3,'p_array','sintactico.py',156),
  ('array_content -> value','array_content',1,'p_array_content','sintactico.py',159),
  ('array_content -> value COMMA array_content','array_content',3,'p_array_content','sintactico.py',160),
  ('array_indexing -> VARIABLE LBRACKET VARIABLE RBRACKET','array_indexing',4,'p_array_indexing','sintactico.py',164),
  ('array_indexing -> VARIABLE LBRACKET INTEGER RBRACKET','array_indexing',4,'p_array_indexing','sintactico.py',165),
  ('array_value_assign -> VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico.py',169),
  ('array_value_assign -> VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico.py',170),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',174),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',175),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',176),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',177),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',181),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',182),
  ('value_logic -> logic_operation','value_logic',1,'p_value_logic','sintactico.py',183),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',187),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',188),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',189),
  ('value_numeric -> arithmetic_operation','value_numeric',1,'p_value_numeric','sintactico.py',190),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',195),
  ('arithmetic_operation -> VARIABLE','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',196),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',197),
  ('arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',198),
  ('logic_operation -> value_numeric logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',202),
  ('logic_operation -> VARIABLE logic_operator INTEGER','logic_operation',3,'p_logic_operation','sintactico.py',203),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',207),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',208),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',209),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',210),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',211),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',212),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',213),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',214),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',215),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',216),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',220),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',221),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',222),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',223),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',224),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',229),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',230),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',234),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',235),
  ('def_const_or_var -> late_initialization','def_const_or_var',1,'p_def_const_or_var','sintactico.py',236),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',240),
  ('constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',241),
  ('constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',5,'p_constant_assignation','sintactico.py',242),
  ('constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico.py',243),
  ('variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',247),
  ('variable_assignation -> data_type assignation_key_value DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',248),
  ('variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',4,'p_variable_assignation','sintactico.py',249),
  ('variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico.py',250),
  ('late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA','late_initialization',4,'p_late_initialization','sintactico.py',254),
  ('late_initialization -> data_type VARIABLE DOTANDCOMMA','late_initialization',3,'p_late_initialization','sintactico.py',255),
  ('late_initialization -> assignation_key_value DOTANDCOMMA','late_initialization',2,'p_late_initialization','sintactico.py',256),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',260),
  ('assignation_key_value -> READ LPARENT RPARENT','assignation_key_value',3,'p_assignation_key_value','sintactico.py',261),
  ('assignation_key_value_multiple -> assignation_key_value','assignation_key_value_multiple',1,'p_assignation_key_value_multiple','sintactico.py',265),
  ('assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple','assignation_key_value_multiple',3,'p_assignation_key_value_multiple','sintactico.py',266),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',270),
  ('assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',271),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',275),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',276),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',277),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',278),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',279),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',280),
  ('data_type -> array_type','data_type',1,'p_data_type','sintactico.py',281),
  ('array_type -> CHARTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',285),
  ('array_type -> STRINGTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',286),
  ('array_type -> FLOATTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',287),
  ('array_type -> DECIMALTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',288),
  ('array_type -> INTTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',289),
  ('array_type -> BOOLTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico.py',290),
  ('logic_operations -> logic_operation DOTANDCOMMA','logic_operations',2,'p_logic_operations','sintactico.py',296),
  ('logic_operations -> logic_operation COMMA logic_operations','logic_operations',3,'p_logic_operations','sintactico.py',297),
  ('block_for -> for_anidado','block_for',1,'p_block_for','sintactico.py',301),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico.py',302),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',306),
  ('for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',11,'p_for_simple','sintactico.py',307),
  ('for_anidado -> for_simple','for_anidado',1,'p_for_anidado','sintactico.py',312),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',313),
  ('for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY','for_anidado',11,'p_for_anidado','sintactico.py',314),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico.py',318),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',322),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',323),
  ('try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',327),
  ('try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',330),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico.py',334),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico.py',335),
  ('normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico.py',339),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT','do_while',8,'p_do_while','sintactico.py',342),
  ('block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','block_if',8,'p_block_if','sintactico.py',345),
  ('other_if -> ELSE LKEY not_yes_nested_if RKEY','other_if',4,'p_other_if','sintactico.py',349),
  ('other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if','other_if',8,'p_other_if','sintactico.py',350),
  ('not_yes_nested_if -> block_if','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',355),
  ('not_yes_nested_if -> block_code','not_yes_nested_if',1,'p_not_yes_nested_if','sintactico.py',356),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',365),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',366),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',372),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',377),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',382),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',383),
  ('key_value_pair -> LKEY VARIABLE COMMA value RKEY','key_value_pair',5,'p_key_value_pair','sintactico.py',388),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',393),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',394),
  ('functions_dict -> dict_func_put','functions_dict',1,'p_functions_dict','sintactico.py',399),
  ('functions_dict -> dict_func_remove','functions_dict',1,'p_functions_dict','sintactico.py',400),
  ('dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA','dict_func_put',9,'p_dict_func_put','sintactico.py',405),
  ('dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA','dict_func_remove',7,'p_dict_func_remove','sintactico.py',410),
  ('lists -> list_empty','lists',1,'p_lists','sintactico.py',416),
  ('lists -> list_full','lists',1,'p_lists','sintactico.py',417),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',421),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',422),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',426),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico.py',427),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',431),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',432),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',436),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',437),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',441),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',442),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',443),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',444),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',448),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',451),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',454),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',457),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico.py',460),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico.py',463),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico.py',464),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico.py',465),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico.py',466),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico.py',467),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico.py',471),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico.py',474),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico.py',477),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico.py',480),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico.py',483),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',14,'p_queue_struct','sintactico.py',486),
  ('queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','queue_struct',13,'p_queue_struct','sintactico.py',487),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico.py',491),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico.py',492),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico.py',493),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico.py',494),
  ('functions_queue -> queue_peek','functions_queue',1,'p_functions_queue','sintactico.py',495),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico.py',499),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico.py',503),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico.py',507),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico.py',511),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico.py',515),
  ('simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',10,'p_simple_method','sintactico.py',522),
  ('simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY','simple_method',9,'p_simple_method','sintactico.py',523),
  ('simple_method -> STATIC VOID MAIN LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',10,'p_simple_method','sintactico.py',524),
  ('simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY','simple_method',11,'p_simple_method','sintactico.py',525),
  ('simple_method -> PUBLIC STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY','simple_method',10,'p_simple_method','sintactico.py',526),
  ('function_return -> RETURN value DOTANDCOMMA','function_return',3,'p_function_return','sintactico.py',530),
  ('function_argument -> data_type VARIABLE','function_argument',2,'p_function_argument','sintactico.py',534),
  ('function_argument -> data_type CHAR','function_argument',2,'p_function_argument','sintactico.py',535),
  ('function_argument -> METHOD VARIABLE','function_argument',2,'p_function_argument','sintactico.py',536),
  ('function_argument -> data_type LBRACKET RBRACKET VARIABLE','function_argument',4,'p_function_argument','sintactico.py',537),
  ('function_arguments -> function_argument','function_arguments',1,'p_function_arguments','sintactico.py',541),
  ('function_arguments -> function_argument COMMA function_arguments','function_arguments',3,'p_function_arguments','sintactico.py',542),
  ('declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY','declaration_async',22,'p_declaration_async','sintactico.py',546),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY','declaration_lambda',11,'p_declration_lambda','sintactico.py',550),
  ('concurrent_method -> method_declaration CONCURRENT LKEY concurrent_block RKEY','concurrent_method',5,'p_concurrent_method','sintactico.py',553),
  ('method_declaration -> METHOD IDENTIFIER LPARENT RPARENT DOTANDCOMMA','method_declaration',5,'p_method_declaration','sintactico.py',557),
  ('concurrent_block -> statement_list','concurrent_block',1,'p_concurrent_block','sintactico.py',561),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintactico.py',565),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintactico.py',566),
  ('statement -> assignment_concurrent','statement',1,'p_statement','sintactico.py',570),
  ('statement -> if_statement_concurrent','statement',1,'p_statement','sintactico.py',571),
  ('statement -> while_loop_concurrent','statement',1,'p_statement','sintactico.py',572),
  ('statement -> method_call_concurrent','statement',1,'p_statement','sintactico.py',573),
  ('statement -> return_statement_concurrent','statement',1,'p_statement','sintactico.py',574),
  ('assignment_concurrent -> VARIABLE ASSIGNATION expression DOTANDCOMMA','assignment_concurrent',4,'p_assignment_concurrent','sintactico.py',578),
  ('if_statement_concurrent -> IF LPARENT condition RPARENT LKEY concurrent_block RKEY','if_statement_concurrent',7,'p_if_statement_concurrent','sintactico.py',582),
  ('while_loop_concurrent -> WHILE LPARENT condition RPARENT LKEY concurrent_block RKEY','while_loop_concurrent',7,'p_while_loop_concurrent','sintactico.py',586),
  ('method_call_concurrent -> IDENTIFIER LPARENT RPARENT DOTANDCOMMA','method_call_concurrent',4,'p_method_call_concurrent','sintactico.py',590),
  ('return_statement_concurrent -> RETURN expression DOTANDCOMMA','return_statement_concurrent',3,'p_return_statement_concurrent','sintactico.py',594),
  ('expression -> value_numeric','expression',1,'p_expression','sintactico.py',598),
  ('expression -> VARIABLE','expression',1,'p_expression','sintactico.py',599),
  ('expression -> value_numeric arithmetic_operator expression','expression',3,'p_expression','sintactico.py',600),
  ('expression -> VARIABLE arithmetic_operator expression','expression',3,'p_expression','sintactico.py',601),
  ('condition -> value_numeric logic_operator value_numeric','condition',3,'p_condition','sintactico.py',605),
  ('condition -> VARIABLE logic_operator value_numeric','condition',3,'p_condition','sintactico.py',606),
  ('condition -> value_numeric logic_operator VARIABLE','condition',3,'p_condition','sintactico.py',607),
  ('condition -> VARIABLE logic_operator VARIABLE','condition',3,'p_condition','sintactico.py',608),
]
