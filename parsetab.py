
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE ENUM EQUAL_COMPARATION ERROR EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JOIN JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK START STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK THREAD TIMES TRY USING VARIABLE VOID WHILE WRITEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_code               : def_const_or_var\n                                | print_data\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n                                | thread_main\n                                | concurrent_method\n\n                                | block_try_catch\n                                | lists\n                                | functions_list\n                                \n                                | statement_lambda\n\n                                | enums\n                                | normal_if\n                                | block_while\n                                | stack_struct\n                                | functions_stack\n                                | queue_struct\n                                | functions_queue\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    array_assignation        : CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA\n                                | STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA\n                                | FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA\n                                | DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA\n                                | INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA\n                                | BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA\n    char_array_assignation     : VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKETchar_content_multiple    : CHAR\n                                | CHAR COMMA char_content_multiple\n    string_array_assignation   : VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKETstring_content_multiple  : STRING\n                                | STRING COMMA string_content_multiple\n    float_array_assignation    : VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKETfloat_content_multiple   : FLOAT_NUMBER\n                                | FLOAT_NUMBER COMMA float_content_multiple\n    int_array_assignation      : VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKETint_content_multiple     : INTEGER\n                                | INTEGER COMMA int_content_multiple\n    decimal_array_assignation  : VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKETdecimal_content_multiple : DECIMAL_NUMBER\n                                | DECIMAL_NUMBER COMMA decimal_content_multiple\n    bool_array_assignation     : VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKETbool_content_multiple    : BOOLTRUE\n                                | BOOLFALSE\n                                | BOOLTRUE COMMA bool_content_multiple\n                                | BOOLFALSE COMMA bool_content_multiple\n    array                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n                                | array\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n    constant_assignation     : access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA\n                                | CONST assignation_type_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers assignation_type_value_multiple DOTANDCOMMA\n                                | assignation_type_value_multiple DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_type_value   : INTTYPE assignation_int\n                                | STRINGTYPE assignation_string\n                                | FLOATTYPE assignation_float\n                                | BOOLTYPE assignation_true\n                                | BOOLTYPE assignation_false\n    assignation_int          : VARIABLE ASSIGNATION INTEGER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_string       : VARIABLE ASSIGNATION STRING\n                                | VARIABLE ASSIGNATION VARIABLE\n    assignation_float        : VARIABLE ASSIGNATION FLOAT_NUMBER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_true         : VARIABLE ASSIGNATION BOOLTRUE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_false        : VARIABLE ASSIGNATION BOOLFALSE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_type_value_multiple          : INTTYPE assignation_int_multiple\n                                                | STRINGTYPE assignation_string_multiple\n                                                | FLOATTYPE assignation_float_multiple\n                                                | BOOLTYPE assignation_true_multiple\n                                                | BOOLTYPE assignation_false_multiple\n    assignation_int_multiple                 : assignation_int\n                                                | assignation_int COMMA assignation_int_multiple\n    assignation_string_multiple              : assignation_string\n                                                | assignation_string COMMA assignation_string_multiple\n    assignation_float_multiple               : assignation_float\n                                                | assignation_float COMMA assignation_float_multiple\n    assignation_true_multiple                : assignation_true\n                                                | assignation_true COMMA assignation_true_multiple\n    assignation_false_multiple               : assignation_false\n                                                | assignation_false COMMA assignation_false_multiple\n    \n    thread_main                 : declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait\n    \n    declaration_thread          : THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA\n                                | THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA\n    \n    thread_init                 : thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA\n    \n    thread_wait                 : thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA\n    \n    concurrent_method           : STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY\n                                | WRITE\n    \n    thread_logic                : thread_sentence\n                                | thread_logic thread_sentence\n    \n    thread_sentence             : thread_expression DOTANDCOMMA\n    \n    thread_expression           : thread_identificator DOT concurrent_method LPARENT RPARENT\n                                | PRINT LPARENT STRING RPARENT\n    \n    thread_arguments            : thread_expression\n                                | thread_arguments COMMA thread_expression\n    \n    thread_identificator        : VARIABLE\n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEYtry_catch_finally          : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEYblock_code_try           : def_const_or_var\n                                | print_data\n    all_block_code_try       : block_code_try\n                                | block_code_try all_block_code_try        \n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add            : VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA\n    list_func_removeat       : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT REMOVEAT LPARENT STRING RPARENT DOTANDCOMMA\n    statement_lambda           : LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENTenums                      : ENUM METHOD LKEY list_enums RKEYlist_enums               : METHOD\n                                | METHOD COMMA list_enums \n    block_if                 : normal_if\n                                | all_block_code\n    normal_if                : IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n                                | IF LPARENT boolean_operation RPARENT LKEY block_if RKEY \n    other_if                 : ELSE LKEY block_if RKEY\n                                | ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n    block_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENTstack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct               : QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMAfunctions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n                                | queue_peek\n    queue_enqueue              : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_dequeue              : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAqueue_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAqueue_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAqueue_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,17,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,107,137,162,194,195,213,214,272,283,310,311,312,314,322,324,326,334,353,354,364,365,366,368,379,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,491,498,513,515,517,523,529,531,535,],[0,-1,-2,-24,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,-25,-118,-3,-117,-116,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,-192,-193,-219,-221,-222,-230,-155,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,-159,-206,-180,-181,-207,-172,-182,-183,-173,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,89,101,102,111,112,116,117,120,121,122,123,131,136,181,183,184,185,186,187,188,189,190,193,208,210,211,212,225,226,227,229,231,232,233,234,235,236,238,240,241,242,243,244,246,248,250,251,252,253,262,287,288,293,295,296,297,298,299,300,301,302,305,306,307,309,336,337,338,351,352,355,356,357,358,359,367,371,375,376,377,378,398,410,411,412,413,428,430,431,444,446,448,450,452,454,456,466,467,481,490,497,509,510,512,524,526,],[4,137,-141,-147,-142,-149,-140,-145,-143,-144,-151,-153,194,195,-108,-35,-36,-37,-38,-100,-39,-40,-41,272,283,-148,-130,-129,310,311,312,314,-150,-42,-40,-133,-93,322,324,-146,-42,-39,-128,326,-152,-154,-37,-35,-136,-36,-109,353,354,-37,-87,-88,-89,-91,-92,-32,-33,-34,364,365,366,368,-110,-101,-42,403,404,405,406,407,408,409,415,-94,-37,-136,-37,-139,442,-46,-47,446,-80,460,464,465,-63,-45,-60,-66,-72,-69,-75,484,485,491,-166,-165,513,515,518,529,531,]),'PUBLIC':([4,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,140,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,533,535,],[6,95,95,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,95,-118,95,95,-117,-116,95,-174,-175,95,95,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,95,95,95,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,95,-159,-206,95,-180,-181,-207,-172,-182,-183,95,-173,]),'STATIC':([4,12,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,388,400,403,404,405,406,407,408,409,415,429,437,439,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[7,15,29,29,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,29,-118,29,-117,-116,29,29,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,29,29,29,-192,-193,-219,-221,-222,-230,-155,-18,29,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,29,-160,-204,-212,-223,-211,29,-159,-206,29,-180,-181,-207,-172,-182,-183,-173,]),'CLASS':([6,],[8,]),'VOID':([7,15,29,],[9,18,98,]),'VARIABLE':([8,21,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,59,60,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,98,104,106,108,125,127,132,133,134,135,137,142,143,147,148,149,165,166,167,168,169,170,171,172,173,174,175,176,177,182,194,195,205,207,213,214,219,223,254,259,260,261,263,264,265,266,267,268,269,272,276,277,283,285,286,304,310,311,312,314,316,317,318,319,320,321,322,324,326,328,329,330,334,335,345,347,348,353,354,364,365,366,368,379,384,388,393,396,397,400,403,404,405,406,407,408,409,414,415,429,437,440,441,442,460,461,464,465,471,482,483,484,485,491,498,503,513,515,517,523,529,531,535,],[10,23,32,97,99,103,32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,113,118,124,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,128,-213,-214,-215,-216,-217,129,-224,-225,-226,-227,-228,139,139,150,32,164,139,185,118,103,113,124,-118,185,32,209,103,211,228,230,113,232,237,239,118,241,245,247,249,250,139,185,-117,-116,32,32,-83,-84,293,293,139,185,-111,-112,338,-102,-103,-104,-105,-106,-107,-115,343,344,-55,293,293,293,-43,-44,-54,-56,338,-95,-96,-97,-98,-99,-57,-58,-59,375,377,139,-199,32,32,32,139,-192,-193,-219,-221,-222,-230,-155,-18,139,185,139,-162,-198,-85,-86,-194,-195,-196,-197,-218,293,-229,-205,-210,-160,-163,-164,-158,-204,-212,-223,-211,32,185,-156,-157,-159,-206,32,-180,-181,-207,-172,-182,-183,-173,]),'MAIN':([9,18,],[11,20,]),'LKEY':([10,25,91,94,126,144,146,258,278,281,462,486,499,509,510,528,],[12,27,140,143,179,205,207,335,345,348,482,494,503,514,516,533,]),'LPARENT':([11,20,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,68,69,70,72,73,74,76,77,78,79,80,82,83,84,85,86,93,106,137,139,143,145,152,153,154,155,156,157,158,159,160,161,194,195,205,207,213,214,272,283,303,310,311,312,314,322,324,326,332,334,335,339,340,341,342,345,346,347,353,354,364,365,366,368,379,384,399,400,403,404,405,406,407,408,409,415,427,429,437,440,461,463,464,465,471,472,482,491,498,500,501,502,503,513,515,517,523,529,531,535,],[13,22,30,30,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,108,-161,-170,-171,-178,-179,-188,-189,-190,-191,127,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,142,30,-118,-169,30,206,215,216,217,218,219,220,221,222,223,224,-117,-116,30,30,-83,-84,-115,-55,361,-43,-44,-54,-56,-57,-58,-59,381,-199,30,386,387,388,389,30,393,30,-192,-193,-219,-221,-222,-230,-155,-18,443,-198,-85,-86,-194,-195,-196,-197,-218,-229,459,-205,-210,-160,-204,483,-212,-223,-211,489,30,-159,-206,504,505,506,30,-180,-181,-207,-172,-182,-183,-173,]),'STRINGTYPE':([13,22,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,87,88,95,96,106,130,137,140,141,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,487,491,498,503,513,515,517,523,529,531,533,535,],[16,24,31,31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,133,133,-119,-120,31,133,-118,133,201,31,-117,-116,133,-174,-175,31,31,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,31,31,31,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,31,495,-159,-206,31,-180,-181,-207,-172,-182,-183,133,-173,]),'RKEY':([14,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,107,137,194,195,197,198,199,200,204,213,214,256,257,272,275,280,282,283,310,311,312,314,322,324,326,334,347,353,354,364,365,366,368,379,382,383,384,385,392,394,396,397,400,403,404,405,406,407,408,409,415,429,437,440,441,442,461,464,465,471,491,492,498,507,513,515,517,518,519,520,521,522,523,529,530,531,532,534,535,],[17,106,-24,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,-25,-118,-117,-116,274,-176,-174,-175,279,-83,-84,-200,334,-115,-177,347,349,-55,-43,-44,-54,-56,-57,-58,-59,-199,-4,-192,-193,-219,-221,-222,-230,-155,-201,429,-18,-203,437,-5,440,-162,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-163,-164,-204,-212,-223,-211,-159,498,-206,511,-180,-181,-207,523,524,-184,526,-186,-172,-182,-185,-183,-187,535,-173,]),'LBRACKET':([16,24,31,32,56,57,58,59,60,219,223,284,285,286,304,313,315,323,325,327,414,],[19,26,100,104,109,110,114,115,119,304,304,350,304,304,304,369,370,372,373,374,304,]),'RBRACKET':([19,26,100,109,110,114,115,119,150,151,183,184,186,187,188,189,190,293,295,296,297,298,299,300,301,302,337,338,362,363,401,402,410,411,413,416,417,418,419,420,421,422,423,424,425,426,446,447,474,475,476,477,478,479,480,],[21,28,147,165,166,169,170,173,213,214,-35,-36,-38,-100,-39,-40,-41,-37,-87,-88,-89,-91,-92,-32,-33,-34,-101,-42,413,-81,444,-64,-46,-47,-80,448,-61,450,-67,452,-73,454,-70,456,-76,-77,-45,-82,-65,-62,-68,-74,-71,-78,-79,]),'RPARENT':([23,62,97,139,163,164,180,181,183,184,185,186,187,188,189,190,203,206,215,216,220,221,222,224,262,289,290,291,292,293,294,295,296,297,298,299,300,301,302,308,336,337,338,349,361,381,386,387,410,411,413,432,433,438,440,446,459,468,473,489,493,505,506,508,],[25,-161,144,-169,225,226,258,-108,-35,-36,-37,-38,-100,-39,-40,-41,278,281,287,288,305,306,307,309,-109,355,356,357,358,-37,359,-87,-88,-89,-91,-92,-32,-33,-34,367,-110,-101,-42,400,412,428,430,431,-46,-47,-80,466,467,471,-160,-45,481,486,490,497,499,509,510,512,]),'PRINT':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,140,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,348,353,354,364,365,366,368,379,384,396,397,400,403,404,405,406,407,408,409,415,429,437,440,441,442,461,464,465,471,482,491,494,498,503,513,515,517,523,529,531,533,535,],[55,55,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,55,-118,55,55,-117,-116,55,-174,-175,55,55,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,55,55,55,399,-192,-193,-219,-221,-222,-230,-155,-18,399,-162,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-163,-164,-204,-212,-223,-211,55,-159,500,-206,55,-180,-181,-207,-172,-182,-183,55,-173,]),'CHARTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[56,56,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,56,-118,56,-117,-116,56,56,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,56,56,56,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,56,-159,-206,56,-180,-181,-207,-172,-182,-183,-173,]),'FLOATTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,87,88,95,96,106,130,137,140,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,533,535,],[57,57,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,134,134,-119,-120,57,134,-118,134,57,-117,-116,134,-174,-175,57,57,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,57,57,57,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,57,-159,-206,57,-180,-181,-207,-172,-182,-183,134,-173,]),'DECIMALTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[58,58,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,58,-118,58,-117,-116,58,58,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,58,58,58,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,58,-159,-206,58,-180,-181,-207,-172,-182,-183,-173,]),'INTTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,87,88,95,96,106,130,137,140,141,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,488,491,498,503,513,515,517,523,529,531,533,535,],[59,59,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,132,132,-119,-120,59,132,-118,132,202,59,-117,-116,132,-174,-175,59,59,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,59,59,59,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,59,496,-159,-206,59,-180,-181,-207,-172,-182,-183,132,-173,]),'BOOLTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,87,88,95,96,106,130,137,140,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,533,535,],[60,60,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,135,135,-119,-120,60,135,-118,135,60,-117,-116,135,-174,-175,60,60,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,60,60,60,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,60,-159,-206,60,-180,-181,-207,-172,-182,-183,135,-173,]),'WRITE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,388,400,403,404,405,406,407,408,409,415,429,437,439,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[62,62,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,62,-118,62,-117,-116,62,62,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,62,62,62,-192,-193,-219,-221,-222,-230,-155,-18,62,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,62,-160,-204,-212,-223,-211,62,-159,-206,62,-180,-181,-207,-172,-182,-183,-173,]),'ENUM':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[71,71,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,71,-118,71,-117,-116,71,71,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,71,71,71,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,71,-159,-206,71,-180,-181,-207,-172,-182,-183,-173,]),'IF':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[72,72,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,72,-118,72,-117,-116,72,72,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,72,72,72,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,72,-159,-206,72,-180,-181,-207,-172,-182,-183,-173,]),'STACK':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,270,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[75,75,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,75,-118,75,-117,-116,75,75,-83,-84,339,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,75,75,75,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,75,-159,-206,75,-180,-181,-207,-172,-182,-183,-173,]),'QUEUE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,271,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[81,81,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,81,-118,81,-117,-116,81,81,-83,-84,340,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,81,81,81,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,81,-159,-206,81,-180,-181,-207,-172,-182,-183,-173,]),'CONST':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,87,95,96,106,137,140,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,533,535,],[88,88,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,130,-119,-120,88,-118,88,88,-117,-116,88,-174,-175,88,88,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,88,88,88,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,88,-159,-206,88,-180,-181,-207,-172,-182,-183,88,-173,]),'THREAD':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,61,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,273,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,484,485,491,498,503,513,515,517,523,529,531,535,],[90,90,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,90,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,90,-118,90,-117,-116,90,90,-83,-84,-115,341,-55,-43,-44,-54,-56,-57,-58,-59,-199,90,90,90,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,90,-156,-157,-159,-206,90,-180,-181,-207,-172,-182,-183,-173,]),'TRY':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[91,91,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,91,-118,91,-117,-116,91,91,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,91,91,91,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,91,-159,-206,91,-180,-181,-207,-172,-182,-183,-173,]),'LIST':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,435,436,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[92,92,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,92,-118,92,-117,-116,92,92,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,92,92,92,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,469,470,-210,-160,-204,-212,-223,-211,92,-159,-206,92,-180,-181,-207,-172,-182,-183,-173,]),'WHILE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,279,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[93,93,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,93,-118,93,-117,-116,93,93,-83,-84,-115,346,-55,-43,-44,-54,-56,-57,-58,-59,-199,93,93,93,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,93,-159,-206,93,-180,-181,-207,-172,-182,-183,-173,]),'DO':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,143,194,195,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,535,],[94,94,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,94,-118,94,-117,-116,94,94,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,94,94,94,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,94,-159,-206,94,-180,-181,-207,-172,-182,-183,-173,]),'PRIVATE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,63,64,65,66,67,68,69,70,73,74,76,77,78,79,80,82,83,84,85,86,106,137,140,143,194,195,198,199,200,205,207,213,214,272,283,310,311,312,314,322,324,326,334,335,345,347,353,354,364,365,366,368,379,384,400,403,404,405,406,407,408,409,415,429,437,440,461,464,465,471,482,491,498,503,513,515,517,523,529,531,533,535,],[96,96,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-113,-114,-161,-170,-171,-178,-179,-188,-189,-190,-191,-208,-209,-213,-214,-215,-216,-217,-224,-225,-226,-227,-228,96,-118,96,96,-117,-116,96,-174,-175,96,96,-83,-84,-115,-55,-43,-44,-54,-56,-57,-58,-59,-199,96,96,96,-192,-193,-219,-221,-222,-230,-155,-18,-198,-85,-86,-194,-195,-196,-197,-218,-229,-205,-210,-160,-204,-212,-223,-211,96,-159,-206,96,-180,-181,-207,-172,-182,-183,96,-173,]),'DOT':([32,139,178,331,395,],[105,-169,255,380,439,]),'METHOD':([71,179,333,],[126,256,256,]),'SMALLER_THAN':([92,185,187,188,189,190,250,293,295,338,375,377,469,470,],[141,-42,265,-39,-40,-41,-42,-42,265,-42,-42,-42,487,488,]),'ARROW':([99,],[146,]),'COMMA':([102,112,117,122,123,181,183,184,185,186,187,188,189,190,211,212,232,233,234,235,241,242,243,250,251,252,253,256,262,293,295,296,297,298,299,300,301,302,336,337,338,363,371,375,376,377,378,402,410,411,413,417,419,421,423,425,426,446,520,522,],[148,167,171,174,175,-108,-35,-36,-37,-38,-100,-39,-40,-41,-130,-129,-42,-40,-133,-93,-42,-39,-128,-37,-35,-136,-36,333,-109,-37,-87,-88,-89,-91,-92,-32,-33,-34,-110,-101,-42,414,-94,-37,-136,-37,-139,445,-46,-47,-80,449,451,453,455,457,458,-45,525,527,]),'ASSIGNATION':([103,113,118,124,128,129,138,139,209,213,214,228,230,237,239,245,247,249,343,344,],[149,168,172,176,191,192,196,-169,284,285,286,313,315,323,325,327,328,329,390,391,]),'INTEGER':([104,127,142,168,172,176,182,217,218,219,223,259,260,261,263,264,265,266,267,268,269,285,286,304,316,317,318,319,320,321,328,329,373,393,414,455,483,516,527,],[151,188,188,188,242,188,188,289,291,188,188,188,-111,-112,188,-102,-103,-104,-105,-106,-107,188,188,188,188,-95,-96,-97,-98,-99,188,188,423,188,188,423,188,522,522,]),'CLEAR':([105,],[152,]),'COUNT':([105,],[153,]),'ADD':([105,],[154,]),'REMOVEAT':([105,],[155,]),'PUSH':([105,],[156,]),'POP':([105,],[157,]),'PEEK':([105,],[158,]),'ISEMPTY':([105,],[159,]),'ENQUEUE':([105,],[160,]),'DEQUEUE':([105,],[161,]),'STRING':([108,149,217,218,219,223,285,286,304,350,360,414,443,445,514,525,],[163,212,290,292,300,300,300,300,300,402,410,300,473,402,520,520,]),'LOGICNOT':([127,142,176,259,260,261,328,329,393,483,],[182,182,182,182,-111,-112,182,182,182,182,]),'BOOLTRUE':([127,142,176,182,219,223,259,260,261,285,286,304,328,329,374,393,414,457,458,483,],[183,183,251,183,183,183,183,-111,-112,183,183,183,251,183,425,183,183,425,425,183,]),'BOOLFALSE':([127,142,176,182,219,223,259,260,261,285,286,304,328,329,374,393,414,457,458,483,],[184,184,253,184,184,184,184,-111,-112,184,184,184,184,253,426,184,184,426,426,184,]),'FLOAT_NUMBER':([127,142,168,172,176,182,219,223,259,260,261,263,264,265,266,267,268,269,285,286,304,316,317,318,319,320,321,328,329,370,393,414,451,483,],[189,189,233,189,189,189,189,189,189,-111,-112,189,-102,-103,-104,-105,-106,-107,189,189,189,189,-95,-96,-97,-98,-99,189,189,419,189,189,419,189,]),'DECIMAL_NUMBER':([127,142,168,172,176,182,219,223,259,260,261,263,264,265,266,267,268,269,285,286,304,316,317,318,319,320,321,328,329,372,393,414,453,483,],[190,190,190,190,190,190,190,190,190,-111,-112,190,-102,-103,-104,-105,-106,-107,190,190,190,190,-95,-96,-97,-98,-99,190,190,421,190,190,421,190,]),'LOGICAND':([181,183,184,185,186,187,188,189,190,250,251,253,337,338,375,377,],[260,-35,-36,-37,-38,-100,-39,-40,-41,-37,-35,-36,-101,-42,-37,-37,]),'LOGICOR':([181,183,184,185,186,187,188,189,190,250,251,253,337,338,375,377,],[261,-35,-36,-37,-38,-100,-39,-40,-41,-37,-35,-36,-101,-42,-37,-37,]),'GREATER_THAN':([185,187,188,189,190,201,202,250,293,295,338,375,377,495,496,],[-42,264,-39,-40,-41,276,277,-42,-42,264,-42,-42,-42,501,502,]),'EQUAL_COMPARATION':([185,187,188,189,190,250,293,295,338,375,377,],[-42,266,-39,-40,-41,-42,-42,266,-42,-42,-42,]),'INEQUALITY':([185,187,188,189,190,250,293,295,338,375,377,],[-42,267,-39,-40,-41,-42,-42,267,-42,-42,-42,]),'GREATER_THAN_OR_EQUAL':([185,187,188,189,190,250,293,295,338,375,377,],[-42,268,-39,-40,-41,-42,-42,268,-42,-42,-42,]),'SMALLER_THAN_OR_EQUAL':([185,187,188,189,190,250,293,295,338,375,377,],[-42,269,-39,-40,-41,-42,-42,269,-42,-42,-42,]),'PLUS':([188,189,190,232,233,235,241,242,300,338,410,],[-39,-40,-41,-42,-40,317,-42,-39,360,-42,360,]),'MINUS':([188,189,190,232,233,235,241,242,338,],[-39,-40,-41,-42,-40,318,-42,-39,-42,]),'TIMES':([188,189,190,232,233,235,241,242,338,],[-39,-40,-41,-42,-40,319,-42,-39,-42,]),'DIVIDE':([188,189,190,232,233,235,241,242,338,],[-39,-40,-41,-42,-40,320,-42,-39,-42,]),'PERCENT':([188,189,190,232,233,235,241,242,338,],[-39,-40,-41,-42,-40,321,-42,-39,-42,]),'NEW':([191,192,196,390,391,],[270,271,273,435,436,]),'CHAR':([219,223,285,286,304,369,414,449,],[301,301,301,301,301,417,301,417,]),'READ':([219,223,285,286,304,414,],[303,303,303,303,303,303,]),'START':([255,],[332,]),'CATCH':([274,],[342,]),'JOIN':([380,],[427,]),'EXCEPTION':([389,],[434,]),'ELSE':([429,511,],[462,462,]),'ELSE_IF':([429,511,],[463,463,]),'ERROR':([434,504,],[468,508,]),'FINALLY':([523,],[528,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([12,],[14,]),'all_block_code':([27,34,106,143,205,207,335,345,347,482,503,],[33,107,162,204,280,282,385,392,394,385,385,]),'block_code':([27,34,106,143,205,207,335,345,347,482,503,],[34,34,34,34,34,34,34,34,34,34,34,]),'def_const_or_var':([27,34,106,140,143,198,205,207,335,345,347,482,503,533,],[35,35,35,199,35,199,35,35,35,35,35,35,35,199,]),'print_data':([27,34,106,140,143,198,205,207,335,345,347,482,503,533,],[36,36,36,200,36,200,36,36,36,36,36,36,36,200,]),'array_assignation':([27,34,106,143,205,207,335,345,347,482,503,],[37,37,37,37,37,37,37,37,37,37,37,]),'array_value_assign':([27,34,106,143,205,207,335,345,347,482,503,],[38,38,38,38,38,38,38,38,38,38,38,]),'array_indexing':([27,34,106,143,205,207,335,345,347,482,503,],[39,39,39,39,39,39,39,39,39,39,39,]),'thread_main':([27,34,106,143,205,207,335,345,347,482,503,],[40,40,40,40,40,40,40,40,40,40,40,]),'concurrent_method':([27,34,106,143,205,207,335,345,347,388,439,482,503,],[41,41,41,41,41,41,41,41,41,433,472,41,41,]),'block_try_catch':([27,34,106,143,205,207,335,345,347,482,503,],[42,42,42,42,42,42,42,42,42,42,42,]),'lists':([27,34,106,143,205,207,335,345,347,482,503,],[43,43,43,43,43,43,43,43,43,43,43,]),'functions_list':([27,34,106,143,205,207,335,345,347,482,503,],[44,44,44,44,44,44,44,44,44,44,44,]),'statement_lambda':([27,34,106,143,205,207,335,345,347,482,503,],[45,45,45,45,45,45,45,45,45,45,45,]),'enums':([27,34,106,143,205,207,335,345,347,482,503,],[46,46,46,46,46,46,46,46,46,46,46,]),'normal_if':([27,34,106,143,205,207,335,345,347,482,503,],[47,47,47,47,47,47,384,47,47,384,384,]),'block_while':([27,34,106,143,205,207,335,345,347,482,503,],[48,48,48,48,48,48,48,48,48,48,48,]),'stack_struct':([27,34,106,143,205,207,335,345,347,482,503,],[49,49,49,49,49,49,49,49,49,49,49,]),'functions_stack':([27,34,106,143,205,207,335,345,347,482,503,],[50,50,50,50,50,50,50,50,50,50,50,]),'queue_struct':([27,34,106,143,205,207,335,345,347,482,503,],[51,51,51,51,51,51,51,51,51,51,51,]),'functions_queue':([27,34,106,143,205,207,335,345,347,482,503,],[52,52,52,52,52,52,52,52,52,52,52,]),'constant_assignation':([27,34,106,140,143,198,205,207,335,345,347,482,503,533,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'variable_assignation':([27,34,106,140,143,198,205,207,335,345,347,482,503,533,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'declaration_thread':([27,34,61,106,143,205,207,335,345,347,482,503,],[61,61,125,61,61,61,61,61,61,61,61,61,]),'try_catch_simply':([27,34,106,143,205,207,335,345,347,482,503,],[63,63,63,63,63,63,63,63,63,63,63,]),'try_catch_finally':([27,34,106,143,205,207,335,345,347,482,503,],[64,64,64,64,64,64,64,64,64,64,64,]),'list_empty':([27,34,106,143,205,207,335,345,347,482,503,],[65,65,65,65,65,65,65,65,65,65,65,]),'list_full':([27,34,106,143,205,207,335,345,347,482,503,],[66,66,66,66,66,66,66,66,66,66,66,]),'list_func_clear':([27,34,106,143,205,207,335,345,347,482,503,],[67,67,67,67,67,67,67,67,67,67,67,]),'list_func_count':([27,34,106,143,205,207,335,345,347,482,503,],[68,68,68,68,68,68,68,68,68,68,68,]),'list_func_add':([27,34,106,143,205,207,335,345,347,482,503,],[69,69,69,69,69,69,69,69,69,69,69,]),'list_func_removeat':([27,34,106,143,205,207,335,345,347,482,503,],[70,70,70,70,70,70,70,70,70,70,70,]),'normal_while':([27,34,106,143,205,207,335,345,347,482,503,],[73,73,73,73,73,73,73,73,73,73,73,]),'do_while':([27,34,106,143,205,207,335,345,347,482,503,],[74,74,74,74,74,74,74,74,74,74,74,]),'stack_push':([27,34,106,143,205,207,335,345,347,482,503,],[76,76,76,76,76,76,76,76,76,76,76,]),'stack_pop':([27,34,106,143,205,207,335,345,347,482,503,],[77,77,77,77,77,77,77,77,77,77,77,]),'stack_clear':([27,34,106,143,205,207,335,345,347,482,503,],[78,78,78,78,78,78,78,78,78,78,78,]),'stack_peek':([27,34,106,143,205,207,335,345,347,482,503,],[79,79,79,79,79,79,79,79,79,79,79,]),'stack_isEmpty':([27,34,106,143,205,207,335,345,347,482,503,],[80,80,80,80,80,80,80,80,80,80,80,]),'queue_enqueue':([27,34,106,143,205,207,335,345,347,482,503,],[82,82,82,82,82,82,82,82,82,82,82,]),'queue_dequeue':([27,34,106,143,205,207,335,345,347,482,503,],[83,83,83,83,83,83,83,83,83,83,83,]),'queue_clear':([27,34,106,143,205,207,335,345,347,482,503,],[84,84,84,84,84,84,84,84,84,84,84,]),'queue_isEmpty':([27,34,106,143,205,207,335,345,347,482,503,],[85,85,85,85,85,85,85,85,85,85,85,]),'queue_peek':([27,34,106,143,205,207,335,345,347,482,503,],[86,86,86,86,86,86,86,86,86,86,86,]),'access_modifiers':([27,34,106,140,143,198,205,207,335,345,347,482,503,533,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'assignation_type_value_multiple':([27,34,87,88,106,130,140,143,198,205,207,335,345,347,482,503,533,],[89,89,131,136,89,193,89,89,89,89,89,89,89,89,89,89,89,]),'assignation_string_multiple':([31,133,148,],[101,101,210,]),'assignation_string':([31,133,148,],[102,102,102,]),'assignation_float_multiple':([57,134,167,],[111,111,231,]),'assignation_float':([57,134,167,],[112,112,112,]),'assignation_int_multiple':([59,132,171,],[116,116,240,]),'assignation_int':([59,132,171,],[117,117,117,]),'assignation_true_multiple':([60,135,174,],[120,120,246,]),'assignation_false_multiple':([60,135,175,],[121,121,248,]),'assignation_true':([60,135,174,],[122,122,122,]),'assignation_false':([60,135,175,],[123,123,123,]),'thread_identificator':([90,98,125,177,254,330,348,388,396,],[138,145,178,178,331,331,395,432,395,]),'thread_init':([125,177,],[177,254,]),'boolean_operation':([127,142,176,259,328,329,393,483,],[180,203,252,336,376,378,438,493,]),'value_boolean':([127,142,176,182,219,223,259,285,286,304,328,329,393,414,483,],[181,181,181,262,296,296,181,296,296,296,181,181,181,296,181,]),'comparison_operation':([127,142,176,182,219,223,259,263,285,286,304,328,329,393,414,483,],[186,186,186,186,186,186,186,337,186,186,186,186,186,186,186,186,]),'value_numeric':([127,142,168,172,176,182,219,223,259,263,285,286,304,316,328,329,393,414,483,],[187,187,235,235,187,187,295,295,187,187,295,295,295,235,187,187,187,295,187,]),'all_block_code_try':([140,198,533,],[197,275,534,]),'block_code_try':([140,198,533,],[198,198,198,]),'string_array_assignation':([147,],[208,]),'char_array_assignation':([165,],[227,]),'float_array_assignation':([166,],[229,]),'arithmetic_operation':([168,172,316,],[234,243,371,]),'decimal_array_assignation':([169,],[236,]),'int_array_assignation':([170,],[238,]),'bool_array_assignation':([173,],[244,]),'list_enums':([179,333,],[257,382,]),'boolean_operator':([181,],[259,]),'comparison_operator':([187,295,],[263,263,]),'value':([219,223,285,286,304,414,],[294,308,351,352,363,363,]),'value_string':([219,223,285,286,304,414,],[297,297,297,297,297,297,]),'read_data':([219,223,285,286,304,414,],[298,298,298,298,298,298,]),'array':([219,223,285,286,304,414,],[299,299,299,299,299,299,]),'concatenation':([219,223,285,286,304,360,414,],[302,302,302,302,302,411,302,]),'arithmetic_operator':([235,],[316,]),'thread_wait':([254,330,],[330,379,]),'array_content':([304,414,],[362,447,]),'block_if':([335,482,503,],[383,492,507,]),'thread_logic':([348,],[396,]),'thread_sentence':([348,396,],[397,441,]),'thread_expression':([348,396,],[398,398,]),'string_content_multiple':([350,445,],[401,474,]),'char_content_multiple':([369,449,],[416,475,]),'float_content_multiple':([370,451,],[418,476,]),'decimal_content_multiple':([372,453,],[420,477,]),'int_content_multiple':([373,455,],[422,478,]),'bool_content_multiple':([374,457,458,],[424,479,480,]),'other_if':([429,511,],[461,517,]),'strings_list':([514,525,],[519,530,]),'ints_list':([516,527,],[521,532,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_publicClass -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_publicClass',13,'p_block_publicClass','sintactico2.py',12),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',16),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_main_method',13,'p_block_main_method','sintactico2.py',17),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',22),
  ('block_code -> array_assignation','block_code',1,'p_block_code','sintactico2.py',23),
  ('block_code -> array_value_assign','block_code',1,'p_block_code','sintactico2.py',24),
  ('block_code -> array_indexing','block_code',1,'p_block_code','sintactico2.py',25),
  ('block_code -> thread_main','block_code',1,'p_block_code','sintactico2.py',26),
  ('block_code -> concurrent_method','block_code',1,'p_block_code','sintactico2.py',27),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico2.py',29),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico2.py',30),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico2.py',31),
  ('block_code -> statement_lambda','block_code',1,'p_block_code','sintactico2.py',33),
  ('block_code -> enums','block_code',1,'p_block_code','sintactico2.py',35),
  ('block_code -> normal_if','block_code',1,'p_block_code','sintactico2.py',36),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico2.py',37),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico2.py',38),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico2.py',39),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico2.py',40),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico2.py',41),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',45),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',46),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',52),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',53),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',54),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',55),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',56),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',57),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',63),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',64),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',65),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',69),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',70),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',71),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',72),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',76),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',77),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',78),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',79),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',83),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',84),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',88),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',92),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',93),
  ('array_type -> CHARTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',97),
  ('array_type -> STRINGTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',98),
  ('array_type -> FLOATTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',99),
  ('array_type -> DECIMALTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',100),
  ('array_type -> INTTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',101),
  ('array_type -> BOOLTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',102),
  ('array_assignation -> CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',106),
  ('array_assignation -> STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',107),
  ('array_assignation -> FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',108),
  ('array_assignation -> DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',109),
  ('array_assignation -> INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',110),
  ('array_assignation -> BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',111),
  ('char_array_assignation -> VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKET','char_array_assignation',5,'p_char_array_assignation','sintactico2.py',115),
  ('char_content_multiple -> CHAR','char_content_multiple',1,'p_char_content_multiple','sintactico2.py',118),
  ('char_content_multiple -> CHAR COMMA char_content_multiple','char_content_multiple',3,'p_char_content_multiple','sintactico2.py',119),
  ('string_array_assignation -> VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKET','string_array_assignation',5,'p_string_array_assignation','sintactico2.py',123),
  ('string_content_multiple -> STRING','string_content_multiple',1,'p_string_content_multiple','sintactico2.py',126),
  ('string_content_multiple -> STRING COMMA string_content_multiple','string_content_multiple',3,'p_string_content_multiple','sintactico2.py',127),
  ('float_array_assignation -> VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKET','float_array_assignation',5,'p_float_array_assignation','sintactico2.py',131),
  ('float_content_multiple -> FLOAT_NUMBER','float_content_multiple',1,'p_float_content_multiple','sintactico2.py',134),
  ('float_content_multiple -> FLOAT_NUMBER COMMA float_content_multiple','float_content_multiple',3,'p_float_content_multiple','sintactico2.py',135),
  ('int_array_assignation -> VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKET','int_array_assignation',5,'p_int_array_assignation','sintactico2.py',139),
  ('int_content_multiple -> INTEGER','int_content_multiple',1,'p_int_content_multiple','sintactico2.py',142),
  ('int_content_multiple -> INTEGER COMMA int_content_multiple','int_content_multiple',3,'p_int_content_multiple','sintactico2.py',143),
  ('decimal_array_assignation -> VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKET','decimal_array_assignation',5,'p_decimal_array_assignation','sintactico2.py',147),
  ('decimal_content_multiple -> DECIMAL_NUMBER','decimal_content_multiple',1,'p_decimal_content_multiple','sintactico2.py',150),
  ('decimal_content_multiple -> DECIMAL_NUMBER COMMA decimal_content_multiple','decimal_content_multiple',3,'p_decimal_content_multiple','sintactico2.py',151),
  ('bool_array_assignation -> VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKET','bool_array_assignation',5,'p_bool_array_assignation','sintactico2.py',155),
  ('bool_content_multiple -> BOOLTRUE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',158),
  ('bool_content_multiple -> BOOLFALSE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',159),
  ('bool_content_multiple -> BOOLTRUE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',160),
  ('bool_content_multiple -> BOOLFALSE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',161),
  ('array -> LBRACKET array_content RBRACKET','array',3,'p_array','sintactico2.py',165),
  ('array_content -> value','array_content',1,'p_array_content','sintactico2.py',168),
  ('array_content -> value COMMA array_content','array_content',3,'p_array_content','sintactico2.py',169),
  ('array_indexing -> VARIABLE LBRACKET VARIABLE RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',173),
  ('array_indexing -> VARIABLE LBRACKET INTEGER RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',174),
  ('array_value_assign -> VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',178),
  ('array_value_assign -> VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',179),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',183),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',184),
  ('value -> value_string','value',1,'p_value','sintactico2.py',185),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',186),
  ('value -> read_data','value',1,'p_value','sintactico2.py',187),
  ('value -> array','value',1,'p_value','sintactico2.py',188),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',194),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',195),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',199),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',200),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',201),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',202),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',203),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',207),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',208),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',212),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',213),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',214),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',215),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',216),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',217),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',221),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',222),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',223),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',227),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',228),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',234),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',235),
  ('constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico2.py',239),
  ('constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',3,'p_constant_assignation','sintactico2.py',240),
  ('variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',244),
  ('variable_assignation -> assignation_type_value_multiple DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',245),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',249),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',250),
  ('assignation_type_value -> INTTYPE assignation_int','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',254),
  ('assignation_type_value -> STRINGTYPE assignation_string','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',255),
  ('assignation_type_value -> FLOATTYPE assignation_float','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',256),
  ('assignation_type_value -> BOOLTYPE assignation_true','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',257),
  ('assignation_type_value -> BOOLTYPE assignation_false','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',258),
  ('assignation_int -> VARIABLE ASSIGNATION INTEGER','assignation_int',3,'p_assignation_int','sintactico2.py',262),
  ('assignation_int -> VARIABLE ASSIGNATION VARIABLE','assignation_int',3,'p_assignation_int','sintactico2.py',263),
  ('assignation_int -> VARIABLE ASSIGNATION arithmetic_operation','assignation_int',3,'p_assignation_int','sintactico2.py',264),
  ('assignation_string -> VARIABLE ASSIGNATION STRING','assignation_string',3,'p_assignation_string','sintactico2.py',268),
  ('assignation_string -> VARIABLE ASSIGNATION VARIABLE','assignation_string',3,'p_assignation_string','sintactico2.py',269),
  ('assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER','assignation_float',3,'p_assignation_float','sintactico2.py',273),
  ('assignation_float -> VARIABLE ASSIGNATION VARIABLE','assignation_float',3,'p_assignation_float','sintactico2.py',274),
  ('assignation_float -> VARIABLE ASSIGNATION arithmetic_operation','assignation_float',3,'p_assignation_float','sintactico2.py',275),
  ('assignation_true -> VARIABLE ASSIGNATION BOOLTRUE','assignation_true',3,'p_assignation_true','sintactico2.py',279),
  ('assignation_true -> VARIABLE ASSIGNATION VARIABLE','assignation_true',3,'p_assignation_true','sintactico2.py',280),
  ('assignation_true -> VARIABLE ASSIGNATION boolean_operation','assignation_true',3,'p_assignation_true','sintactico2.py',281),
  ('assignation_false -> VARIABLE ASSIGNATION BOOLFALSE','assignation_false',3,'p_assignation_false','sintactico2.py',285),
  ('assignation_false -> VARIABLE ASSIGNATION VARIABLE','assignation_false',3,'p_assignation_false','sintactico2.py',286),
  ('assignation_false -> VARIABLE ASSIGNATION boolean_operation','assignation_false',3,'p_assignation_false','sintactico2.py',287),
  ('assignation_type_value_multiple -> INTTYPE assignation_int_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',292),
  ('assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',293),
  ('assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',294),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',295),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',296),
  ('assignation_int_multiple -> assignation_int','assignation_int_multiple',1,'p_assignation_int_multiple','sintactico2.py',300),
  ('assignation_int_multiple -> assignation_int COMMA assignation_int_multiple','assignation_int_multiple',3,'p_assignation_int_multiple','sintactico2.py',301),
  ('assignation_string_multiple -> assignation_string','assignation_string_multiple',1,'p_assignation_string_multiple','sintactico2.py',305),
  ('assignation_string_multiple -> assignation_string COMMA assignation_string_multiple','assignation_string_multiple',3,'p_assignation_string_multiple','sintactico2.py',306),
  ('assignation_float_multiple -> assignation_float','assignation_float_multiple',1,'p_assignation_float_multiple','sintactico2.py',310),
  ('assignation_float_multiple -> assignation_float COMMA assignation_float_multiple','assignation_float_multiple',3,'p_assignation_float_multiple','sintactico2.py',311),
  ('assignation_true_multiple -> assignation_true','assignation_true_multiple',1,'p_assignation_true_multiple','sintactico2.py',315),
  ('assignation_true_multiple -> assignation_true COMMA assignation_true_multiple','assignation_true_multiple',3,'p_assignation_true_multiple','sintactico2.py',316),
  ('assignation_false_multiple -> assignation_false','assignation_false_multiple',1,'p_assignation_false_multiple','sintactico2.py',320),
  ('assignation_false_multiple -> assignation_false COMMA assignation_false_multiple','assignation_false_multiple',3,'p_assignation_false_multiple','sintactico2.py',321),
  ('thread_main -> declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait','thread_main',6,'p_thread_main','sintactico2.py',327),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',332),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',333),
  ('thread_init -> thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA','thread_init',6,'p_thread_init','sintactico2.py',338),
  ('thread_wait -> thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA','thread_wait',6,'p_thread_wait','sintactico2.py',343),
  ('concurrent_method -> STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY','concurrent_method',8,'p_concurrent_method','sintactico2.py',348),
  ('concurrent_method -> WRITE','concurrent_method',1,'p_concurrent_method','sintactico2.py',349),
  ('thread_logic -> thread_sentence','thread_logic',1,'p_thread_logic','sintactico2.py',354),
  ('thread_logic -> thread_logic thread_sentence','thread_logic',2,'p_thread_logic','sintactico2.py',355),
  ('thread_sentence -> thread_expression DOTANDCOMMA','thread_sentence',2,'p_thread_sentence','sintactico2.py',360),
  ('thread_expression -> thread_identificator DOT concurrent_method LPARENT RPARENT','thread_expression',5,'p_thread_expression','sintactico2.py',365),
  ('thread_expression -> PRINT LPARENT STRING RPARENT','thread_expression',4,'p_thread_expression','sintactico2.py',366),
  ('thread_arguments -> thread_expression','thread_arguments',1,'p_thread_arguments','sintactico2.py',371),
  ('thread_arguments -> thread_arguments COMMA thread_expression','thread_arguments',3,'p_thread_arguments','sintactico2.py',372),
  ('thread_identificator -> VARIABLE','thread_identificator',1,'p_thread_identificator','sintactico2.py',377),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico2.py',385),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico2.py',386),
  ('try_catch_simply -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY','try_catch_simply',16,'p_try_catch_simply','sintactico2.py',390),
  ('try_catch_finally -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEY','try_catch_finally',20,'p_try_catch_finally','sintactico2.py',393),
  ('block_code_try -> def_const_or_var','block_code_try',1,'p_block_code_try','sintactico2.py',396),
  ('block_code_try -> print_data','block_code_try',1,'p_block_code_try','sintactico2.py',397),
  ('all_block_code_try -> block_code_try','all_block_code_try',1,'p_all_block_code_try','sintactico2.py',401),
  ('all_block_code_try -> block_code_try all_block_code_try','all_block_code_try',2,'p_all_block_code_try','sintactico2.py',402),
  ('lists -> list_empty','lists',1,'p_lists','sintactico2.py',410),
  ('lists -> list_full','lists',1,'p_lists','sintactico2.py',411),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',415),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',416),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',420),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',421),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico2.py',425),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico2.py',426),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico2.py',430),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico2.py',431),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico2.py',435),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico2.py',436),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico2.py',437),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico2.py',438),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico2.py',442),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico2.py',445),
  ('list_func_add -> VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',448),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',449),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',454),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT STRING RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',455),
  ('statement_lambda -> LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENT','statement_lambda',7,'p_statement_lambda','sintactico2.py',463),
  ('enums -> ENUM METHOD LKEY list_enums RKEY','enums',5,'p_enums','sintactico2.py',470),
  ('list_enums -> METHOD','list_enums',1,'p_list_enums','sintactico2.py',473),
  ('list_enums -> METHOD COMMA list_enums','list_enums',3,'p_list_enums','sintactico2.py',474),
  ('block_if -> normal_if','block_if',1,'p_block_if','sintactico2.py',483),
  ('block_if -> all_block_code','block_if',1,'p_block_if','sintactico2.py',484),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','normal_if',8,'p_normal_if','sintactico2.py',487),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY','normal_if',7,'p_normal_if','sintactico2.py',488),
  ('other_if -> ELSE LKEY block_if RKEY','other_if',4,'p_other_if','sintactico2.py',492),
  ('other_if -> ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','other_if',8,'p_other_if','sintactico2.py',493),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico2.py',499),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico2.py',500),
  ('normal_while -> WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico2.py',504),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENT','do_while',8,'p_do_while','sintactico2.py',507),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico2.py',514),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico2.py',517),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico2.py',518),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico2.py',519),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico2.py',520),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico2.py',521),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico2.py',524),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico2.py',527),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico2.py',530),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico2.py',533),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico2.py',536),
  ('queue_struct -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA','queue_struct',8,'p_queue_struct','sintactico2.py',541),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico2.py',544),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico2.py',545),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico2.py',546),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico2.py',547),
  ('functions_queue -> queue_peek','functions_queue',1,'p_functions_queue','sintactico2.py',548),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico2.py',552),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico2.py',555),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico2.py',558),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico2.py',561),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico2.py',564),
]
