
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION BACK_SLASH BOOL BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DICTIONARY DIVIDE DIVISION_ASSIGNMENT DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE EQUAL_COMPARATION EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INCREMENT INEQUALITY INTEGER INTTYPE JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LOGICXOR LONG LPARENT MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PERCENT PIPE PLUS PRINT PRIVATE PUBLIC RBRACKET READ REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TIMES TRY USING VARIABLE VOID WHILEprogram : block_using block_publicClassblock_using : USING SYSTEM DOTANDCOMMAblock_publicClass : PUBLIC CLASS VARIABLE LKEY all_block_code RKEYall_block_code : block_code\n                        | block_code all_block_code  \n    block_code : def_const_or_var\n                    | estruct_of_data\n                    | block_try_catch\n                    | VARIABLE\n                    | dict_estruct\n                    | functions_list\n                    | declaration_lambda\n    def_const_or_var : constant_assignation\n                        | variable_assignation\n    variable_assignation : access_modifiers all_asignations\n                            | all_asignations\n\n    constant_assignation : access_modifiers CONST all_asignations\n                            | CONST all_asignations\n                            | CONST data_type assignation_key_value COMMA some_assignation_constant\n    all_asignations : assignation_with_datatype\n                        | assignation_without_datatype\n    assignation_with_datatype : data_type assignation_key_value DOTANDCOMMA\n                            | data_type assignation_key_value DOTANDCOMMA assignation_with_datatype   \n                            | data_type assignation_key_value DOTANDCOMMA assignation_without_datatype                     \n    assignation_without_datatype : assignation_key_value DOTANDCOMMA\n                                    | assignation_key_value DOTANDCOMMA assignation_without_datatype\n                                    | assignation_key_value DOTANDCOMMA assignation_with_datatype\n    some_assignation_constant : assignation_key_value DOTANDCOMMA\n                                | assignation_key_value COMMA some_assignation_constant\n    assignation_key_value : VARIABLE ASSIGNATION valuedata_type    : CHARTYPE\n                    | STRINGTYPE\n                    | FLOATTYPE\n                    | DECIMALTYPE\n                    | INTTYPE\n                    | BOOLTYPE\n    value    : value_numeric\n                | value_logic\n                | value_string\n    value_string : STRING\n                    | CHAR\n                    | VARIABLE\n                    | READ LPARENT RPARENT\n                    | concatenation\n    value_logic  : BOOLTRUE\n                    | BOOLFALSE\n    value_numeric    : INTEGER\n                        | FLOAT_NUMBER\n                        | DECIMAL_NUMBER\n    block_try_catch : try_catch_simply\n                        | try_catch_finally\n    try_catch_simply : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEYtry_catch_finally : TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEYaccess_modifiers : PUBLIC\n                        | PRIVATE\n    arithmetic_operation : value_numeric\n                            | value_numeric arithmetic_operator arithmetic_operation\n    logic_operation  : value_logic\n                        | value_logic logic_operator logic_operation\n    concatenation    : STRING\n                        | STRING PLUS concatenation\n    logic_operator   : GREATER_THAN\n                        | SMALLER_THAN\n                        | EQUAL_COMPARATION\n                        | INEQUALITY\n                        | GREATER_THAN_OR_EQUAL\n                        | SMALLER_THAN_OR_EQUAL\n                        | LOGICAND\n                        | LOGICOR\n                        | LOGICNOT\n                        | LOGICXOR\n    arithmetic_operator  : PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | PERCENT\n    variable_assignation_multiline   : \n    \n    dict_estruct : dict_empty\n                   | dict_full\n    \n    dict_empty : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    \n    dict_full : DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA\n    dictionary_value : LKEY key_value_pair RKEYkey_value_pairs : key_value_pair\n                       | key_value_pair COMMA key_value_pairskey_value_pair : STRING DOUBLEPOINT valueHashvalueHash : INTTYPE\n                estruct_of_data : list_empty\n                        | list_full\n    list_empty : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY\n                    | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY\n    strings_list : STRING\n                    | STRING COMMA strings_list\n    ints_list : INTEGER\n                | INTEGER COMMA ints_list\n    functions_list : list_func_clear\n                        | list_func_count\n                        | list_func_add\n                        | list_func_removeat\n    list_func_clear : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add : VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMAlist_func_removeat : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMAdeclaration_lambda : ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,53,],[0,-1,-3,]),'PUBLIC':([2,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[5,-2,11,-9,11,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-15,-18,-25,11,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,11,-52,-80,-89,-90,11,-81,-91,-92,-53,]),'SYSTEM':([3,],[6,]),'CLASS':([5,],[7,]),'DOTANDCOMMA':([6,39,61,70,71,72,73,74,75,76,77,78,79,80,81,83,86,108,109,112,113,114,116,124,125,159,165,166,177,],[8,62,87,-42,-30,-37,-38,-39,-47,-48,-49,-45,-46,-40,-41,-44,87,122,123,-60,-61,-43,127,133,134,163,170,172,185,]),'VARIABLE':([7,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,41,44,45,46,47,48,49,50,52,56,57,59,60,62,64,85,87,88,89,93,100,101,102,103,104,105,117,122,123,126,127,128,133,134,136,139,151,154,162,163,170,172,174,185,186,188,190,],[9,12,-54,-9,12,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-32,58,58,-16,58,-35,-55,-20,-21,-31,-33,-34,-36,70,58,-15,-18,58,58,12,-17,58,-26,-27,107,115,58,-23,-24,118,119,-19,-101,-102,135,-28,58,-103,-104,-29,144,-105,12,-52,-80,-89,-90,12,-81,-91,-92,-53,]),'LKEY':([9,42,141,149,159,164,165,166,167,],[10,64,146,154,164,168,171,173,174,]),'ACTION':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[33,-9,33,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-15,-18,-25,33,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,33,-52,-80,-89,-90,33,-81,-91,-92,-53,]),'CONST':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,44,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[36,-54,-9,36,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,56,-16,-55,-20,-21,-15,-18,-25,36,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,36,-52,-80,-89,-90,36,-81,-91,-92,-53,]),'LIST':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,137,138,151,154,162,163,170,172,174,185,186,188,190,],[40,-9,40,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-15,-18,-25,40,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,142,143,-105,40,-52,-80,-89,-90,40,-81,-91,-92,-53,]),'TRY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[42,-9,42,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-15,-18,-25,42,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,42,-52,-80,-89,-90,42,-81,-91,-92,-53,]),'DICTIONARY':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,132,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[43,-9,43,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-15,-18,-25,43,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,140,-103,-104,-29,-105,43,-52,-80,-89,-90,43,-81,-91,-92,-53,]),'PRIVATE':([10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[44,-9,44,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-15,-18,-25,44,-17,-22,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,44,-52,-80,-89,-90,44,-81,-91,-92,-53,]),'CHARTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,44,45,46,56,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[47,-54,-9,47,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,47,47,-16,-55,-20,-21,47,-15,-18,47,47,-17,47,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,47,-52,-80,-89,-90,47,-81,-91,-92,-53,]),'STRINGTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,44,45,46,55,56,57,59,62,63,64,85,87,88,89,102,103,117,122,123,127,133,134,136,147,151,154,162,163,170,172,174,185,186,188,190,],[34,-54,-9,34,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,34,34,-16,-55,-20,-21,84,34,-15,-18,34,90,34,-17,34,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,152,-105,34,-52,-80,-89,-90,34,-81,-91,-92,-53,]),'FLOATTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,44,45,46,56,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[48,-54,-9,48,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,48,48,-16,-55,-20,-21,48,-15,-18,48,48,-17,48,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,48,-52,-80,-89,-90,48,-81,-91,-92,-53,]),'DECIMALTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,44,45,46,56,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[49,-54,-9,49,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,49,49,-16,-55,-20,-21,49,-15,-18,49,49,-17,49,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,49,-52,-80,-89,-90,49,-81,-91,-92,-53,]),'INTTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,44,45,46,56,57,59,62,63,64,85,87,88,89,102,103,117,122,123,127,133,134,136,148,151,154,162,163,170,172,174,184,185,186,188,190,],[41,-54,-9,41,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,41,41,-16,-55,-20,-21,41,-15,-18,41,91,41,-17,41,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,153,-105,41,-52,-80,-89,-90,41,192,-81,-91,-92,-53,]),'BOOLTYPE':([10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,44,45,46,56,57,59,62,64,85,87,88,89,102,103,117,122,123,127,133,134,136,151,154,162,163,170,172,174,185,186,188,190,],[50,-54,-9,50,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,50,50,-16,-55,-20,-21,50,-15,-18,50,50,-17,50,-26,-27,-23,-24,-19,-101,-102,-28,-103,-104,-29,-105,50,-52,-80,-89,-90,50,-81,-91,-92,-53,]),'RKEY':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,45,46,54,57,59,62,85,87,88,89,92,102,103,117,122,123,127,133,134,136,146,151,158,162,163,169,170,172,175,178,179,180,181,182,183,185,186,188,190,191,192,193,194,],[-9,53,-4,-6,-7,-8,-10,-11,-12,-13,-14,-87,-88,-50,-51,-78,-79,-97,-98,-99,-100,-16,-20,-21,-5,-15,-18,-25,-17,-22,-26,-27,106,-23,-24,-19,-101,-102,-28,-103,-104,-29,151,-105,162,-52,-80,177,-89,-90,183,186,-93,188,-95,190,-82,-81,-91,-92,-53,-85,-86,-94,-96,]),'DOT':([12,],[51,]),'ASSIGNATION':([12,58,107,115,118,119,],[52,52,121,126,129,130,]),'SMALLER_THAN':([33,40,43,140,142,143,],[55,63,65,145,147,148,]),'CLEAR':([51,],[66,]),'COUNT':([51,],[67,]),'ADD':([51,],[68,]),'REMOVEAT':([51,],[69,]),'INTEGER':([52,97,173,189,],[75,111,181,181,]),'FLOAT_NUMBER':([52,],[76,]),'DECIMAL_NUMBER':([52,],[77,]),'BOOLTRUE':([52,],[78,]),'BOOLFALSE':([52,],[79,]),'STRING':([52,96,98,168,171,187,],[80,110,112,176,179,179,]),'CHAR':([52,],[81,]),'READ':([52,],[82,]),'GREATER_THAN':([65,84,90,91,145,152,153,],[93,100,104,105,150,156,157,]),'LPARENT':([66,67,68,69,82,120,150,156,157,],[94,95,96,97,99,131,155,160,161,]),'COMMA':([70,71,72,73,74,75,76,77,78,79,80,81,83,86,112,113,114,116,179,181,],[-42,-30,-37,-38,-39,-47,-48,-49,-45,-46,-40,-41,-44,101,-60,-61,-43,128,187,189,]),'PLUS':([80,112,],[98,98,]),'RPARENT':([94,95,99,110,111,144,155,160,161,],[108,109,114,124,125,149,159,165,166,]),'CATCH':([106,],[120,]),'NEW':([121,129,130,],[132,137,138,]),'EXCEPTION':([131,],[139,]),'ARROW':([135,],[141,]),'FINALLY':([162,],[167,]),'DOUBLEPOINT':([176,],[184,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_using':([0,],[2,]),'block_publicClass':([2,],[4,]),'all_block_code':([10,14,],[13,54,]),'block_code':([10,14,64,154,174,],[14,14,92,158,182,]),'def_const_or_var':([10,14,64,154,174,],[15,15,15,15,15,]),'estruct_of_data':([10,14,64,154,174,],[16,16,16,16,16,]),'block_try_catch':([10,14,64,154,174,],[17,17,17,17,17,]),'dict_estruct':([10,14,64,154,174,],[18,18,18,18,18,]),'functions_list':([10,14,64,154,174,],[19,19,19,19,19,]),'declaration_lambda':([10,14,64,154,174,],[20,20,20,20,20,]),'constant_assignation':([10,14,64,154,174,],[21,21,21,21,21,]),'variable_assignation':([10,14,64,154,174,],[22,22,22,22,22,]),'list_empty':([10,14,64,154,174,],[23,23,23,23,23,]),'list_full':([10,14,64,154,174,],[24,24,24,24,24,]),'try_catch_simply':([10,14,64,154,174,],[25,25,25,25,25,]),'try_catch_finally':([10,14,64,154,174,],[26,26,26,26,26,]),'dict_empty':([10,14,64,154,174,],[27,27,27,27,27,]),'dict_full':([10,14,64,154,174,],[28,28,28,28,28,]),'list_func_clear':([10,14,64,154,174,],[29,29,29,29,29,]),'list_func_count':([10,14,64,154,174,],[30,30,30,30,30,]),'list_func_add':([10,14,64,154,174,],[31,31,31,31,31,]),'list_func_removeat':([10,14,64,154,174,],[32,32,32,32,32,]),'access_modifiers':([10,14,64,154,174,],[35,35,35,35,35,]),'all_asignations':([10,14,35,36,56,64,154,174,],[37,37,57,59,85,37,37,37,]),'data_type':([10,14,35,36,56,62,64,87,154,174,],[38,38,38,60,38,38,38,38,38,38,]),'assignation_key_value':([10,14,35,36,38,56,60,62,64,87,101,128,154,174,],[39,39,39,39,61,39,86,39,39,39,116,116,39,39,]),'assignation_with_datatype':([10,14,35,36,56,62,64,87,154,174,],[45,45,45,45,45,89,45,102,45,45,]),'assignation_without_datatype':([10,14,35,36,56,62,64,87,154,174,],[46,46,46,46,46,88,46,103,46,46,]),'value':([52,],[71,]),'value_numeric':([52,],[72,]),'value_logic':([52,],[73,]),'value_string':([52,],[74,]),'concatenation':([52,98,],[83,113,]),'some_assignation_constant':([101,128,],[117,136,]),'dictionary_value':([164,],[169,]),'key_value_pair':([168,],[175,]),'strings_list':([171,187,],[178,193,]),'ints_list':([173,189,],[180,194,]),'valueHash':([184,],[191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block_using block_publicClass','program',2,'p_program','sintactico.py',38),
  ('block_using -> USING SYSTEM DOTANDCOMMA','block_using',3,'p_block_using','sintactico.py',41),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY','block_publicClass',6,'p_block_publicClass','sintactico.py',44),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico.py',48),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico.py',49),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico.py',53),
  ('block_code -> estruct_of_data','block_code',1,'p_block_code','sintactico.py',54),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico.py',55),
  ('block_code -> VARIABLE','block_code',1,'p_block_code','sintactico.py',56),
  ('block_code -> dict_estruct','block_code',1,'p_block_code','sintactico.py',57),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico.py',58),
  ('block_code -> declaration_lambda','block_code',1,'p_block_code','sintactico.py',59),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',65),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico.py',66),
  ('variable_assignation -> access_modifiers all_asignations','variable_assignation',2,'p_variable_assignation','sintactico.py',70),
  ('variable_assignation -> all_asignations','variable_assignation',1,'p_variable_assignation','sintactico.py',71),
  ('constant_assignation -> access_modifiers CONST all_asignations','constant_assignation',3,'p_constant_assignation','sintactico.py',76),
  ('constant_assignation -> CONST all_asignations','constant_assignation',2,'p_constant_assignation','sintactico.py',77),
  ('constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant','constant_assignation',5,'p_constant_assignation','sintactico.py',78),
  ('all_asignations -> assignation_with_datatype','all_asignations',1,'p_all_asignations','sintactico.py',82),
  ('all_asignations -> assignation_without_datatype','all_asignations',1,'p_all_asignations','sintactico.py',83),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA','assignation_with_datatype',3,'p_assignation_with_datatype','sintactico.py',87),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',88),
  ('assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_with_datatype',4,'p_assignation_with_datatype','sintactico.py',89),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA','assignation_without_datatype',2,'p_assignation_without_datatype','sintactico.py',93),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',94),
  ('assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype','assignation_without_datatype',3,'p_assignation_without_datatype','sintactico.py',95),
  ('some_assignation_constant -> assignation_key_value DOTANDCOMMA','some_assignation_constant',2,'p_some_assignation_constant','sintactico.py',99),
  ('some_assignation_constant -> assignation_key_value COMMA some_assignation_constant','some_assignation_constant',3,'p_some_assignation_constant','sintactico.py',100),
  ('assignation_key_value -> VARIABLE ASSIGNATION value','assignation_key_value',3,'p_assignation_key_value','sintactico.py',104),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico.py',107),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico.py',108),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico.py',109),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico.py',110),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico.py',111),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico.py',112),
  ('value -> value_numeric','value',1,'p_value','sintactico.py',121),
  ('value -> value_logic','value',1,'p_value','sintactico.py',122),
  ('value -> value_string','value',1,'p_value','sintactico.py',123),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico.py',127),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico.py',128),
  ('value_string -> VARIABLE','value_string',1,'p_value_string','sintactico.py',129),
  ('value_string -> READ LPARENT RPARENT','value_string',3,'p_value_string','sintactico.py',130),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico.py',131),
  ('value_logic -> BOOLTRUE','value_logic',1,'p_value_logic','sintactico.py',135),
  ('value_logic -> BOOLFALSE','value_logic',1,'p_value_logic','sintactico.py',136),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico.py',140),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',141),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico.py',142),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico.py',151),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico.py',152),
  ('try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY','try_catch_simply',12,'p_try_catch_simply','sintactico.py',156),
  ('try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY','try_catch_finally',16,'p_try_catch_finally','sintactico.py',159),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico.py',163),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico.py',164),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico.py',174),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico.py',175),
  ('logic_operation -> value_logic','logic_operation',1,'p_logic_operation','sintactico.py',179),
  ('logic_operation -> value_logic logic_operator logic_operation','logic_operation',3,'p_logic_operation','sintactico.py',180),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico.py',184),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico.py',185),
  ('logic_operator -> GREATER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',189),
  ('logic_operator -> SMALLER_THAN','logic_operator',1,'p_logic_operator','sintactico.py',190),
  ('logic_operator -> EQUAL_COMPARATION','logic_operator',1,'p_logic_operator','sintactico.py',191),
  ('logic_operator -> INEQUALITY','logic_operator',1,'p_logic_operator','sintactico.py',192),
  ('logic_operator -> GREATER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',193),
  ('logic_operator -> SMALLER_THAN_OR_EQUAL','logic_operator',1,'p_logic_operator','sintactico.py',194),
  ('logic_operator -> LOGICAND','logic_operator',1,'p_logic_operator','sintactico.py',195),
  ('logic_operator -> LOGICOR','logic_operator',1,'p_logic_operator','sintactico.py',196),
  ('logic_operator -> LOGICNOT','logic_operator',1,'p_logic_operator','sintactico.py',197),
  ('logic_operator -> LOGICXOR','logic_operator',1,'p_logic_operator','sintactico.py',198),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',202),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',203),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',204),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',205),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico.py',206),
  ('variable_assignation_multiline -> <empty>','variable_assignation_multiline',0,'p_variable_assignation_multiline','sintactico.py',210),
  ('dict_estruct -> dict_empty','dict_estruct',1,'p_dict_estruct','sintactico.py',219),
  ('dict_estruct -> dict_full','dict_estruct',1,'p_dict_estruct','sintactico.py',220),
  ('dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA','dict_empty',12,'p_dict_empty','sintactico.py',226),
  ('dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA','dict_full',15,'p_dict_full','sintactico.py',231),
  ('dictionary_value -> LKEY key_value_pair RKEY','dictionary_value',3,'p_dictionary_value','sintactico.py',236),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','sintactico.py',239),
  ('key_value_pairs -> key_value_pair COMMA key_value_pairs','key_value_pairs',3,'p_key_value_pairs','sintactico.py',240),
  ('key_value_pair -> STRING DOUBLEPOINT valueHash','key_value_pair',3,'p_key_value_pair','sintactico.py',244),
  ('valueHash -> INTTYPE','valueHash',1,'p_valueHash','sintactico.py',248),
  ('estruct_of_data -> list_empty','estruct_of_data',1,'p_estruct_of_data','sintactico.py',254),
  ('estruct_of_data -> list_full','estruct_of_data',1,'p_estruct_of_data','sintactico.py',255),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',259),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico.py',260),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY','list_full',16,'p_list_full','sintactico.py',264),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY','list_full',16,'p_list_full','sintactico.py',265),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico.py',269),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico.py',270),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico.py',274),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico.py',275),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico.py',279),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico.py',280),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico.py',281),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico.py',282),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico.py',286),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico.py',289),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico.py',292),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico.py',295),
  ('declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY','declaration_lambda',10,'p_declration_lambda','sintactico.py',303),
]
