
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION ADD ADDITION_ASSIGNMENT ARROW ASSIGNATION ASYNC AWAIT BACK_SLASH BOOLFALSE BOOLTRUE BOOLTYPE BREAK CATCH CHAR CHARTYPE CLASS CLEAR COMMA CONCURRENT CONST COUNT DECIMALTYPE DECIMAL_NUMBER DECREMENT DEQUEUE DICTIONARY DIVIDE DIVISION_ASSIGNMENT DO DOLLARSIGN DOT DOTANDCOMMA DOUBLEPOINT DOUBLE_QUOTATION_MARKS ELSE ELSE_IF ENQUEUE ENUM EQUAL_COMPARATION ERROR EXCEPTION FINALLY FLOATTYPE FLOAT_NUMBER FOR FOREACH GREATER_THAN GREATER_THAN_OR_EQUAL ID IDENTIFIER IF IN INCREMENT INEQUALITY INTEGER INTTYPE ISEMPTY JOIN JUMP_LINE LBRACKET LIST LKEY LOGICAND LOGICNOT LOGICOR LONG LPARENT MAIN METHOD MINUS MODULE_ASSIGNMENT MULTIPLICATION_ASSIGNMENT NAMESPACE NEW PEEK PERCENT PIPE PLUS POP PRINT PRIVATE PUBLIC PUSH PUT QUEUE RBRACKET READ REMOVE REMOVEAT RETURN RKEY RPARENT SIPLE_QUOTATION_MARKS SMALLER_THAN SMALLER_THAN_OR_EQUAL STACK START STATIC STRING STRINGTYPE SUBTRACTION_ASSIGNMENT SWITCH SYSTEM TABULATION TASK THREAD TIMES TRY USING VARIABLE VOID WHILE WRITEprogram                    : USING SYSTEM DOTANDCOMMA block_publicClassblock_publicClass        : PUBLIC CLASS VARIABLE LKEY block_main_method RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_main_method        : STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY\n                                | STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code\n    block_code               : def_const_or_var\n                                | print_data\n                                | array_assignation\n                                | array_value_assign\n                                | array_indexing\n                                | thread_main\n                                | concurrent_method\n\n                                | block_try_catch\n                                | lists\n                                | functions_list\n                                \n                                | statement_lambda\n\n                                | enums\n                                | normal_if\n                                | block_for\n                                | block_while\n                                | stack_struct\n                                | functions_stack\n                                | queue_struct\n                                | functions_queue\n    all_block_code           : block_code\n                                | block_code all_block_code        \n    data_type                : CHARTYPE\n                                | STRINGTYPE\n                                | FLOATTYPE\n                                | DECIMALTYPE\n                                | INTTYPE\n                                | BOOLTYPE\n    value_string             : STRING\n                                | CHAR\n                                | concatenation\n    value_boolean            : BOOLTRUE\n                                | BOOLFALSE\n                                | VARIABLE\n                                | comparison_operation\n    value_numeric            : INTEGER\n                                | FLOAT_NUMBER\n                                | DECIMAL_NUMBER\n                                | VARIABLE\n    print_data               : PRINT LPARENT STRING RPARENT DOTANDCOMMA\n                                | PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA\n    read_data                : READ LPARENT RPARENT DOTANDCOMMA\n    concatenation            : STRING\n                                | STRING PLUS concatenation\n    array_type               : CHARTYPE LBRACKET RBRACKET\n                                | STRINGTYPE LBRACKET RBRACKET\n                                | FLOATTYPE LBRACKET RBRACKET\n                                | DECIMALTYPE LBRACKET RBRACKET\n                                | INTTYPE LBRACKET RBRACKET\n                                | BOOLTYPE LBRACKET RBRACKET\n    array_assignation        : CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA\n                                | STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA\n                                | FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA\n                                | DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA\n                                | INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA\n                                | BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA\n    char_array_assignation     : VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKETchar_content_multiple    : CHAR\n                                | CHAR COMMA char_content_multiple\n    string_array_assignation   : VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKETstring_content_multiple  : STRING\n                                | STRING COMMA string_content_multiple\n    float_array_assignation    : VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKETfloat_content_multiple   : FLOAT_NUMBER\n                                | FLOAT_NUMBER COMMA float_content_multiple\n    int_array_assignation      : VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKETint_content_multiple     : INTEGER\n                                | INTEGER COMMA int_content_multiple\n    decimal_array_assignation  : VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKETdecimal_content_multiple : DECIMAL_NUMBER\n                                | DECIMAL_NUMBER COMMA decimal_content_multiple\n    bool_array_assignation     : VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKETbool_content_multiple    : BOOLTRUE\n                                | BOOLFALSE\n                                | BOOLTRUE COMMA bool_content_multiple\n                                | BOOLFALSE COMMA bool_content_multiple\n    array                      : LBRACKET array_content RBRACKETarray_content            : value\n                                | value COMMA array_content\n    array_indexing           : VARIABLE LBRACKET VARIABLE RBRACKET\n                                | VARIABLE LBRACKET INTEGER RBRACKET\n    array_value_assign       : VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA\n                                | VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA\n    value                    : value_numeric\n                                | value_boolean\n                                | value_string\n                                | VARIABLE\n                                | read_data\n                                | array\n    arithmetic_operation     : value_numeric\n                                | value_numeric arithmetic_operator arithmetic_operation\n    arithmetic_operator      : PLUS\n                                | MINUS\n                                | TIMES\n                                | DIVIDE\n                                | PERCENT\n    comparison_operation     : value_numeric\n                                | value_numeric comparison_operator comparison_operation\n    comparison_operator      : GREATER_THAN\n                                | SMALLER_THAN\n                                | EQUAL_COMPARATION\n                                | INEQUALITY\n                                | GREATER_THAN_OR_EQUAL\n                                | SMALLER_THAN_OR_EQUAL\n    boolean_operation        : value_boolean\n                                | LOGICNOT value_boolean\n                                | value_boolean boolean_operator boolean_operation\n    boolean_operator         : LOGICAND\n                                | LOGICOR\n    def_const_or_var         : constant_assignation\n                                | variable_assignation\n    constant_assignation     : access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA\n                                | CONST assignation_type_value_multiple DOTANDCOMMA\n    variable_assignation     : access_modifiers assignation_type_value_multiple DOTANDCOMMA\n                                | assignation_type_value_multiple DOTANDCOMMA\n    access_modifiers         : PUBLIC\n                                | PRIVATE\n    assignation_type_value   : INTTYPE assignation_int\n                                | STRINGTYPE assignation_string\n                                | FLOATTYPE assignation_float\n                                | BOOLTYPE assignation_true\n                                | BOOLTYPE assignation_false\n    assignation_int          : VARIABLE ASSIGNATION INTEGER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_string       : VARIABLE ASSIGNATION STRING\n                                | VARIABLE ASSIGNATION VARIABLE\n    assignation_float        : VARIABLE ASSIGNATION FLOAT_NUMBER\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION arithmetic_operation\n    assignation_true         : VARIABLE ASSIGNATION BOOLTRUE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_false        : VARIABLE ASSIGNATION BOOLFALSE\n                                | VARIABLE ASSIGNATION VARIABLE\n                                | VARIABLE ASSIGNATION boolean_operation\n    assignation_type_value_multiple          : INTTYPE assignation_int_multiple\n                                                | STRINGTYPE assignation_string_multiple\n                                                | FLOATTYPE assignation_float_multiple\n                                                | BOOLTYPE assignation_true_multiple\n                                                | BOOLTYPE assignation_false_multiple\n    assignation_int_multiple                 : assignation_int\n                                                | assignation_int COMMA assignation_int_multiple\n    assignation_string_multiple              : assignation_string\n                                                | assignation_string COMMA assignation_string_multiple\n    assignation_float_multiple               : assignation_float\n                                                | assignation_float COMMA assignation_float_multiple\n    assignation_true_multiple                : assignation_true\n                                                | assignation_true COMMA assignation_true_multiple\n    assignation_false_multiple               : assignation_false\n                                                | assignation_false COMMA assignation_false_multiple\n    \n    thread_main                 : declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait\n    \n    declaration_thread          : THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA\n                                | THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA\n    \n    thread_init                 : thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA\n    \n    thread_wait                 : thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA\n    \n    concurrent_method           : STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY\n                                | WRITE\n    \n    thread_logic                : thread_sentence\n                                | thread_logic thread_sentence\n    \n    thread_sentence             : thread_expression DOTANDCOMMA\n    \n    thread_expression           : thread_identificator DOT concurrent_method LPARENT RPARENT\n                                | PRINT LPARENT STRING RPARENT\n    \n    thread_arguments            : thread_expression\n                                | thread_arguments COMMA thread_expression\n    \n    thread_identificator        : VARIABLE\n    statement_lambda           : LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENTenums                      : ENUM METHOD LKEY list_enums RKEYlist_enums               : METHOD\n                                | METHOD COMMA list_enums \n    block_try_catch          : try_catch_simply\n                                | try_catch_finally\n    try_catch_simply           : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEYtry_catch_finally          : TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEYblock_code_try           : def_const_or_var\n                                | print_data\n    all_block_code_try       : block_code_try\n                                | block_code_try all_block_code_try        \n    block_if                 : normal_if\n                                | all_block_code\n    normal_if                : IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n                                | IF LPARENT boolean_operation RPARENT LKEY block_if RKEY \n    other_if                 : ELSE LKEY block_if RKEY\n                                | ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if\n    block_while              : normal_while\n                                | do_while             \n    normal_while               : WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEYdo_while                   : DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENTblock_for                : for_simple\n                                | for_each\n    for_simple               : FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY\n                                | FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY\n\n    for_each                 : FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY\n     lists                   : list_empty\n                                | list_full\n    list_empty               : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA\n    list_full                : LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA\n                                | LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA\n    strings_list             : STRING\n                                | STRING COMMA strings_list\n    ints_list                : INTEGER\n                                | INTEGER COMMA ints_list\n    functions_list           : list_func_clear\n                                | list_func_count\n                                | list_func_add\n                                | list_func_removeat\n    list_func_clear            : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAlist_func_count            : VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMAlist_func_add            : VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA\n    list_func_removeat       : VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA\n                                | VARIABLE DOT REMOVEAT LPARENT STRING RPARENT DOTANDCOMMA\n    stack_struct               : STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMAfunctions_stack          : stack_push\n                                | stack_pop\n                                | stack_clear\n                                | stack_peek\n                                | stack_isEmpty\n    stack_push                 : VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMAstack_pop                  : VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMAstack_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAstack_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAstack_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMAqueue_struct               : QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMAfunctions_queue          : queue_enqueue\n                                | queue_dequeue\n                                | queue_clear\n                                | queue_isEmpty\n                                | queue_peek\n    queue_enqueue              : VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMAqueue_dequeue              : VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMAqueue_clear                : VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMAqueue_peek                 : VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMAqueue_isEmpty              : VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA'
    
_lr_action_items = {'USING':([0,],[2,]),'$end':([1,5,17,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,112,142,169,201,202,228,229,287,300,327,328,329,331,339,341,343,351,372,373,383,384,385,387,398,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,496,519,527,529,546,547,550,552,554,560,566,568,572,],[0,-1,-2,-25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,-26,-119,-3,-118,-117,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,-212,-213,-225,-227,-228,-236,-156,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,-192,-160,-197,-187,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'SYSTEM':([2,],[3,]),'DOTANDCOMMA':([3,92,106,107,116,117,121,122,125,126,127,128,136,141,188,190,191,192,193,194,195,196,197,200,223,225,226,227,240,241,242,244,246,247,248,249,250,251,253,255,256,257,258,259,261,263,265,266,267,268,277,293,304,305,310,312,313,314,315,316,317,318,319,322,323,324,326,353,354,355,370,371,374,375,376,377,378,386,390,394,395,396,397,411,419,431,432,433,434,449,451,452,467,469,471,473,475,477,479,489,490,506,518,528,544,545,549,561,563,],[4,142,-142,-148,-143,-150,-141,-146,-144,-145,-152,-154,201,202,-109,-36,-37,-38,-39,-101,-40,-41,-42,287,300,-149,-131,-130,327,328,329,331,-151,-43,-41,-134,-94,339,341,-147,-43,-40,-129,343,-153,-155,-38,-36,-137,-37,-110,362,372,373,-38,-88,-89,-90,-92,-93,-33,-34,-35,383,384,385,387,-111,-102,-43,424,425,426,427,428,429,430,436,-95,-38,-137,-38,-140,458,465,-47,-48,469,-81,483,487,488,-64,-46,-61,-67,-73,-70,-76,509,510,519,-167,-166,550,552,555,566,568,]),'PUBLIC':([4,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,145,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[6,100,100,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,100,-119,100,100,-118,-117,100,-179,-180,100,100,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,100,100,100,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,100,-192,100,-160,-197,-187,100,100,100,-195,-196,-200,-201,-188,-177,-202,-203,100,-178,]),'STATIC':([4,12,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,407,421,424,425,426,427,428,429,430,436,450,460,462,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[7,15,29,29,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,29,-119,29,-118,-117,29,29,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,29,29,29,-212,-213,-225,-227,-228,-236,-156,-18,29,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,29,-161,-185,-218,-229,29,-192,29,-160,-197,-187,29,29,29,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'CLASS':([6,],[8,]),'VOID':([7,15,29,],[9,18,103,]),'VARIABLE':([8,21,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,61,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,103,109,111,113,130,132,137,138,139,140,142,149,150,154,155,156,172,173,174,175,176,177,178,179,180,181,182,183,184,189,201,202,210,211,212,213,214,215,216,217,220,222,228,229,234,238,269,274,275,276,278,279,280,281,282,283,284,287,291,292,300,302,303,321,327,328,329,331,333,334,335,336,337,338,339,341,343,345,346,347,351,352,362,363,364,366,367,372,373,383,384,385,387,398,403,407,414,417,418,421,424,425,426,427,428,429,430,435,436,450,458,460,463,464,465,483,484,487,488,495,496,507,508,509,510,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[10,23,32,102,104,108,32,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,118,123,129,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,133,-219,-220,-221,-222,-223,134,-230,-231,-232,-233,-234,144,144,157,32,171,144,192,123,108,118,129,-119,192,32,224,108,226,243,245,118,247,252,254,123,256,260,262,264,265,144,192,-118,-117,123,294,-27,-28,-29,-30,-31,-32,32,32,-84,-85,310,310,144,192,-112,-113,355,-103,-104,-105,-106,-107,-108,-116,360,361,-56,310,310,310,-44,-45,-55,-57,355,-96,-97,-98,-99,-100,-58,-59,-60,394,396,144,-172,32,355,412,32,32,144,-212,-213,-225,-227,-228,-236,-156,-18,144,192,144,-163,-171,-86,-87,-214,-215,-216,-217,-224,310,-235,-186,494,-191,-161,-164,-165,-159,-185,-218,-229,32,-192,32,192,-157,-158,-160,-197,-187,32,32,32,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'MAIN':([9,18,],[11,20,]),'LKEY':([10,25,94,99,131,151,153,273,295,298,459,485,511,525,526,530,544,545,565,],[12,27,145,150,186,220,222,352,364,367,495,507,522,534,535,536,551,553,570,]),'LPARENT':([11,20,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,80,81,82,83,85,86,87,88,89,96,97,98,111,142,144,150,152,159,160,161,162,163,164,165,166,167,168,201,202,220,222,228,229,287,300,320,327,328,329,331,339,341,343,349,351,352,356,357,358,359,364,365,366,372,373,383,384,385,387,398,403,420,421,424,425,426,427,428,429,430,436,448,450,460,463,484,486,487,488,495,496,497,507,519,527,529,531,532,533,534,535,536,546,547,550,552,554,560,566,568,572,],[13,22,30,30,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,113,-162,-175,-176,-198,-199,-208,-209,-210,-211,132,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,147,148,149,30,-119,-170,30,221,230,231,232,233,234,235,236,237,238,239,-118,-117,30,30,-84,-85,-116,-56,380,-44,-45,-55,-57,-58,-59,-60,400,-172,30,405,406,407,408,30,414,30,-212,-213,-225,-227,-228,-236,-156,-18,466,-171,-86,-87,-214,-215,-216,-217,-224,-235,482,-186,-191,-161,-185,508,-218,-229,30,-192,517,30,-160,-197,-187,537,538,539,30,30,30,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'STRINGTYPE':([13,22,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,100,101,111,135,142,145,146,148,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,512,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[16,24,31,31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,138,138,-120,-121,31,138,-119,138,208,213,31,-118,-117,138,-179,-180,31,31,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,31,31,31,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,31,-192,31,523,-160,-197,-187,31,31,31,-195,-196,-200,-201,-188,-177,-202,-203,138,-178,]),'RKEY':([14,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,112,142,201,202,204,205,206,207,219,228,229,271,272,287,290,297,299,300,327,328,329,331,339,341,343,351,366,372,373,383,384,385,387,398,401,402,403,404,413,415,417,418,421,424,425,426,427,428,429,430,436,450,460,463,464,465,484,487,488,496,516,519,520,527,529,540,541,542,546,547,550,552,554,555,556,557,558,559,560,566,567,568,569,571,572,],[17,111,-25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,-26,-119,-118,-117,289,-181,-179,-180,296,-84,-85,-173,351,-116,-182,366,368,-56,-44,-45,-55,-57,-58,-59,-60,-172,-4,-212,-213,-225,-227,-228,-236,-156,-174,450,-18,-184,460,-5,463,-163,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-164,-165,-185,-218,-229,-192,527,-160,529,-197,-187,546,547,548,-195,-196,-200,-201,-188,560,561,-204,563,-206,-177,-202,-205,-203,-207,572,-178,]),'LBRACKET':([16,24,31,32,57,58,59,60,61,234,238,301,302,303,321,330,332,340,342,344,435,],[19,26,105,109,114,115,119,120,124,321,321,369,321,321,321,388,389,391,392,393,321,]),'RBRACKET':([19,26,105,114,115,119,120,124,157,158,190,191,193,194,195,196,197,310,312,313,314,315,316,317,318,319,354,355,381,382,422,423,431,432,434,437,438,439,440,441,442,443,444,445,446,447,469,470,499,500,501,502,503,504,505,],[21,28,154,172,173,176,177,180,228,229,-36,-37,-39,-101,-40,-41,-42,-38,-88,-89,-90,-92,-93,-33,-34,-35,-102,-43,434,-82,467,-65,-47,-48,-81,471,-62,473,-68,475,-74,477,-71,479,-77,-78,-46,-83,-66,-63,-69,-75,-72,-79,-80,]),'RPARENT':([23,63,102,144,170,171,187,188,190,191,192,193,194,195,196,197,218,221,230,231,235,236,237,239,277,306,307,308,309,310,311,312,313,314,315,316,317,318,319,325,353,354,355,368,380,400,405,406,412,431,432,434,453,454,461,463,469,482,491,498,514,515,517,521,538,539,543,],[25,-162,151,-170,240,241,273,-109,-36,-37,-38,-39,-101,-40,-41,-42,295,298,304,305,322,323,324,326,-110,374,375,376,377,-38,378,-88,-89,-90,-92,-93,-33,-34,-35,386,-111,-102,-43,421,433,449,451,452,459,-47,-48,-81,489,490,496,-161,-46,506,511,518,525,526,528,530,544,545,549,]),'PRINT':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,145,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,367,372,373,383,384,385,387,398,403,417,418,421,424,425,426,427,428,429,430,436,450,460,463,464,465,484,487,488,495,496,507,519,522,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[56,56,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,56,-119,56,56,-118,-117,56,-179,-180,56,56,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,56,56,56,420,-212,-213,-225,-227,-228,-236,-156,-18,420,-163,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-164,-165,-185,-218,-229,56,-192,56,-160,531,-197,-187,56,56,56,-195,-196,-200,-201,-188,-177,-202,-203,56,-178,]),'CHARTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,148,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[57,57,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,57,-119,212,57,-118,-117,57,57,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,57,57,57,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,57,-192,57,-160,-197,-187,57,57,57,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'FLOATTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,100,101,111,135,142,145,148,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[58,58,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,139,139,-120,-121,58,139,-119,139,214,58,-118,-117,139,-179,-180,58,58,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,58,58,58,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,58,-192,58,-160,-197,-187,58,58,58,-195,-196,-200,-201,-188,-177,-202,-203,139,-178,]),'DECIMALTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,148,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[59,59,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,59,-119,215,59,-118,-117,59,59,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,59,59,59,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,59,-192,59,-160,-197,-187,59,59,59,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'INTTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,100,101,111,135,142,145,146,147,148,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,513,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[60,60,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,137,137,-120,-121,60,137,-119,137,209,210,216,60,-118,-117,137,-179,-180,60,60,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,60,60,60,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,60,-192,60,524,-160,-197,-187,60,60,60,-195,-196,-200,-201,-188,-177,-202,-203,137,-178,]),'BOOLTYPE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,100,101,111,135,142,145,148,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[61,61,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,140,140,-120,-121,61,140,-119,140,217,61,-118,-117,140,-179,-180,61,61,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,61,61,61,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,61,-192,61,-160,-197,-187,61,61,61,-195,-196,-200,-201,-188,-177,-202,-203,140,-178,]),'WRITE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,407,421,424,425,426,427,428,429,430,436,450,460,462,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[63,63,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,63,-119,63,-118,-117,63,63,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,63,63,63,-212,-213,-225,-227,-228,-236,-156,-18,63,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,63,-161,-185,-218,-229,63,-192,63,-160,-197,-187,63,63,63,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'ENUM':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[72,72,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,72,-119,72,-118,-117,72,72,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,72,72,72,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,72,-192,72,-160,-197,-187,72,72,72,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'IF':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[73,73,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,73,-119,73,-118,-117,73,73,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,73,73,73,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,73,-192,73,-160,-197,-187,73,73,73,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'STACK':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,285,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[78,78,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,78,-119,78,-118,-117,78,78,-84,-85,356,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,78,78,78,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,78,-192,78,-160,-197,-187,78,78,78,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'QUEUE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,286,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[84,84,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,84,-119,84,-118,-117,84,84,-84,-85,357,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,84,84,84,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,84,-192,84,-160,-197,-187,84,84,84,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'CONST':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,100,101,111,142,145,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[91,91,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,135,-120,-121,91,-119,91,91,-118,-117,91,-179,-180,91,91,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,91,91,91,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,91,-192,91,-160,-197,-187,91,91,91,-195,-196,-200,-201,-188,-177,-202,-203,91,-178,]),'THREAD':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,288,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,509,510,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[93,93,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,93,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,93,-119,93,-118,-117,93,93,-84,-85,-116,358,-56,-44,-45,-55,-57,-58,-59,-60,-172,93,93,93,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,93,-192,93,-157,-158,-160,-197,-187,93,93,93,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'TRY':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[94,94,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,94,-119,94,-118,-117,94,94,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,94,94,94,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,94,-192,94,-160,-197,-187,94,94,94,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'LIST':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,456,457,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[95,95,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,95,-119,95,-118,-117,95,95,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,95,95,95,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,492,493,-191,-161,-185,-218,-229,95,-192,95,-160,-197,-187,95,95,95,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'FOR':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[96,96,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,96,-119,96,-118,-117,96,96,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,96,96,96,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,96,-192,96,-160,-197,-187,96,96,96,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'FOREACH':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[97,97,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,97,-119,97,-118,-117,97,97,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,97,97,97,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,97,-192,97,-160,-197,-187,97,97,97,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'WHILE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,296,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[98,98,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,98,-119,98,-118,-117,98,98,-84,-85,-116,365,-56,-44,-45,-55,-57,-58,-59,-60,-172,98,98,98,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,98,-192,98,-160,-197,-187,98,98,98,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'DO':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,150,201,202,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,572,],[99,99,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,99,-119,99,-118,-117,99,99,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,99,99,99,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,99,-192,99,-160,-197,-187,99,99,99,-195,-196,-200,-201,-188,-177,-202,-203,-178,]),'PRIVATE':([27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,82,83,85,86,87,88,89,111,142,145,150,201,202,205,206,207,220,222,228,229,287,300,327,328,329,331,339,341,343,351,352,364,366,372,373,383,384,385,387,398,403,421,424,425,426,427,428,429,430,436,450,460,463,484,487,488,495,496,507,519,527,529,534,535,536,546,547,550,552,554,560,566,568,570,572,],[101,101,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-114,-115,-162,-175,-176,-198,-199,-208,-209,-210,-211,-193,-194,-189,-190,-219,-220,-221,-222,-223,-230,-231,-232,-233,-234,101,-119,101,101,-118,-117,101,-179,-180,101,101,-84,-85,-116,-56,-44,-45,-55,-57,-58,-59,-60,-172,101,101,101,-212,-213,-225,-227,-228,-236,-156,-18,-171,-86,-87,-214,-215,-216,-217,-224,-235,-186,-191,-161,-185,-218,-229,101,-192,101,-160,-197,-187,101,101,101,-195,-196,-200,-201,-188,-177,-202,-203,101,-178,]),'DOT':([32,144,185,348,416,],[110,-170,270,399,462,]),'METHOD':([72,186,350,],[131,271,271,]),'SMALLER_THAN':([95,192,194,195,196,197,265,310,312,355,394,396,492,493,],[146,-43,280,-40,-41,-42,-43,-43,280,-43,-43,-43,512,513,]),'ARROW':([104,],[153,]),'COMMA':([107,117,122,127,128,188,190,191,192,193,194,195,196,197,226,227,247,248,249,250,256,257,258,265,266,267,268,271,277,310,312,313,314,315,316,317,318,319,353,354,355,382,390,394,395,396,397,423,431,432,434,438,440,442,444,446,447,469,557,559,],[155,174,178,181,182,-109,-36,-37,-38,-39,-101,-40,-41,-42,-131,-130,-43,-41,-134,-94,-43,-40,-129,-38,-36,-137,-37,350,-110,-38,-88,-89,-90,-92,-93,-33,-34,-35,-111,-102,-43,435,-95,-38,-137,-38,-140,468,-47,-48,-81,472,474,476,478,480,481,-46,562,564,]),'ASSIGNATION':([108,118,123,129,133,134,143,144,224,228,229,243,245,252,254,260,262,264,360,361,],[156,175,179,183,198,199,203,-170,301,302,303,330,332,340,342,344,345,346,409,410,]),'INTEGER':([109,132,149,175,179,183,189,232,233,234,238,274,275,276,278,279,280,281,282,283,284,302,303,321,333,334,335,336,337,338,345,346,362,392,414,435,478,508,553,564,],[158,195,195,195,257,195,195,306,308,195,195,195,-112,-113,195,-103,-104,-105,-106,-107,-108,195,195,195,195,-96,-97,-98,-99,-100,195,195,195,444,195,195,444,195,559,559,]),'CLEAR':([110,],[159,]),'COUNT':([110,],[160,]),'ADD':([110,],[161,]),'REMOVEAT':([110,],[162,]),'PUSH':([110,],[163,]),'POP':([110,],[164,]),'PEEK':([110,],[165,]),'ISEMPTY':([110,],[166,]),'ENQUEUE':([110,],[167,]),'DEQUEUE':([110,],[168,]),'STRING':([113,156,232,233,234,238,302,303,321,369,379,435,466,468,551,562,],[170,227,307,309,317,317,317,317,317,423,431,317,498,423,557,557,]),'LOGICNOT':([132,149,183,274,275,276,345,346,414,508,],[189,189,189,189,-112,-113,189,189,189,189,]),'BOOLTRUE':([132,149,183,189,234,238,274,275,276,302,303,321,345,346,393,414,435,480,481,508,],[190,190,266,190,190,190,190,-112,-113,190,190,190,266,190,446,190,190,446,446,190,]),'BOOLFALSE':([132,149,183,189,234,238,274,275,276,302,303,321,345,346,393,414,435,480,481,508,],[191,191,268,191,191,191,191,-112,-113,191,191,191,191,268,447,191,191,447,447,191,]),'FLOAT_NUMBER':([132,149,175,179,183,189,234,238,274,275,276,278,279,280,281,282,283,284,302,303,321,333,334,335,336,337,338,345,346,362,389,414,435,474,508,],[196,196,248,196,196,196,196,196,196,-112,-113,196,-103,-104,-105,-106,-107,-108,196,196,196,196,-96,-97,-98,-99,-100,196,196,196,440,196,196,440,196,]),'DECIMAL_NUMBER':([132,149,175,179,183,189,234,238,274,275,276,278,279,280,281,282,283,284,302,303,321,333,334,335,336,337,338,345,346,362,391,414,435,476,508,],[197,197,197,197,197,197,197,197,197,-112,-113,197,-103,-104,-105,-106,-107,-108,197,197,197,197,-96,-97,-98,-99,-100,197,197,197,442,197,197,442,197,]),'LOGICAND':([188,190,191,192,193,194,195,196,197,265,266,268,354,355,394,396,],[275,-36,-37,-38,-39,-101,-40,-41,-42,-38,-36,-37,-102,-43,-38,-38,]),'LOGICOR':([188,190,191,192,193,194,195,196,197,265,266,268,354,355,394,396,],[276,-36,-37,-38,-39,-101,-40,-41,-42,-38,-36,-37,-102,-43,-38,-38,]),'GREATER_THAN':([192,194,195,196,197,208,209,265,310,312,355,394,396,523,524,],[-43,279,-40,-41,-42,291,292,-43,-43,279,-43,-43,-43,532,533,]),'EQUAL_COMPARATION':([192,194,195,196,197,265,310,312,355,394,396,],[-43,281,-40,-41,-42,-43,-43,281,-43,-43,-43,]),'INEQUALITY':([192,194,195,196,197,265,310,312,355,394,396,],[-43,282,-40,-41,-42,-43,-43,282,-43,-43,-43,]),'GREATER_THAN_OR_EQUAL':([192,194,195,196,197,265,310,312,355,394,396,],[-43,283,-40,-41,-42,-43,-43,283,-43,-43,-43,]),'SMALLER_THAN_OR_EQUAL':([192,194,195,196,197,265,310,312,355,394,396,],[-43,284,-40,-41,-42,-43,-43,284,-43,-43,-43,]),'PLUS':([195,196,197,247,248,250,256,257,317,355,431,],[-40,-41,-42,-43,-41,334,-43,-40,379,-43,379,]),'MINUS':([195,196,197,247,248,250,256,257,355,],[-40,-41,-42,-43,-41,335,-43,-40,-43,]),'TIMES':([195,196,197,247,248,250,256,257,355,],[-40,-41,-42,-43,-41,336,-43,-40,-43,]),'DIVIDE':([195,196,197,247,248,250,256,257,355,],[-40,-41,-42,-43,-41,337,-43,-40,-43,]),'PERCENT':([195,196,197,247,248,250,256,257,355,],[-40,-41,-42,-43,-41,338,-43,-40,-43,]),'NEW':([198,199,203,409,410,],[285,286,288,456,457,]),'CHAR':([234,238,302,303,321,388,435,472,],[318,318,318,318,318,438,318,438,]),'READ':([234,238,302,303,321,435,],[320,320,320,320,320,320,]),'START':([270,],[349,]),'CATCH':([289,],[359,]),'IN':([294,],[363,]),'JOIN':([399,],[448,]),'EXCEPTION':([408,],[455,]),'ELSE':([450,548,],[485,485,]),'ELSE_IF':([450,548,],[486,486,]),'ERROR':([455,537,],[491,543,]),'INCREMENT':([494,],[514,]),'DECREMENT':([494,],[515,]),'FINALLY':([560,],[565,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block_publicClass':([4,],[5,]),'block_main_method':([12,],[14,]),'all_block_code':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[33,112,169,219,297,299,404,413,415,516,404,540,541,404,]),'block_code':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'def_const_or_var':([27,34,111,145,150,205,220,222,352,364,366,495,507,534,535,536,570,],[35,35,35,206,35,206,35,35,35,35,35,35,35,35,35,35,206,]),'print_data':([27,34,111,145,150,205,220,222,352,364,366,495,507,534,535,536,570,],[36,36,36,207,36,207,36,36,36,36,36,36,36,36,36,36,207,]),'array_assignation':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'array_value_assign':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'array_indexing':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'thread_main':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'concurrent_method':([27,34,111,150,220,222,352,364,366,407,462,495,507,534,535,536,],[41,41,41,41,41,41,41,41,41,454,497,41,41,41,41,41,]),'block_try_catch':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'lists':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'functions_list':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'statement_lambda':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'enums':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'normal_if':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[47,47,47,47,47,47,403,47,47,47,403,47,47,403,]),'block_for':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'block_while':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'stack_struct':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'functions_stack':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'queue_struct':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'functions_queue':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'constant_assignation':([27,34,111,145,150,205,220,222,352,364,366,495,507,534,535,536,570,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'variable_assignation':([27,34,111,145,150,205,220,222,352,364,366,495,507,534,535,536,570,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'declaration_thread':([27,34,62,111,150,220,222,352,364,366,495,507,534,535,536,],[62,62,130,62,62,62,62,62,62,62,62,62,62,62,62,]),'try_catch_simply':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'try_catch_finally':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'list_empty':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'list_full':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'list_func_clear':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'list_func_count':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'list_func_add':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'list_func_removeat':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'for_simple':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'for_each':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'normal_while':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'do_while':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'stack_push':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'stack_pop':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'stack_clear':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'stack_peek':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'stack_isEmpty':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'queue_enqueue':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'queue_dequeue':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'queue_clear':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'queue_isEmpty':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'queue_peek':([27,34,111,150,220,222,352,364,366,495,507,534,535,536,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'access_modifiers':([27,34,111,145,150,205,220,222,352,364,366,495,507,534,535,536,570,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'assignation_type_value_multiple':([27,34,90,91,111,135,145,150,205,220,222,352,364,366,495,507,534,535,536,570,],[92,92,136,141,92,200,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'assignation_string_multiple':([31,138,155,],[106,106,225,]),'assignation_string':([31,138,155,],[107,107,107,]),'assignation_float_multiple':([58,139,174,],[116,116,246,]),'assignation_float':([58,139,174,],[117,117,117,]),'assignation_int_multiple':([60,137,178,],[121,121,255,]),'assignation_int':([60,137,178,210,],[122,122,122,293,]),'assignation_true_multiple':([61,140,181,],[125,125,261,]),'assignation_false_multiple':([61,140,182,],[126,126,263,]),'assignation_true':([61,140,181,],[127,127,127,]),'assignation_false':([61,140,182,],[128,128,128,]),'thread_identificator':([93,103,130,184,269,347,367,407,417,],[143,152,185,185,348,348,416,453,416,]),'thread_init':([130,184,],[184,269,]),'boolean_operation':([132,149,183,274,345,346,414,508,],[187,218,267,353,395,397,461,521,]),'value_boolean':([132,149,183,189,234,238,274,302,303,321,345,346,414,435,508,],[188,188,188,277,313,313,188,313,313,313,188,188,188,313,188,]),'comparison_operation':([132,149,183,189,234,238,274,278,302,303,321,345,346,362,414,435,508,],[193,193,193,193,193,193,193,354,193,193,193,193,193,411,193,193,193,]),'value_numeric':([132,149,175,179,183,189,234,238,274,278,302,303,321,333,345,346,362,414,435,508,],[194,194,250,250,194,194,312,312,194,194,312,312,312,250,194,194,194,194,312,194,]),'all_block_code_try':([145,205,570,],[204,290,571,]),'block_code_try':([145,205,570,],[205,205,205,]),'data_type':([148,],[211,]),'string_array_assignation':([154,],[223,]),'char_array_assignation':([172,],[242,]),'float_array_assignation':([173,],[244,]),'arithmetic_operation':([175,179,333,],[249,258,390,]),'decimal_array_assignation':([176,],[251,]),'int_array_assignation':([177,],[253,]),'bool_array_assignation':([180,],[259,]),'list_enums':([186,350,],[272,401,]),'boolean_operator':([188,],[274,]),'comparison_operator':([194,312,],[278,278,]),'value':([234,238,302,303,321,435,],[311,325,370,371,382,382,]),'value_string':([234,238,302,303,321,435,],[314,314,314,314,314,314,]),'read_data':([234,238,302,303,321,435,],[315,315,315,315,315,315,]),'array':([234,238,302,303,321,435,],[316,316,316,316,316,316,]),'concatenation':([234,238,302,303,321,379,435,],[319,319,319,319,319,432,319,]),'arithmetic_operator':([250,],[333,]),'thread_wait':([269,347,],[347,398,]),'array_content':([321,435,],[381,470,]),'block_if':([352,507,536,],[402,520,542,]),'thread_logic':([367,],[417,]),'thread_sentence':([367,417,],[418,464,]),'thread_expression':([367,417,],[419,419,]),'string_content_multiple':([369,468,],[422,499,]),'char_content_multiple':([388,472,],[437,500,]),'float_content_multiple':([389,474,],[439,501,]),'decimal_content_multiple':([391,476,],[441,502,]),'int_content_multiple':([392,478,],[443,503,]),'bool_content_multiple':([393,480,481,],[445,504,505,]),'other_if':([450,548,],[484,554,]),'strings_list':([551,562,],[556,567,]),'ints_list':([553,564,],[558,569,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> USING SYSTEM DOTANDCOMMA block_publicClass','program',4,'p_program','sintactico2.py',8),
  ('block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY','block_publicClass',6,'p_block_publicClass','sintactico2.py',11),
  ('block_publicClass -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_publicClass',13,'p_block_publicClass','sintactico2.py',12),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY','block_main_method',12,'p_block_main_method','sintactico2.py',16),
  ('block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY all_block_code','block_main_method',13,'p_block_main_method','sintactico2.py',17),
  ('block_code -> def_const_or_var','block_code',1,'p_block_code','sintactico2.py',21),
  ('block_code -> print_data','block_code',1,'p_block_code','sintactico2.py',22),
  ('block_code -> array_assignation','block_code',1,'p_block_code','sintactico2.py',23),
  ('block_code -> array_value_assign','block_code',1,'p_block_code','sintactico2.py',24),
  ('block_code -> array_indexing','block_code',1,'p_block_code','sintactico2.py',25),
  ('block_code -> thread_main','block_code',1,'p_block_code','sintactico2.py',26),
  ('block_code -> concurrent_method','block_code',1,'p_block_code','sintactico2.py',27),
  ('block_code -> block_try_catch','block_code',1,'p_block_code','sintactico2.py',29),
  ('block_code -> lists','block_code',1,'p_block_code','sintactico2.py',30),
  ('block_code -> functions_list','block_code',1,'p_block_code','sintactico2.py',31),
  ('block_code -> statement_lambda','block_code',1,'p_block_code','sintactico2.py',33),
  ('block_code -> enums','block_code',1,'p_block_code','sintactico2.py',35),
  ('block_code -> normal_if','block_code',1,'p_block_code','sintactico2.py',36),
  ('block_code -> block_for','block_code',1,'p_block_code','sintactico2.py',37),
  ('block_code -> block_while','block_code',1,'p_block_code','sintactico2.py',38),
  ('block_code -> stack_struct','block_code',1,'p_block_code','sintactico2.py',39),
  ('block_code -> functions_stack','block_code',1,'p_block_code','sintactico2.py',40),
  ('block_code -> queue_struct','block_code',1,'p_block_code','sintactico2.py',41),
  ('block_code -> functions_queue','block_code',1,'p_block_code','sintactico2.py',42),
  ('all_block_code -> block_code','all_block_code',1,'p_all_block_code','sintactico2.py',46),
  ('all_block_code -> block_code all_block_code','all_block_code',2,'p_all_block_code','sintactico2.py',47),
  ('data_type -> CHARTYPE','data_type',1,'p_data_type','sintactico2.py',53),
  ('data_type -> STRINGTYPE','data_type',1,'p_data_type','sintactico2.py',54),
  ('data_type -> FLOATTYPE','data_type',1,'p_data_type','sintactico2.py',55),
  ('data_type -> DECIMALTYPE','data_type',1,'p_data_type','sintactico2.py',56),
  ('data_type -> INTTYPE','data_type',1,'p_data_type','sintactico2.py',57),
  ('data_type -> BOOLTYPE','data_type',1,'p_data_type','sintactico2.py',58),
  ('value_string -> STRING','value_string',1,'p_value_string','sintactico2.py',64),
  ('value_string -> CHAR','value_string',1,'p_value_string','sintactico2.py',65),
  ('value_string -> concatenation','value_string',1,'p_value_string','sintactico2.py',66),
  ('value_boolean -> BOOLTRUE','value_boolean',1,'p_value_boolean','sintactico2.py',70),
  ('value_boolean -> BOOLFALSE','value_boolean',1,'p_value_boolean','sintactico2.py',71),
  ('value_boolean -> VARIABLE','value_boolean',1,'p_value_boolean','sintactico2.py',72),
  ('value_boolean -> comparison_operation','value_boolean',1,'p_value_boolean','sintactico2.py',73),
  ('value_numeric -> INTEGER','value_numeric',1,'p_value_numeric','sintactico2.py',77),
  ('value_numeric -> FLOAT_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',78),
  ('value_numeric -> DECIMAL_NUMBER','value_numeric',1,'p_value_numeric','sintactico2.py',79),
  ('value_numeric -> VARIABLE','value_numeric',1,'p_value_numeric','sintactico2.py',80),
  ('print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',84),
  ('print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA','print_data',5,'p_print_data','sintactico2.py',85),
  ('read_data -> READ LPARENT RPARENT DOTANDCOMMA','read_data',4,'p_read_data','sintactico2.py',89),
  ('concatenation -> STRING','concatenation',1,'p_concatenation','sintactico2.py',93),
  ('concatenation -> STRING PLUS concatenation','concatenation',3,'p_concatenation','sintactico2.py',94),
  ('array_type -> CHARTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',98),
  ('array_type -> STRINGTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',99),
  ('array_type -> FLOATTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',100),
  ('array_type -> DECIMALTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',101),
  ('array_type -> INTTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',102),
  ('array_type -> BOOLTYPE LBRACKET RBRACKET','array_type',3,'p_array_type','sintactico2.py',103),
  ('array_assignation -> CHARTYPE LBRACKET RBRACKET char_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',107),
  ('array_assignation -> STRINGTYPE LBRACKET RBRACKET string_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',108),
  ('array_assignation -> FLOATTYPE LBRACKET RBRACKET float_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',109),
  ('array_assignation -> DECIMALTYPE LBRACKET RBRACKET decimal_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',110),
  ('array_assignation -> INTTYPE LBRACKET RBRACKET int_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',111),
  ('array_assignation -> BOOLTYPE LBRACKET RBRACKET bool_array_assignation DOTANDCOMMA','array_assignation',5,'p_array_assignation','sintactico2.py',112),
  ('char_array_assignation -> VARIABLE ASSIGNATION LBRACKET char_content_multiple RBRACKET','char_array_assignation',5,'p_char_array_assignation','sintactico2.py',116),
  ('char_content_multiple -> CHAR','char_content_multiple',1,'p_char_content_multiple','sintactico2.py',119),
  ('char_content_multiple -> CHAR COMMA char_content_multiple','char_content_multiple',3,'p_char_content_multiple','sintactico2.py',120),
  ('string_array_assignation -> VARIABLE ASSIGNATION LBRACKET string_content_multiple RBRACKET','string_array_assignation',5,'p_string_array_assignation','sintactico2.py',124),
  ('string_content_multiple -> STRING','string_content_multiple',1,'p_string_content_multiple','sintactico2.py',127),
  ('string_content_multiple -> STRING COMMA string_content_multiple','string_content_multiple',3,'p_string_content_multiple','sintactico2.py',128),
  ('float_array_assignation -> VARIABLE ASSIGNATION LBRACKET float_content_multiple RBRACKET','float_array_assignation',5,'p_float_array_assignation','sintactico2.py',132),
  ('float_content_multiple -> FLOAT_NUMBER','float_content_multiple',1,'p_float_content_multiple','sintactico2.py',135),
  ('float_content_multiple -> FLOAT_NUMBER COMMA float_content_multiple','float_content_multiple',3,'p_float_content_multiple','sintactico2.py',136),
  ('int_array_assignation -> VARIABLE ASSIGNATION LBRACKET int_content_multiple RBRACKET','int_array_assignation',5,'p_int_array_assignation','sintactico2.py',140),
  ('int_content_multiple -> INTEGER','int_content_multiple',1,'p_int_content_multiple','sintactico2.py',143),
  ('int_content_multiple -> INTEGER COMMA int_content_multiple','int_content_multiple',3,'p_int_content_multiple','sintactico2.py',144),
  ('decimal_array_assignation -> VARIABLE ASSIGNATION LBRACKET decimal_content_multiple RBRACKET','decimal_array_assignation',5,'p_decimal_array_assignation','sintactico2.py',148),
  ('decimal_content_multiple -> DECIMAL_NUMBER','decimal_content_multiple',1,'p_decimal_content_multiple','sintactico2.py',151),
  ('decimal_content_multiple -> DECIMAL_NUMBER COMMA decimal_content_multiple','decimal_content_multiple',3,'p_decimal_content_multiple','sintactico2.py',152),
  ('bool_array_assignation -> VARIABLE ASSIGNATION LBRACKET bool_content_multiple RBRACKET','bool_array_assignation',5,'p_bool_array_assignation','sintactico2.py',156),
  ('bool_content_multiple -> BOOLTRUE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',159),
  ('bool_content_multiple -> BOOLFALSE','bool_content_multiple',1,'p_bool_content_multiple','sintactico2.py',160),
  ('bool_content_multiple -> BOOLTRUE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',161),
  ('bool_content_multiple -> BOOLFALSE COMMA bool_content_multiple','bool_content_multiple',3,'p_bool_content_multiple','sintactico2.py',162),
  ('array -> LBRACKET array_content RBRACKET','array',3,'p_array','sintactico2.py',166),
  ('array_content -> value','array_content',1,'p_array_content','sintactico2.py',169),
  ('array_content -> value COMMA array_content','array_content',3,'p_array_content','sintactico2.py',170),
  ('array_indexing -> VARIABLE LBRACKET VARIABLE RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',174),
  ('array_indexing -> VARIABLE LBRACKET INTEGER RBRACKET','array_indexing',4,'p_array_indexing','sintactico2.py',175),
  ('array_value_assign -> VARIABLE LBRACKET VARIABLE RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',179),
  ('array_value_assign -> VARIABLE LBRACKET INTEGER RBRACKET ASSIGNATION value DOTANDCOMMA','array_value_assign',7,'p_array_value_assign','sintactico2.py',180),
  ('value -> value_numeric','value',1,'p_value','sintactico2.py',184),
  ('value -> value_boolean','value',1,'p_value','sintactico2.py',185),
  ('value -> value_string','value',1,'p_value','sintactico2.py',186),
  ('value -> VARIABLE','value',1,'p_value','sintactico2.py',187),
  ('value -> read_data','value',1,'p_value','sintactico2.py',188),
  ('value -> array','value',1,'p_value','sintactico2.py',189),
  ('arithmetic_operation -> value_numeric','arithmetic_operation',1,'p_arithmetic_operation','sintactico2.py',195),
  ('arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','sintactico2.py',196),
  ('arithmetic_operator -> PLUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',200),
  ('arithmetic_operator -> MINUS','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',201),
  ('arithmetic_operator -> TIMES','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',202),
  ('arithmetic_operator -> DIVIDE','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',203),
  ('arithmetic_operator -> PERCENT','arithmetic_operator',1,'p_arithmetic_operator','sintactico2.py',204),
  ('comparison_operation -> value_numeric','comparison_operation',1,'p_comparison_operation','sintactico2.py',208),
  ('comparison_operation -> value_numeric comparison_operator comparison_operation','comparison_operation',3,'p_comparison_operation','sintactico2.py',209),
  ('comparison_operator -> GREATER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',213),
  ('comparison_operator -> SMALLER_THAN','comparison_operator',1,'p_comparison_operator','sintactico2.py',214),
  ('comparison_operator -> EQUAL_COMPARATION','comparison_operator',1,'p_comparison_operator','sintactico2.py',215),
  ('comparison_operator -> INEQUALITY','comparison_operator',1,'p_comparison_operator','sintactico2.py',216),
  ('comparison_operator -> GREATER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',217),
  ('comparison_operator -> SMALLER_THAN_OR_EQUAL','comparison_operator',1,'p_comparison_operator','sintactico2.py',218),
  ('boolean_operation -> value_boolean','boolean_operation',1,'p_boolean_operation','sintactico2.py',222),
  ('boolean_operation -> LOGICNOT value_boolean','boolean_operation',2,'p_boolean_operation','sintactico2.py',223),
  ('boolean_operation -> value_boolean boolean_operator boolean_operation','boolean_operation',3,'p_boolean_operation','sintactico2.py',224),
  ('boolean_operator -> LOGICAND','boolean_operator',1,'p_boolean_operator','sintactico2.py',228),
  ('boolean_operator -> LOGICOR','boolean_operator',1,'p_boolean_operator','sintactico2.py',229),
  ('def_const_or_var -> constant_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',235),
  ('def_const_or_var -> variable_assignation','def_const_or_var',1,'p_def_const_or_var','sintactico2.py',236),
  ('constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',4,'p_constant_assignation','sintactico2.py',240),
  ('constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA','constant_assignation',3,'p_constant_assignation','sintactico2.py',241),
  ('variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA','variable_assignation',3,'p_variable_assignation','sintactico2.py',245),
  ('variable_assignation -> assignation_type_value_multiple DOTANDCOMMA','variable_assignation',2,'p_variable_assignation','sintactico2.py',246),
  ('access_modifiers -> PUBLIC','access_modifiers',1,'p_access_modifiers','sintactico2.py',250),
  ('access_modifiers -> PRIVATE','access_modifiers',1,'p_access_modifiers','sintactico2.py',251),
  ('assignation_type_value -> INTTYPE assignation_int','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',255),
  ('assignation_type_value -> STRINGTYPE assignation_string','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',256),
  ('assignation_type_value -> FLOATTYPE assignation_float','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',257),
  ('assignation_type_value -> BOOLTYPE assignation_true','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',258),
  ('assignation_type_value -> BOOLTYPE assignation_false','assignation_type_value',2,'p_assignation_type_value','sintactico2.py',259),
  ('assignation_int -> VARIABLE ASSIGNATION INTEGER','assignation_int',3,'p_assignation_int','sintactico2.py',263),
  ('assignation_int -> VARIABLE ASSIGNATION VARIABLE','assignation_int',3,'p_assignation_int','sintactico2.py',264),
  ('assignation_int -> VARIABLE ASSIGNATION arithmetic_operation','assignation_int',3,'p_assignation_int','sintactico2.py',265),
  ('assignation_string -> VARIABLE ASSIGNATION STRING','assignation_string',3,'p_assignation_string','sintactico2.py',269),
  ('assignation_string -> VARIABLE ASSIGNATION VARIABLE','assignation_string',3,'p_assignation_string','sintactico2.py',270),
  ('assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER','assignation_float',3,'p_assignation_float','sintactico2.py',274),
  ('assignation_float -> VARIABLE ASSIGNATION VARIABLE','assignation_float',3,'p_assignation_float','sintactico2.py',275),
  ('assignation_float -> VARIABLE ASSIGNATION arithmetic_operation','assignation_float',3,'p_assignation_float','sintactico2.py',276),
  ('assignation_true -> VARIABLE ASSIGNATION BOOLTRUE','assignation_true',3,'p_assignation_true','sintactico2.py',280),
  ('assignation_true -> VARIABLE ASSIGNATION VARIABLE','assignation_true',3,'p_assignation_true','sintactico2.py',281),
  ('assignation_true -> VARIABLE ASSIGNATION boolean_operation','assignation_true',3,'p_assignation_true','sintactico2.py',282),
  ('assignation_false -> VARIABLE ASSIGNATION BOOLFALSE','assignation_false',3,'p_assignation_false','sintactico2.py',286),
  ('assignation_false -> VARIABLE ASSIGNATION VARIABLE','assignation_false',3,'p_assignation_false','sintactico2.py',287),
  ('assignation_false -> VARIABLE ASSIGNATION boolean_operation','assignation_false',3,'p_assignation_false','sintactico2.py',288),
  ('assignation_type_value_multiple -> INTTYPE assignation_int_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',293),
  ('assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',294),
  ('assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',295),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',296),
  ('assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple','assignation_type_value_multiple',2,'p_assignation_type_value_multiple','sintactico2.py',297),
  ('assignation_int_multiple -> assignation_int','assignation_int_multiple',1,'p_assignation_int_multiple','sintactico2.py',301),
  ('assignation_int_multiple -> assignation_int COMMA assignation_int_multiple','assignation_int_multiple',3,'p_assignation_int_multiple','sintactico2.py',302),
  ('assignation_string_multiple -> assignation_string','assignation_string_multiple',1,'p_assignation_string_multiple','sintactico2.py',306),
  ('assignation_string_multiple -> assignation_string COMMA assignation_string_multiple','assignation_string_multiple',3,'p_assignation_string_multiple','sintactico2.py',307),
  ('assignation_float_multiple -> assignation_float','assignation_float_multiple',1,'p_assignation_float_multiple','sintactico2.py',311),
  ('assignation_float_multiple -> assignation_float COMMA assignation_float_multiple','assignation_float_multiple',3,'p_assignation_float_multiple','sintactico2.py',312),
  ('assignation_true_multiple -> assignation_true','assignation_true_multiple',1,'p_assignation_true_multiple','sintactico2.py',316),
  ('assignation_true_multiple -> assignation_true COMMA assignation_true_multiple','assignation_true_multiple',3,'p_assignation_true_multiple','sintactico2.py',317),
  ('assignation_false_multiple -> assignation_false','assignation_false_multiple',1,'p_assignation_false_multiple','sintactico2.py',321),
  ('assignation_false_multiple -> assignation_false COMMA assignation_false_multiple','assignation_false_multiple',3,'p_assignation_false_multiple','sintactico2.py',322),
  ('thread_main -> declaration_thread declaration_thread thread_init thread_init thread_wait thread_wait','thread_main',6,'p_thread_main','sintactico2.py',328),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT thread_identificator RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',333),
  ('declaration_thread -> THREAD thread_identificator ASSIGNATION NEW THREAD LPARENT concurrent_method RPARENT DOTANDCOMMA','declaration_thread',9,'p_declaration_thread','sintactico2.py',334),
  ('thread_init -> thread_identificator DOT START LPARENT RPARENT DOTANDCOMMA','thread_init',6,'p_thread_init','sintactico2.py',339),
  ('thread_wait -> thread_identificator DOT JOIN LPARENT RPARENT DOTANDCOMMA','thread_wait',6,'p_thread_wait','sintactico2.py',344),
  ('concurrent_method -> STATIC VOID thread_identificator LPARENT RPARENT LKEY thread_logic RKEY','concurrent_method',8,'p_concurrent_method','sintactico2.py',349),
  ('concurrent_method -> WRITE','concurrent_method',1,'p_concurrent_method','sintactico2.py',350),
  ('thread_logic -> thread_sentence','thread_logic',1,'p_thread_logic','sintactico2.py',355),
  ('thread_logic -> thread_logic thread_sentence','thread_logic',2,'p_thread_logic','sintactico2.py',356),
  ('thread_sentence -> thread_expression DOTANDCOMMA','thread_sentence',2,'p_thread_sentence','sintactico2.py',361),
  ('thread_expression -> thread_identificator DOT concurrent_method LPARENT RPARENT','thread_expression',5,'p_thread_expression','sintactico2.py',366),
  ('thread_expression -> PRINT LPARENT STRING RPARENT','thread_expression',4,'p_thread_expression','sintactico2.py',367),
  ('thread_arguments -> thread_expression','thread_arguments',1,'p_thread_arguments','sintactico2.py',372),
  ('thread_arguments -> thread_arguments COMMA thread_expression','thread_arguments',3,'p_thread_arguments','sintactico2.py',373),
  ('thread_identificator -> VARIABLE','thread_identificator',1,'p_thread_identificator','sintactico2.py',378),
  ('statement_lambda -> LPARENT VARIABLE ARROW LKEY all_block_code RKEY RPARENT','statement_lambda',7,'p_statement_lambda','sintactico2.py',385),
  ('enums -> ENUM METHOD LKEY list_enums RKEY','enums',5,'p_enums','sintactico2.py',389),
  ('list_enums -> METHOD','list_enums',1,'p_list_enums','sintactico2.py',392),
  ('list_enums -> METHOD COMMA list_enums','list_enums',3,'p_list_enums','sintactico2.py',393),
  ('block_try_catch -> try_catch_simply','block_try_catch',1,'p_block_try_catch','sintactico2.py',402),
  ('block_try_catch -> try_catch_finally','block_try_catch',1,'p_block_try_catch','sintactico2.py',403),
  ('try_catch_simply -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY','try_catch_simply',16,'p_try_catch_simply','sintactico2.py',407),
  ('try_catch_finally -> TRY LKEY all_block_code_try RKEY CATCH LPARENT EXCEPTION ERROR RPARENT LKEY PRINT LPARENT ERROR RPARENT DOTANDCOMMA RKEY FINALLY LKEY all_block_code_try RKEY','try_catch_finally',20,'p_try_catch_finally','sintactico2.py',410),
  ('block_code_try -> def_const_or_var','block_code_try',1,'p_block_code_try','sintactico2.py',413),
  ('block_code_try -> print_data','block_code_try',1,'p_block_code_try','sintactico2.py',414),
  ('all_block_code_try -> block_code_try','all_block_code_try',1,'p_all_block_code_try','sintactico2.py',418),
  ('all_block_code_try -> block_code_try all_block_code_try','all_block_code_try',2,'p_all_block_code_try','sintactico2.py',419),
  ('block_if -> normal_if','block_if',1,'p_block_if','sintactico2.py',425),
  ('block_if -> all_block_code','block_if',1,'p_block_if','sintactico2.py',426),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','normal_if',8,'p_normal_if','sintactico2.py',429),
  ('normal_if -> IF LPARENT boolean_operation RPARENT LKEY block_if RKEY','normal_if',7,'p_normal_if','sintactico2.py',430),
  ('other_if -> ELSE LKEY block_if RKEY','other_if',4,'p_other_if','sintactico2.py',434),
  ('other_if -> ELSE_IF LPARENT boolean_operation RPARENT LKEY block_if RKEY other_if','other_if',8,'p_other_if','sintactico2.py',435),
  ('block_while -> normal_while','block_while',1,'p_block_while','sintactico2.py',441),
  ('block_while -> do_while','block_while',1,'p_block_while','sintactico2.py',442),
  ('normal_while -> WHILE LPARENT boolean_operation RPARENT LKEY all_block_code RKEY','normal_while',7,'p_normal_while','sintactico2.py',446),
  ('do_while -> DO LKEY all_block_code RKEY WHILE LPARENT boolean_operation RPARENT','do_while',8,'p_do_while','sintactico2.py',449),
  ('block_for -> for_simple','block_for',1,'p_block_for','sintactico2.py',454),
  ('block_for -> for_each','block_for',1,'p_block_for','sintactico2.py',455),
  ('for_simple -> FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY','for_simple',13,'p_for_simple','sintactico2.py',459),
  ('for_simple -> FOR LPARENT INTTYPE assignation_int DOTANDCOMMA comparison_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY','for_simple',13,'p_for_simple','sintactico2.py',460),
  ('for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY','for_each',10,'p_for_each','sintactico2.py',465),
  ('lists -> list_empty','lists',1,'p_lists','sintactico2.py',474),
  ('lists -> list_full','lists',1,'p_lists','sintactico2.py',475),
  ('list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',479),
  ('list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA','list_empty',14,'p_list_empty','sintactico2.py',480),
  ('list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',484),
  ('list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA','list_full',17,'p_list_full','sintactico2.py',485),
  ('strings_list -> STRING','strings_list',1,'p_strings_list','sintactico2.py',489),
  ('strings_list -> STRING COMMA strings_list','strings_list',3,'p_strings_list','sintactico2.py',490),
  ('ints_list -> INTEGER','ints_list',1,'p_ints_list','sintactico2.py',494),
  ('ints_list -> INTEGER COMMA ints_list','ints_list',3,'p_ints_list','sintactico2.py',495),
  ('functions_list -> list_func_clear','functions_list',1,'p_functions_list','sintactico2.py',499),
  ('functions_list -> list_func_count','functions_list',1,'p_functions_list','sintactico2.py',500),
  ('functions_list -> list_func_add','functions_list',1,'p_functions_list','sintactico2.py',501),
  ('functions_list -> list_func_removeat','functions_list',1,'p_functions_list','sintactico2.py',502),
  ('list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','list_func_clear',6,'p_list_func_clear','sintactico2.py',506),
  ('list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA','list_func_count',6,'p_list_func_count','sintactico2.py',509),
  ('list_func_add -> VARIABLE DOT ADD LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',512),
  ('list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA','list_func_add',7,'p_list_func_add','sintactico2.py',513),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',518),
  ('list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT STRING RPARENT DOTANDCOMMA','list_func_removeat',7,'p_list_func_removeat','sintactico2.py',519),
  ('stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA','stack_struct',8,'p_stack_struct','sintactico2.py',525),
  ('functions_stack -> stack_push','functions_stack',1,'p_functions_stack','sintactico2.py',528),
  ('functions_stack -> stack_pop','functions_stack',1,'p_functions_stack','sintactico2.py',529),
  ('functions_stack -> stack_clear','functions_stack',1,'p_functions_stack','sintactico2.py',530),
  ('functions_stack -> stack_peek','functions_stack',1,'p_functions_stack','sintactico2.py',531),
  ('functions_stack -> stack_isEmpty','functions_stack',1,'p_functions_stack','sintactico2.py',532),
  ('stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA','stack_push',7,'p_stack_push','sintactico2.py',535),
  ('stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA','stack_pop',6,'p_stack_pop','sintactico2.py',538),
  ('stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','stack_clear',6,'p_stack_clear','sintactico2.py',541),
  ('stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','stack_peek',6,'p_stack_peek','sintactico2.py',544),
  ('stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','stack_isEmpty',6,'p_stack_isEmpty','sintactico2.py',547),
  ('queue_struct -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA','queue_struct',8,'p_queue_struct','sintactico2.py',552),
  ('functions_queue -> queue_enqueue','functions_queue',1,'p_functions_queue','sintactico2.py',555),
  ('functions_queue -> queue_dequeue','functions_queue',1,'p_functions_queue','sintactico2.py',556),
  ('functions_queue -> queue_clear','functions_queue',1,'p_functions_queue','sintactico2.py',557),
  ('functions_queue -> queue_isEmpty','functions_queue',1,'p_functions_queue','sintactico2.py',558),
  ('functions_queue -> queue_peek','functions_queue',1,'p_functions_queue','sintactico2.py',559),
  ('queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA','queue_enqueue',7,'p_queue_enqueue','sintactico2.py',563),
  ('queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA','queue_dequeue',6,'p_queue_dequeue','sintactico2.py',566),
  ('queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA','queue_clear',6,'p_queue_clear','sintactico2.py',569),
  ('queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA','queue_peek',6,'p_queue_peek','sintactico2.py',572),
  ('queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA','queue_isEmpty',6,'p_queue_isEmpty','sintactico2.py',575),
]
