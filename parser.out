Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLEPOINT
    DOUBLE_QUOTATION_MARKS
    ID
    JUMP_LINE
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    SIPLE_QUOTATION_MARKS
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION

Grammar

Rule 0     S' -> program
Rule 1     program -> USING SYSTEM DOTANDCOMMA block_publicClass
Rule 2     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY
Rule 3     block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY
Rule 4     block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY
Rule 5     block_code -> def_const_or_var
Rule 6     block_code -> print_data
Rule 7     block_code -> read_data
Rule 8     block_code -> arithmetic_operation
Rule 9     block_code -> logic_operation
Rule 10    block_code -> lists
Rule 11    block_code -> functions_list
Rule 12    block_code -> dict_estruct
Rule 13    block_code -> functions_dict
Rule 14    block_code -> queue_struct
Rule 15    block_code -> functions_queue
Rule 16    block_code -> stack_struct
Rule 17    block_code -> functions_stack
Rule 18    block_code -> block_for
Rule 19    block_code -> block_try_catch
Rule 20    block_code -> block_while
Rule 21    all_block_code -> block_code
Rule 22    all_block_code -> block_code all_block_code
Rule 23    method_definition -> simple_method
Rule 24    method_definition -> declaration_async
Rule 25    method_definition -> declaration_lambda
Rule 26    all_method_definitions -> method_definition
Rule 27    all_method_definitions -> method_definition all_method_definitions
Rule 28    print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA
Rule 29    print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
Rule 30    read_data -> READ LPARENT RPARENT DOTANDCOMMA
Rule 31    concatenation -> STRING
Rule 32    concatenation -> STRING PLUS concatenation
Rule 33    value -> value_numeric
Rule 34    value -> value_logic
Rule 35    value -> value_string
Rule 36    value -> read_data
Rule 37    value_string -> STRING
Rule 38    value_string -> CHAR
Rule 39    value_string -> VARIABLE
Rule 40    value_string -> concatenation
Rule 41    value_logic -> BOOLTRUE
Rule 42    value_logic -> BOOLFALSE
Rule 43    value_logic -> logic_operation
Rule 44    value_numeric -> INTEGER
Rule 45    value_numeric -> FLOAT_NUMBER
Rule 46    value_numeric -> DECIMAL_NUMBER
Rule 47    value_numeric -> arithmetic_operation
Rule 48    arithmetic_operation -> value_numeric
Rule 49    arithmetic_operation -> VARIABLE
Rule 50    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 51    arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation
Rule 52    logic_operation -> value_numeric logic_operator INTEGER
Rule 53    logic_operation -> VARIABLE logic_operator INTEGER
Rule 54    logic_operator -> GREATER_THAN
Rule 55    logic_operator -> SMALLER_THAN
Rule 56    logic_operator -> EQUAL_COMPARATION
Rule 57    logic_operator -> INEQUALITY
Rule 58    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 59    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 60    logic_operator -> LOGICAND
Rule 61    logic_operator -> LOGICOR
Rule 62    logic_operator -> LOGICNOT
Rule 63    logic_operator -> LOGICXOR
Rule 64    arithmetic_operator -> PLUS
Rule 65    arithmetic_operator -> MINUS
Rule 66    arithmetic_operator -> TIMES
Rule 67    arithmetic_operator -> DIVIDE
Rule 68    arithmetic_operator -> PERCENT
Rule 69    access_modifiers -> PUBLIC
Rule 70    access_modifiers -> PRIVATE
Rule 71    def_const_or_var -> constant_assignation
Rule 72    def_const_or_var -> variable_assignation
Rule 73    def_const_or_var -> late_initialization
Rule 74    constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
Rule 75    constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA
Rule 76    constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 77    constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 78    variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA
Rule 79    variable_assignation -> data_type assignation_key_value DOTANDCOMMA
Rule 80    variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
Rule 81    variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA
Rule 82    late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA
Rule 83    late_initialization -> data_type VARIABLE DOTANDCOMMA
Rule 84    late_initialization -> assignation_key_value DOTANDCOMMA
Rule 85    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 86    assignation_key_value -> READ LPARENT RPARENT
Rule 87    assignation_key_value_multiple -> assignation_key_value
Rule 88    assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple
Rule 89    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 90    assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype
Rule 91    data_type -> CHARTYPE
Rule 92    data_type -> STRINGTYPE
Rule 93    data_type -> FLOATTYPE
Rule 94    data_type -> DECIMALTYPE
Rule 95    data_type -> INTTYPE
Rule 96    data_type -> BOOLTYPE
Rule 97    logic_operations -> logic_operation DOTANDCOMMA
Rule 98    logic_operations -> logic_operation COMMA logic_operations
Rule 99    block_for -> for_anidado
Rule 100   block_for -> for_each
Rule 101   for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
Rule 102   for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
Rule 103   for_anidado -> for_simple
Rule 104   for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
Rule 105   for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
Rule 106   for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
Rule 107   block_try_catch -> try_catch_simply
Rule 108   block_try_catch -> try_catch_finally
Rule 109   try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
Rule 110   try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
Rule 111   block_while -> normal_while
Rule 112   block_while -> do_while
Rule 113   normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
Rule 114   do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 115   block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 116   other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 117   other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 118   not_yes_nested_if -> block_if
Rule 119   not_yes_nested_if -> block_code
Rule 120   dict_estruct -> dict_empty
Rule 121   dict_estruct -> dict_full
Rule 122   dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 123   dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
Rule 124   key_value_pairs -> key_value_pair
Rule 125   key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 126   key_value_pair -> LKEY VARIABLE COMMA value RKEY
Rule 127   estruct_of_data -> list_empty
Rule 128   estruct_of_data -> list_full
Rule 129   functions_dict -> dict_func_put
Rule 130   functions_dict -> dict_func_remove
Rule 131   dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
Rule 132   dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
Rule 133   lists -> list_empty
Rule 134   lists -> list_full
Rule 135   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 136   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 137   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
Rule 138   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
Rule 139   strings_list -> STRING
Rule 140   strings_list -> STRING COMMA strings_list
Rule 141   ints_list -> INTEGER
Rule 142   ints_list -> INTEGER COMMA ints_list
Rule 143   functions_list -> list_func_clear
Rule 144   functions_list -> list_func_count
Rule 145   functions_list -> list_func_add
Rule 146   functions_list -> list_func_removeat
Rule 147   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 148   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 149   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 150   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 151   stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
Rule 152   functions_stack -> stack_push
Rule 153   functions_stack -> stack_pop
Rule 154   functions_stack -> stack_clear
Rule 155   functions_stack -> stack_peek
Rule 156   functions_stack -> stack_isEmpty
Rule 157   stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
Rule 158   stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
Rule 159   stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 160   stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
Rule 161   stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
Rule 162   queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 163   functions_queue -> queue_enqueue
Rule 164   functions_queue -> queue_dequeue
Rule 165   functions_queue -> queue_clear
Rule 166   functions_queue -> queue_isEmpty
Rule 167   queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
Rule 168   queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
Rule 169   queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 170   queue_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
Rule 171   queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
Rule 172   simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
Rule 173   simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
Rule 174   simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
Rule 175   simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
Rule 176   function_return -> RETURN value DOTANDCOMMA
Rule 177   function_argument -> data_type VARIABLE
Rule 178   function_argument -> METHOD VARIABLE
Rule 179   function_arguments -> function_argument
Rule 180   function_arguments -> function_argument COMMA function_arguments
Rule 181   declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
Rule 182   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

Terminals, with rules where they appear

ACTION               : 182
ADD                  : 149
ADDITION_ASSIGNMENT  : 
ARROW                : 181 182
ASSIGNATION          : 85 122 123 135 136 137 138 151 162 182
ASYNC                : 181
AWAIT                : 181
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 42
BOOLTRUE             : 41
BOOLTYPE             : 96
BREAK                : 
CATCH                : 109 110
CHAR                 : 38
CHARTYPE             : 91
CLASS                : 2 3
CLEAR                : 147 159 169
COMMA                : 88 90 98 125 126 131 140 142 180
CONST                : 74 75 76 77
COUNT                : 148
DECIMALTYPE          : 94
DECIMAL_NUMBER       : 46
DECREMENT            : 102 105
DEQUEUE              : 168
DICTIONARY           : 122 122 123 123
DIVIDE               : 67
DIVISION_ASSIGNMENT  : 
DO                   : 114
DOLLARSIGN           : 
DOT                  : 131 132 147 148 149 150 157 158 159 160 161 167 168 169 170 171 181
DOTANDCOMMA          : 1 28 29 30 74 75 76 77 78 79 80 81 82 83 84 89 97 101 102 104 105 122 123 131 132 135 136 137 138 147 148 149 150 151 157 158 159 160 161 162 167 168 169 170 171 176 181
DOUBLEPOINT          : 
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 116
ELSE_IF              : 117
ENQUEUE              : 167
EQUAL_COMPARATION    : 56
EXCEPTION            : 109 110
FINALLY              : 110
FLOATTYPE            : 93
FLOAT_NUMBER         : 45
FOR                  : 101 102 104 105
FOREACH              : 106
GREATER_THAN         : 54 122 122 123 123 135 135 136 136 137 137 138 138 162 162 182
GREATER_THAN_OR_EQUAL : 58
ID                   : 
IF                   : 115
IN                   : 106
INCREMENT            : 101 104
INEQUALITY           : 57
INTEGER              : 44 52 53 141 142 150
INTTYPE              : 95 136 136 138 138
ISEMPTY              : 161 171
JUMP_LINE            : 
LBRACKET             : 4
LIST                 : 135 135 136 136 137 137 138 138
LKEY                 : 2 3 4 101 102 104 105 106 109 109 110 110 110 113 114 115 116 117 123 126 137 138 172 173 174 175 181 181 182
LOGICAND             : 60
LOGICNOT             : 62
LOGICOR              : 61
LOGICXOR             : 63
LONG                 : 
LPARENT              : 4 28 29 30 86 101 102 104 105 106 109 110 113 114 115 117 122 123 131 132 135 136 137 138 147 148 149 150 151 157 158 159 160 161 162 167 168 169 170 171 172 173 174 175 181 181 181
MAIN                 : 4
METHOD               : 172 173 174 175 178 181 181
MINUS                : 65
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 122 123 135 136 137 138 151 162
PEEK                 : 160 170
PERCENT              : 68
PIPE                 : 
PLUS                 : 32 64
POP                  : 158
PRINT                : 28 29
PRIVATE              : 70
PUBLIC               : 2 3 69 181
PUSH                 : 157
PUT                  : 131
QUEUE                : 162 162
RBRACKET             : 4
READ                 : 30 86
REMOVE               : 132
REMOVEAT             : 150
RETURN               : 176
RKEY                 : 2 3 4 101 102 104 105 106 109 109 110 110 110 113 114 115 116 117 123 126 137 138 172 173 174 175 181 181 182
RPARENT              : 4 28 29 30 86 101 102 104 105 106 109 110 113 114 115 117 122 123 131 132 135 136 137 138 147 148 149 150 151 157 158 159 160 161 162 167 168 169 170 171 172 173 174 175 181 181 181
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 55 122 122 123 123 135 135 136 136 137 137 138 138 162 162 182
SMALLER_THAN_OR_EQUAL : 59
STACK                : 151 151
STATIC               : 4 172 173 174 175 181
STRING               : 28 31 32 37 131 139 140 149
STRINGTYPE           : 4 92 135 135 137 137 182
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 1
TABULATION           : 
TASK                 : 181 181
TIMES                : 66
TRY                  : 109 110
USING                : 1
VARIABLE             : 2 3 4 29 39 49 51 53 82 83 85 101 102 104 105 106 106 109 110 122 123 126 131 131 132 132 135 136 137 138 147 148 149 150 151 157 158 159 160 161 162 167 168 169 170 171 177 178 182 182
VOID                 : 4 173 175
WHILE                : 113 114
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 74 76 78 80 82 174 175
all_block_code       : 4 22 101 102 106 109 109 110 110 110 113 114 172 173 174 175
all_method_definitions : 2 27
arithmetic_operation : 8 47 50 51
arithmetic_operator  : 50 51
assignation_key_value : 74 75 78 79 84 87 88 89 90
assignation_key_value_multiple : 76 77 80 81 88
assignation_with_datatype : 90 101 102 104 105
block_code           : 21 22 119 181 182
block_for            : 18
block_if             : 118
block_main_method    : 2 3
block_publicClass    : 1
block_try_catch      : 19
block_while          : 20
concatenation        : 32 40
constant_assignation : 71
data_type            : 74 75 76 77 78 79 80 81 82 83 89 90 106 162 162 172 174 177
declaration_async    : 24
declaration_lambda   : 25
def_const_or_var     : 5
dict_empty           : 120
dict_estruct         : 12
dict_full            : 121
dict_func_put        : 129
dict_func_remove     : 130
do_while             : 112
estruct_of_data      : 
for_anidado          : 99 104 105
for_each             : 100
for_simple           : 103
function_argument    : 179 180
function_arguments   : 172 173 174 175 180
function_return      : 172 174
functions_dict       : 13
functions_list       : 11
functions_queue      : 15
functions_stack      : 17
ints_list            : 138 142
key_value_pair       : 124 125
key_value_pairs      : 123 125
late_initialization  : 73
list_empty           : 127 133
list_full            : 128 134
list_func_add        : 145
list_func_clear      : 143
list_func_count      : 144
list_func_removeat   : 146
lists                : 10
logic_operation      : 9 43 97 98 113 114 115 117
logic_operations     : 98 101 102 104 105
logic_operator       : 52 53
method_definition    : 26 27
normal_while         : 111
not_yes_nested_if    : 115 116 117
other_if             : 115 117
print_data           : 6
program              : 0
queue_clear          : 165
queue_dequeue        : 164
queue_enqueue        : 163
queue_isEmpty        : 166
queue_peek           : 
queue_struct         : 14
read_data            : 7 36
simple_method        : 23
stack_clear          : 154
stack_isEmpty        : 156
stack_peek           : 155
stack_pop            : 153
stack_push           : 152
stack_struct         : 16
strings_list         : 137 140
try_catch_finally    : 108
try_catch_simply     : 107
value                : 85 126 157 167 176
value_logic          : 34
value_numeric        : 33 48 50 52
value_string         : 35
variable_assignation : 72

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . USING SYSTEM DOTANDCOMMA block_publicClass

    USING           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> USING . SYSTEM DOTANDCOMMA block_publicClass

    SYSTEM          shift and go to state 3


state 3

    (1) program -> USING SYSTEM . DOTANDCOMMA block_publicClass

    DOTANDCOMMA     shift and go to state 4


state 4

    (1) program -> USING SYSTEM DOTANDCOMMA . block_publicClass
    (2) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY
    (3) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY block_main_method RKEY

    PUBLIC          shift and go to state 6

    block_publicClass              shift and go to state 5

state 5

    (1) program -> USING SYSTEM DOTANDCOMMA block_publicClass .

    $end            reduce using rule 1 (program -> USING SYSTEM DOTANDCOMMA block_publicClass .)


state 6

    (2) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY
    (3) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY block_main_method RKEY

    CLASS           shift and go to state 7


state 7

    (2) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_method_definitions block_main_method RKEY
    (3) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY block_main_method RKEY

    VARIABLE        shift and go to state 8


state 8

    (2) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_method_definitions block_main_method RKEY
    (3) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY block_main_method RKEY

    LKEY            shift and go to state 9


state 9

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_method_definitions block_main_method RKEY
    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . block_main_method RKEY
    (26) all_method_definitions -> . method_definition
    (27) all_method_definitions -> . method_definition all_method_definitions
    (4) block_main_method -> . STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY
    (23) method_definition -> . simple_method
    (24) method_definition -> . declaration_async
    (25) method_definition -> . declaration_lambda
    (172) simple_method -> . STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (173) simple_method -> . STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (174) simple_method -> . access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (175) simple_method -> . access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (181) declaration_async -> . PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
    (182) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE

    STATIC          shift and go to state 14
    PUBLIC          shift and go to state 10
    ACTION          shift and go to state 19
    PRIVATE         shift and go to state 20

    all_method_definitions         shift and go to state 11
    block_main_method              shift and go to state 12
    method_definition              shift and go to state 13
    simple_method                  shift and go to state 15
    declaration_async              shift and go to state 16
    declaration_lambda             shift and go to state 17
    access_modifiers               shift and go to state 18

state 10

    (181) declaration_async -> PUBLIC . STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
    (69) access_modifiers -> PUBLIC .

  ! shift/reduce conflict for STATIC resolved as shift
    STATIC          shift and go to state 21

  ! STATIC          [ reduce using rule 69 (access_modifiers -> PUBLIC .) ]


state 11

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions . block_main_method RKEY
    (4) block_main_method -> . STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    STATIC          shift and go to state 23

    block_main_method              shift and go to state 22

state 12

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method . RKEY

    RKEY            shift and go to state 24


state 13

    (26) all_method_definitions -> method_definition .
    (27) all_method_definitions -> method_definition . all_method_definitions
    (26) all_method_definitions -> . method_definition
    (27) all_method_definitions -> . method_definition all_method_definitions
    (23) method_definition -> . simple_method
    (24) method_definition -> . declaration_async
    (25) method_definition -> . declaration_lambda
    (172) simple_method -> . STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (173) simple_method -> . STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (174) simple_method -> . access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (175) simple_method -> . access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (181) declaration_async -> . PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
    (182) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE

  ! shift/reduce conflict for STATIC resolved as shift
    STATIC          shift and go to state 26
    PUBLIC          shift and go to state 10
    ACTION          shift and go to state 19
    PRIVATE         shift and go to state 20

  ! STATIC          [ reduce using rule 26 (all_method_definitions -> method_definition .) ]

    method_definition              shift and go to state 13
    all_method_definitions         shift and go to state 25
    simple_method                  shift and go to state 15
    declaration_async              shift and go to state 16
    declaration_lambda             shift and go to state 17
    access_modifiers               shift and go to state 18

state 14

    (4) block_main_method -> STATIC . VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY
    (172) simple_method -> STATIC . data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (173) simple_method -> STATIC . VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    VOID            shift and go to state 27
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 29

state 15

    (23) method_definition -> simple_method .

    STATIC          reduce using rule 23 (method_definition -> simple_method .)
    PUBLIC          reduce using rule 23 (method_definition -> simple_method .)
    ACTION          reduce using rule 23 (method_definition -> simple_method .)
    PRIVATE         reduce using rule 23 (method_definition -> simple_method .)


state 16

    (24) method_definition -> declaration_async .

    STATIC          reduce using rule 24 (method_definition -> declaration_async .)
    PUBLIC          reduce using rule 24 (method_definition -> declaration_async .)
    ACTION          reduce using rule 24 (method_definition -> declaration_async .)
    PRIVATE         reduce using rule 24 (method_definition -> declaration_async .)


state 17

    (25) method_definition -> declaration_lambda .

    STATIC          reduce using rule 25 (method_definition -> declaration_lambda .)
    PUBLIC          reduce using rule 25 (method_definition -> declaration_lambda .)
    ACTION          reduce using rule 25 (method_definition -> declaration_lambda .)
    PRIVATE         reduce using rule 25 (method_definition -> declaration_lambda .)


state 18

    (174) simple_method -> access_modifiers . STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (175) simple_method -> access_modifiers . STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY

    STATIC          shift and go to state 35


state 19

    (182) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    SMALLER_THAN    shift and go to state 36


state 20

    (70) access_modifiers -> PRIVATE .

    STATIC          reduce using rule 70 (access_modifiers -> PRIVATE .)
    CONST           reduce using rule 70 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 70 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 70 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 70 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 70 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 70 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 70 (access_modifiers -> PRIVATE .)


state 21

    (181) declaration_async -> PUBLIC STATIC . ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    ASYNC           shift and go to state 37


state 22

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method . RKEY

    RKEY            shift and go to state 38


state 23

    (4) block_main_method -> STATIC . VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    VOID            shift and go to state 39


state 24

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY .

    $end            reduce using rule 3 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY .)


state 25

    (27) all_method_definitions -> method_definition all_method_definitions .

    STATIC          reduce using rule 27 (all_method_definitions -> method_definition all_method_definitions .)


state 26

    (172) simple_method -> STATIC . data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (173) simple_method -> STATIC . VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    VOID            shift and go to state 40
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 29

state 27

    (4) block_main_method -> STATIC VOID . MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY
    (173) simple_method -> STATIC VOID . METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY

    MAIN            shift and go to state 41
    METHOD          shift and go to state 42


state 28

    (92) data_type -> STRINGTYPE .

    METHOD          reduce using rule 92 (data_type -> STRINGTYPE .)
    VARIABLE        reduce using rule 92 (data_type -> STRINGTYPE .)
    READ            reduce using rule 92 (data_type -> STRINGTYPE .)
    GREATER_THAN    reduce using rule 92 (data_type -> STRINGTYPE .)


state 29

    (172) simple_method -> STATIC data_type . METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY

    METHOD          shift and go to state 43


state 30

    (91) data_type -> CHARTYPE .

    METHOD          reduce using rule 91 (data_type -> CHARTYPE .)
    VARIABLE        reduce using rule 91 (data_type -> CHARTYPE .)
    READ            reduce using rule 91 (data_type -> CHARTYPE .)
    GREATER_THAN    reduce using rule 91 (data_type -> CHARTYPE .)


state 31

    (93) data_type -> FLOATTYPE .

    METHOD          reduce using rule 93 (data_type -> FLOATTYPE .)
    VARIABLE        reduce using rule 93 (data_type -> FLOATTYPE .)
    READ            reduce using rule 93 (data_type -> FLOATTYPE .)
    GREATER_THAN    reduce using rule 93 (data_type -> FLOATTYPE .)


state 32

    (94) data_type -> DECIMALTYPE .

    METHOD          reduce using rule 94 (data_type -> DECIMALTYPE .)
    VARIABLE        reduce using rule 94 (data_type -> DECIMALTYPE .)
    READ            reduce using rule 94 (data_type -> DECIMALTYPE .)
    GREATER_THAN    reduce using rule 94 (data_type -> DECIMALTYPE .)


state 33

    (95) data_type -> INTTYPE .

    METHOD          reduce using rule 95 (data_type -> INTTYPE .)
    VARIABLE        reduce using rule 95 (data_type -> INTTYPE .)
    READ            reduce using rule 95 (data_type -> INTTYPE .)
    GREATER_THAN    reduce using rule 95 (data_type -> INTTYPE .)


state 34

    (96) data_type -> BOOLTYPE .

    METHOD          reduce using rule 96 (data_type -> BOOLTYPE .)
    VARIABLE        reduce using rule 96 (data_type -> BOOLTYPE .)
    READ            reduce using rule 96 (data_type -> BOOLTYPE .)
    GREATER_THAN    reduce using rule 96 (data_type -> BOOLTYPE .)


state 35

    (174) simple_method -> access_modifiers STATIC . data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY
    (175) simple_method -> access_modifiers STATIC . VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    VOID            shift and go to state 45
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 44

state 36

    (182) declaration_lambda -> ACTION SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    STRINGTYPE      shift and go to state 46


state 37

    (181) declaration_async -> PUBLIC STATIC ASYNC . TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    TASK            shift and go to state 47


state 38

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY .

    $end            reduce using rule 2 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_method_definitions block_main_method RKEY .)


state 39

    (4) block_main_method -> STATIC VOID . MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    MAIN            shift and go to state 41


state 40

    (173) simple_method -> STATIC VOID . METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY

    METHOD          shift and go to state 42


state 41

    (4) block_main_method -> STATIC VOID MAIN . LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 48


state 42

    (173) simple_method -> STATIC VOID METHOD . LPARENT function_arguments RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 49


state 43

    (172) simple_method -> STATIC data_type METHOD . LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY

    LPARENT         shift and go to state 50


state 44

    (174) simple_method -> access_modifiers STATIC data_type . METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY

    METHOD          shift and go to state 51


state 45

    (175) simple_method -> access_modifiers STATIC VOID . METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY

    METHOD          shift and go to state 52


state 46

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    GREATER_THAN    shift and go to state 53


state 47

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK . METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    METHOD          shift and go to state 54


state 48

    (4) block_main_method -> STATIC VOID MAIN LPARENT . STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    STRINGTYPE      shift and go to state 55


state 49

    (173) simple_method -> STATIC VOID METHOD LPARENT . function_arguments RPARENT LKEY all_block_code RKEY
    (179) function_arguments -> . function_argument
    (180) function_arguments -> . function_argument COMMA function_arguments
    (177) function_argument -> . data_type VARIABLE
    (178) function_argument -> . METHOD VARIABLE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    METHOD          shift and go to state 56
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    function_arguments             shift and go to state 57
    function_argument              shift and go to state 58
    data_type                      shift and go to state 59

state 50

    (172) simple_method -> STATIC data_type METHOD LPARENT . function_arguments RPARENT LKEY all_block_code function_return RKEY
    (179) function_arguments -> . function_argument
    (180) function_arguments -> . function_argument COMMA function_arguments
    (177) function_argument -> . data_type VARIABLE
    (178) function_argument -> . METHOD VARIABLE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    METHOD          shift and go to state 56
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 59
    function_arguments             shift and go to state 60
    function_argument              shift and go to state 58

state 51

    (174) simple_method -> access_modifiers STATIC data_type METHOD . LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY

    LPARENT         shift and go to state 61


state 52

    (175) simple_method -> access_modifiers STATIC VOID METHOD . LPARENT function_arguments RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 62


state 53

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    VARIABLE        shift and go to state 63


state 54

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD . LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    LPARENT         shift and go to state 64


state 55

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE . LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    LBRACKET        shift and go to state 65


state 56

    (178) function_argument -> METHOD . VARIABLE

    VARIABLE        shift and go to state 66


state 57

    (173) simple_method -> STATIC VOID METHOD LPARENT function_arguments . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 67


state 58

    (179) function_arguments -> function_argument .
    (180) function_arguments -> function_argument . COMMA function_arguments

    RPARENT         reduce using rule 179 (function_arguments -> function_argument .)
    COMMA           shift and go to state 68


state 59

    (177) function_argument -> data_type . VARIABLE

    VARIABLE        shift and go to state 69


state 60

    (172) simple_method -> STATIC data_type METHOD LPARENT function_arguments . RPARENT LKEY all_block_code function_return RKEY

    RPARENT         shift and go to state 70


state 61

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT . function_arguments RPARENT LKEY all_block_code function_return RKEY
    (179) function_arguments -> . function_argument
    (180) function_arguments -> . function_argument COMMA function_arguments
    (177) function_argument -> . data_type VARIABLE
    (178) function_argument -> . METHOD VARIABLE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    METHOD          shift and go to state 56
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 59
    function_arguments             shift and go to state 71
    function_argument              shift and go to state 58

state 62

    (175) simple_method -> access_modifiers STATIC VOID METHOD LPARENT . function_arguments RPARENT LKEY all_block_code RKEY
    (179) function_arguments -> . function_argument
    (180) function_arguments -> . function_argument COMMA function_arguments
    (177) function_argument -> . data_type VARIABLE
    (178) function_argument -> . METHOD VARIABLE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    METHOD          shift and go to state 56
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    function_arguments             shift and go to state 72
    function_argument              shift and go to state 58
    data_type                      shift and go to state 59

state 63

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    ASSIGNATION     shift and go to state 73


state 64

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT . RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    RPARENT         shift and go to state 74


state 65

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET . RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    RBRACKET        shift and go to state 75


state 66

    (178) function_argument -> METHOD VARIABLE .

    COMMA           reduce using rule 178 (function_argument -> METHOD VARIABLE .)
    RPARENT         reduce using rule 178 (function_argument -> METHOD VARIABLE .)


state 67

    (173) simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 76


state 68

    (180) function_arguments -> function_argument COMMA . function_arguments
    (179) function_arguments -> . function_argument
    (180) function_arguments -> . function_argument COMMA function_arguments
    (177) function_argument -> . data_type VARIABLE
    (178) function_argument -> . METHOD VARIABLE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    METHOD          shift and go to state 56
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    function_argument              shift and go to state 58
    function_arguments             shift and go to state 77
    data_type                      shift and go to state 59

state 69

    (177) function_argument -> data_type VARIABLE .

    COMMA           reduce using rule 177 (function_argument -> data_type VARIABLE .)
    RPARENT         reduce using rule 177 (function_argument -> data_type VARIABLE .)


state 70

    (172) simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT . LKEY all_block_code function_return RKEY

    LKEY            shift and go to state 78


state 71

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments . RPARENT LKEY all_block_code function_return RKEY

    RPARENT         shift and go to state 79


state 72

    (175) simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 80


state 73

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . VARIABLE ARROW LKEY block_code RKEY

    VARIABLE        shift and go to state 81


state 74

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT . LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    LKEY            shift and go to state 82


state 75

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET . VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 83


state 76

    (173) simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY . all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    all_block_code                 shift and go to state 84
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 77

    (180) function_arguments -> function_argument COMMA function_arguments .

    RPARENT         reduce using rule 180 (function_arguments -> function_argument COMMA function_arguments .)


state 78

    (172) simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY . all_block_code function_return RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 121
    all_block_code                 shift and go to state 152
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 79

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT . LKEY all_block_code function_return RKEY

    LKEY            shift and go to state 153


state 80

    (175) simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 154


state 81

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY block_code RKEY

    ARROW           shift and go to state 155


state 82

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY . AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    AWAIT           shift and go to state 156


state 83

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 157


state 84

    (173) simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 158


state 85

    (21) all_block_code -> block_code .
    (22) all_block_code -> block_code . all_block_code
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    RKEY            reduce using rule 21 (all_block_code -> block_code .)
    RETURN          reduce using rule 21 (all_block_code -> block_code .)
    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    block_code                     shift and go to state 85
    all_block_code                 shift and go to state 159
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 86

    (5) block_code -> def_const_or_var .

    PRINT           reduce using rule 5 (block_code -> def_const_or_var .)
    READ            reduce using rule 5 (block_code -> def_const_or_var .)
    VARIABLE        reduce using rule 5 (block_code -> def_const_or_var .)
    QUEUE           reduce using rule 5 (block_code -> def_const_or_var .)
    STACK           reduce using rule 5 (block_code -> def_const_or_var .)
    CONST           reduce using rule 5 (block_code -> def_const_or_var .)
    INTEGER         reduce using rule 5 (block_code -> def_const_or_var .)
    FLOAT_NUMBER    reduce using rule 5 (block_code -> def_const_or_var .)
    DECIMAL_NUMBER  reduce using rule 5 (block_code -> def_const_or_var .)
    LIST            reduce using rule 5 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 5 (block_code -> def_const_or_var .)
    FOR             reduce using rule 5 (block_code -> def_const_or_var .)
    FOREACH         reduce using rule 5 (block_code -> def_const_or_var .)
    TRY             reduce using rule 5 (block_code -> def_const_or_var .)
    WHILE           reduce using rule 5 (block_code -> def_const_or_var .)
    DO              reduce using rule 5 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 5 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 5 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 5 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 5 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 5 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 5 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 5 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 5 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 5 (block_code -> def_const_or_var .)
    RETURN          reduce using rule 5 (block_code -> def_const_or_var .)


state 87

    (6) block_code -> print_data .

    PRINT           reduce using rule 6 (block_code -> print_data .)
    READ            reduce using rule 6 (block_code -> print_data .)
    VARIABLE        reduce using rule 6 (block_code -> print_data .)
    QUEUE           reduce using rule 6 (block_code -> print_data .)
    STACK           reduce using rule 6 (block_code -> print_data .)
    CONST           reduce using rule 6 (block_code -> print_data .)
    INTEGER         reduce using rule 6 (block_code -> print_data .)
    FLOAT_NUMBER    reduce using rule 6 (block_code -> print_data .)
    DECIMAL_NUMBER  reduce using rule 6 (block_code -> print_data .)
    LIST            reduce using rule 6 (block_code -> print_data .)
    DICTIONARY      reduce using rule 6 (block_code -> print_data .)
    FOR             reduce using rule 6 (block_code -> print_data .)
    FOREACH         reduce using rule 6 (block_code -> print_data .)
    TRY             reduce using rule 6 (block_code -> print_data .)
    WHILE           reduce using rule 6 (block_code -> print_data .)
    DO              reduce using rule 6 (block_code -> print_data .)
    PUBLIC          reduce using rule 6 (block_code -> print_data .)
    PRIVATE         reduce using rule 6 (block_code -> print_data .)
    CHARTYPE        reduce using rule 6 (block_code -> print_data .)
    STRINGTYPE      reduce using rule 6 (block_code -> print_data .)
    FLOATTYPE       reduce using rule 6 (block_code -> print_data .)
    DECIMALTYPE     reduce using rule 6 (block_code -> print_data .)
    INTTYPE         reduce using rule 6 (block_code -> print_data .)
    BOOLTYPE        reduce using rule 6 (block_code -> print_data .)
    RKEY            reduce using rule 6 (block_code -> print_data .)
    RETURN          reduce using rule 6 (block_code -> print_data .)


state 88

    (7) block_code -> read_data .

    PRINT           reduce using rule 7 (block_code -> read_data .)
    READ            reduce using rule 7 (block_code -> read_data .)
    VARIABLE        reduce using rule 7 (block_code -> read_data .)
    QUEUE           reduce using rule 7 (block_code -> read_data .)
    STACK           reduce using rule 7 (block_code -> read_data .)
    CONST           reduce using rule 7 (block_code -> read_data .)
    INTEGER         reduce using rule 7 (block_code -> read_data .)
    FLOAT_NUMBER    reduce using rule 7 (block_code -> read_data .)
    DECIMAL_NUMBER  reduce using rule 7 (block_code -> read_data .)
    LIST            reduce using rule 7 (block_code -> read_data .)
    DICTIONARY      reduce using rule 7 (block_code -> read_data .)
    FOR             reduce using rule 7 (block_code -> read_data .)
    FOREACH         reduce using rule 7 (block_code -> read_data .)
    TRY             reduce using rule 7 (block_code -> read_data .)
    WHILE           reduce using rule 7 (block_code -> read_data .)
    DO              reduce using rule 7 (block_code -> read_data .)
    PUBLIC          reduce using rule 7 (block_code -> read_data .)
    PRIVATE         reduce using rule 7 (block_code -> read_data .)
    CHARTYPE        reduce using rule 7 (block_code -> read_data .)
    STRINGTYPE      reduce using rule 7 (block_code -> read_data .)
    FLOATTYPE       reduce using rule 7 (block_code -> read_data .)
    DECIMALTYPE     reduce using rule 7 (block_code -> read_data .)
    INTTYPE         reduce using rule 7 (block_code -> read_data .)
    BOOLTYPE        reduce using rule 7 (block_code -> read_data .)
    RKEY            reduce using rule 7 (block_code -> read_data .)
    RETURN          reduce using rule 7 (block_code -> read_data .)


state 89

    (8) block_code -> arithmetic_operation .
    (47) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for QUEUE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for STACK resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 8 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for RETURN resolved using rule 8 (block_code -> arithmetic_operation .)
    PRINT           reduce using rule 8 (block_code -> arithmetic_operation .)
    READ            reduce using rule 8 (block_code -> arithmetic_operation .)
    VARIABLE        reduce using rule 8 (block_code -> arithmetic_operation .)
    QUEUE           reduce using rule 8 (block_code -> arithmetic_operation .)
    STACK           reduce using rule 8 (block_code -> arithmetic_operation .)
    CONST           reduce using rule 8 (block_code -> arithmetic_operation .)
    INTEGER         reduce using rule 8 (block_code -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 8 (block_code -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 8 (block_code -> arithmetic_operation .)
    LIST            reduce using rule 8 (block_code -> arithmetic_operation .)
    DICTIONARY      reduce using rule 8 (block_code -> arithmetic_operation .)
    FOR             reduce using rule 8 (block_code -> arithmetic_operation .)
    FOREACH         reduce using rule 8 (block_code -> arithmetic_operation .)
    TRY             reduce using rule 8 (block_code -> arithmetic_operation .)
    WHILE           reduce using rule 8 (block_code -> arithmetic_operation .)
    DO              reduce using rule 8 (block_code -> arithmetic_operation .)
    PUBLIC          reduce using rule 8 (block_code -> arithmetic_operation .)
    PRIVATE         reduce using rule 8 (block_code -> arithmetic_operation .)
    CHARTYPE        reduce using rule 8 (block_code -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 8 (block_code -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 8 (block_code -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 8 (block_code -> arithmetic_operation .)
    INTTYPE         reduce using rule 8 (block_code -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 8 (block_code -> arithmetic_operation .)
    RKEY            reduce using rule 8 (block_code -> arithmetic_operation .)
    RETURN          reduce using rule 8 (block_code -> arithmetic_operation .)
    PLUS            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 47 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! READ            [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! QUEUE           [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! STACK           [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! CONST           [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! LIST            [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! FOR             [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! TRY             [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! DO              [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]
  ! RETURN          [ reduce using rule 47 (value_numeric -> arithmetic_operation .) ]


state 90

    (9) block_code -> logic_operation .

    PRINT           reduce using rule 9 (block_code -> logic_operation .)
    READ            reduce using rule 9 (block_code -> logic_operation .)
    VARIABLE        reduce using rule 9 (block_code -> logic_operation .)
    QUEUE           reduce using rule 9 (block_code -> logic_operation .)
    STACK           reduce using rule 9 (block_code -> logic_operation .)
    CONST           reduce using rule 9 (block_code -> logic_operation .)
    INTEGER         reduce using rule 9 (block_code -> logic_operation .)
    FLOAT_NUMBER    reduce using rule 9 (block_code -> logic_operation .)
    DECIMAL_NUMBER  reduce using rule 9 (block_code -> logic_operation .)
    LIST            reduce using rule 9 (block_code -> logic_operation .)
    DICTIONARY      reduce using rule 9 (block_code -> logic_operation .)
    FOR             reduce using rule 9 (block_code -> logic_operation .)
    FOREACH         reduce using rule 9 (block_code -> logic_operation .)
    TRY             reduce using rule 9 (block_code -> logic_operation .)
    WHILE           reduce using rule 9 (block_code -> logic_operation .)
    DO              reduce using rule 9 (block_code -> logic_operation .)
    PUBLIC          reduce using rule 9 (block_code -> logic_operation .)
    PRIVATE         reduce using rule 9 (block_code -> logic_operation .)
    CHARTYPE        reduce using rule 9 (block_code -> logic_operation .)
    STRINGTYPE      reduce using rule 9 (block_code -> logic_operation .)
    FLOATTYPE       reduce using rule 9 (block_code -> logic_operation .)
    DECIMALTYPE     reduce using rule 9 (block_code -> logic_operation .)
    INTTYPE         reduce using rule 9 (block_code -> logic_operation .)
    BOOLTYPE        reduce using rule 9 (block_code -> logic_operation .)
    RKEY            reduce using rule 9 (block_code -> logic_operation .)
    RETURN          reduce using rule 9 (block_code -> logic_operation .)


state 91

    (10) block_code -> lists .

    PRINT           reduce using rule 10 (block_code -> lists .)
    READ            reduce using rule 10 (block_code -> lists .)
    VARIABLE        reduce using rule 10 (block_code -> lists .)
    QUEUE           reduce using rule 10 (block_code -> lists .)
    STACK           reduce using rule 10 (block_code -> lists .)
    CONST           reduce using rule 10 (block_code -> lists .)
    INTEGER         reduce using rule 10 (block_code -> lists .)
    FLOAT_NUMBER    reduce using rule 10 (block_code -> lists .)
    DECIMAL_NUMBER  reduce using rule 10 (block_code -> lists .)
    LIST            reduce using rule 10 (block_code -> lists .)
    DICTIONARY      reduce using rule 10 (block_code -> lists .)
    FOR             reduce using rule 10 (block_code -> lists .)
    FOREACH         reduce using rule 10 (block_code -> lists .)
    TRY             reduce using rule 10 (block_code -> lists .)
    WHILE           reduce using rule 10 (block_code -> lists .)
    DO              reduce using rule 10 (block_code -> lists .)
    PUBLIC          reduce using rule 10 (block_code -> lists .)
    PRIVATE         reduce using rule 10 (block_code -> lists .)
    CHARTYPE        reduce using rule 10 (block_code -> lists .)
    STRINGTYPE      reduce using rule 10 (block_code -> lists .)
    FLOATTYPE       reduce using rule 10 (block_code -> lists .)
    DECIMALTYPE     reduce using rule 10 (block_code -> lists .)
    INTTYPE         reduce using rule 10 (block_code -> lists .)
    BOOLTYPE        reduce using rule 10 (block_code -> lists .)
    RKEY            reduce using rule 10 (block_code -> lists .)
    RETURN          reduce using rule 10 (block_code -> lists .)


state 92

    (11) block_code -> functions_list .

    PRINT           reduce using rule 11 (block_code -> functions_list .)
    READ            reduce using rule 11 (block_code -> functions_list .)
    VARIABLE        reduce using rule 11 (block_code -> functions_list .)
    QUEUE           reduce using rule 11 (block_code -> functions_list .)
    STACK           reduce using rule 11 (block_code -> functions_list .)
    CONST           reduce using rule 11 (block_code -> functions_list .)
    INTEGER         reduce using rule 11 (block_code -> functions_list .)
    FLOAT_NUMBER    reduce using rule 11 (block_code -> functions_list .)
    DECIMAL_NUMBER  reduce using rule 11 (block_code -> functions_list .)
    LIST            reduce using rule 11 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 11 (block_code -> functions_list .)
    FOR             reduce using rule 11 (block_code -> functions_list .)
    FOREACH         reduce using rule 11 (block_code -> functions_list .)
    TRY             reduce using rule 11 (block_code -> functions_list .)
    WHILE           reduce using rule 11 (block_code -> functions_list .)
    DO              reduce using rule 11 (block_code -> functions_list .)
    PUBLIC          reduce using rule 11 (block_code -> functions_list .)
    PRIVATE         reduce using rule 11 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 11 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 11 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 11 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 11 (block_code -> functions_list .)
    INTTYPE         reduce using rule 11 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 11 (block_code -> functions_list .)
    RKEY            reduce using rule 11 (block_code -> functions_list .)
    RETURN          reduce using rule 11 (block_code -> functions_list .)


state 93

    (12) block_code -> dict_estruct .

    PRINT           reduce using rule 12 (block_code -> dict_estruct .)
    READ            reduce using rule 12 (block_code -> dict_estruct .)
    VARIABLE        reduce using rule 12 (block_code -> dict_estruct .)
    QUEUE           reduce using rule 12 (block_code -> dict_estruct .)
    STACK           reduce using rule 12 (block_code -> dict_estruct .)
    CONST           reduce using rule 12 (block_code -> dict_estruct .)
    INTEGER         reduce using rule 12 (block_code -> dict_estruct .)
    FLOAT_NUMBER    reduce using rule 12 (block_code -> dict_estruct .)
    DECIMAL_NUMBER  reduce using rule 12 (block_code -> dict_estruct .)
    LIST            reduce using rule 12 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 12 (block_code -> dict_estruct .)
    FOR             reduce using rule 12 (block_code -> dict_estruct .)
    FOREACH         reduce using rule 12 (block_code -> dict_estruct .)
    TRY             reduce using rule 12 (block_code -> dict_estruct .)
    WHILE           reduce using rule 12 (block_code -> dict_estruct .)
    DO              reduce using rule 12 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 12 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 12 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 12 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 12 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 12 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 12 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 12 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 12 (block_code -> dict_estruct .)
    RKEY            reduce using rule 12 (block_code -> dict_estruct .)
    RETURN          reduce using rule 12 (block_code -> dict_estruct .)


state 94

    (13) block_code -> functions_dict .

    PRINT           reduce using rule 13 (block_code -> functions_dict .)
    READ            reduce using rule 13 (block_code -> functions_dict .)
    VARIABLE        reduce using rule 13 (block_code -> functions_dict .)
    QUEUE           reduce using rule 13 (block_code -> functions_dict .)
    STACK           reduce using rule 13 (block_code -> functions_dict .)
    CONST           reduce using rule 13 (block_code -> functions_dict .)
    INTEGER         reduce using rule 13 (block_code -> functions_dict .)
    FLOAT_NUMBER    reduce using rule 13 (block_code -> functions_dict .)
    DECIMAL_NUMBER  reduce using rule 13 (block_code -> functions_dict .)
    LIST            reduce using rule 13 (block_code -> functions_dict .)
    DICTIONARY      reduce using rule 13 (block_code -> functions_dict .)
    FOR             reduce using rule 13 (block_code -> functions_dict .)
    FOREACH         reduce using rule 13 (block_code -> functions_dict .)
    TRY             reduce using rule 13 (block_code -> functions_dict .)
    WHILE           reduce using rule 13 (block_code -> functions_dict .)
    DO              reduce using rule 13 (block_code -> functions_dict .)
    PUBLIC          reduce using rule 13 (block_code -> functions_dict .)
    PRIVATE         reduce using rule 13 (block_code -> functions_dict .)
    CHARTYPE        reduce using rule 13 (block_code -> functions_dict .)
    STRINGTYPE      reduce using rule 13 (block_code -> functions_dict .)
    FLOATTYPE       reduce using rule 13 (block_code -> functions_dict .)
    DECIMALTYPE     reduce using rule 13 (block_code -> functions_dict .)
    INTTYPE         reduce using rule 13 (block_code -> functions_dict .)
    BOOLTYPE        reduce using rule 13 (block_code -> functions_dict .)
    RKEY            reduce using rule 13 (block_code -> functions_dict .)
    RETURN          reduce using rule 13 (block_code -> functions_dict .)


state 95

    (14) block_code -> queue_struct .

    PRINT           reduce using rule 14 (block_code -> queue_struct .)
    READ            reduce using rule 14 (block_code -> queue_struct .)
    VARIABLE        reduce using rule 14 (block_code -> queue_struct .)
    QUEUE           reduce using rule 14 (block_code -> queue_struct .)
    STACK           reduce using rule 14 (block_code -> queue_struct .)
    CONST           reduce using rule 14 (block_code -> queue_struct .)
    INTEGER         reduce using rule 14 (block_code -> queue_struct .)
    FLOAT_NUMBER    reduce using rule 14 (block_code -> queue_struct .)
    DECIMAL_NUMBER  reduce using rule 14 (block_code -> queue_struct .)
    LIST            reduce using rule 14 (block_code -> queue_struct .)
    DICTIONARY      reduce using rule 14 (block_code -> queue_struct .)
    FOR             reduce using rule 14 (block_code -> queue_struct .)
    FOREACH         reduce using rule 14 (block_code -> queue_struct .)
    TRY             reduce using rule 14 (block_code -> queue_struct .)
    WHILE           reduce using rule 14 (block_code -> queue_struct .)
    DO              reduce using rule 14 (block_code -> queue_struct .)
    PUBLIC          reduce using rule 14 (block_code -> queue_struct .)
    PRIVATE         reduce using rule 14 (block_code -> queue_struct .)
    CHARTYPE        reduce using rule 14 (block_code -> queue_struct .)
    STRINGTYPE      reduce using rule 14 (block_code -> queue_struct .)
    FLOATTYPE       reduce using rule 14 (block_code -> queue_struct .)
    DECIMALTYPE     reduce using rule 14 (block_code -> queue_struct .)
    INTTYPE         reduce using rule 14 (block_code -> queue_struct .)
    BOOLTYPE        reduce using rule 14 (block_code -> queue_struct .)
    RKEY            reduce using rule 14 (block_code -> queue_struct .)
    RETURN          reduce using rule 14 (block_code -> queue_struct .)


state 96

    (15) block_code -> functions_queue .

    PRINT           reduce using rule 15 (block_code -> functions_queue .)
    READ            reduce using rule 15 (block_code -> functions_queue .)
    VARIABLE        reduce using rule 15 (block_code -> functions_queue .)
    QUEUE           reduce using rule 15 (block_code -> functions_queue .)
    STACK           reduce using rule 15 (block_code -> functions_queue .)
    CONST           reduce using rule 15 (block_code -> functions_queue .)
    INTEGER         reduce using rule 15 (block_code -> functions_queue .)
    FLOAT_NUMBER    reduce using rule 15 (block_code -> functions_queue .)
    DECIMAL_NUMBER  reduce using rule 15 (block_code -> functions_queue .)
    LIST            reduce using rule 15 (block_code -> functions_queue .)
    DICTIONARY      reduce using rule 15 (block_code -> functions_queue .)
    FOR             reduce using rule 15 (block_code -> functions_queue .)
    FOREACH         reduce using rule 15 (block_code -> functions_queue .)
    TRY             reduce using rule 15 (block_code -> functions_queue .)
    WHILE           reduce using rule 15 (block_code -> functions_queue .)
    DO              reduce using rule 15 (block_code -> functions_queue .)
    PUBLIC          reduce using rule 15 (block_code -> functions_queue .)
    PRIVATE         reduce using rule 15 (block_code -> functions_queue .)
    CHARTYPE        reduce using rule 15 (block_code -> functions_queue .)
    STRINGTYPE      reduce using rule 15 (block_code -> functions_queue .)
    FLOATTYPE       reduce using rule 15 (block_code -> functions_queue .)
    DECIMALTYPE     reduce using rule 15 (block_code -> functions_queue .)
    INTTYPE         reduce using rule 15 (block_code -> functions_queue .)
    BOOLTYPE        reduce using rule 15 (block_code -> functions_queue .)
    RKEY            reduce using rule 15 (block_code -> functions_queue .)
    RETURN          reduce using rule 15 (block_code -> functions_queue .)


state 97

    (16) block_code -> stack_struct .

    PRINT           reduce using rule 16 (block_code -> stack_struct .)
    READ            reduce using rule 16 (block_code -> stack_struct .)
    VARIABLE        reduce using rule 16 (block_code -> stack_struct .)
    QUEUE           reduce using rule 16 (block_code -> stack_struct .)
    STACK           reduce using rule 16 (block_code -> stack_struct .)
    CONST           reduce using rule 16 (block_code -> stack_struct .)
    INTEGER         reduce using rule 16 (block_code -> stack_struct .)
    FLOAT_NUMBER    reduce using rule 16 (block_code -> stack_struct .)
    DECIMAL_NUMBER  reduce using rule 16 (block_code -> stack_struct .)
    LIST            reduce using rule 16 (block_code -> stack_struct .)
    DICTIONARY      reduce using rule 16 (block_code -> stack_struct .)
    FOR             reduce using rule 16 (block_code -> stack_struct .)
    FOREACH         reduce using rule 16 (block_code -> stack_struct .)
    TRY             reduce using rule 16 (block_code -> stack_struct .)
    WHILE           reduce using rule 16 (block_code -> stack_struct .)
    DO              reduce using rule 16 (block_code -> stack_struct .)
    PUBLIC          reduce using rule 16 (block_code -> stack_struct .)
    PRIVATE         reduce using rule 16 (block_code -> stack_struct .)
    CHARTYPE        reduce using rule 16 (block_code -> stack_struct .)
    STRINGTYPE      reduce using rule 16 (block_code -> stack_struct .)
    FLOATTYPE       reduce using rule 16 (block_code -> stack_struct .)
    DECIMALTYPE     reduce using rule 16 (block_code -> stack_struct .)
    INTTYPE         reduce using rule 16 (block_code -> stack_struct .)
    BOOLTYPE        reduce using rule 16 (block_code -> stack_struct .)
    RKEY            reduce using rule 16 (block_code -> stack_struct .)
    RETURN          reduce using rule 16 (block_code -> stack_struct .)


state 98

    (17) block_code -> functions_stack .

    PRINT           reduce using rule 17 (block_code -> functions_stack .)
    READ            reduce using rule 17 (block_code -> functions_stack .)
    VARIABLE        reduce using rule 17 (block_code -> functions_stack .)
    QUEUE           reduce using rule 17 (block_code -> functions_stack .)
    STACK           reduce using rule 17 (block_code -> functions_stack .)
    CONST           reduce using rule 17 (block_code -> functions_stack .)
    INTEGER         reduce using rule 17 (block_code -> functions_stack .)
    FLOAT_NUMBER    reduce using rule 17 (block_code -> functions_stack .)
    DECIMAL_NUMBER  reduce using rule 17 (block_code -> functions_stack .)
    LIST            reduce using rule 17 (block_code -> functions_stack .)
    DICTIONARY      reduce using rule 17 (block_code -> functions_stack .)
    FOR             reduce using rule 17 (block_code -> functions_stack .)
    FOREACH         reduce using rule 17 (block_code -> functions_stack .)
    TRY             reduce using rule 17 (block_code -> functions_stack .)
    WHILE           reduce using rule 17 (block_code -> functions_stack .)
    DO              reduce using rule 17 (block_code -> functions_stack .)
    PUBLIC          reduce using rule 17 (block_code -> functions_stack .)
    PRIVATE         reduce using rule 17 (block_code -> functions_stack .)
    CHARTYPE        reduce using rule 17 (block_code -> functions_stack .)
    STRINGTYPE      reduce using rule 17 (block_code -> functions_stack .)
    FLOATTYPE       reduce using rule 17 (block_code -> functions_stack .)
    DECIMALTYPE     reduce using rule 17 (block_code -> functions_stack .)
    INTTYPE         reduce using rule 17 (block_code -> functions_stack .)
    BOOLTYPE        reduce using rule 17 (block_code -> functions_stack .)
    RKEY            reduce using rule 17 (block_code -> functions_stack .)
    RETURN          reduce using rule 17 (block_code -> functions_stack .)


state 99

    (18) block_code -> block_for .

    PRINT           reduce using rule 18 (block_code -> block_for .)
    READ            reduce using rule 18 (block_code -> block_for .)
    VARIABLE        reduce using rule 18 (block_code -> block_for .)
    QUEUE           reduce using rule 18 (block_code -> block_for .)
    STACK           reduce using rule 18 (block_code -> block_for .)
    CONST           reduce using rule 18 (block_code -> block_for .)
    INTEGER         reduce using rule 18 (block_code -> block_for .)
    FLOAT_NUMBER    reduce using rule 18 (block_code -> block_for .)
    DECIMAL_NUMBER  reduce using rule 18 (block_code -> block_for .)
    LIST            reduce using rule 18 (block_code -> block_for .)
    DICTIONARY      reduce using rule 18 (block_code -> block_for .)
    FOR             reduce using rule 18 (block_code -> block_for .)
    FOREACH         reduce using rule 18 (block_code -> block_for .)
    TRY             reduce using rule 18 (block_code -> block_for .)
    WHILE           reduce using rule 18 (block_code -> block_for .)
    DO              reduce using rule 18 (block_code -> block_for .)
    PUBLIC          reduce using rule 18 (block_code -> block_for .)
    PRIVATE         reduce using rule 18 (block_code -> block_for .)
    CHARTYPE        reduce using rule 18 (block_code -> block_for .)
    STRINGTYPE      reduce using rule 18 (block_code -> block_for .)
    FLOATTYPE       reduce using rule 18 (block_code -> block_for .)
    DECIMALTYPE     reduce using rule 18 (block_code -> block_for .)
    INTTYPE         reduce using rule 18 (block_code -> block_for .)
    BOOLTYPE        reduce using rule 18 (block_code -> block_for .)
    RKEY            reduce using rule 18 (block_code -> block_for .)
    RETURN          reduce using rule 18 (block_code -> block_for .)


state 100

    (19) block_code -> block_try_catch .

    PRINT           reduce using rule 19 (block_code -> block_try_catch .)
    READ            reduce using rule 19 (block_code -> block_try_catch .)
    VARIABLE        reduce using rule 19 (block_code -> block_try_catch .)
    QUEUE           reduce using rule 19 (block_code -> block_try_catch .)
    STACK           reduce using rule 19 (block_code -> block_try_catch .)
    CONST           reduce using rule 19 (block_code -> block_try_catch .)
    INTEGER         reduce using rule 19 (block_code -> block_try_catch .)
    FLOAT_NUMBER    reduce using rule 19 (block_code -> block_try_catch .)
    DECIMAL_NUMBER  reduce using rule 19 (block_code -> block_try_catch .)
    LIST            reduce using rule 19 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 19 (block_code -> block_try_catch .)
    FOR             reduce using rule 19 (block_code -> block_try_catch .)
    FOREACH         reduce using rule 19 (block_code -> block_try_catch .)
    TRY             reduce using rule 19 (block_code -> block_try_catch .)
    WHILE           reduce using rule 19 (block_code -> block_try_catch .)
    DO              reduce using rule 19 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 19 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 19 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 19 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 19 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 19 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 19 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 19 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 19 (block_code -> block_try_catch .)
    RKEY            reduce using rule 19 (block_code -> block_try_catch .)
    RETURN          reduce using rule 19 (block_code -> block_try_catch .)


state 101

    (20) block_code -> block_while .

    PRINT           reduce using rule 20 (block_code -> block_while .)
    READ            reduce using rule 20 (block_code -> block_while .)
    VARIABLE        reduce using rule 20 (block_code -> block_while .)
    QUEUE           reduce using rule 20 (block_code -> block_while .)
    STACK           reduce using rule 20 (block_code -> block_while .)
    CONST           reduce using rule 20 (block_code -> block_while .)
    INTEGER         reduce using rule 20 (block_code -> block_while .)
    FLOAT_NUMBER    reduce using rule 20 (block_code -> block_while .)
    DECIMAL_NUMBER  reduce using rule 20 (block_code -> block_while .)
    LIST            reduce using rule 20 (block_code -> block_while .)
    DICTIONARY      reduce using rule 20 (block_code -> block_while .)
    FOR             reduce using rule 20 (block_code -> block_while .)
    FOREACH         reduce using rule 20 (block_code -> block_while .)
    TRY             reduce using rule 20 (block_code -> block_while .)
    WHILE           reduce using rule 20 (block_code -> block_while .)
    DO              reduce using rule 20 (block_code -> block_while .)
    PUBLIC          reduce using rule 20 (block_code -> block_while .)
    PRIVATE         reduce using rule 20 (block_code -> block_while .)
    CHARTYPE        reduce using rule 20 (block_code -> block_while .)
    STRINGTYPE      reduce using rule 20 (block_code -> block_while .)
    FLOATTYPE       reduce using rule 20 (block_code -> block_while .)
    DECIMALTYPE     reduce using rule 20 (block_code -> block_while .)
    INTTYPE         reduce using rule 20 (block_code -> block_while .)
    BOOLTYPE        reduce using rule 20 (block_code -> block_while .)
    RKEY            reduce using rule 20 (block_code -> block_while .)
    RETURN          reduce using rule 20 (block_code -> block_while .)


state 102

    (71) def_const_or_var -> constant_assignation .

    PRINT           reduce using rule 71 (def_const_or_var -> constant_assignation .)
    READ            reduce using rule 71 (def_const_or_var -> constant_assignation .)
    VARIABLE        reduce using rule 71 (def_const_or_var -> constant_assignation .)
    QUEUE           reduce using rule 71 (def_const_or_var -> constant_assignation .)
    STACK           reduce using rule 71 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 71 (def_const_or_var -> constant_assignation .)
    INTEGER         reduce using rule 71 (def_const_or_var -> constant_assignation .)
    FLOAT_NUMBER    reduce using rule 71 (def_const_or_var -> constant_assignation .)
    DECIMAL_NUMBER  reduce using rule 71 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 71 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 71 (def_const_or_var -> constant_assignation .)
    FOR             reduce using rule 71 (def_const_or_var -> constant_assignation .)
    FOREACH         reduce using rule 71 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 71 (def_const_or_var -> constant_assignation .)
    WHILE           reduce using rule 71 (def_const_or_var -> constant_assignation .)
    DO              reduce using rule 71 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 71 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 71 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 71 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 71 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 71 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 71 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 71 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 71 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 71 (def_const_or_var -> constant_assignation .)
    RETURN          reduce using rule 71 (def_const_or_var -> constant_assignation .)


state 103

    (72) def_const_or_var -> variable_assignation .

    PRINT           reduce using rule 72 (def_const_or_var -> variable_assignation .)
    READ            reduce using rule 72 (def_const_or_var -> variable_assignation .)
    VARIABLE        reduce using rule 72 (def_const_or_var -> variable_assignation .)
    QUEUE           reduce using rule 72 (def_const_or_var -> variable_assignation .)
    STACK           reduce using rule 72 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 72 (def_const_or_var -> variable_assignation .)
    INTEGER         reduce using rule 72 (def_const_or_var -> variable_assignation .)
    FLOAT_NUMBER    reduce using rule 72 (def_const_or_var -> variable_assignation .)
    DECIMAL_NUMBER  reduce using rule 72 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 72 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 72 (def_const_or_var -> variable_assignation .)
    FOR             reduce using rule 72 (def_const_or_var -> variable_assignation .)
    FOREACH         reduce using rule 72 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 72 (def_const_or_var -> variable_assignation .)
    WHILE           reduce using rule 72 (def_const_or_var -> variable_assignation .)
    DO              reduce using rule 72 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 72 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 72 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 72 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 72 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 72 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 72 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 72 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 72 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 72 (def_const_or_var -> variable_assignation .)
    RETURN          reduce using rule 72 (def_const_or_var -> variable_assignation .)


state 104

    (73) def_const_or_var -> late_initialization .

    PRINT           reduce using rule 73 (def_const_or_var -> late_initialization .)
    READ            reduce using rule 73 (def_const_or_var -> late_initialization .)
    VARIABLE        reduce using rule 73 (def_const_or_var -> late_initialization .)
    QUEUE           reduce using rule 73 (def_const_or_var -> late_initialization .)
    STACK           reduce using rule 73 (def_const_or_var -> late_initialization .)
    CONST           reduce using rule 73 (def_const_or_var -> late_initialization .)
    INTEGER         reduce using rule 73 (def_const_or_var -> late_initialization .)
    FLOAT_NUMBER    reduce using rule 73 (def_const_or_var -> late_initialization .)
    DECIMAL_NUMBER  reduce using rule 73 (def_const_or_var -> late_initialization .)
    LIST            reduce using rule 73 (def_const_or_var -> late_initialization .)
    DICTIONARY      reduce using rule 73 (def_const_or_var -> late_initialization .)
    FOR             reduce using rule 73 (def_const_or_var -> late_initialization .)
    FOREACH         reduce using rule 73 (def_const_or_var -> late_initialization .)
    TRY             reduce using rule 73 (def_const_or_var -> late_initialization .)
    WHILE           reduce using rule 73 (def_const_or_var -> late_initialization .)
    DO              reduce using rule 73 (def_const_or_var -> late_initialization .)
    PUBLIC          reduce using rule 73 (def_const_or_var -> late_initialization .)
    PRIVATE         reduce using rule 73 (def_const_or_var -> late_initialization .)
    CHARTYPE        reduce using rule 73 (def_const_or_var -> late_initialization .)
    STRINGTYPE      reduce using rule 73 (def_const_or_var -> late_initialization .)
    FLOATTYPE       reduce using rule 73 (def_const_or_var -> late_initialization .)
    DECIMALTYPE     reduce using rule 73 (def_const_or_var -> late_initialization .)
    INTTYPE         reduce using rule 73 (def_const_or_var -> late_initialization .)
    BOOLTYPE        reduce using rule 73 (def_const_or_var -> late_initialization .)
    RKEY            reduce using rule 73 (def_const_or_var -> late_initialization .)
    RETURN          reduce using rule 73 (def_const_or_var -> late_initialization .)


state 105

    (28) print_data -> PRINT . LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> PRINT . LPARENT VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 160


state 106

    (49) arithmetic_operation -> VARIABLE .
    (51) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (53) logic_operation -> VARIABLE . logic_operator INTEGER
    (147) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (131) dict_func_put -> VARIABLE . DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> VARIABLE . DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> VARIABLE . DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> VARIABLE . DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> VARIABLE . DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> VARIABLE . DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> VARIABLE . DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> VARIABLE . DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> VARIABLE . DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (85) assignation_key_value -> VARIABLE . ASSIGNATION value
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT
    (54) logic_operator -> . GREATER_THAN
    (55) logic_operator -> . SMALLER_THAN
    (56) logic_operator -> . EQUAL_COMPARATION
    (57) logic_operator -> . INEQUALITY
    (58) logic_operator -> . GREATER_THAN_OR_EQUAL
    (59) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (60) logic_operator -> . LOGICAND
    (61) logic_operator -> . LOGICOR
    (62) logic_operator -> . LOGICNOT
    (63) logic_operator -> . LOGICXOR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    QUEUE           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    STACK           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    RETURN          reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DOT             shift and go to state 163
    ASSIGNATION     shift and go to state 164
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169
    GREATER_THAN    shift and go to state 170
    SMALLER_THAN    shift and go to state 171
    EQUAL_COMPARATION shift and go to state 172
    INEQUALITY      shift and go to state 173
    GREATER_THAN_OR_EQUAL shift and go to state 174
    SMALLER_THAN_OR_EQUAL shift and go to state 175
    LOGICAND        shift and go to state 176
    LOGICOR         shift and go to state 177
    LOGICNOT        shift and go to state 178
    LOGICXOR        shift and go to state 179

  ! PLUS            [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 161
    logic_operator                 shift and go to state 162

state 107

    (30) read_data -> READ . LPARENT RPARENT DOTANDCOMMA
    (86) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 180


state 108

    (48) arithmetic_operation -> value_numeric .
    (50) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (52) logic_operation -> value_numeric . logic_operator INTEGER
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT
    (54) logic_operator -> . GREATER_THAN
    (55) logic_operator -> . SMALLER_THAN
    (56) logic_operator -> . EQUAL_COMPARATION
    (57) logic_operator -> . INEQUALITY
    (58) logic_operator -> . GREATER_THAN_OR_EQUAL
    (59) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (60) logic_operator -> . LOGICAND
    (61) logic_operator -> . LOGICOR
    (62) logic_operator -> . LOGICNOT
    (63) logic_operator -> . LOGICXOR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 48 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    QUEUE           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    STACK           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 48 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 48 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 48 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 48 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 48 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 48 (arithmetic_operation -> value_numeric .)
    RETURN          reduce using rule 48 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169
    GREATER_THAN    shift and go to state 170
    SMALLER_THAN    shift and go to state 171
    EQUAL_COMPARATION shift and go to state 172
    INEQUALITY      shift and go to state 173
    GREATER_THAN_OR_EQUAL shift and go to state 174
    SMALLER_THAN_OR_EQUAL shift and go to state 175
    LOGICAND        shift and go to state 176
    LOGICOR         shift and go to state 177
    LOGICNOT        shift and go to state 178
    LOGICXOR        shift and go to state 179

  ! PLUS            [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 181
    logic_operator                 shift and go to state 182

state 109

    (44) value_numeric -> INTEGER .

    PRINT           reduce using rule 44 (value_numeric -> INTEGER .)
    READ            reduce using rule 44 (value_numeric -> INTEGER .)
    VARIABLE        reduce using rule 44 (value_numeric -> INTEGER .)
    QUEUE           reduce using rule 44 (value_numeric -> INTEGER .)
    STACK           reduce using rule 44 (value_numeric -> INTEGER .)
    CONST           reduce using rule 44 (value_numeric -> INTEGER .)
    INTEGER         reduce using rule 44 (value_numeric -> INTEGER .)
    FLOAT_NUMBER    reduce using rule 44 (value_numeric -> INTEGER .)
    DECIMAL_NUMBER  reduce using rule 44 (value_numeric -> INTEGER .)
    LIST            reduce using rule 44 (value_numeric -> INTEGER .)
    DICTIONARY      reduce using rule 44 (value_numeric -> INTEGER .)
    FOR             reduce using rule 44 (value_numeric -> INTEGER .)
    FOREACH         reduce using rule 44 (value_numeric -> INTEGER .)
    TRY             reduce using rule 44 (value_numeric -> INTEGER .)
    WHILE           reduce using rule 44 (value_numeric -> INTEGER .)
    DO              reduce using rule 44 (value_numeric -> INTEGER .)
    PUBLIC          reduce using rule 44 (value_numeric -> INTEGER .)
    PRIVATE         reduce using rule 44 (value_numeric -> INTEGER .)
    CHARTYPE        reduce using rule 44 (value_numeric -> INTEGER .)
    STRINGTYPE      reduce using rule 44 (value_numeric -> INTEGER .)
    FLOATTYPE       reduce using rule 44 (value_numeric -> INTEGER .)
    DECIMALTYPE     reduce using rule 44 (value_numeric -> INTEGER .)
    INTTYPE         reduce using rule 44 (value_numeric -> INTEGER .)
    BOOLTYPE        reduce using rule 44 (value_numeric -> INTEGER .)
    RKEY            reduce using rule 44 (value_numeric -> INTEGER .)
    PLUS            reduce using rule 44 (value_numeric -> INTEGER .)
    MINUS           reduce using rule 44 (value_numeric -> INTEGER .)
    TIMES           reduce using rule 44 (value_numeric -> INTEGER .)
    DIVIDE          reduce using rule 44 (value_numeric -> INTEGER .)
    PERCENT         reduce using rule 44 (value_numeric -> INTEGER .)
    GREATER_THAN    reduce using rule 44 (value_numeric -> INTEGER .)
    SMALLER_THAN    reduce using rule 44 (value_numeric -> INTEGER .)
    EQUAL_COMPARATION reduce using rule 44 (value_numeric -> INTEGER .)
    INEQUALITY      reduce using rule 44 (value_numeric -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 44 (value_numeric -> INTEGER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 44 (value_numeric -> INTEGER .)
    LOGICAND        reduce using rule 44 (value_numeric -> INTEGER .)
    LOGICOR         reduce using rule 44 (value_numeric -> INTEGER .)
    LOGICNOT        reduce using rule 44 (value_numeric -> INTEGER .)
    LOGICXOR        reduce using rule 44 (value_numeric -> INTEGER .)
    RETURN          reduce using rule 44 (value_numeric -> INTEGER .)
    DOTANDCOMMA     reduce using rule 44 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 44 (value_numeric -> INTEGER .)
    RPARENT         reduce using rule 44 (value_numeric -> INTEGER .)


state 110

    (133) lists -> list_empty .

    PRINT           reduce using rule 133 (lists -> list_empty .)
    READ            reduce using rule 133 (lists -> list_empty .)
    VARIABLE        reduce using rule 133 (lists -> list_empty .)
    QUEUE           reduce using rule 133 (lists -> list_empty .)
    STACK           reduce using rule 133 (lists -> list_empty .)
    CONST           reduce using rule 133 (lists -> list_empty .)
    INTEGER         reduce using rule 133 (lists -> list_empty .)
    FLOAT_NUMBER    reduce using rule 133 (lists -> list_empty .)
    DECIMAL_NUMBER  reduce using rule 133 (lists -> list_empty .)
    LIST            reduce using rule 133 (lists -> list_empty .)
    DICTIONARY      reduce using rule 133 (lists -> list_empty .)
    FOR             reduce using rule 133 (lists -> list_empty .)
    FOREACH         reduce using rule 133 (lists -> list_empty .)
    TRY             reduce using rule 133 (lists -> list_empty .)
    WHILE           reduce using rule 133 (lists -> list_empty .)
    DO              reduce using rule 133 (lists -> list_empty .)
    PUBLIC          reduce using rule 133 (lists -> list_empty .)
    PRIVATE         reduce using rule 133 (lists -> list_empty .)
    CHARTYPE        reduce using rule 133 (lists -> list_empty .)
    STRINGTYPE      reduce using rule 133 (lists -> list_empty .)
    FLOATTYPE       reduce using rule 133 (lists -> list_empty .)
    DECIMALTYPE     reduce using rule 133 (lists -> list_empty .)
    INTTYPE         reduce using rule 133 (lists -> list_empty .)
    BOOLTYPE        reduce using rule 133 (lists -> list_empty .)
    RKEY            reduce using rule 133 (lists -> list_empty .)
    RETURN          reduce using rule 133 (lists -> list_empty .)


state 111

    (134) lists -> list_full .

    PRINT           reduce using rule 134 (lists -> list_full .)
    READ            reduce using rule 134 (lists -> list_full .)
    VARIABLE        reduce using rule 134 (lists -> list_full .)
    QUEUE           reduce using rule 134 (lists -> list_full .)
    STACK           reduce using rule 134 (lists -> list_full .)
    CONST           reduce using rule 134 (lists -> list_full .)
    INTEGER         reduce using rule 134 (lists -> list_full .)
    FLOAT_NUMBER    reduce using rule 134 (lists -> list_full .)
    DECIMAL_NUMBER  reduce using rule 134 (lists -> list_full .)
    LIST            reduce using rule 134 (lists -> list_full .)
    DICTIONARY      reduce using rule 134 (lists -> list_full .)
    FOR             reduce using rule 134 (lists -> list_full .)
    FOREACH         reduce using rule 134 (lists -> list_full .)
    TRY             reduce using rule 134 (lists -> list_full .)
    WHILE           reduce using rule 134 (lists -> list_full .)
    DO              reduce using rule 134 (lists -> list_full .)
    PUBLIC          reduce using rule 134 (lists -> list_full .)
    PRIVATE         reduce using rule 134 (lists -> list_full .)
    CHARTYPE        reduce using rule 134 (lists -> list_full .)
    STRINGTYPE      reduce using rule 134 (lists -> list_full .)
    FLOATTYPE       reduce using rule 134 (lists -> list_full .)
    DECIMALTYPE     reduce using rule 134 (lists -> list_full .)
    INTTYPE         reduce using rule 134 (lists -> list_full .)
    BOOLTYPE        reduce using rule 134 (lists -> list_full .)
    RKEY            reduce using rule 134 (lists -> list_full .)
    RETURN          reduce using rule 134 (lists -> list_full .)


state 112

    (143) functions_list -> list_func_clear .

    PRINT           reduce using rule 143 (functions_list -> list_func_clear .)
    READ            reduce using rule 143 (functions_list -> list_func_clear .)
    VARIABLE        reduce using rule 143 (functions_list -> list_func_clear .)
    QUEUE           reduce using rule 143 (functions_list -> list_func_clear .)
    STACK           reduce using rule 143 (functions_list -> list_func_clear .)
    CONST           reduce using rule 143 (functions_list -> list_func_clear .)
    INTEGER         reduce using rule 143 (functions_list -> list_func_clear .)
    FLOAT_NUMBER    reduce using rule 143 (functions_list -> list_func_clear .)
    DECIMAL_NUMBER  reduce using rule 143 (functions_list -> list_func_clear .)
    LIST            reduce using rule 143 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 143 (functions_list -> list_func_clear .)
    FOR             reduce using rule 143 (functions_list -> list_func_clear .)
    FOREACH         reduce using rule 143 (functions_list -> list_func_clear .)
    TRY             reduce using rule 143 (functions_list -> list_func_clear .)
    WHILE           reduce using rule 143 (functions_list -> list_func_clear .)
    DO              reduce using rule 143 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 143 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 143 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 143 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 143 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 143 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 143 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 143 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 143 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 143 (functions_list -> list_func_clear .)
    RETURN          reduce using rule 143 (functions_list -> list_func_clear .)


state 113

    (144) functions_list -> list_func_count .

    PRINT           reduce using rule 144 (functions_list -> list_func_count .)
    READ            reduce using rule 144 (functions_list -> list_func_count .)
    VARIABLE        reduce using rule 144 (functions_list -> list_func_count .)
    QUEUE           reduce using rule 144 (functions_list -> list_func_count .)
    STACK           reduce using rule 144 (functions_list -> list_func_count .)
    CONST           reduce using rule 144 (functions_list -> list_func_count .)
    INTEGER         reduce using rule 144 (functions_list -> list_func_count .)
    FLOAT_NUMBER    reduce using rule 144 (functions_list -> list_func_count .)
    DECIMAL_NUMBER  reduce using rule 144 (functions_list -> list_func_count .)
    LIST            reduce using rule 144 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 144 (functions_list -> list_func_count .)
    FOR             reduce using rule 144 (functions_list -> list_func_count .)
    FOREACH         reduce using rule 144 (functions_list -> list_func_count .)
    TRY             reduce using rule 144 (functions_list -> list_func_count .)
    WHILE           reduce using rule 144 (functions_list -> list_func_count .)
    DO              reduce using rule 144 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 144 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 144 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 144 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 144 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 144 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 144 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 144 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 144 (functions_list -> list_func_count .)
    RKEY            reduce using rule 144 (functions_list -> list_func_count .)
    RETURN          reduce using rule 144 (functions_list -> list_func_count .)


state 114

    (145) functions_list -> list_func_add .

    PRINT           reduce using rule 145 (functions_list -> list_func_add .)
    READ            reduce using rule 145 (functions_list -> list_func_add .)
    VARIABLE        reduce using rule 145 (functions_list -> list_func_add .)
    QUEUE           reduce using rule 145 (functions_list -> list_func_add .)
    STACK           reduce using rule 145 (functions_list -> list_func_add .)
    CONST           reduce using rule 145 (functions_list -> list_func_add .)
    INTEGER         reduce using rule 145 (functions_list -> list_func_add .)
    FLOAT_NUMBER    reduce using rule 145 (functions_list -> list_func_add .)
    DECIMAL_NUMBER  reduce using rule 145 (functions_list -> list_func_add .)
    LIST            reduce using rule 145 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 145 (functions_list -> list_func_add .)
    FOR             reduce using rule 145 (functions_list -> list_func_add .)
    FOREACH         reduce using rule 145 (functions_list -> list_func_add .)
    TRY             reduce using rule 145 (functions_list -> list_func_add .)
    WHILE           reduce using rule 145 (functions_list -> list_func_add .)
    DO              reduce using rule 145 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 145 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 145 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 145 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 145 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 145 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 145 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 145 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 145 (functions_list -> list_func_add .)
    RKEY            reduce using rule 145 (functions_list -> list_func_add .)
    RETURN          reduce using rule 145 (functions_list -> list_func_add .)


state 115

    (146) functions_list -> list_func_removeat .

    PRINT           reduce using rule 146 (functions_list -> list_func_removeat .)
    READ            reduce using rule 146 (functions_list -> list_func_removeat .)
    VARIABLE        reduce using rule 146 (functions_list -> list_func_removeat .)
    QUEUE           reduce using rule 146 (functions_list -> list_func_removeat .)
    STACK           reduce using rule 146 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 146 (functions_list -> list_func_removeat .)
    INTEGER         reduce using rule 146 (functions_list -> list_func_removeat .)
    FLOAT_NUMBER    reduce using rule 146 (functions_list -> list_func_removeat .)
    DECIMAL_NUMBER  reduce using rule 146 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 146 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 146 (functions_list -> list_func_removeat .)
    FOR             reduce using rule 146 (functions_list -> list_func_removeat .)
    FOREACH         reduce using rule 146 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 146 (functions_list -> list_func_removeat .)
    WHILE           reduce using rule 146 (functions_list -> list_func_removeat .)
    DO              reduce using rule 146 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 146 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 146 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 146 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 146 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 146 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 146 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 146 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 146 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 146 (functions_list -> list_func_removeat .)
    RETURN          reduce using rule 146 (functions_list -> list_func_removeat .)


state 116

    (120) dict_estruct -> dict_empty .

    PRINT           reduce using rule 120 (dict_estruct -> dict_empty .)
    READ            reduce using rule 120 (dict_estruct -> dict_empty .)
    VARIABLE        reduce using rule 120 (dict_estruct -> dict_empty .)
    QUEUE           reduce using rule 120 (dict_estruct -> dict_empty .)
    STACK           reduce using rule 120 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 120 (dict_estruct -> dict_empty .)
    INTEGER         reduce using rule 120 (dict_estruct -> dict_empty .)
    FLOAT_NUMBER    reduce using rule 120 (dict_estruct -> dict_empty .)
    DECIMAL_NUMBER  reduce using rule 120 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 120 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 120 (dict_estruct -> dict_empty .)
    FOR             reduce using rule 120 (dict_estruct -> dict_empty .)
    FOREACH         reduce using rule 120 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 120 (dict_estruct -> dict_empty .)
    WHILE           reduce using rule 120 (dict_estruct -> dict_empty .)
    DO              reduce using rule 120 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 120 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 120 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 120 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 120 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 120 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 120 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 120 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 120 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 120 (dict_estruct -> dict_empty .)
    RETURN          reduce using rule 120 (dict_estruct -> dict_empty .)


state 117

    (121) dict_estruct -> dict_full .

    PRINT           reduce using rule 121 (dict_estruct -> dict_full .)
    READ            reduce using rule 121 (dict_estruct -> dict_full .)
    VARIABLE        reduce using rule 121 (dict_estruct -> dict_full .)
    QUEUE           reduce using rule 121 (dict_estruct -> dict_full .)
    STACK           reduce using rule 121 (dict_estruct -> dict_full .)
    CONST           reduce using rule 121 (dict_estruct -> dict_full .)
    INTEGER         reduce using rule 121 (dict_estruct -> dict_full .)
    FLOAT_NUMBER    reduce using rule 121 (dict_estruct -> dict_full .)
    DECIMAL_NUMBER  reduce using rule 121 (dict_estruct -> dict_full .)
    LIST            reduce using rule 121 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 121 (dict_estruct -> dict_full .)
    FOR             reduce using rule 121 (dict_estruct -> dict_full .)
    FOREACH         reduce using rule 121 (dict_estruct -> dict_full .)
    TRY             reduce using rule 121 (dict_estruct -> dict_full .)
    WHILE           reduce using rule 121 (dict_estruct -> dict_full .)
    DO              reduce using rule 121 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 121 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 121 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 121 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 121 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 121 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 121 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 121 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 121 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 121 (dict_estruct -> dict_full .)
    RETURN          reduce using rule 121 (dict_estruct -> dict_full .)


state 118

    (129) functions_dict -> dict_func_put .

    PRINT           reduce using rule 129 (functions_dict -> dict_func_put .)
    READ            reduce using rule 129 (functions_dict -> dict_func_put .)
    VARIABLE        reduce using rule 129 (functions_dict -> dict_func_put .)
    QUEUE           reduce using rule 129 (functions_dict -> dict_func_put .)
    STACK           reduce using rule 129 (functions_dict -> dict_func_put .)
    CONST           reduce using rule 129 (functions_dict -> dict_func_put .)
    INTEGER         reduce using rule 129 (functions_dict -> dict_func_put .)
    FLOAT_NUMBER    reduce using rule 129 (functions_dict -> dict_func_put .)
    DECIMAL_NUMBER  reduce using rule 129 (functions_dict -> dict_func_put .)
    LIST            reduce using rule 129 (functions_dict -> dict_func_put .)
    DICTIONARY      reduce using rule 129 (functions_dict -> dict_func_put .)
    FOR             reduce using rule 129 (functions_dict -> dict_func_put .)
    FOREACH         reduce using rule 129 (functions_dict -> dict_func_put .)
    TRY             reduce using rule 129 (functions_dict -> dict_func_put .)
    WHILE           reduce using rule 129 (functions_dict -> dict_func_put .)
    DO              reduce using rule 129 (functions_dict -> dict_func_put .)
    PUBLIC          reduce using rule 129 (functions_dict -> dict_func_put .)
    PRIVATE         reduce using rule 129 (functions_dict -> dict_func_put .)
    CHARTYPE        reduce using rule 129 (functions_dict -> dict_func_put .)
    STRINGTYPE      reduce using rule 129 (functions_dict -> dict_func_put .)
    FLOATTYPE       reduce using rule 129 (functions_dict -> dict_func_put .)
    DECIMALTYPE     reduce using rule 129 (functions_dict -> dict_func_put .)
    INTTYPE         reduce using rule 129 (functions_dict -> dict_func_put .)
    BOOLTYPE        reduce using rule 129 (functions_dict -> dict_func_put .)
    RKEY            reduce using rule 129 (functions_dict -> dict_func_put .)
    RETURN          reduce using rule 129 (functions_dict -> dict_func_put .)


state 119

    (130) functions_dict -> dict_func_remove .

    PRINT           reduce using rule 130 (functions_dict -> dict_func_remove .)
    READ            reduce using rule 130 (functions_dict -> dict_func_remove .)
    VARIABLE        reduce using rule 130 (functions_dict -> dict_func_remove .)
    QUEUE           reduce using rule 130 (functions_dict -> dict_func_remove .)
    STACK           reduce using rule 130 (functions_dict -> dict_func_remove .)
    CONST           reduce using rule 130 (functions_dict -> dict_func_remove .)
    INTEGER         reduce using rule 130 (functions_dict -> dict_func_remove .)
    FLOAT_NUMBER    reduce using rule 130 (functions_dict -> dict_func_remove .)
    DECIMAL_NUMBER  reduce using rule 130 (functions_dict -> dict_func_remove .)
    LIST            reduce using rule 130 (functions_dict -> dict_func_remove .)
    DICTIONARY      reduce using rule 130 (functions_dict -> dict_func_remove .)
    FOR             reduce using rule 130 (functions_dict -> dict_func_remove .)
    FOREACH         reduce using rule 130 (functions_dict -> dict_func_remove .)
    TRY             reduce using rule 130 (functions_dict -> dict_func_remove .)
    WHILE           reduce using rule 130 (functions_dict -> dict_func_remove .)
    DO              reduce using rule 130 (functions_dict -> dict_func_remove .)
    PUBLIC          reduce using rule 130 (functions_dict -> dict_func_remove .)
    PRIVATE         reduce using rule 130 (functions_dict -> dict_func_remove .)
    CHARTYPE        reduce using rule 130 (functions_dict -> dict_func_remove .)
    STRINGTYPE      reduce using rule 130 (functions_dict -> dict_func_remove .)
    FLOATTYPE       reduce using rule 130 (functions_dict -> dict_func_remove .)
    DECIMALTYPE     reduce using rule 130 (functions_dict -> dict_func_remove .)
    INTTYPE         reduce using rule 130 (functions_dict -> dict_func_remove .)
    BOOLTYPE        reduce using rule 130 (functions_dict -> dict_func_remove .)
    RKEY            reduce using rule 130 (functions_dict -> dict_func_remove .)
    RETURN          reduce using rule 130 (functions_dict -> dict_func_remove .)


state 120

    (162) queue_struct -> QUEUE . SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    SMALLER_THAN    shift and go to state 183


state 121

    (79) variable_assignation -> data_type . assignation_key_value DOTANDCOMMA
    (81) variable_assignation -> data_type . assignation_key_value_multiple DOTANDCOMMA
    (83) late_initialization -> data_type . VARIABLE DOTANDCOMMA
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (87) assignation_key_value_multiple -> . assignation_key_value
    (88) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 186
    READ            shift and go to state 187

    assignation_key_value          shift and go to state 184
    assignation_key_value_multiple shift and go to state 185

state 122

    (163) functions_queue -> queue_enqueue .

    PRINT           reduce using rule 163 (functions_queue -> queue_enqueue .)
    READ            reduce using rule 163 (functions_queue -> queue_enqueue .)
    VARIABLE        reduce using rule 163 (functions_queue -> queue_enqueue .)
    QUEUE           reduce using rule 163 (functions_queue -> queue_enqueue .)
    STACK           reduce using rule 163 (functions_queue -> queue_enqueue .)
    CONST           reduce using rule 163 (functions_queue -> queue_enqueue .)
    INTEGER         reduce using rule 163 (functions_queue -> queue_enqueue .)
    FLOAT_NUMBER    reduce using rule 163 (functions_queue -> queue_enqueue .)
    DECIMAL_NUMBER  reduce using rule 163 (functions_queue -> queue_enqueue .)
    LIST            reduce using rule 163 (functions_queue -> queue_enqueue .)
    DICTIONARY      reduce using rule 163 (functions_queue -> queue_enqueue .)
    FOR             reduce using rule 163 (functions_queue -> queue_enqueue .)
    FOREACH         reduce using rule 163 (functions_queue -> queue_enqueue .)
    TRY             reduce using rule 163 (functions_queue -> queue_enqueue .)
    WHILE           reduce using rule 163 (functions_queue -> queue_enqueue .)
    DO              reduce using rule 163 (functions_queue -> queue_enqueue .)
    PUBLIC          reduce using rule 163 (functions_queue -> queue_enqueue .)
    PRIVATE         reduce using rule 163 (functions_queue -> queue_enqueue .)
    CHARTYPE        reduce using rule 163 (functions_queue -> queue_enqueue .)
    STRINGTYPE      reduce using rule 163 (functions_queue -> queue_enqueue .)
    FLOATTYPE       reduce using rule 163 (functions_queue -> queue_enqueue .)
    DECIMALTYPE     reduce using rule 163 (functions_queue -> queue_enqueue .)
    INTTYPE         reduce using rule 163 (functions_queue -> queue_enqueue .)
    BOOLTYPE        reduce using rule 163 (functions_queue -> queue_enqueue .)
    RKEY            reduce using rule 163 (functions_queue -> queue_enqueue .)
    RETURN          reduce using rule 163 (functions_queue -> queue_enqueue .)


state 123

    (164) functions_queue -> queue_dequeue .

    PRINT           reduce using rule 164 (functions_queue -> queue_dequeue .)
    READ            reduce using rule 164 (functions_queue -> queue_dequeue .)
    VARIABLE        reduce using rule 164 (functions_queue -> queue_dequeue .)
    QUEUE           reduce using rule 164 (functions_queue -> queue_dequeue .)
    STACK           reduce using rule 164 (functions_queue -> queue_dequeue .)
    CONST           reduce using rule 164 (functions_queue -> queue_dequeue .)
    INTEGER         reduce using rule 164 (functions_queue -> queue_dequeue .)
    FLOAT_NUMBER    reduce using rule 164 (functions_queue -> queue_dequeue .)
    DECIMAL_NUMBER  reduce using rule 164 (functions_queue -> queue_dequeue .)
    LIST            reduce using rule 164 (functions_queue -> queue_dequeue .)
    DICTIONARY      reduce using rule 164 (functions_queue -> queue_dequeue .)
    FOR             reduce using rule 164 (functions_queue -> queue_dequeue .)
    FOREACH         reduce using rule 164 (functions_queue -> queue_dequeue .)
    TRY             reduce using rule 164 (functions_queue -> queue_dequeue .)
    WHILE           reduce using rule 164 (functions_queue -> queue_dequeue .)
    DO              reduce using rule 164 (functions_queue -> queue_dequeue .)
    PUBLIC          reduce using rule 164 (functions_queue -> queue_dequeue .)
    PRIVATE         reduce using rule 164 (functions_queue -> queue_dequeue .)
    CHARTYPE        reduce using rule 164 (functions_queue -> queue_dequeue .)
    STRINGTYPE      reduce using rule 164 (functions_queue -> queue_dequeue .)
    FLOATTYPE       reduce using rule 164 (functions_queue -> queue_dequeue .)
    DECIMALTYPE     reduce using rule 164 (functions_queue -> queue_dequeue .)
    INTTYPE         reduce using rule 164 (functions_queue -> queue_dequeue .)
    BOOLTYPE        reduce using rule 164 (functions_queue -> queue_dequeue .)
    RKEY            reduce using rule 164 (functions_queue -> queue_dequeue .)
    RETURN          reduce using rule 164 (functions_queue -> queue_dequeue .)


state 124

    (165) functions_queue -> queue_clear .

    PRINT           reduce using rule 165 (functions_queue -> queue_clear .)
    READ            reduce using rule 165 (functions_queue -> queue_clear .)
    VARIABLE        reduce using rule 165 (functions_queue -> queue_clear .)
    QUEUE           reduce using rule 165 (functions_queue -> queue_clear .)
    STACK           reduce using rule 165 (functions_queue -> queue_clear .)
    CONST           reduce using rule 165 (functions_queue -> queue_clear .)
    INTEGER         reduce using rule 165 (functions_queue -> queue_clear .)
    FLOAT_NUMBER    reduce using rule 165 (functions_queue -> queue_clear .)
    DECIMAL_NUMBER  reduce using rule 165 (functions_queue -> queue_clear .)
    LIST            reduce using rule 165 (functions_queue -> queue_clear .)
    DICTIONARY      reduce using rule 165 (functions_queue -> queue_clear .)
    FOR             reduce using rule 165 (functions_queue -> queue_clear .)
    FOREACH         reduce using rule 165 (functions_queue -> queue_clear .)
    TRY             reduce using rule 165 (functions_queue -> queue_clear .)
    WHILE           reduce using rule 165 (functions_queue -> queue_clear .)
    DO              reduce using rule 165 (functions_queue -> queue_clear .)
    PUBLIC          reduce using rule 165 (functions_queue -> queue_clear .)
    PRIVATE         reduce using rule 165 (functions_queue -> queue_clear .)
    CHARTYPE        reduce using rule 165 (functions_queue -> queue_clear .)
    STRINGTYPE      reduce using rule 165 (functions_queue -> queue_clear .)
    FLOATTYPE       reduce using rule 165 (functions_queue -> queue_clear .)
    DECIMALTYPE     reduce using rule 165 (functions_queue -> queue_clear .)
    INTTYPE         reduce using rule 165 (functions_queue -> queue_clear .)
    BOOLTYPE        reduce using rule 165 (functions_queue -> queue_clear .)
    RKEY            reduce using rule 165 (functions_queue -> queue_clear .)
    RETURN          reduce using rule 165 (functions_queue -> queue_clear .)


state 125

    (166) functions_queue -> queue_isEmpty .

    PRINT           reduce using rule 166 (functions_queue -> queue_isEmpty .)
    READ            reduce using rule 166 (functions_queue -> queue_isEmpty .)
    VARIABLE        reduce using rule 166 (functions_queue -> queue_isEmpty .)
    QUEUE           reduce using rule 166 (functions_queue -> queue_isEmpty .)
    STACK           reduce using rule 166 (functions_queue -> queue_isEmpty .)
    CONST           reduce using rule 166 (functions_queue -> queue_isEmpty .)
    INTEGER         reduce using rule 166 (functions_queue -> queue_isEmpty .)
    FLOAT_NUMBER    reduce using rule 166 (functions_queue -> queue_isEmpty .)
    DECIMAL_NUMBER  reduce using rule 166 (functions_queue -> queue_isEmpty .)
    LIST            reduce using rule 166 (functions_queue -> queue_isEmpty .)
    DICTIONARY      reduce using rule 166 (functions_queue -> queue_isEmpty .)
    FOR             reduce using rule 166 (functions_queue -> queue_isEmpty .)
    FOREACH         reduce using rule 166 (functions_queue -> queue_isEmpty .)
    TRY             reduce using rule 166 (functions_queue -> queue_isEmpty .)
    WHILE           reduce using rule 166 (functions_queue -> queue_isEmpty .)
    DO              reduce using rule 166 (functions_queue -> queue_isEmpty .)
    PUBLIC          reduce using rule 166 (functions_queue -> queue_isEmpty .)
    PRIVATE         reduce using rule 166 (functions_queue -> queue_isEmpty .)
    CHARTYPE        reduce using rule 166 (functions_queue -> queue_isEmpty .)
    STRINGTYPE      reduce using rule 166 (functions_queue -> queue_isEmpty .)
    FLOATTYPE       reduce using rule 166 (functions_queue -> queue_isEmpty .)
    DECIMALTYPE     reduce using rule 166 (functions_queue -> queue_isEmpty .)
    INTTYPE         reduce using rule 166 (functions_queue -> queue_isEmpty .)
    BOOLTYPE        reduce using rule 166 (functions_queue -> queue_isEmpty .)
    RKEY            reduce using rule 166 (functions_queue -> queue_isEmpty .)
    RETURN          reduce using rule 166 (functions_queue -> queue_isEmpty .)


state 126

    (151) stack_struct -> STACK . VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 188


state 127

    (152) functions_stack -> stack_push .

    PRINT           reduce using rule 152 (functions_stack -> stack_push .)
    READ            reduce using rule 152 (functions_stack -> stack_push .)
    VARIABLE        reduce using rule 152 (functions_stack -> stack_push .)
    QUEUE           reduce using rule 152 (functions_stack -> stack_push .)
    STACK           reduce using rule 152 (functions_stack -> stack_push .)
    CONST           reduce using rule 152 (functions_stack -> stack_push .)
    INTEGER         reduce using rule 152 (functions_stack -> stack_push .)
    FLOAT_NUMBER    reduce using rule 152 (functions_stack -> stack_push .)
    DECIMAL_NUMBER  reduce using rule 152 (functions_stack -> stack_push .)
    LIST            reduce using rule 152 (functions_stack -> stack_push .)
    DICTIONARY      reduce using rule 152 (functions_stack -> stack_push .)
    FOR             reduce using rule 152 (functions_stack -> stack_push .)
    FOREACH         reduce using rule 152 (functions_stack -> stack_push .)
    TRY             reduce using rule 152 (functions_stack -> stack_push .)
    WHILE           reduce using rule 152 (functions_stack -> stack_push .)
    DO              reduce using rule 152 (functions_stack -> stack_push .)
    PUBLIC          reduce using rule 152 (functions_stack -> stack_push .)
    PRIVATE         reduce using rule 152 (functions_stack -> stack_push .)
    CHARTYPE        reduce using rule 152 (functions_stack -> stack_push .)
    STRINGTYPE      reduce using rule 152 (functions_stack -> stack_push .)
    FLOATTYPE       reduce using rule 152 (functions_stack -> stack_push .)
    DECIMALTYPE     reduce using rule 152 (functions_stack -> stack_push .)
    INTTYPE         reduce using rule 152 (functions_stack -> stack_push .)
    BOOLTYPE        reduce using rule 152 (functions_stack -> stack_push .)
    RKEY            reduce using rule 152 (functions_stack -> stack_push .)
    RETURN          reduce using rule 152 (functions_stack -> stack_push .)


state 128

    (153) functions_stack -> stack_pop .

    PRINT           reduce using rule 153 (functions_stack -> stack_pop .)
    READ            reduce using rule 153 (functions_stack -> stack_pop .)
    VARIABLE        reduce using rule 153 (functions_stack -> stack_pop .)
    QUEUE           reduce using rule 153 (functions_stack -> stack_pop .)
    STACK           reduce using rule 153 (functions_stack -> stack_pop .)
    CONST           reduce using rule 153 (functions_stack -> stack_pop .)
    INTEGER         reduce using rule 153 (functions_stack -> stack_pop .)
    FLOAT_NUMBER    reduce using rule 153 (functions_stack -> stack_pop .)
    DECIMAL_NUMBER  reduce using rule 153 (functions_stack -> stack_pop .)
    LIST            reduce using rule 153 (functions_stack -> stack_pop .)
    DICTIONARY      reduce using rule 153 (functions_stack -> stack_pop .)
    FOR             reduce using rule 153 (functions_stack -> stack_pop .)
    FOREACH         reduce using rule 153 (functions_stack -> stack_pop .)
    TRY             reduce using rule 153 (functions_stack -> stack_pop .)
    WHILE           reduce using rule 153 (functions_stack -> stack_pop .)
    DO              reduce using rule 153 (functions_stack -> stack_pop .)
    PUBLIC          reduce using rule 153 (functions_stack -> stack_pop .)
    PRIVATE         reduce using rule 153 (functions_stack -> stack_pop .)
    CHARTYPE        reduce using rule 153 (functions_stack -> stack_pop .)
    STRINGTYPE      reduce using rule 153 (functions_stack -> stack_pop .)
    FLOATTYPE       reduce using rule 153 (functions_stack -> stack_pop .)
    DECIMALTYPE     reduce using rule 153 (functions_stack -> stack_pop .)
    INTTYPE         reduce using rule 153 (functions_stack -> stack_pop .)
    BOOLTYPE        reduce using rule 153 (functions_stack -> stack_pop .)
    RKEY            reduce using rule 153 (functions_stack -> stack_pop .)
    RETURN          reduce using rule 153 (functions_stack -> stack_pop .)


state 129

    (154) functions_stack -> stack_clear .

    PRINT           reduce using rule 154 (functions_stack -> stack_clear .)
    READ            reduce using rule 154 (functions_stack -> stack_clear .)
    VARIABLE        reduce using rule 154 (functions_stack -> stack_clear .)
    QUEUE           reduce using rule 154 (functions_stack -> stack_clear .)
    STACK           reduce using rule 154 (functions_stack -> stack_clear .)
    CONST           reduce using rule 154 (functions_stack -> stack_clear .)
    INTEGER         reduce using rule 154 (functions_stack -> stack_clear .)
    FLOAT_NUMBER    reduce using rule 154 (functions_stack -> stack_clear .)
    DECIMAL_NUMBER  reduce using rule 154 (functions_stack -> stack_clear .)
    LIST            reduce using rule 154 (functions_stack -> stack_clear .)
    DICTIONARY      reduce using rule 154 (functions_stack -> stack_clear .)
    FOR             reduce using rule 154 (functions_stack -> stack_clear .)
    FOREACH         reduce using rule 154 (functions_stack -> stack_clear .)
    TRY             reduce using rule 154 (functions_stack -> stack_clear .)
    WHILE           reduce using rule 154 (functions_stack -> stack_clear .)
    DO              reduce using rule 154 (functions_stack -> stack_clear .)
    PUBLIC          reduce using rule 154 (functions_stack -> stack_clear .)
    PRIVATE         reduce using rule 154 (functions_stack -> stack_clear .)
    CHARTYPE        reduce using rule 154 (functions_stack -> stack_clear .)
    STRINGTYPE      reduce using rule 154 (functions_stack -> stack_clear .)
    FLOATTYPE       reduce using rule 154 (functions_stack -> stack_clear .)
    DECIMALTYPE     reduce using rule 154 (functions_stack -> stack_clear .)
    INTTYPE         reduce using rule 154 (functions_stack -> stack_clear .)
    BOOLTYPE        reduce using rule 154 (functions_stack -> stack_clear .)
    RKEY            reduce using rule 154 (functions_stack -> stack_clear .)
    RETURN          reduce using rule 154 (functions_stack -> stack_clear .)


state 130

    (155) functions_stack -> stack_peek .

    PRINT           reduce using rule 155 (functions_stack -> stack_peek .)
    READ            reduce using rule 155 (functions_stack -> stack_peek .)
    VARIABLE        reduce using rule 155 (functions_stack -> stack_peek .)
    QUEUE           reduce using rule 155 (functions_stack -> stack_peek .)
    STACK           reduce using rule 155 (functions_stack -> stack_peek .)
    CONST           reduce using rule 155 (functions_stack -> stack_peek .)
    INTEGER         reduce using rule 155 (functions_stack -> stack_peek .)
    FLOAT_NUMBER    reduce using rule 155 (functions_stack -> stack_peek .)
    DECIMAL_NUMBER  reduce using rule 155 (functions_stack -> stack_peek .)
    LIST            reduce using rule 155 (functions_stack -> stack_peek .)
    DICTIONARY      reduce using rule 155 (functions_stack -> stack_peek .)
    FOR             reduce using rule 155 (functions_stack -> stack_peek .)
    FOREACH         reduce using rule 155 (functions_stack -> stack_peek .)
    TRY             reduce using rule 155 (functions_stack -> stack_peek .)
    WHILE           reduce using rule 155 (functions_stack -> stack_peek .)
    DO              reduce using rule 155 (functions_stack -> stack_peek .)
    PUBLIC          reduce using rule 155 (functions_stack -> stack_peek .)
    PRIVATE         reduce using rule 155 (functions_stack -> stack_peek .)
    CHARTYPE        reduce using rule 155 (functions_stack -> stack_peek .)
    STRINGTYPE      reduce using rule 155 (functions_stack -> stack_peek .)
    FLOATTYPE       reduce using rule 155 (functions_stack -> stack_peek .)
    DECIMALTYPE     reduce using rule 155 (functions_stack -> stack_peek .)
    INTTYPE         reduce using rule 155 (functions_stack -> stack_peek .)
    BOOLTYPE        reduce using rule 155 (functions_stack -> stack_peek .)
    RKEY            reduce using rule 155 (functions_stack -> stack_peek .)
    RETURN          reduce using rule 155 (functions_stack -> stack_peek .)


state 131

    (156) functions_stack -> stack_isEmpty .

    PRINT           reduce using rule 156 (functions_stack -> stack_isEmpty .)
    READ            reduce using rule 156 (functions_stack -> stack_isEmpty .)
    VARIABLE        reduce using rule 156 (functions_stack -> stack_isEmpty .)
    QUEUE           reduce using rule 156 (functions_stack -> stack_isEmpty .)
    STACK           reduce using rule 156 (functions_stack -> stack_isEmpty .)
    CONST           reduce using rule 156 (functions_stack -> stack_isEmpty .)
    INTEGER         reduce using rule 156 (functions_stack -> stack_isEmpty .)
    FLOAT_NUMBER    reduce using rule 156 (functions_stack -> stack_isEmpty .)
    DECIMAL_NUMBER  reduce using rule 156 (functions_stack -> stack_isEmpty .)
    LIST            reduce using rule 156 (functions_stack -> stack_isEmpty .)
    DICTIONARY      reduce using rule 156 (functions_stack -> stack_isEmpty .)
    FOR             reduce using rule 156 (functions_stack -> stack_isEmpty .)
    FOREACH         reduce using rule 156 (functions_stack -> stack_isEmpty .)
    TRY             reduce using rule 156 (functions_stack -> stack_isEmpty .)
    WHILE           reduce using rule 156 (functions_stack -> stack_isEmpty .)
    DO              reduce using rule 156 (functions_stack -> stack_isEmpty .)
    PUBLIC          reduce using rule 156 (functions_stack -> stack_isEmpty .)
    PRIVATE         reduce using rule 156 (functions_stack -> stack_isEmpty .)
    CHARTYPE        reduce using rule 156 (functions_stack -> stack_isEmpty .)
    STRINGTYPE      reduce using rule 156 (functions_stack -> stack_isEmpty .)
    FLOATTYPE       reduce using rule 156 (functions_stack -> stack_isEmpty .)
    DECIMALTYPE     reduce using rule 156 (functions_stack -> stack_isEmpty .)
    INTTYPE         reduce using rule 156 (functions_stack -> stack_isEmpty .)
    BOOLTYPE        reduce using rule 156 (functions_stack -> stack_isEmpty .)
    RKEY            reduce using rule 156 (functions_stack -> stack_isEmpty .)
    RETURN          reduce using rule 156 (functions_stack -> stack_isEmpty .)


state 132

    (99) block_for -> for_anidado .

    PRINT           reduce using rule 99 (block_for -> for_anidado .)
    READ            reduce using rule 99 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 99 (block_for -> for_anidado .)
    QUEUE           reduce using rule 99 (block_for -> for_anidado .)
    STACK           reduce using rule 99 (block_for -> for_anidado .)
    CONST           reduce using rule 99 (block_for -> for_anidado .)
    INTEGER         reduce using rule 99 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 99 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 99 (block_for -> for_anidado .)
    LIST            reduce using rule 99 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 99 (block_for -> for_anidado .)
    FOR             reduce using rule 99 (block_for -> for_anidado .)
    FOREACH         reduce using rule 99 (block_for -> for_anidado .)
    TRY             reduce using rule 99 (block_for -> for_anidado .)
    WHILE           reduce using rule 99 (block_for -> for_anidado .)
    DO              reduce using rule 99 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 99 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 99 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 99 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 99 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 99 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 99 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 99 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 99 (block_for -> for_anidado .)
    RKEY            reduce using rule 99 (block_for -> for_anidado .)
    RETURN          reduce using rule 99 (block_for -> for_anidado .)


state 133

    (100) block_for -> for_each .

    PRINT           reduce using rule 100 (block_for -> for_each .)
    READ            reduce using rule 100 (block_for -> for_each .)
    VARIABLE        reduce using rule 100 (block_for -> for_each .)
    QUEUE           reduce using rule 100 (block_for -> for_each .)
    STACK           reduce using rule 100 (block_for -> for_each .)
    CONST           reduce using rule 100 (block_for -> for_each .)
    INTEGER         reduce using rule 100 (block_for -> for_each .)
    FLOAT_NUMBER    reduce using rule 100 (block_for -> for_each .)
    DECIMAL_NUMBER  reduce using rule 100 (block_for -> for_each .)
    LIST            reduce using rule 100 (block_for -> for_each .)
    DICTIONARY      reduce using rule 100 (block_for -> for_each .)
    FOR             reduce using rule 100 (block_for -> for_each .)
    FOREACH         reduce using rule 100 (block_for -> for_each .)
    TRY             reduce using rule 100 (block_for -> for_each .)
    WHILE           reduce using rule 100 (block_for -> for_each .)
    DO              reduce using rule 100 (block_for -> for_each .)
    PUBLIC          reduce using rule 100 (block_for -> for_each .)
    PRIVATE         reduce using rule 100 (block_for -> for_each .)
    CHARTYPE        reduce using rule 100 (block_for -> for_each .)
    STRINGTYPE      reduce using rule 100 (block_for -> for_each .)
    FLOATTYPE       reduce using rule 100 (block_for -> for_each .)
    DECIMALTYPE     reduce using rule 100 (block_for -> for_each .)
    INTTYPE         reduce using rule 100 (block_for -> for_each .)
    BOOLTYPE        reduce using rule 100 (block_for -> for_each .)
    RKEY            reduce using rule 100 (block_for -> for_each .)
    RETURN          reduce using rule 100 (block_for -> for_each .)


state 134

    (107) block_try_catch -> try_catch_simply .

    PRINT           reduce using rule 107 (block_try_catch -> try_catch_simply .)
    READ            reduce using rule 107 (block_try_catch -> try_catch_simply .)
    VARIABLE        reduce using rule 107 (block_try_catch -> try_catch_simply .)
    QUEUE           reduce using rule 107 (block_try_catch -> try_catch_simply .)
    STACK           reduce using rule 107 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 107 (block_try_catch -> try_catch_simply .)
    INTEGER         reduce using rule 107 (block_try_catch -> try_catch_simply .)
    FLOAT_NUMBER    reduce using rule 107 (block_try_catch -> try_catch_simply .)
    DECIMAL_NUMBER  reduce using rule 107 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 107 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 107 (block_try_catch -> try_catch_simply .)
    FOR             reduce using rule 107 (block_try_catch -> try_catch_simply .)
    FOREACH         reduce using rule 107 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 107 (block_try_catch -> try_catch_simply .)
    WHILE           reduce using rule 107 (block_try_catch -> try_catch_simply .)
    DO              reduce using rule 107 (block_try_catch -> try_catch_simply .)
    PUBLIC          reduce using rule 107 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 107 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 107 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 107 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 107 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 107 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 107 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 107 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 107 (block_try_catch -> try_catch_simply .)
    RETURN          reduce using rule 107 (block_try_catch -> try_catch_simply .)


state 135

    (108) block_try_catch -> try_catch_finally .

    PRINT           reduce using rule 108 (block_try_catch -> try_catch_finally .)
    READ            reduce using rule 108 (block_try_catch -> try_catch_finally .)
    VARIABLE        reduce using rule 108 (block_try_catch -> try_catch_finally .)
    QUEUE           reduce using rule 108 (block_try_catch -> try_catch_finally .)
    STACK           reduce using rule 108 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 108 (block_try_catch -> try_catch_finally .)
    INTEGER         reduce using rule 108 (block_try_catch -> try_catch_finally .)
    FLOAT_NUMBER    reduce using rule 108 (block_try_catch -> try_catch_finally .)
    DECIMAL_NUMBER  reduce using rule 108 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 108 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 108 (block_try_catch -> try_catch_finally .)
    FOR             reduce using rule 108 (block_try_catch -> try_catch_finally .)
    FOREACH         reduce using rule 108 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 108 (block_try_catch -> try_catch_finally .)
    WHILE           reduce using rule 108 (block_try_catch -> try_catch_finally .)
    DO              reduce using rule 108 (block_try_catch -> try_catch_finally .)
    PUBLIC          reduce using rule 108 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 108 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 108 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 108 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 108 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 108 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 108 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 108 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 108 (block_try_catch -> try_catch_finally .)
    RETURN          reduce using rule 108 (block_try_catch -> try_catch_finally .)


state 136

    (111) block_while -> normal_while .

    PRINT           reduce using rule 111 (block_while -> normal_while .)
    READ            reduce using rule 111 (block_while -> normal_while .)
    VARIABLE        reduce using rule 111 (block_while -> normal_while .)
    QUEUE           reduce using rule 111 (block_while -> normal_while .)
    STACK           reduce using rule 111 (block_while -> normal_while .)
    CONST           reduce using rule 111 (block_while -> normal_while .)
    INTEGER         reduce using rule 111 (block_while -> normal_while .)
    FLOAT_NUMBER    reduce using rule 111 (block_while -> normal_while .)
    DECIMAL_NUMBER  reduce using rule 111 (block_while -> normal_while .)
    LIST            reduce using rule 111 (block_while -> normal_while .)
    DICTIONARY      reduce using rule 111 (block_while -> normal_while .)
    FOR             reduce using rule 111 (block_while -> normal_while .)
    FOREACH         reduce using rule 111 (block_while -> normal_while .)
    TRY             reduce using rule 111 (block_while -> normal_while .)
    WHILE           reduce using rule 111 (block_while -> normal_while .)
    DO              reduce using rule 111 (block_while -> normal_while .)
    PUBLIC          reduce using rule 111 (block_while -> normal_while .)
    PRIVATE         reduce using rule 111 (block_while -> normal_while .)
    CHARTYPE        reduce using rule 111 (block_while -> normal_while .)
    STRINGTYPE      reduce using rule 111 (block_while -> normal_while .)
    FLOATTYPE       reduce using rule 111 (block_while -> normal_while .)
    DECIMALTYPE     reduce using rule 111 (block_while -> normal_while .)
    INTTYPE         reduce using rule 111 (block_while -> normal_while .)
    BOOLTYPE        reduce using rule 111 (block_while -> normal_while .)
    RKEY            reduce using rule 111 (block_while -> normal_while .)
    RETURN          reduce using rule 111 (block_while -> normal_while .)


state 137

    (112) block_while -> do_while .

    PRINT           reduce using rule 112 (block_while -> do_while .)
    READ            reduce using rule 112 (block_while -> do_while .)
    VARIABLE        reduce using rule 112 (block_while -> do_while .)
    QUEUE           reduce using rule 112 (block_while -> do_while .)
    STACK           reduce using rule 112 (block_while -> do_while .)
    CONST           reduce using rule 112 (block_while -> do_while .)
    INTEGER         reduce using rule 112 (block_while -> do_while .)
    FLOAT_NUMBER    reduce using rule 112 (block_while -> do_while .)
    DECIMAL_NUMBER  reduce using rule 112 (block_while -> do_while .)
    LIST            reduce using rule 112 (block_while -> do_while .)
    DICTIONARY      reduce using rule 112 (block_while -> do_while .)
    FOR             reduce using rule 112 (block_while -> do_while .)
    FOREACH         reduce using rule 112 (block_while -> do_while .)
    TRY             reduce using rule 112 (block_while -> do_while .)
    WHILE           reduce using rule 112 (block_while -> do_while .)
    DO              reduce using rule 112 (block_while -> do_while .)
    PUBLIC          reduce using rule 112 (block_while -> do_while .)
    PRIVATE         reduce using rule 112 (block_while -> do_while .)
    CHARTYPE        reduce using rule 112 (block_while -> do_while .)
    STRINGTYPE      reduce using rule 112 (block_while -> do_while .)
    FLOATTYPE       reduce using rule 112 (block_while -> do_while .)
    DECIMALTYPE     reduce using rule 112 (block_while -> do_while .)
    INTTYPE         reduce using rule 112 (block_while -> do_while .)
    BOOLTYPE        reduce using rule 112 (block_while -> do_while .)
    RKEY            reduce using rule 112 (block_while -> do_while .)
    RETURN          reduce using rule 112 (block_while -> do_while .)


state 138

    (74) constant_assignation -> access_modifiers . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> access_modifiers . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> access_modifiers . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> access_modifiers . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> access_modifiers . data_type VARIABLE DOTANDCOMMA
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CONST           shift and go to state 189
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 190

state 139

    (75) constant_assignation -> CONST . data_type assignation_key_value DOTANDCOMMA
    (77) constant_assignation -> CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 191

state 140

    (84) late_initialization -> assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 192


state 141

    (45) value_numeric -> FLOAT_NUMBER .

    PRINT           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    READ            reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    VARIABLE        reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    QUEUE           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    STACK           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    CONST           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    INTEGER         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    LIST            reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    DICTIONARY      reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    FOR             reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    FOREACH         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    TRY             reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    WHILE           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    DO              reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    PUBLIC          reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    PRIVATE         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    CHARTYPE        reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    STRINGTYPE      reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    FLOATTYPE       reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    DECIMALTYPE     reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    INTTYPE         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    BOOLTYPE        reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    RKEY            reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    PLUS            reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    MINUS           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    TIMES           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    PERCENT         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN    reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    EQUAL_COMPARATION reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    INEQUALITY      reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    LOGICAND        reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    LOGICOR         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    LOGICNOT        reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    LOGICXOR        reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    RETURN          reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    DOTANDCOMMA     reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)
    RPARENT         reduce using rule 45 (value_numeric -> FLOAT_NUMBER .)


state 142

    (46) value_numeric -> DECIMAL_NUMBER .

    PRINT           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    READ            reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    VARIABLE        reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    QUEUE           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    STACK           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    CONST           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    INTEGER         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    FLOAT_NUMBER    reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    LIST            reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    DICTIONARY      reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    FOR             reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    FOREACH         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    TRY             reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    WHILE           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    DO              reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    PUBLIC          reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    PRIVATE         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    CHARTYPE        reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    STRINGTYPE      reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    FLOATTYPE       reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    DECIMALTYPE     reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    INTTYPE         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    BOOLTYPE        reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    RKEY            reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    PLUS            reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    MINUS           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    TIMES           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    DIVIDE          reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    PERCENT         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN    reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN    reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    EQUAL_COMPARATION reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    INEQUALITY      reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    LOGICAND        reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    LOGICOR         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    LOGICNOT        reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    LOGICXOR        reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    RETURN          reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    DOTANDCOMMA     reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)
    RPARENT         reduce using rule 46 (value_numeric -> DECIMAL_NUMBER .)


state 143

    (135) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 193


state 144

    (122) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 194


state 145

    (103) for_anidado -> for_simple .

    PRINT           reduce using rule 103 (for_anidado -> for_simple .)
    READ            reduce using rule 103 (for_anidado -> for_simple .)
    VARIABLE        reduce using rule 103 (for_anidado -> for_simple .)
    QUEUE           reduce using rule 103 (for_anidado -> for_simple .)
    STACK           reduce using rule 103 (for_anidado -> for_simple .)
    CONST           reduce using rule 103 (for_anidado -> for_simple .)
    INTEGER         reduce using rule 103 (for_anidado -> for_simple .)
    FLOAT_NUMBER    reduce using rule 103 (for_anidado -> for_simple .)
    DECIMAL_NUMBER  reduce using rule 103 (for_anidado -> for_simple .)
    LIST            reduce using rule 103 (for_anidado -> for_simple .)
    DICTIONARY      reduce using rule 103 (for_anidado -> for_simple .)
    FOR             reduce using rule 103 (for_anidado -> for_simple .)
    FOREACH         reduce using rule 103 (for_anidado -> for_simple .)
    TRY             reduce using rule 103 (for_anidado -> for_simple .)
    WHILE           reduce using rule 103 (for_anidado -> for_simple .)
    DO              reduce using rule 103 (for_anidado -> for_simple .)
    PUBLIC          reduce using rule 103 (for_anidado -> for_simple .)
    PRIVATE         reduce using rule 103 (for_anidado -> for_simple .)
    CHARTYPE        reduce using rule 103 (for_anidado -> for_simple .)
    STRINGTYPE      reduce using rule 103 (for_anidado -> for_simple .)
    FLOATTYPE       reduce using rule 103 (for_anidado -> for_simple .)
    DECIMALTYPE     reduce using rule 103 (for_anidado -> for_simple .)
    INTTYPE         reduce using rule 103 (for_anidado -> for_simple .)
    BOOLTYPE        reduce using rule 103 (for_anidado -> for_simple .)
    RKEY            reduce using rule 103 (for_anidado -> for_simple .)
    RETURN          reduce using rule 103 (for_anidado -> for_simple .)


state 146

    (104) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 195


state 147

    (106) for_each -> FOREACH . LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 196


state 148

    (109) try_catch_simply -> TRY . LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY . LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LKEY            shift and go to state 197


state 149

    (113) normal_while -> WHILE . LPARENT logic_operation RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 198


state 150

    (114) do_while -> DO . LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT

    LKEY            shift and go to state 199


state 151

    (69) access_modifiers -> PUBLIC .

    CONST           reduce using rule 69 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 69 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 69 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 69 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 69 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 69 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 69 (access_modifiers -> PUBLIC .)


state 152

    (172) simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code . function_return RKEY
    (176) function_return -> . RETURN value DOTANDCOMMA

    RETURN          shift and go to state 201

    function_return                shift and go to state 200

state 153

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY . all_block_code function_return RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    access_modifiers               shift and go to state 138
    data_type                      shift and go to state 121
    all_block_code                 shift and go to state 202
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 154

    (175) simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY . all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    access_modifiers               shift and go to state 138
    all_block_code                 shift and go to state 203
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 155

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY block_code RKEY

    LKEY            shift and go to state 204


state 156

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT . TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    TASK            shift and go to state 205


state 157

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 206


state 158

    (173) simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .

    STATIC          reduce using rule 173 (simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 173 (simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)
    ACTION          reduce using rule 173 (simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 173 (simple_method -> STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)


state 159

    (22) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 22 (all_block_code -> block_code all_block_code .)
    RETURN          reduce using rule 22 (all_block_code -> block_code all_block_code .)


state 160

    (28) print_data -> PRINT LPARENT . STRING RPARENT DOTANDCOMMA
    (29) print_data -> PRINT LPARENT . VARIABLE RPARENT DOTANDCOMMA

    STRING          shift and go to state 207
    VARIABLE        shift and go to state 208


state 161

    (51) arithmetic_operation -> VARIABLE arithmetic_operator . arithmetic_operation
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 209
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142

    arithmetic_operation           shift and go to state 210
    value_numeric                  shift and go to state 211

state 162

    (53) logic_operation -> VARIABLE logic_operator . INTEGER

    INTEGER         shift and go to state 212


state 163

    (147) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (131) dict_func_put -> VARIABLE DOT . PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> VARIABLE DOT . REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> VARIABLE DOT . ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> VARIABLE DOT . DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> VARIABLE DOT . ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> VARIABLE DOT . PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> VARIABLE DOT . POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> VARIABLE DOT . PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> VARIABLE DOT . ISEMPTY LPARENT RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 213
    COUNT           shift and go to state 214
    ADD             shift and go to state 215
    REMOVEAT        shift and go to state 216
    PUT             shift and go to state 217
    REMOVE          shift and go to state 218
    ENQUEUE         shift and go to state 219
    DEQUEUE         shift and go to state 220
    ISEMPTY         shift and go to state 221
    PUSH            shift and go to state 222
    POP             shift and go to state 223
    PEEK            shift and go to state 224


state 164

    (85) assignation_key_value -> VARIABLE ASSIGNATION . value
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (36) value -> . read_data
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (43) value_logic -> . logic_operation
    (37) value_string -> . STRING
    (38) value_string -> . CHAR
    (39) value_string -> . VARIABLE
    (40) value_string -> . concatenation
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (31) concatenation -> . STRING
    (32) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    BOOLTRUE        shift and go to state 232
    BOOLFALSE       shift and go to state 233
    STRING          shift and go to state 235
    CHAR            shift and go to state 236
    VARIABLE        shift and go to state 225
    READ            shift and go to state 238

    value                          shift and go to state 226
    value_numeric                  shift and go to state 227
    value_logic                    shift and go to state 228
    value_string                   shift and go to state 229
    read_data                      shift and go to state 230
    arithmetic_operation           shift and go to state 231
    logic_operation                shift and go to state 234
    concatenation                  shift and go to state 237

state 165

    (64) arithmetic_operator -> PLUS .

    VARIABLE        reduce using rule 64 (arithmetic_operator -> PLUS .)
    INTEGER         reduce using rule 64 (arithmetic_operator -> PLUS .)
    FLOAT_NUMBER    reduce using rule 64 (arithmetic_operator -> PLUS .)
    DECIMAL_NUMBER  reduce using rule 64 (arithmetic_operator -> PLUS .)


state 166

    (65) arithmetic_operator -> MINUS .

    VARIABLE        reduce using rule 65 (arithmetic_operator -> MINUS .)
    INTEGER         reduce using rule 65 (arithmetic_operator -> MINUS .)
    FLOAT_NUMBER    reduce using rule 65 (arithmetic_operator -> MINUS .)
    DECIMAL_NUMBER  reduce using rule 65 (arithmetic_operator -> MINUS .)


state 167

    (66) arithmetic_operator -> TIMES .

    VARIABLE        reduce using rule 66 (arithmetic_operator -> TIMES .)
    INTEGER         reduce using rule 66 (arithmetic_operator -> TIMES .)
    FLOAT_NUMBER    reduce using rule 66 (arithmetic_operator -> TIMES .)
    DECIMAL_NUMBER  reduce using rule 66 (arithmetic_operator -> TIMES .)


state 168

    (67) arithmetic_operator -> DIVIDE .

    VARIABLE        reduce using rule 67 (arithmetic_operator -> DIVIDE .)
    INTEGER         reduce using rule 67 (arithmetic_operator -> DIVIDE .)
    FLOAT_NUMBER    reduce using rule 67 (arithmetic_operator -> DIVIDE .)
    DECIMAL_NUMBER  reduce using rule 67 (arithmetic_operator -> DIVIDE .)


state 169

    (68) arithmetic_operator -> PERCENT .

    VARIABLE        reduce using rule 68 (arithmetic_operator -> PERCENT .)
    INTEGER         reduce using rule 68 (arithmetic_operator -> PERCENT .)
    FLOAT_NUMBER    reduce using rule 68 (arithmetic_operator -> PERCENT .)
    DECIMAL_NUMBER  reduce using rule 68 (arithmetic_operator -> PERCENT .)


state 170

    (54) logic_operator -> GREATER_THAN .

    INTEGER         reduce using rule 54 (logic_operator -> GREATER_THAN .)


state 171

    (55) logic_operator -> SMALLER_THAN .

    INTEGER         reduce using rule 55 (logic_operator -> SMALLER_THAN .)


state 172

    (56) logic_operator -> EQUAL_COMPARATION .

    INTEGER         reduce using rule 56 (logic_operator -> EQUAL_COMPARATION .)


state 173

    (57) logic_operator -> INEQUALITY .

    INTEGER         reduce using rule 57 (logic_operator -> INEQUALITY .)


state 174

    (58) logic_operator -> GREATER_THAN_OR_EQUAL .

    INTEGER         reduce using rule 58 (logic_operator -> GREATER_THAN_OR_EQUAL .)


state 175

    (59) logic_operator -> SMALLER_THAN_OR_EQUAL .

    INTEGER         reduce using rule 59 (logic_operator -> SMALLER_THAN_OR_EQUAL .)


state 176

    (60) logic_operator -> LOGICAND .

    INTEGER         reduce using rule 60 (logic_operator -> LOGICAND .)


state 177

    (61) logic_operator -> LOGICOR .

    INTEGER         reduce using rule 61 (logic_operator -> LOGICOR .)


state 178

    (62) logic_operator -> LOGICNOT .

    INTEGER         reduce using rule 62 (logic_operator -> LOGICNOT .)


state 179

    (63) logic_operator -> LOGICXOR .

    INTEGER         reduce using rule 63 (logic_operator -> LOGICXOR .)


state 180

    (30) read_data -> READ LPARENT . RPARENT DOTANDCOMMA
    (86) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 239


state 181

    (50) arithmetic_operation -> value_numeric arithmetic_operator . arithmetic_operation
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 209
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142

    value_numeric                  shift and go to state 211
    arithmetic_operation           shift and go to state 240

state 182

    (52) logic_operation -> value_numeric logic_operator . INTEGER

    INTEGER         shift and go to state 241


state 183

    (162) queue_struct -> QUEUE SMALLER_THAN . data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 242

state 184

    (79) variable_assignation -> data_type assignation_key_value . DOTANDCOMMA
    (87) assignation_key_value_multiple -> assignation_key_value .
    (88) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 243
    COMMA           shift and go to state 244

  ! DOTANDCOMMA     [ reduce using rule 87 (assignation_key_value_multiple -> assignation_key_value .) ]


state 185

    (81) variable_assignation -> data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 245


state 186

    (83) late_initialization -> data_type VARIABLE . DOTANDCOMMA
    (85) assignation_key_value -> VARIABLE . ASSIGNATION value

    DOTANDCOMMA     shift and go to state 246
    ASSIGNATION     shift and go to state 164


state 187

    (86) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 247


state 188

    (151) stack_struct -> STACK VARIABLE . ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA

    ASSIGNATION     shift and go to state 248


state 189

    (74) constant_assignation -> access_modifiers CONST . data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> access_modifiers CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 249

state 190

    (78) variable_assignation -> access_modifiers data_type . assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> access_modifiers data_type . assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> access_modifiers data_type . VARIABLE DOTANDCOMMA
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (87) assignation_key_value_multiple -> . assignation_key_value
    (88) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 252
    READ            shift and go to state 187

    assignation_key_value          shift and go to state 250
    assignation_key_value_multiple shift and go to state 251

state 191

    (75) constant_assignation -> CONST data_type . assignation_key_value DOTANDCOMMA
    (77) constant_assignation -> CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (87) assignation_key_value_multiple -> . assignation_key_value
    (88) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 255
    READ            shift and go to state 187

    assignation_key_value          shift and go to state 253
    assignation_key_value_multiple shift and go to state 254

state 192

    (84) late_initialization -> assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    STACK           reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    RETURN          reduce using rule 84 (late_initialization -> assignation_key_value DOTANDCOMMA .)


state 193

    (135) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    STRINGTYPE      shift and go to state 256
    INTTYPE         shift and go to state 257


state 194

    (122) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 258


state 195

    (104) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (89) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (90) assignation_with_datatype -> . data_type assignation_key_value COMMA assignation_with_datatype
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    assignation_with_datatype      shift and go to state 259
    data_type                      shift and go to state 260

state 196

    (106) for_each -> FOREACH LPARENT . data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 261

state 197

    (109) try_catch_simply -> TRY LKEY . all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY . all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    all_block_code                 shift and go to state 262
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 198

    (113) normal_while -> WHILE LPARENT . logic_operation RPARENT LKEY all_block_code RKEY
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 265
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142

    logic_operation                shift and go to state 263
    value_numeric                  shift and go to state 264
    arithmetic_operation           shift and go to state 231

state 199

    (114) do_while -> DO LKEY . all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    all_block_code                 shift and go to state 266
    logic_operation                shift and go to state 90
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 200

    (172) simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return . RKEY

    RKEY            shift and go to state 267


state 201

    (176) function_return -> RETURN . value DOTANDCOMMA
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (36) value -> . read_data
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (43) value_logic -> . logic_operation
    (37) value_string -> . STRING
    (38) value_string -> . CHAR
    (39) value_string -> . VARIABLE
    (40) value_string -> . concatenation
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (31) concatenation -> . STRING
    (32) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    BOOLTRUE        shift and go to state 232
    BOOLFALSE       shift and go to state 233
    STRING          shift and go to state 235
    CHAR            shift and go to state 236
    VARIABLE        shift and go to state 225
    READ            shift and go to state 238

    value                          shift and go to state 268
    value_numeric                  shift and go to state 227
    value_logic                    shift and go to state 228
    value_string                   shift and go to state 229
    read_data                      shift and go to state 230
    arithmetic_operation           shift and go to state 231
    logic_operation                shift and go to state 234
    concatenation                  shift and go to state 237

state 202

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code . function_return RKEY
    (176) function_return -> . RETURN value DOTANDCOMMA

    RETURN          shift and go to state 201

    function_return                shift and go to state 269

state 203

    (175) simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 270


state 204

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . block_code RKEY
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    block_code                     shift and go to state 271
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 205

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK . DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    DOT             shift and go to state 272


state 206

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY . all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    all_block_code                 shift and go to state 273
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 207

    (28) print_data -> PRINT LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 274


state 208

    (29) print_data -> PRINT LPARENT VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 275


state 209

    (49) arithmetic_operation -> VARIABLE .
    (51) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    QUEUE           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    STACK           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN    reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN    reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    EQUAL_COMPARATION reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    INEQUALITY      reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN_OR_EQUAL reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    LOGICAND        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    LOGICOR         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    LOGICNOT        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    LOGICXOR        reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    RETURN          reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    COMMA           reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    RPARENT         reduce using rule 49 (arithmetic_operation -> VARIABLE .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169

  ! PLUS            [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 161

state 210

    (51) arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .
    (47) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for QUEUE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STACK resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RPARENT resolved using rule 47 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    QUEUE           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    STACK           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 47 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RETURN          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 47 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! QUEUE           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! STACK           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LIST            [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FOR             [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TRY             [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DO              [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RETURN          [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RPARENT         [ reduce using rule 51 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]


state 211

    (48) arithmetic_operation -> value_numeric .
    (50) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 48 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    QUEUE           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    STACK           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 48 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 48 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 48 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 48 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 48 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 48 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 48 (arithmetic_operation -> value_numeric .)
    GREATER_THAN    reduce using rule 48 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN    reduce using rule 48 (arithmetic_operation -> value_numeric .)
    EQUAL_COMPARATION reduce using rule 48 (arithmetic_operation -> value_numeric .)
    INEQUALITY      reduce using rule 48 (arithmetic_operation -> value_numeric .)
    GREATER_THAN_OR_EQUAL reduce using rule 48 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN_OR_EQUAL reduce using rule 48 (arithmetic_operation -> value_numeric .)
    LOGICAND        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    LOGICOR         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    LOGICNOT        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    LOGICXOR        reduce using rule 48 (arithmetic_operation -> value_numeric .)
    RETURN          reduce using rule 48 (arithmetic_operation -> value_numeric .)
    DOTANDCOMMA     reduce using rule 48 (arithmetic_operation -> value_numeric .)
    COMMA           reduce using rule 48 (arithmetic_operation -> value_numeric .)
    RPARENT         reduce using rule 48 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169

  ! PLUS            [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 181

state 212

    (53) logic_operation -> VARIABLE logic_operator INTEGER .

    PRINT           reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    READ            reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    VARIABLE        reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    QUEUE           reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    STACK           reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    CONST           reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    INTEGER         reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FLOAT_NUMBER    reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DECIMAL_NUMBER  reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    LIST            reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DICTIONARY      reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FOR             reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FOREACH         reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    TRY             reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    WHILE           reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DO              reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    PUBLIC          reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    PRIVATE         reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    CHARTYPE        reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    STRINGTYPE      reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FLOATTYPE       reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DECIMALTYPE     reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    INTTYPE         reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    BOOLTYPE        reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    RKEY            reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    RETURN          reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DOTANDCOMMA     reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    COMMA           reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)
    RPARENT         reduce using rule 53 (logic_operation -> VARIABLE logic_operator INTEGER .)


state 213

    (147) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 276


state 214

    (148) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 277


state 215

    (149) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 278


state 216

    (150) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 279


state 217

    (131) dict_func_put -> VARIABLE DOT PUT . LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 280


state 218

    (132) dict_func_remove -> VARIABLE DOT REMOVE . LPARENT VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 281


state 219

    (167) queue_enqueue -> VARIABLE DOT ENQUEUE . LPARENT value RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 282


state 220

    (168) queue_dequeue -> VARIABLE DOT DEQUEUE . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 283


state 221

    (171) queue_isEmpty -> VARIABLE DOT ISEMPTY . LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> VARIABLE DOT ISEMPTY . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 284


state 222

    (157) stack_push -> VARIABLE DOT PUSH . LPARENT value RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 285


state 223

    (158) stack_pop -> VARIABLE DOT POP . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 286


state 224

    (160) stack_peek -> VARIABLE DOT PEEK . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 287


state 225

    (39) value_string -> VARIABLE .
    (49) arithmetic_operation -> VARIABLE .
    (51) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (53) logic_operation -> VARIABLE . logic_operator INTEGER
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT
    (54) logic_operator -> . GREATER_THAN
    (55) logic_operator -> . SMALLER_THAN
    (56) logic_operator -> . EQUAL_COMPARATION
    (57) logic_operator -> . INEQUALITY
    (58) logic_operator -> . GREATER_THAN_OR_EQUAL
    (59) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (60) logic_operator -> . LOGICAND
    (61) logic_operator -> . LOGICOR
    (62) logic_operator -> . LOGICNOT
    (63) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 39 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 39 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 39 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 39 (value_string -> VARIABLE .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 39 (value_string -> VARIABLE .)
    COMMA           reduce using rule 39 (value_string -> VARIABLE .)
    RPARENT         reduce using rule 39 (value_string -> VARIABLE .)
    RKEY            reduce using rule 39 (value_string -> VARIABLE .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169
    GREATER_THAN    shift and go to state 170
    SMALLER_THAN    shift and go to state 171
    EQUAL_COMPARATION shift and go to state 172
    INEQUALITY      shift and go to state 173
    GREATER_THAN_OR_EQUAL shift and go to state 174
    SMALLER_THAN_OR_EQUAL shift and go to state 175
    LOGICAND        shift and go to state 176
    LOGICOR         shift and go to state 177
    LOGICNOT        shift and go to state 178
    LOGICXOR        shift and go to state 179

  ! PLUS            [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 161
    logic_operator                 shift and go to state 162

state 226

    (85) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 85 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 85 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 227

    (33) value -> value_numeric .
    (48) arithmetic_operation -> value_numeric .
    (50) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (52) logic_operation -> value_numeric . logic_operator INTEGER
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT
    (54) logic_operator -> . GREATER_THAN
    (55) logic_operator -> . SMALLER_THAN
    (56) logic_operator -> . EQUAL_COMPARATION
    (57) logic_operator -> . INEQUALITY
    (58) logic_operator -> . GREATER_THAN_OR_EQUAL
    (59) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (60) logic_operator -> . LOGICAND
    (61) logic_operator -> . LOGICOR
    (62) logic_operator -> . LOGICNOT
    (63) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 33 (value -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 33 (value -> value_numeric .)
  ! reduce/reduce conflict for RPARENT resolved using rule 33 (value -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 33 (value -> value_numeric .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 33 (value -> value_numeric .)
    COMMA           reduce using rule 33 (value -> value_numeric .)
    RPARENT         reduce using rule 33 (value -> value_numeric .)
    RKEY            reduce using rule 33 (value -> value_numeric .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169
    GREATER_THAN    shift and go to state 170
    SMALLER_THAN    shift and go to state 171
    EQUAL_COMPARATION shift and go to state 172
    INEQUALITY      shift and go to state 173
    GREATER_THAN_OR_EQUAL shift and go to state 174
    SMALLER_THAN_OR_EQUAL shift and go to state 175
    LOGICAND        shift and go to state 176
    LOGICOR         shift and go to state 177
    LOGICNOT        shift and go to state 178
    LOGICXOR        shift and go to state 179

  ! PLUS            [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! RPARENT         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 181
    logic_operator                 shift and go to state 182

state 228

    (34) value -> value_logic .

    DOTANDCOMMA     reduce using rule 34 (value -> value_logic .)
    COMMA           reduce using rule 34 (value -> value_logic .)
    RPARENT         reduce using rule 34 (value -> value_logic .)
    RKEY            reduce using rule 34 (value -> value_logic .)


state 229

    (35) value -> value_string .

    DOTANDCOMMA     reduce using rule 35 (value -> value_string .)
    COMMA           reduce using rule 35 (value -> value_string .)
    RPARENT         reduce using rule 35 (value -> value_string .)
    RKEY            reduce using rule 35 (value -> value_string .)


state 230

    (36) value -> read_data .

    DOTANDCOMMA     reduce using rule 36 (value -> read_data .)
    COMMA           reduce using rule 36 (value -> read_data .)
    RPARENT         reduce using rule 36 (value -> read_data .)
    RKEY            reduce using rule 36 (value -> read_data .)


state 231

    (47) value_numeric -> arithmetic_operation .

    PLUS            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 47 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 47 (value_numeric -> arithmetic_operation .)


state 232

    (41) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 41 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 41 (value_logic -> BOOLTRUE .)
    RPARENT         reduce using rule 41 (value_logic -> BOOLTRUE .)
    RKEY            reduce using rule 41 (value_logic -> BOOLTRUE .)


state 233

    (42) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 42 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 42 (value_logic -> BOOLFALSE .)
    RPARENT         reduce using rule 42 (value_logic -> BOOLFALSE .)
    RKEY            reduce using rule 42 (value_logic -> BOOLFALSE .)


state 234

    (43) value_logic -> logic_operation .

    DOTANDCOMMA     reduce using rule 43 (value_logic -> logic_operation .)
    COMMA           reduce using rule 43 (value_logic -> logic_operation .)
    RPARENT         reduce using rule 43 (value_logic -> logic_operation .)
    RKEY            reduce using rule 43 (value_logic -> logic_operation .)


state 235

    (37) value_string -> STRING .
    (31) concatenation -> STRING .
    (32) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 31 (concatenation -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 31 (concatenation -> STRING .)
  ! reduce/reduce conflict for RPARENT resolved using rule 31 (concatenation -> STRING .)
  ! reduce/reduce conflict for RKEY resolved using rule 31 (concatenation -> STRING .)
    DOTANDCOMMA     reduce using rule 31 (concatenation -> STRING .)
    COMMA           reduce using rule 31 (concatenation -> STRING .)
    RPARENT         reduce using rule 31 (concatenation -> STRING .)
    RKEY            reduce using rule 31 (concatenation -> STRING .)
    PLUS            shift and go to state 288

  ! DOTANDCOMMA     [ reduce using rule 37 (value_string -> STRING .) ]
  ! COMMA           [ reduce using rule 37 (value_string -> STRING .) ]
  ! RPARENT         [ reduce using rule 37 (value_string -> STRING .) ]
  ! RKEY            [ reduce using rule 37 (value_string -> STRING .) ]


state 236

    (38) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 38 (value_string -> CHAR .)
    COMMA           reduce using rule 38 (value_string -> CHAR .)
    RPARENT         reduce using rule 38 (value_string -> CHAR .)
    RKEY            reduce using rule 38 (value_string -> CHAR .)


state 237

    (40) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 40 (value_string -> concatenation .)
    COMMA           reduce using rule 40 (value_string -> concatenation .)
    RPARENT         reduce using rule 40 (value_string -> concatenation .)
    RKEY            reduce using rule 40 (value_string -> concatenation .)


state 238

    (30) read_data -> READ . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 289


state 239

    (30) read_data -> READ LPARENT RPARENT . DOTANDCOMMA
    (86) assignation_key_value -> READ LPARENT RPARENT .

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 290

  ! DOTANDCOMMA     [ reduce using rule 86 (assignation_key_value -> READ LPARENT RPARENT .) ]


state 240

    (50) arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .
    (47) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for QUEUE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STACK resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RPARENT resolved using rule 47 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    QUEUE           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    STACK           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 47 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 47 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 47 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 47 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 47 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RETURN          reduce using rule 47 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 47 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 47 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 47 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! QUEUE           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! STACK           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LIST            [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FOR             [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TRY             [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DO              [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RETURN          [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RPARENT         [ reduce using rule 50 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]


state 241

    (52) logic_operation -> value_numeric logic_operator INTEGER .

    PRINT           reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    READ            reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    VARIABLE        reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    QUEUE           reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    STACK           reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    CONST           reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    INTEGER         reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    FLOAT_NUMBER    reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    DECIMAL_NUMBER  reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    LIST            reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    DICTIONARY      reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    FOR             reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    FOREACH         reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    TRY             reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    WHILE           reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    DO              reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    PUBLIC          reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    PRIVATE         reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    CHARTYPE        reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    STRINGTYPE      reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    FLOATTYPE       reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    DECIMALTYPE     reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    INTTYPE         reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    BOOLTYPE        reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    RKEY            reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    RETURN          reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    DOTANDCOMMA     reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    COMMA           reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)
    RPARENT         reduce using rule 52 (logic_operation -> value_numeric logic_operator INTEGER .)


state 242

    (162) queue_struct -> QUEUE SMALLER_THAN data_type . GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    GREATER_THAN    shift and go to state 291


state 243

    (79) variable_assignation -> data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    STACK           reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    RETURN          reduce using rule 79 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)


state 244

    (88) assignation_key_value_multiple -> assignation_key_value COMMA . assignation_key_value_multiple
    (87) assignation_key_value_multiple -> . assignation_key_value
    (88) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT

    VARIABLE        shift and go to state 255
    READ            shift and go to state 187

    assignation_key_value          shift and go to state 292
    assignation_key_value_multiple shift and go to state 293

state 245

    (81) variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    STACK           reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    RETURN          reduce using rule 81 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)


state 246

    (83) late_initialization -> data_type VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    QUEUE           reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    STACK           reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    LIST            reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DICTIONARY      reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FOR             reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FOREACH         reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    TRY             reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    WHILE           reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DO              reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    RETURN          reduce using rule 83 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)


state 247

    (86) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 294


state 248

    (151) stack_struct -> STACK VARIABLE ASSIGNATION . NEW STACK LPARENT RPARENT DOTANDCOMMA

    NEW             shift and go to state 295


state 249

    (74) constant_assignation -> access_modifiers CONST data_type . assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> access_modifiers CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (87) assignation_key_value_multiple -> . assignation_key_value
    (88) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 255
    READ            shift and go to state 187

    assignation_key_value          shift and go to state 296
    assignation_key_value_multiple shift and go to state 297

state 250

    (78) variable_assignation -> access_modifiers data_type assignation_key_value . DOTANDCOMMA
    (87) assignation_key_value_multiple -> assignation_key_value .
    (88) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 298
    COMMA           shift and go to state 244

  ! DOTANDCOMMA     [ reduce using rule 87 (assignation_key_value_multiple -> assignation_key_value .) ]


state 251

    (80) variable_assignation -> access_modifiers data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 299


state 252

    (82) late_initialization -> access_modifiers data_type VARIABLE . DOTANDCOMMA
    (85) assignation_key_value -> VARIABLE . ASSIGNATION value

    DOTANDCOMMA     shift and go to state 300
    ASSIGNATION     shift and go to state 164


state 253

    (75) constant_assignation -> CONST data_type assignation_key_value . DOTANDCOMMA
    (87) assignation_key_value_multiple -> assignation_key_value .
    (88) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 301
    COMMA           shift and go to state 244

  ! DOTANDCOMMA     [ reduce using rule 87 (assignation_key_value_multiple -> assignation_key_value .) ]


state 254

    (77) constant_assignation -> CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 302


state 255

    (85) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 164


state 256

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 303


state 257

    (136) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 304


state 258

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 305


state 259

    (104) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (97) logic_operations -> . logic_operation DOTANDCOMMA
    (98) logic_operations -> . logic_operation COMMA logic_operations
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 265
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142

    logic_operations               shift and go to state 306
    logic_operation                shift and go to state 307
    value_numeric                  shift and go to state 264
    arithmetic_operation           shift and go to state 231

state 260

    (89) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (90) assignation_with_datatype -> data_type . assignation_key_value COMMA assignation_with_datatype
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT

    VARIABLE        shift and go to state 255
    READ            shift and go to state 187

    assignation_key_value          shift and go to state 308

state 261

    (106) for_each -> FOREACH LPARENT data_type . VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 309


state 262

    (109) try_catch_simply -> TRY LKEY all_block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    RKEY            shift and go to state 310


state 263

    (113) normal_while -> WHILE LPARENT logic_operation . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 311


state 264

    (52) logic_operation -> value_numeric . logic_operator INTEGER
    (48) arithmetic_operation -> value_numeric .
    (50) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (54) logic_operator -> . GREATER_THAN
    (55) logic_operator -> . SMALLER_THAN
    (56) logic_operator -> . EQUAL_COMPARATION
    (57) logic_operator -> . INEQUALITY
    (58) logic_operator -> . GREATER_THAN_OR_EQUAL
    (59) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (60) logic_operator -> . LOGICAND
    (61) logic_operator -> . LOGICOR
    (62) logic_operator -> . LOGICNOT
    (63) logic_operator -> . LOGICXOR
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    GREATER_THAN    shift and go to state 170
    SMALLER_THAN    shift and go to state 171
    EQUAL_COMPARATION shift and go to state 172
    INEQUALITY      shift and go to state 173
    GREATER_THAN_OR_EQUAL shift and go to state 174
    SMALLER_THAN_OR_EQUAL shift and go to state 175
    LOGICAND        shift and go to state 176
    LOGICOR         shift and go to state 177
    LOGICNOT        shift and go to state 178
    LOGICXOR        shift and go to state 179
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169

  ! GREATER_THAN    [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! PLUS            [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 48 (arithmetic_operation -> value_numeric .) ]

    logic_operator                 shift and go to state 182
    arithmetic_operator            shift and go to state 181

state 265

    (53) logic_operation -> VARIABLE . logic_operator INTEGER
    (49) arithmetic_operation -> VARIABLE .
    (51) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (54) logic_operator -> . GREATER_THAN
    (55) logic_operator -> . SMALLER_THAN
    (56) logic_operator -> . EQUAL_COMPARATION
    (57) logic_operator -> . INEQUALITY
    (58) logic_operator -> . GREATER_THAN_OR_EQUAL
    (59) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (60) logic_operator -> . LOGICAND
    (61) logic_operator -> . LOGICOR
    (62) logic_operator -> . LOGICNOT
    (63) logic_operator -> . LOGICXOR
    (64) arithmetic_operator -> . PLUS
    (65) arithmetic_operator -> . MINUS
    (66) arithmetic_operator -> . TIMES
    (67) arithmetic_operator -> . DIVIDE
    (68) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    GREATER_THAN    shift and go to state 170
    SMALLER_THAN    shift and go to state 171
    EQUAL_COMPARATION shift and go to state 172
    INEQUALITY      shift and go to state 173
    GREATER_THAN_OR_EQUAL shift and go to state 174
    SMALLER_THAN_OR_EQUAL shift and go to state 175
    LOGICAND        shift and go to state 176
    LOGICOR         shift and go to state 177
    LOGICNOT        shift and go to state 178
    LOGICXOR        shift and go to state 179
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    TIMES           shift and go to state 167
    DIVIDE          shift and go to state 168
    PERCENT         shift and go to state 169

  ! GREATER_THAN    [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 49 (arithmetic_operation -> VARIABLE .) ]

    logic_operator                 shift and go to state 162
    arithmetic_operator            shift and go to state 161

state 266

    (114) do_while -> DO LKEY all_block_code . RKEY WHILE LPARENT logic_operation RPARENT

    RKEY            shift and go to state 312


state 267

    (172) simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .

    STATIC          reduce using rule 172 (simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)
    PUBLIC          reduce using rule 172 (simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)
    ACTION          reduce using rule 172 (simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)
    PRIVATE         reduce using rule 172 (simple_method -> STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)


state 268

    (176) function_return -> RETURN value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 313


state 269

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return . RKEY

    RKEY            shift and go to state 314


state 270

    (175) simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .

    STATIC          reduce using rule 175 (simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 175 (simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)
    ACTION          reduce using rule 175 (simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 175 (simple_method -> access_modifiers STATIC VOID METHOD LPARENT function_arguments RPARENT LKEY all_block_code RKEY .)


state 271

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code . RKEY

    RKEY            shift and go to state 315


state 272

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT . METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    METHOD          shift and go to state 316


state 273

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 317


state 274

    (28) print_data -> PRINT LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 318


state 275

    (29) print_data -> PRINT LPARENT VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 319


state 276

    (147) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA
    (169) queue_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA
    (159) stack_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 320


state 277

    (148) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 321


state 278

    (149) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 322


state 279

    (150) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 323


state 280

    (131) dict_func_put -> VARIABLE DOT PUT LPARENT . STRING COMMA VARIABLE RPARENT DOTANDCOMMA

    STRING          shift and go to state 324


state 281

    (132) dict_func_remove -> VARIABLE DOT REMOVE LPARENT . VARIABLE RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 325


state 282

    (167) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT . value RPARENT DOTANDCOMMA
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (36) value -> . read_data
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (43) value_logic -> . logic_operation
    (37) value_string -> . STRING
    (38) value_string -> . CHAR
    (39) value_string -> . VARIABLE
    (40) value_string -> . concatenation
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (31) concatenation -> . STRING
    (32) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    BOOLTRUE        shift and go to state 232
    BOOLFALSE       shift and go to state 233
    STRING          shift and go to state 235
    CHAR            shift and go to state 236
    VARIABLE        shift and go to state 225
    READ            shift and go to state 238

    value                          shift and go to state 326
    value_numeric                  shift and go to state 227
    value_logic                    shift and go to state 228
    value_string                   shift and go to state 229
    read_data                      shift and go to state 230
    arithmetic_operation           shift and go to state 231
    logic_operation                shift and go to state 234
    concatenation                  shift and go to state 237

state 283

    (168) queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 327


state 284

    (171) queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT . RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 328


state 285

    (157) stack_push -> VARIABLE DOT PUSH LPARENT . value RPARENT DOTANDCOMMA
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (36) value -> . read_data
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (43) value_logic -> . logic_operation
    (37) value_string -> . STRING
    (38) value_string -> . CHAR
    (39) value_string -> . VARIABLE
    (40) value_string -> . concatenation
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (31) concatenation -> . STRING
    (32) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    BOOLTRUE        shift and go to state 232
    BOOLFALSE       shift and go to state 233
    STRING          shift and go to state 235
    CHAR            shift and go to state 236
    VARIABLE        shift and go to state 225
    READ            shift and go to state 238

    value                          shift and go to state 329
    value_numeric                  shift and go to state 227
    value_logic                    shift and go to state 228
    value_string                   shift and go to state 229
    read_data                      shift and go to state 230
    arithmetic_operation           shift and go to state 231
    logic_operation                shift and go to state 234
    concatenation                  shift and go to state 237

state 286

    (158) stack_pop -> VARIABLE DOT POP LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 330


state 287

    (160) stack_peek -> VARIABLE DOT PEEK LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 331


state 288

    (32) concatenation -> STRING PLUS . concatenation
    (31) concatenation -> . STRING
    (32) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 332

    concatenation                  shift and go to state 333

state 289

    (30) read_data -> READ LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 334


state 290

    (30) read_data -> READ LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DOTANDCOMMA     reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    COMMA           reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RPARENT         reduce using rule 30 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)


state 291

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN . VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 335


state 292

    (87) assignation_key_value_multiple -> assignation_key_value .
    (88) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

    DOTANDCOMMA     reduce using rule 87 (assignation_key_value_multiple -> assignation_key_value .)
    COMMA           shift and go to state 244


state 293

    (88) assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple .

    DOTANDCOMMA     reduce using rule 88 (assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple .)


state 294

    (86) assignation_key_value -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 86 (assignation_key_value -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 86 (assignation_key_value -> READ LPARENT RPARENT .)


state 295

    (151) stack_struct -> STACK VARIABLE ASSIGNATION NEW . STACK LPARENT RPARENT DOTANDCOMMA

    STACK           shift and go to state 336


state 296

    (74) constant_assignation -> access_modifiers CONST data_type assignation_key_value . DOTANDCOMMA
    (87) assignation_key_value_multiple -> assignation_key_value .
    (88) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 337
    COMMA           shift and go to state 244

  ! DOTANDCOMMA     [ reduce using rule 87 (assignation_key_value_multiple -> assignation_key_value .) ]


state 297

    (76) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 338


state 298

    (78) variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    STACK           reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    RETURN          reduce using rule 78 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)


state 299

    (80) variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    STACK           reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    RETURN          reduce using rule 80 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)


state 300

    (82) late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    QUEUE           reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    STACK           reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    LIST            reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DICTIONARY      reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FOR             reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FOREACH         reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    TRY             reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    WHILE           reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DO              reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    RETURN          reduce using rule 82 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)


state 301

    (75) constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    STACK           reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    RETURN          reduce using rule 75 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)


state 302

    (77) constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STACK           reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RETURN          reduce using rule 77 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 303

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 339


state 304

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 340


state 305

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 341


state 306

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    DOTANDCOMMA     shift and go to state 342


state 307

    (97) logic_operations -> logic_operation . DOTANDCOMMA
    (98) logic_operations -> logic_operation . COMMA logic_operations

    DOTANDCOMMA     shift and go to state 343
    COMMA           shift and go to state 344


state 308

    (89) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (90) assignation_with_datatype -> data_type assignation_key_value . COMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 345
    COMMA           shift and go to state 346


state 309

    (106) for_each -> FOREACH LPARENT data_type VARIABLE . IN VARIABLE RPARENT LKEY all_block_code RKEY

    IN              shift and go to state 347


state 310

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    CATCH           shift and go to state 348


state 311

    (113) normal_while -> WHILE LPARENT logic_operation RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 349


state 312

    (114) do_while -> DO LKEY all_block_code RKEY . WHILE LPARENT logic_operation RPARENT

    WHILE           shift and go to state 350


state 313

    (176) function_return -> RETURN value DOTANDCOMMA .

    RKEY            reduce using rule 176 (function_return -> RETURN value DOTANDCOMMA .)


state 314

    (174) simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .

    STATIC          reduce using rule 174 (simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)
    PUBLIC          reduce using rule 174 (simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)
    ACTION          reduce using rule 174 (simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)
    PRIVATE         reduce using rule 174 (simple_method -> access_modifiers STATIC data_type METHOD LPARENT function_arguments RPARENT LKEY all_block_code function_return RKEY .)


state 315

    (182) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .

    STATIC          reduce using rule 182 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    PUBLIC          reduce using rule 182 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    ACTION          reduce using rule 182 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    PRIVATE         reduce using rule 182 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)


state 316

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD . LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    LPARENT         shift and go to state 351


state 317

    (4) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY .

    RKEY            reduce using rule 4 (block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY .)


state 318

    (28) print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 28 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)


state 319

    (29) print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 29 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)


state 320

    (147) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA
    (169) queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA
    (159) stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 352


state 321

    (148) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 353


state 322

    (149) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 354


state 323

    (150) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 355


state 324

    (131) dict_func_put -> VARIABLE DOT PUT LPARENT STRING . COMMA VARIABLE RPARENT DOTANDCOMMA

    COMMA           shift and go to state 356


state 325

    (132) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 357


state 326

    (167) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 358


state 327

    (168) queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 359


state 328

    (171) queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT . DOTANDCOMMA
    (161) stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 360


state 329

    (157) stack_push -> VARIABLE DOT PUSH LPARENT value . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 361


state 330

    (158) stack_pop -> VARIABLE DOT POP LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 362


state 331

    (160) stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 363


state 332

    (31) concatenation -> STRING .
    (32) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 31 (concatenation -> STRING .)
    COMMA           reduce using rule 31 (concatenation -> STRING .)
    RPARENT         reduce using rule 31 (concatenation -> STRING .)
    RKEY            reduce using rule 31 (concatenation -> STRING .)
    PLUS            shift and go to state 288


state 333

    (32) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 32 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 32 (concatenation -> STRING PLUS concatenation .)
    RPARENT         reduce using rule 32 (concatenation -> STRING PLUS concatenation .)
    RKEY            reduce using rule 32 (concatenation -> STRING PLUS concatenation .)


state 334

    (30) read_data -> READ LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 290


state 335

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE . ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    ASSIGNATION     shift and go to state 364


state 336

    (151) stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 365


state 337

    (74) constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    STACK           reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    RETURN          reduce using rule 74 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)


state 338

    (76) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STACK           reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RETURN          reduce using rule 76 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 339

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 366


state 340

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 367


state 341

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    NEW             shift and go to state 368


state 342

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 369


state 343

    (97) logic_operations -> logic_operation DOTANDCOMMA .

    DOTANDCOMMA     reduce using rule 97 (logic_operations -> logic_operation DOTANDCOMMA .)


state 344

    (98) logic_operations -> logic_operation COMMA . logic_operations
    (97) logic_operations -> . logic_operation DOTANDCOMMA
    (98) logic_operations -> . logic_operation COMMA logic_operations
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 265
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142

    logic_operation                shift and go to state 307
    logic_operations               shift and go to state 370
    value_numeric                  shift and go to state 264
    arithmetic_operation           shift and go to state 231

state 345

    (89) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 89 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 89 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 89 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 89 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)


state 346

    (90) assignation_with_datatype -> data_type assignation_key_value COMMA . assignation_with_datatype
    (89) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (90) assignation_with_datatype -> . data_type assignation_key_value COMMA assignation_with_datatype
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 260
    assignation_with_datatype      shift and go to state 371

state 347

    (106) for_each -> FOREACH LPARENT data_type VARIABLE IN . VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 372


state 348

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LPARENT         shift and go to state 373


state 349

    (113) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY . all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    logic_operation                shift and go to state 90
    all_block_code                 shift and go to state 374
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 350

    (114) do_while -> DO LKEY all_block_code RKEY WHILE . LPARENT logic_operation RPARENT

    LPARENT         shift and go to state 375


state 351

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT . LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    LPARENT         shift and go to state 376


state 352

    (147) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .
    (169) queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .
    (159) stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

  ! reduce/reduce conflict for PRINT resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for READ resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for QUEUE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STACK resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CONST resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTEGER resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for LIST resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOR resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for TRY resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DO resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RKEY resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for READ resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for QUEUE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STACK resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CONST resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTEGER resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for LIST resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOR resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for TRY resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DO resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RKEY resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 147 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)

  ! PRINT           [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! READ            [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! VARIABLE        [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! QUEUE           [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! STACK           [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! CONST           [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTEGER         [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOAT_NUMBER    [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! LIST            [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DICTIONARY      [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOR             [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOREACH         [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! TRY             [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! WHILE           [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DO              [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PUBLIC          [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PRIVATE         [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! RKEY            [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! RETURN          [ reduce using rule 169 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PRINT           [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! READ            [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! VARIABLE        [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! QUEUE           [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! STACK           [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! CONST           [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTEGER         [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOAT_NUMBER    [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! LIST            [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DICTIONARY      [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOR             [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOREACH         [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! TRY             [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! WHILE           [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DO              [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PUBLIC          [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PRIVATE         [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! RKEY            [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! RETURN          [ reduce using rule 159 (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]


state 353

    (148) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 148 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)


state 354

    (149) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 377


state 355

    (150) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 378


state 356

    (131) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA . VARIABLE RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 379


state 357

    (132) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 380


state 358

    (167) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 381


state 359

    (168) queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 168 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)


state 360

    (171) queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .
    (161) stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .

  ! reduce/reduce conflict for PRINT resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for READ resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for QUEUE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STACK resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CONST resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTEGER resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for LIST resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOR resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for TRY resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DO resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RKEY resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 161 (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)

  ! PRINT           [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! READ            [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! VARIABLE        [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! QUEUE           [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! STACK           [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! CONST           [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTEGER         [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOAT_NUMBER    [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! LIST            [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! DICTIONARY      [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOR             [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOREACH         [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! TRY             [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! WHILE           [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! DO              [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! PUBLIC          [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! PRIVATE         [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! RKEY            [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]
  ! RETURN          [ reduce using rule 171 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .) ]


state 361

    (157) stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 382


state 362

    (158) stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 158 (stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA .)


state 363

    (160) stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 160 (stack_peek -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)


state 364

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION . NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    NEW             shift and go to state 383


state 365

    (151) stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 384


state 366

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    NEW             shift and go to state 385


state 367

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    NEW             shift and go to state 386


state 368

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 387


state 369

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY all_block_code RKEY

    INCREMENT       shift and go to state 388
    DECREMENT       shift and go to state 389


state 370

    (98) logic_operations -> logic_operation COMMA logic_operations .

    DOTANDCOMMA     reduce using rule 98 (logic_operations -> logic_operation COMMA logic_operations .)


state 371

    (90) assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .

    VARIABLE        reduce using rule 90 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)
    INTEGER         reduce using rule 90 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)
    FLOAT_NUMBER    reduce using rule 90 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)
    DECIMAL_NUMBER  reduce using rule 90 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)


state 372

    (106) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 390


state 373

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    EXCEPTION       shift and go to state 391


state 374

    (113) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 392


state 375

    (114) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT . logic_operation RPARENT
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 265
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142

    logic_operation                shift and go to state 393
    value_numeric                  shift and go to state 264
    arithmetic_operation           shift and go to state 231

state 376

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT . RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    RPARENT         shift and go to state 394


state 377

    (149) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 149 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 378

    (150) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    READ            reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DO              reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 150 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)


state 379

    (131) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 395


state 380

    (132) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 132 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)


state 381

    (167) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    READ            reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DO              reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 167 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)


state 382

    (157) stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    READ            reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    DO              reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 157 (stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA .)


state 383

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW . QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    QUEUE           shift and go to state 396


state 384

    (151) stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 397


state 385

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    LIST            shift and go to state 398


state 386

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    LIST            shift and go to state 399


state 387

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 400


state 388

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 401


state 389

    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY for_anidado RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 402


state 390

    (106) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 403


state 391

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    VARIABLE        shift and go to state 404


state 392

    (113) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    STACK           reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    RETURN          reduce using rule 113 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)


state 393

    (114) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation . RPARENT

    RPARENT         shift and go to state 405


state 394

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT . ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    ARROW           shift and go to state 406


state 395

    (131) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 407


state 396

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE . SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    SMALLER_THAN    shift and go to state 408


state 397

    (151) stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 151 (stack_struct -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA .)


state 398

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 409


state 399

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 410


state 400

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 411


state 401

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 412


state 402

    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY for_anidado RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 413


state 403

    (106) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY . all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 121
    all_block_code                 shift and go to state 414
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 404

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    RPARENT         shift and go to state 415


state 405

    (114) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .

    PRINT           reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    READ            reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    VARIABLE        reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    QUEUE           reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STACK           reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CONST           reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTEGER         reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOAT_NUMBER    reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMAL_NUMBER  reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    LIST            reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DICTIONARY      reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOR             reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOREACH         reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    TRY             reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    WHILE           reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DO              reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PUBLIC          reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRIVATE         reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CHARTYPE        reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRINGTYPE      reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOATTYPE       reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMALTYPE     reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTTYPE         reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    BOOLTYPE        reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RKEY            reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RETURN          reduce using rule 114 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)


state 406

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW . LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY

    LKEY            shift and go to state 416


state 407

    (131) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 131 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)


state 408

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN . data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    data_type                      shift and go to state 417

state 409

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    STRINGTYPE      shift and go to state 418


state 410

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    INTTYPE         shift and go to state 419


state 411

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    LPARENT         shift and go to state 420


state 412

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . for_anidado RKEY
    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . all_block_code RKEY
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT

    FOR             shift and go to state 146
    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    for_anidado                    shift and go to state 421
    all_block_code                 shift and go to state 422
    for_simple                     shift and go to state 145
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140

state 413

    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . for_anidado RKEY
    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . all_block_code RKEY
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT

    FOR             shift and go to state 146
    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    for_anidado                    shift and go to state 423
    all_block_code                 shift and go to state 424
    for_simple                     shift and go to state 145
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140

state 414

    (106) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 425


state 415

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LKEY            shift and go to state 426


state 416

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY . block_code RKEY RPARENT DOTANDCOMMA RKEY
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    block_code                     shift and go to state 427
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 417

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type . GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    GREATER_THAN    shift and go to state 428


state 418

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 429


state 419

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 430


state 420

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    RPARENT         shift and go to state 431


state 421

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado . RKEY
    (99) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 432
    PRINT           reduce using rule 99 (block_for -> for_anidado .)
    READ            reduce using rule 99 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 99 (block_for -> for_anidado .)
    QUEUE           reduce using rule 99 (block_for -> for_anidado .)
    STACK           reduce using rule 99 (block_for -> for_anidado .)
    CONST           reduce using rule 99 (block_for -> for_anidado .)
    INTEGER         reduce using rule 99 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 99 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 99 (block_for -> for_anidado .)
    LIST            reduce using rule 99 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 99 (block_for -> for_anidado .)
    FOR             reduce using rule 99 (block_for -> for_anidado .)
    FOREACH         reduce using rule 99 (block_for -> for_anidado .)
    TRY             reduce using rule 99 (block_for -> for_anidado .)
    WHILE           reduce using rule 99 (block_for -> for_anidado .)
    DO              reduce using rule 99 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 99 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 99 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 99 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 99 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 99 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 99 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 99 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 99 (block_for -> for_anidado .)

  ! RKEY            [ reduce using rule 99 (block_for -> for_anidado .) ]


state 422

    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 433


state 423

    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado . RKEY
    (99) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 434
    PRINT           reduce using rule 99 (block_for -> for_anidado .)
    READ            reduce using rule 99 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 99 (block_for -> for_anidado .)
    QUEUE           reduce using rule 99 (block_for -> for_anidado .)
    STACK           reduce using rule 99 (block_for -> for_anidado .)
    CONST           reduce using rule 99 (block_for -> for_anidado .)
    INTEGER         reduce using rule 99 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 99 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 99 (block_for -> for_anidado .)
    LIST            reduce using rule 99 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 99 (block_for -> for_anidado .)
    FOR             reduce using rule 99 (block_for -> for_anidado .)
    FOREACH         reduce using rule 99 (block_for -> for_anidado .)
    TRY             reduce using rule 99 (block_for -> for_anidado .)
    WHILE           reduce using rule 99 (block_for -> for_anidado .)
    DO              reduce using rule 99 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 99 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 99 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 99 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 99 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 99 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 99 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 99 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 99 (block_for -> for_anidado .)

  ! RKEY            [ reduce using rule 99 (block_for -> for_anidado .) ]


state 424

    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 435


state 425

    (106) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    STACK           reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    RETURN          reduce using rule 106 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)


state 426

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . all_block_code RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    all_block_code                 shift and go to state 436
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 427

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code . RKEY RPARENT DOTANDCOMMA RKEY

    RKEY            shift and go to state 437


state 428

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 438


state 429

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    LPARENT         shift and go to state 439


state 430

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    LPARENT         shift and go to state 440


state 431

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY key_value_pairs RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 441
    LKEY            shift and go to state 442


state 432

    (104) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .

    PRINT           reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    READ            reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    VARIABLE        reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    QUEUE           reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    STACK           reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTEGER         reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOAT_NUMBER    reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMAL_NUMBER  reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    RETURN          reduce using rule 104 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)


state 433

    (101) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    STACK           reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    RETURN          reduce using rule 101 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)


state 434

    (105) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .

    PRINT           reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    READ            reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    VARIABLE        reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    QUEUE           reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    STACK           reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTEGER         reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOAT_NUMBER    reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMAL_NUMBER  reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    RETURN          reduce using rule 105 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)


state 435

    (102) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    STACK           reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    RETURN          reduce using rule 102 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)


state 436

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code . RKEY
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code . RKEY FINALLY LKEY all_block_code RKEY

    RKEY            shift and go to state 443


state 437

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY . RPARENT DOTANDCOMMA RKEY

    RPARENT         shift and go to state 444


state 438

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 445


state 439

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY DOTANDCOMMA

    RPARENT         shift and go to state 446


state 440

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY DOTANDCOMMA

    RPARENT         shift and go to state 447


state 441

    (122) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 122 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 442

    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . key_value_pairs RKEY DOTANDCOMMA
    (124) key_value_pairs -> . key_value_pair
    (125) key_value_pairs -> . key_value_pair COMMA key_value_pairs
    (126) key_value_pair -> . LKEY VARIABLE COMMA value RKEY

    LKEY            shift and go to state 448

    key_value_pairs                shift and go to state 449
    key_value_pair                 shift and go to state 450

state 443

    (109) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .
    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY . FINALLY LKEY all_block_code RKEY

    PRINT           reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    STACK           reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    RETURN          reduce using rule 109 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FINALLY         shift and go to state 451


state 444

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT . DOTANDCOMMA RKEY

    DOTANDCOMMA     shift and go to state 452


state 445

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 453


state 446

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 454
    LKEY            shift and go to state 455


state 447

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 456
    LKEY            shift and go to state 457


state 448

    (126) key_value_pair -> LKEY . VARIABLE COMMA value RKEY

    VARIABLE        shift and go to state 458


state 449

    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs . RKEY DOTANDCOMMA

    RKEY            shift and go to state 459


state 450

    (124) key_value_pairs -> key_value_pair .
    (125) key_value_pairs -> key_value_pair . COMMA key_value_pairs

    RKEY            reduce using rule 124 (key_value_pairs -> key_value_pair .)
    COMMA           shift and go to state 460


state 451

    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY . LKEY all_block_code RKEY

    LKEY            shift and go to state 461


state 452

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA . RKEY

    RKEY            shift and go to state 462


state 453

    (162) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 162 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 454

    (135) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 135 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 455

    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY DOTANDCOMMA
    (139) strings_list -> . STRING
    (140) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 464

    strings_list                   shift and go to state 463

state 456

    (136) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STACK           reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RETURN          reduce using rule 136 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 457

    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY DOTANDCOMMA
    (141) ints_list -> . INTEGER
    (142) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 466

    ints_list                      shift and go to state 465

state 458

    (126) key_value_pair -> LKEY VARIABLE . COMMA value RKEY

    COMMA           shift and go to state 467


state 459

    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 468


state 460

    (125) key_value_pairs -> key_value_pair COMMA . key_value_pairs
    (124) key_value_pairs -> . key_value_pair
    (125) key_value_pairs -> . key_value_pair COMMA key_value_pairs
    (126) key_value_pair -> . LKEY VARIABLE COMMA value RKEY

    LKEY            shift and go to state 448

    key_value_pair                 shift and go to state 450
    key_value_pairs                shift and go to state 469

state 461

    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY . all_block_code RKEY
    (21) all_block_code -> . block_code
    (22) all_block_code -> . block_code all_block_code
    (5) block_code -> . def_const_or_var
    (6) block_code -> . print_data
    (7) block_code -> . read_data
    (8) block_code -> . arithmetic_operation
    (9) block_code -> . logic_operation
    (10) block_code -> . lists
    (11) block_code -> . functions_list
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_dict
    (14) block_code -> . queue_struct
    (15) block_code -> . functions_queue
    (16) block_code -> . stack_struct
    (17) block_code -> . functions_stack
    (18) block_code -> . block_for
    (19) block_code -> . block_try_catch
    (20) block_code -> . block_while
    (71) def_const_or_var -> . constant_assignation
    (72) def_const_or_var -> . variable_assignation
    (73) def_const_or_var -> . late_initialization
    (28) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (29) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (133) lists -> . list_empty
    (134) lists -> . list_full
    (143) functions_list -> . list_func_clear
    (144) functions_list -> . list_func_count
    (145) functions_list -> . list_func_add
    (146) functions_list -> . list_func_removeat
    (120) dict_estruct -> . dict_empty
    (121) dict_estruct -> . dict_full
    (129) functions_dict -> . dict_func_put
    (130) functions_dict -> . dict_func_remove
    (162) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (163) functions_queue -> . queue_enqueue
    (164) functions_queue -> . queue_dequeue
    (165) functions_queue -> . queue_clear
    (166) functions_queue -> . queue_isEmpty
    (151) stack_struct -> . STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
    (152) functions_stack -> . stack_push
    (153) functions_stack -> . stack_pop
    (154) functions_stack -> . stack_clear
    (155) functions_stack -> . stack_peek
    (156) functions_stack -> . stack_isEmpty
    (99) block_for -> . for_anidado
    (100) block_for -> . for_each
    (107) block_try_catch -> . try_catch_simply
    (108) block_try_catch -> . try_catch_finally
    (111) block_while -> . normal_while
    (112) block_while -> . do_while
    (74) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (75) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (76) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (77) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (78) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (79) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (80) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (81) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (83) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (84) late_initialization -> . assignation_key_value DOTANDCOMMA
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (135) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (136) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (137) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (138) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (147) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (148) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (149) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (150) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (123) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (131) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (132) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (167) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (168) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (169) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (171) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (157) stack_push -> . VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
    (158) stack_pop -> . VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
    (159) stack_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (160) stack_peek -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (161) stack_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (103) for_anidado -> . for_simple
    (104) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (105) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (106) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (109) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (110) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (113) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (114) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (69) access_modifiers -> . PUBLIC
    (70) access_modifiers -> . PRIVATE
    (91) data_type -> . CHARTYPE
    (92) data_type -> . STRINGTYPE
    (93) data_type -> . FLOATTYPE
    (94) data_type -> . DECIMALTYPE
    (95) data_type -> . INTTYPE
    (96) data_type -> . BOOLTYPE
    (85) assignation_key_value -> . VARIABLE ASSIGNATION value
    (86) assignation_key_value -> . READ LPARENT RPARENT
    (101) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (102) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 105
    READ            shift and go to state 107
    VARIABLE        shift and go to state 106
    QUEUE           shift and go to state 120
    STACK           shift and go to state 126
    CONST           shift and go to state 139
    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    LIST            shift and go to state 143
    DICTIONARY      shift and go to state 144
    FOR             shift and go to state 146
    FOREACH         shift and go to state 147
    TRY             shift and go to state 148
    WHILE           shift and go to state 149
    DO              shift and go to state 150
    PUBLIC          shift and go to state 151
    PRIVATE         shift and go to state 20
    CHARTYPE        shift and go to state 30
    STRINGTYPE      shift and go to state 28
    FLOATTYPE       shift and go to state 31
    DECIMALTYPE     shift and go to state 32
    INTTYPE         shift and go to state 33
    BOOLTYPE        shift and go to state 34

    all_block_code                 shift and go to state 470
    block_code                     shift and go to state 85
    def_const_or_var               shift and go to state 86
    print_data                     shift and go to state 87
    read_data                      shift and go to state 88
    arithmetic_operation           shift and go to state 89
    logic_operation                shift and go to state 90
    lists                          shift and go to state 91
    functions_list                 shift and go to state 92
    dict_estruct                   shift and go to state 93
    functions_dict                 shift and go to state 94
    queue_struct                   shift and go to state 95
    functions_queue                shift and go to state 96
    stack_struct                   shift and go to state 97
    functions_stack                shift and go to state 98
    block_for                      shift and go to state 99
    block_try_catch                shift and go to state 100
    block_while                    shift and go to state 101
    constant_assignation           shift and go to state 102
    variable_assignation           shift and go to state 103
    late_initialization            shift and go to state 104
    value_numeric                  shift and go to state 108
    list_empty                     shift and go to state 110
    list_full                      shift and go to state 111
    list_func_clear                shift and go to state 112
    list_func_count                shift and go to state 113
    list_func_add                  shift and go to state 114
    list_func_removeat             shift and go to state 115
    dict_empty                     shift and go to state 116
    dict_full                      shift and go to state 117
    dict_func_put                  shift and go to state 118
    dict_func_remove               shift and go to state 119
    data_type                      shift and go to state 121
    queue_enqueue                  shift and go to state 122
    queue_dequeue                  shift and go to state 123
    queue_clear                    shift and go to state 124
    queue_isEmpty                  shift and go to state 125
    stack_push                     shift and go to state 127
    stack_pop                      shift and go to state 128
    stack_clear                    shift and go to state 129
    stack_peek                     shift and go to state 130
    stack_isEmpty                  shift and go to state 131
    for_anidado                    shift and go to state 132
    for_each                       shift and go to state 133
    try_catch_simply               shift and go to state 134
    try_catch_finally              shift and go to state 135
    normal_while                   shift and go to state 136
    do_while                       shift and go to state 137
    access_modifiers               shift and go to state 138
    assignation_key_value          shift and go to state 140
    for_simple                     shift and go to state 145

state 462

    (181) declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY .

    STATIC          reduce using rule 181 (declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY .)
    PUBLIC          reduce using rule 181 (declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY .)
    ACTION          reduce using rule 181 (declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY .)
    PRIVATE         reduce using rule 181 (declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY .)


state 463

    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY DOTANDCOMMA

    RKEY            shift and go to state 471


state 464

    (139) strings_list -> STRING .
    (140) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 139 (strings_list -> STRING .)
    COMMA           shift and go to state 472


state 465

    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY DOTANDCOMMA

    RKEY            shift and go to state 473


state 466

    (141) ints_list -> INTEGER .
    (142) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 141 (ints_list -> INTEGER .)
    COMMA           shift and go to state 474


state 467

    (126) key_value_pair -> LKEY VARIABLE COMMA . value RKEY
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (36) value -> . read_data
    (44) value_numeric -> . INTEGER
    (45) value_numeric -> . FLOAT_NUMBER
    (46) value_numeric -> . DECIMAL_NUMBER
    (47) value_numeric -> . arithmetic_operation
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (43) value_logic -> . logic_operation
    (37) value_string -> . STRING
    (38) value_string -> . CHAR
    (39) value_string -> . VARIABLE
    (40) value_string -> . concatenation
    (30) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (48) arithmetic_operation -> . value_numeric
    (49) arithmetic_operation -> . VARIABLE
    (50) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (51) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (52) logic_operation -> . value_numeric logic_operator INTEGER
    (53) logic_operation -> . VARIABLE logic_operator INTEGER
    (31) concatenation -> . STRING
    (32) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 109
    FLOAT_NUMBER    shift and go to state 141
    DECIMAL_NUMBER  shift and go to state 142
    BOOLTRUE        shift and go to state 232
    BOOLFALSE       shift and go to state 233
    STRING          shift and go to state 235
    CHAR            shift and go to state 236
    VARIABLE        shift and go to state 225
    READ            shift and go to state 238

    value                          shift and go to state 475
    value_numeric                  shift and go to state 227
    value_logic                    shift and go to state 228
    value_string                   shift and go to state 229
    read_data                      shift and go to state 230
    arithmetic_operation           shift and go to state 231
    logic_operation                shift and go to state 234
    concatenation                  shift and go to state 237

state 468

    (123) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .

    PRINT           reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    READ            reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    QUEUE           reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    STACK           reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    CONST           reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    LIST            reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FOR             reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    TRY             reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DO              reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    RETURN          reduce using rule 123 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)


state 469

    (125) key_value_pairs -> key_value_pair COMMA key_value_pairs .

    RKEY            reduce using rule 125 (key_value_pairs -> key_value_pair COMMA key_value_pairs .)


state 470

    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code . RKEY

    RKEY            shift and go to state 476


state 471

    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 477


state 472

    (140) strings_list -> STRING COMMA . strings_list
    (139) strings_list -> . STRING
    (140) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 464

    strings_list                   shift and go to state 478

state 473

    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 479


state 474

    (142) ints_list -> INTEGER COMMA . ints_list
    (141) ints_list -> . INTEGER
    (142) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 466

    ints_list                      shift and go to state 480

state 475

    (126) key_value_pair -> LKEY VARIABLE COMMA value . RKEY

    RKEY            shift and go to state 481


state 476

    (110) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .

    PRINT           reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    READ            reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    STACK           reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    CONST           reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    LIST            reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FOR             reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    TRY             reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    WHILE           reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DO              reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    RKEY            reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    RETURN          reduce using rule 110 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)


state 477

    (137) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .

    PRINT           reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    READ            reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    QUEUE           reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    STACK           reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    CONST           reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    LIST            reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FOR             reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    TRY             reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DO              reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    RETURN          reduce using rule 137 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)


state 478

    (140) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 140 (strings_list -> STRING COMMA strings_list .)


state 479

    (138) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .

    PRINT           reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    READ            reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    QUEUE           reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    STACK           reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    CONST           reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    LIST            reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FOR             reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    TRY             reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DO              reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    RETURN          reduce using rule 138 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)


state 480

    (142) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 142 (ints_list -> INTEGER COMMA ints_list .)


state 481

    (126) key_value_pair -> LKEY VARIABLE COMMA value RKEY .

    COMMA           reduce using rule 126 (key_value_pair -> LKEY VARIABLE COMMA value RKEY .)
    RKEY            reduce using rule 126 (key_value_pair -> LKEY VARIABLE COMMA value RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STATIC in state 10 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 106 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 106 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 106 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 106 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 106 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 106 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 106 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 106 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 106 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 108 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 108 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 108 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 108 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 108 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 108 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 108 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 108 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 108 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 184 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 209 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 209 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 209 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 209 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 209 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 211 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 211 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 211 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 211 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 211 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 225 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 225 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 225 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 225 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 225 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 225 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 225 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 225 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 225 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 225 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 225 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 225 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 225 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 225 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 225 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 227 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 227 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 227 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 227 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 227 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 227 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 227 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 227 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 227 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 227 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 227 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 227 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 227 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 227 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 227 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 239 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 250 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 253 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 264 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 264 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 264 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 264 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 264 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 264 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 264 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 264 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 264 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 264 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 264 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 264 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 264 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 264 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 264 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 265 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 265 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 265 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 265 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 265 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 265 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 265 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 265 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 265 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 265 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 265 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 265 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 265 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 265 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 265 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 296 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 421 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 423 resolved as shift
WARNING: reduce/reduce conflict in state 89 resolved using rule (block_code -> arithmetic_operation)
WARNING: rejected rule (value_numeric -> arithmetic_operation) in state 89
WARNING: reduce/reduce conflict in state 210 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) in state 210
WARNING: reduce/reduce conflict in state 225 resolved using rule (value_string -> VARIABLE)
WARNING: rejected rule (arithmetic_operation -> VARIABLE) in state 225
WARNING: reduce/reduce conflict in state 227 resolved using rule (value -> value_numeric)
WARNING: rejected rule (arithmetic_operation -> value_numeric) in state 227
WARNING: reduce/reduce conflict in state 235 resolved using rule (concatenation -> STRING)
WARNING: rejected rule (value_string -> STRING) in state 235
WARNING: reduce/reduce conflict in state 240 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) in state 240
WARNING: reduce/reduce conflict in state 352 resolved using rule (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA)
WARNING: rejected rule (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA) in state 352
WARNING: reduce/reduce conflict in state 352 resolved using rule (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA)
WARNING: rejected rule (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA) in state 352
WARNING: reduce/reduce conflict in state 360 resolved using rule (stack_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA)
WARNING: rejected rule (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA) in state 360
WARNING: Rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) is never reduced
WARNING: Rule (value_string -> STRING) is never reduced
WARNING: Rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) is never reduced
WARNING: Rule (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA) is never reduced
WARNING: Rule (stack_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA) is never reduced
WARNING: Rule (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA) is never reduced
