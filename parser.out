Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLE_QUOTATION_MARKS
    ID
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> USING SYSTEM DOTANDCOMMA block_publicClass
Rule 2     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 3     block_code -> def_const_or_var
Rule 4     block_code -> print_data
Rule 5     block_code -> read_data
Rule 6     block_code -> arithmetic_operation
Rule 7     block_code -> logic_operation
Rule 8     all_block_code -> block_code
Rule 9     all_block_code -> block_code all_block_code
Rule 10    print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA
Rule 11    read_data -> READ LPARENT RPARENT DOTANDCOMMA
Rule 12    concatenation -> STRING
Rule 13    concatenation -> STRING PLUS concatenation
Rule 14    value -> value_numeric
Rule 15    value -> value_logic
Rule 16    value -> value_string
Rule 17    value -> read_data
Rule 18    value_string -> STRING
Rule 19    value_string -> CHAR
Rule 20    value_string -> VARIABLE
Rule 21    value_string -> concatenation
Rule 22    value_logic -> BOOLTRUE
Rule 23    value_logic -> BOOLFALSE
Rule 24    value_logic -> logic_operation
Rule 25    value_numeric -> INTEGER
Rule 26    value_numeric -> FLOAT_NUMBER
Rule 27    value_numeric -> DECIMAL_NUMBER
Rule 28    value_numeric -> arithmetic_operation
Rule 29    arithmetic_operation -> value_numeric
Rule 30    arithmetic_operation -> VARIABLE
Rule 31    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 32    arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation
Rule 33    logic_operation -> value_numeric
Rule 34    logic_operation -> VARIABLE
Rule 35    logic_operation -> value_numeric logic_operator logic_operation
Rule 36    logic_operation -> VARIABLE logic_operator logic_operation
Rule 37    logic_operator -> GREATER_THAN
Rule 38    logic_operator -> SMALLER_THAN
Rule 39    logic_operator -> EQUAL_COMPARATION
Rule 40    logic_operator -> INEQUALITY
Rule 41    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 42    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 43    logic_operator -> LOGICAND
Rule 44    logic_operator -> LOGICOR
Rule 45    logic_operator -> LOGICNOT
Rule 46    logic_operator -> LOGICXOR
Rule 47    arithmetic_operator -> PLUS
Rule 48    arithmetic_operator -> MINUS
Rule 49    arithmetic_operator -> TIMES
Rule 50    arithmetic_operator -> DIVIDE
Rule 51    arithmetic_operator -> PERCENT
Rule 52    access_modifiers -> PUBLIC
Rule 53    access_modifiers -> PRIVATE
Rule 54    def_const_or_var -> constant_assignation
Rule 55    def_const_or_var -> variable_assignation
Rule 56    def_const_or_var -> late_initialization
Rule 57    constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
Rule 58    constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA
Rule 59    constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 60    constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 61    variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA
Rule 62    variable_assignation -> data_type assignation_key_value DOTANDCOMMA
Rule 63    variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
Rule 64    variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA
Rule 65    late_initialization -> access_modifiers VARIABLE DOTANDCOMMA
Rule 66    late_initialization -> VARIABLE DOTANDCOMMA
Rule 67    late_initialization -> assignation_key_value DOTANDCOMMA
Rule 68    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 69    assignation_key_value -> READ LPARENT RPARENT
Rule 70    assignation_key_value_multiple -> VARIABLE ASSIGNATION value
Rule 71    assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple
Rule 72    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 73    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 74    data_type -> CHARTYPE
Rule 75    data_type -> STRINGTYPE
Rule 76    data_type -> FLOATTYPE
Rule 77    data_type -> DECIMALTYPE
Rule 78    data_type -> INTTYPE
Rule 79    data_type -> BOOLTYPE
Rule 80    block_for -> for_anidado
Rule 81    block_for -> for_each
Rule 82    for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
Rule 83    for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
Rule 84    for_anidado -> for_simple
Rule 85    for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
Rule 86    for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
Rule 87    for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
Rule 88    block_try_catch -> try_catch_simply
Rule 89    block_try_catch -> try_catch_finally
Rule 90    try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
Rule 91    try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
Rule 92    block_while -> normal_while
Rule 93    block_while -> do_while
Rule 94    normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
Rule 95    do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 96    block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 97    other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 98    other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 99    not_yes_nested_if -> block_if
Rule 100   not_yes_nested_if -> block_code
Rule 101   dict_estruct -> dict_empty
Rule 102   dict_estruct -> dict_full
Rule 103   dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 104   dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 105   dictionary_value -> LKEY key_value_pair RKEY
Rule 106   key_value_pairs -> key_value_pair
Rule 107   key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 108   key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 109   valueHash -> INTTYPE
Rule 110   estruct_of_data -> list_empty
Rule 111   estruct_of_data -> list_full
Rule 112   functions_dict -> dict_func_put
Rule 113   functions_dict -> dict_func_remove
Rule 114   dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
Rule 115   dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
Rule 116   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 117   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 118   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 119   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 120   strings_list -> STRING
Rule 121   strings_list -> STRING COMMA strings_list
Rule 122   ints_list -> INTEGER
Rule 123   ints_list -> INTEGER COMMA ints_list
Rule 124   functions_list -> list_func_clear
Rule 125   functions_list -> list_func_count
Rule 126   functions_list -> list_func_add
Rule 127   functions_list -> list_func_removeat
Rule 128   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 129   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 130   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 131   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 132   stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
Rule 133   stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
Rule 134   stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
<<<<<<< HEAD
Rule 135   queue_assignation -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA
Rule 136   queue_push -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
Rule 137   queue_pop -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
Rule 138   declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
Rule 139   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

Terminals, with rules where they appear

ACTION               : 139
ADD                  : 130
ADDITION_ASSIGNMENT  : 
ARROW                : 138 139
ASSIGNATION          : 68 70 71 103 104 116 117 118 119 132 135 139
ASYNC                : 138
AWAIT                : 138
=======
Rule 135   queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 136   queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
Rule 137   queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
Rule 138   queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 139   queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
Rule 140   queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
Rule 141   declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
Rule 142   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

Terminals, with rules where they appear

ACTION               : 142
ADD                  : 130
ADDITION_ASSIGNMENT  : 
ARROW                : 141 142
ASSIGNATION          : 68 70 71 103 104 116 117 118 119 132 135 142
ASYNC                : 141
AWAIT                : 141
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 23
BOOLTRUE             : 22
BOOLTYPE             : 79
BREAK                : 
CATCH                : 90 91
CHAR                 : 19
CHARTYPE             : 74
CLASS                : 2
CLEAR                : 128 138
COMMA                : 71 107 114 121 123
CONST                : 57 58 59 60
COUNT                : 129
DECIMALTYPE          : 77
DECIMAL_NUMBER       : 27
DECREMENT            : 83 86
DEQUEUE              : 137
DICTIONARY           : 103 103 104 104
DIVIDE               : 50
DIVISION_ASSIGNMENT  : 
DO                   : 95
DOLLARSIGN           : 
<<<<<<< HEAD
DOT                  : 114 115 128 129 130 131 133 134 136 137 138
DOTANDCOMMA          : 1 10 11 57 58 59 60 61 62 63 64 65 66 67 72 73 82 83 85 86 103 104 114 115 116 117 128 129 130 131 132 133 134 135 136 137 138
=======
DOT                  : 114 115 128 129 130 131 133 134 136 137 138 139 140 141
DOTANDCOMMA          : 1 10 11 57 58 59 60 61 62 63 64 65 66 67 72 73 82 83 85 86 103 104 114 115 116 117 128 129 130 131 132 133 134 135 136 137 138 139 140 141
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
DOUBLEPOINT          : 108
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 97
ELSE_IF              : 98
ENQUEUE              : 136
EQUAL_COMPARATION    : 39
EXCEPTION            : 90 91
FINALLY              : 91
FLOATTYPE            : 76
FLOAT_NUMBER         : 26
FOR                  : 82 83 85 86
FOREACH              : 87
<<<<<<< HEAD
GREATER_THAN         : 37 103 103 104 104 116 116 117 117 118 118 119 119 139
=======
GREATER_THAN         : 37 103 103 104 104 116 116 117 117 118 118 119 119 135 135 142
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
GREATER_THAN_OR_EQUAL : 41
ID                   : 
IF                   : 96
IN                   : 87
INCREMENT            : 82 85
INEQUALITY           : 40
INTEGER              : 25 122 123 131
INTTYPE              : 78 109 117 117 119 119
ISEMPTY              : 140
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 116 116 117 117 118 118 119 119
<<<<<<< HEAD
LKEY                 : 2 82 83 85 86 87 90 90 91 91 91 94 95 96 97 98 104 105 118 119 138 138 139
=======
LKEY                 : 2 82 83 85 86 87 90 90 91 91 91 94 95 96 97 98 104 105 118 119 141 141 142
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
LOGICAND             : 43
LOGICNOT             : 45
LOGICOR              : 44
LOGICXOR             : 46
LONG                 : 
<<<<<<< HEAD
LPARENT              : 10 11 69 82 83 85 86 87 90 91 94 95 96 98 103 104 114 115 116 117 118 119 128 129 130 131 132 133 134 135 136 137 138 138 138
METHOD               : 138 138
=======
LPARENT              : 10 11 69 82 83 85 86 87 90 91 94 95 96 98 103 104 114 115 116 117 118 119 128 129 130 131 132 133 134 135 136 137 138 139 140 141 141 141
METHOD               : 141 141
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
MINUS                : 48
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 103 104 116 117 118 119 132 135
<<<<<<< HEAD
=======
PEEK                 : 139
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
PERCENT              : 51
PIPE                 : 
PLUS                 : 13 47
POP                  : 134
PRINT                : 10
PRIVATE              : 53
<<<<<<< HEAD
PUBLIC               : 2 52 138
=======
PUBLIC               : 2 52 141
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
PUSH                 : 133
PUT                  : 114
QUEUE                : 135 135
RBRACKET             : 
READ                 : 11 69
REMOVE               : 115
REMOVEAT             : 131
RETURN               : 
<<<<<<< HEAD
RKEY                 : 2 82 83 85 86 87 90 90 91 91 91 94 95 96 97 98 104 105 118 119 138 138 139
RPARENT              : 10 11 69 82 83 85 86 87 90 91 94 95 96 98 103 104 114 115 116 117 118 119 128 129 130 131 132 133 134 135 136 137 138 138 138
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 38 103 103 104 104 116 116 117 117 118 118 119 119 139
SMALLER_THAN_OR_EQUAL : 42
STACK                : 132 132
STATIC               : 138
STRING               : 10 12 13 18 108 114 114 114 115 115 120 121 130
STRINGTYPE           : 75 116 116 118 118 139
=======
RKEY                 : 2 82 83 85 86 87 90 90 91 91 91 94 95 96 97 98 104 105 118 119 141 141 142
RPARENT              : 10 11 69 82 83 85 86 87 90 91 94 95 96 98 103 104 114 115 116 117 118 119 128 129 130 131 132 133 134 135 136 137 138 139 140 141 141 141
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 38 103 103 104 104 116 116 117 117 118 118 119 119 135 135 142
SMALLER_THAN_OR_EQUAL : 42
STACK                : 132 132
STATIC               : 141
STRING               : 10 12 13 18 108 114 114 114 115 115 120 121 130
STRINGTYPE           : 75 116 116 118 118 142
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 1
TABULATION           : 
<<<<<<< HEAD
TASK                 : 138 138
TIMES                : 49
TRY                  : 90 91
USING                : 1
VARIABLE             : 2 20 30 32 34 36 65 66 68 70 71 82 83 85 86 87 87 90 91 103 104 116 117 118 119 128 129 130 131 132 133 134 135 136 137 139 139
=======
TASK                 : 141 141
TIMES                : 49
TRY                  : 90 91
USING                : 1
VARIABLE             : 2 20 30 32 34 36 65 66 68 70 71 82 83 85 86 87 87 90 91 103 104 116 117 118 119 128 129 130 131 132 133 134 135 136 137 138 139 140 142 142
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
VOID                 : 
WHILE                : 94 95
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 57 59 61 63 65
all_block_code       : 2 9 82 83 87 90 90 91 91 91 94 95
arithmetic_operation : 6 28 31 32
arithmetic_operator  : 31 32
assignation_key_value : 57 58 61 62 67 72 73
assignation_key_value_multiple : 59 60 63 64 71
assignation_with_datatype : 73 82 83 85 86
<<<<<<< HEAD
block_code           : 8 9 100 138 139
=======
block_code           : 8 9 100 141 142
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
block_for            : 
block_if             : 99
block_publicClass    : 1
block_try_catch      : 
block_while          : 
concatenation        : 13 21
constant_assignation : 54
<<<<<<< HEAD
data_type            : 57 58 59 60 61 62 63 64 72 73 87
=======
data_type            : 57 58 59 60 61 62 63 64 72 73 87 135 135
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
declaration_async    : 
declaration_lambda   : 
def_const_or_var     : 3
dict_empty           : 101
dict_estruct         : 
dict_full            : 102
dict_func_put        : 112
dict_func_remove     : 113
dictionary_value     : 104
do_while             : 93
estruct_of_data      : 
for_anidado          : 80 85 86
for_each             : 81
for_simple           : 84
functions_dict       : 
functions_list       : 
ints_list            : 119 123
key_value_pair       : 105 106 107
key_value_pairs      : 107
late_initialization  : 56
list_empty           : 110
list_full            : 111
list_func_add        : 126
list_func_clear      : 124
list_func_count      : 125
list_func_removeat   : 127
logic_operation      : 7 24 35 36 82 83 85 86 94 95 96 98
logic_operator       : 35 36
normal_while         : 92
not_yes_nested_if    : 96 97 98
other_if             : 96 98
print_data           : 4
program              : 0
<<<<<<< HEAD
queue_assignation    : 
queue_pop            : 
queue_push           : 
=======
queue_clear          : 
queue_dequeue        : 
queue_enqueue        : 
queue_isEmpty        : 
queue_struct         : 
>>>>>>> ccd8847a19d25d91855d03aa7da92431a54d79ec
read_data            : 5 17
stack_assignation    : 
stack_pop            : 
stack_push           : 
strings_list         : 118 121
try_catch_finally    : 89
try_catch_simply     : 88
value                : 68 70 71 133 136
valueHash            : 108
value_logic          : 15
value_numeric        : 14 29 31 33 35
value_string         : 16
variable_assignation : 55

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . USING SYSTEM DOTANDCOMMA block_publicClass

    USING           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> USING . SYSTEM DOTANDCOMMA block_publicClass

    SYSTEM          shift and go to state 3


state 3

    (1) program -> USING SYSTEM . DOTANDCOMMA block_publicClass

    DOTANDCOMMA     shift and go to state 4


state 4

    (1) program -> USING SYSTEM DOTANDCOMMA . block_publicClass
    (2) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 6

    block_publicClass              shift and go to state 5

state 5

    (1) program -> USING SYSTEM DOTANDCOMMA block_publicClass .

    $end            reduce using rule 1 (program -> USING SYSTEM DOTANDCOMMA block_publicClass .)


state 6

    (2) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 7

    (2) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 8


state 8

    (2) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 9


state 9

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (8) all_block_code -> . block_code
    (9) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (54) def_const_or_var -> . constant_assignation
    (55) def_const_or_var -> . variable_assignation
    (56) def_const_or_var -> . late_initialization
    (10) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (11) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (57) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (58) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (59) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (60) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (61) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (62) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (63) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (64) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (65) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (66) late_initialization -> . VARIABLE DOTANDCOMMA
    (67) late_initialization -> . assignation_key_value DOTANDCOMMA
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (52) access_modifiers -> . PUBLIC
    (53) access_modifiers -> . PRIVATE
    (74) data_type -> . CHARTYPE
    (75) data_type -> . STRINGTYPE
    (76) data_type -> . FLOATTYPE
    (77) data_type -> . DECIMALTYPE
    (78) data_type -> . INTTYPE
    (79) data_type -> . BOOLTYPE
    (68) assignation_key_value -> . VARIABLE ASSIGNATION value
    (69) assignation_key_value -> . READ LPARENT RPARENT

    PRINT           shift and go to state 22
    READ            shift and go to state 23
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 26
    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 32
    CHARTYPE        shift and go to state 33
    STRINGTYPE      shift and go to state 34
    FLOATTYPE       shift and go to state 35
    DECIMALTYPE     shift and go to state 36
    INTTYPE         shift and go to state 37
    BOOLTYPE        shift and go to state 38

    all_block_code                 shift and go to state 12
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    constant_assignation           shift and go to state 19
    variable_assignation           shift and go to state 20
    late_initialization            shift and go to state 21
    value_numeric                  shift and go to state 24
    access_modifiers               shift and go to state 25
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28

state 10

    (52) access_modifiers -> PUBLIC .

    CONST           reduce using rule 52 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 52 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 52 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 52 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 52 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 52 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 52 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 52 (access_modifiers -> PUBLIC .)


state 11

    (30) arithmetic_operation -> VARIABLE .
    (32) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (34) logic_operation -> VARIABLE .
    (36) logic_operation -> VARIABLE . logic_operator logic_operation
    (66) late_initialization -> VARIABLE . DOTANDCOMMA
    (68) assignation_key_value -> VARIABLE . ASSIGNATION value
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT
    (37) logic_operator -> . GREATER_THAN
    (38) logic_operator -> . SMALLER_THAN
    (39) logic_operator -> . EQUAL_COMPARATION
    (40) logic_operator -> . INEQUALITY
    (41) logic_operator -> . GREATER_THAN_OR_EQUAL
    (42) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (43) logic_operator -> . LOGICAND
    (44) logic_operator -> . LOGICOR
    (45) logic_operator -> . LOGICNOT
    (46) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for PRINT resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for READ resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTEGER resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     shift and go to state 41
    ASSIGNATION     shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47
    GREATER_THAN    shift and go to state 48
    SMALLER_THAN    shift and go to state 49
    EQUAL_COMPARATION shift and go to state 50
    INEQUALITY      shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    SMALLER_THAN_OR_EQUAL shift and go to state 53
    LOGICAND        shift and go to state 54
    LOGICOR         shift and go to state 55
    LOGICNOT        shift and go to state 56
    LOGICXOR        shift and go to state 57

  ! PLUS            [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! READ            [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! CONST           [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! INTEGER         [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! FLOAT_NUMBER    [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! PUBLIC          [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! PRIVATE         [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! CHARTYPE        [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! STRINGTYPE      [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! FLOATTYPE       [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! DECIMALTYPE     [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! INTTYPE         [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! BOOLTYPE        [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 34 (logic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 39
    logic_operator                 shift and go to state 40

state 12

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY

    RKEY            shift and go to state 58


state 13

    (8) all_block_code -> block_code .
    (9) all_block_code -> block_code . all_block_code
    (8) all_block_code -> . block_code
    (9) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (54) def_const_or_var -> . constant_assignation
    (55) def_const_or_var -> . variable_assignation
    (56) def_const_or_var -> . late_initialization
    (10) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (11) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (57) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (58) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (59) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (60) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (61) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (62) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (63) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (64) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (65) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (66) late_initialization -> . VARIABLE DOTANDCOMMA
    (67) late_initialization -> . assignation_key_value DOTANDCOMMA
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (52) access_modifiers -> . PUBLIC
    (53) access_modifiers -> . PRIVATE
    (74) data_type -> . CHARTYPE
    (75) data_type -> . STRINGTYPE
    (76) data_type -> . FLOATTYPE
    (77) data_type -> . DECIMALTYPE
    (78) data_type -> . INTTYPE
    (79) data_type -> . BOOLTYPE
    (68) assignation_key_value -> . VARIABLE ASSIGNATION value
    (69) assignation_key_value -> . READ LPARENT RPARENT

    RKEY            reduce using rule 8 (all_block_code -> block_code .)
    PRINT           shift and go to state 22
    READ            shift and go to state 23
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 26
    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 32
    CHARTYPE        shift and go to state 33
    STRINGTYPE      shift and go to state 34
    FLOATTYPE       shift and go to state 35
    DECIMALTYPE     shift and go to state 36
    INTTYPE         shift and go to state 37
    BOOLTYPE        shift and go to state 38

    block_code                     shift and go to state 13
    all_block_code                 shift and go to state 59
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    constant_assignation           shift and go to state 19
    variable_assignation           shift and go to state 20
    late_initialization            shift and go to state 21
    value_numeric                  shift and go to state 24
    access_modifiers               shift and go to state 25
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28

state 14

    (3) block_code -> def_const_or_var .

    PRINT           reduce using rule 3 (block_code -> def_const_or_var .)
    READ            reduce using rule 3 (block_code -> def_const_or_var .)
    VARIABLE        reduce using rule 3 (block_code -> def_const_or_var .)
    CONST           reduce using rule 3 (block_code -> def_const_or_var .)
    INTEGER         reduce using rule 3 (block_code -> def_const_or_var .)
    FLOAT_NUMBER    reduce using rule 3 (block_code -> def_const_or_var .)
    DECIMAL_NUMBER  reduce using rule 3 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 3 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 3 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 3 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 3 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 3 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 3 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 3 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 3 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 3 (block_code -> def_const_or_var .)


state 15

    (4) block_code -> print_data .

    PRINT           reduce using rule 4 (block_code -> print_data .)
    READ            reduce using rule 4 (block_code -> print_data .)
    VARIABLE        reduce using rule 4 (block_code -> print_data .)
    CONST           reduce using rule 4 (block_code -> print_data .)
    INTEGER         reduce using rule 4 (block_code -> print_data .)
    FLOAT_NUMBER    reduce using rule 4 (block_code -> print_data .)
    DECIMAL_NUMBER  reduce using rule 4 (block_code -> print_data .)
    PUBLIC          reduce using rule 4 (block_code -> print_data .)
    PRIVATE         reduce using rule 4 (block_code -> print_data .)
    CHARTYPE        reduce using rule 4 (block_code -> print_data .)
    STRINGTYPE      reduce using rule 4 (block_code -> print_data .)
    FLOATTYPE       reduce using rule 4 (block_code -> print_data .)
    DECIMALTYPE     reduce using rule 4 (block_code -> print_data .)
    INTTYPE         reduce using rule 4 (block_code -> print_data .)
    BOOLTYPE        reduce using rule 4 (block_code -> print_data .)
    RKEY            reduce using rule 4 (block_code -> print_data .)


state 16

    (5) block_code -> read_data .

    PRINT           reduce using rule 5 (block_code -> read_data .)
    READ            reduce using rule 5 (block_code -> read_data .)
    VARIABLE        reduce using rule 5 (block_code -> read_data .)
    CONST           reduce using rule 5 (block_code -> read_data .)
    INTEGER         reduce using rule 5 (block_code -> read_data .)
    FLOAT_NUMBER    reduce using rule 5 (block_code -> read_data .)
    DECIMAL_NUMBER  reduce using rule 5 (block_code -> read_data .)
    PUBLIC          reduce using rule 5 (block_code -> read_data .)
    PRIVATE         reduce using rule 5 (block_code -> read_data .)
    CHARTYPE        reduce using rule 5 (block_code -> read_data .)
    STRINGTYPE      reduce using rule 5 (block_code -> read_data .)
    FLOATTYPE       reduce using rule 5 (block_code -> read_data .)
    DECIMALTYPE     reduce using rule 5 (block_code -> read_data .)
    INTTYPE         reduce using rule 5 (block_code -> read_data .)
    BOOLTYPE        reduce using rule 5 (block_code -> read_data .)
    RKEY            reduce using rule 5 (block_code -> read_data .)


state 17

    (6) block_code -> arithmetic_operation .
    (28) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 6 (block_code -> arithmetic_operation .)
    PRINT           reduce using rule 6 (block_code -> arithmetic_operation .)
    READ            reduce using rule 6 (block_code -> arithmetic_operation .)
    VARIABLE        reduce using rule 6 (block_code -> arithmetic_operation .)
    CONST           reduce using rule 6 (block_code -> arithmetic_operation .)
    INTEGER         reduce using rule 6 (block_code -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 6 (block_code -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 6 (block_code -> arithmetic_operation .)
    PUBLIC          reduce using rule 6 (block_code -> arithmetic_operation .)
    PRIVATE         reduce using rule 6 (block_code -> arithmetic_operation .)
    CHARTYPE        reduce using rule 6 (block_code -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 6 (block_code -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 6 (block_code -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 6 (block_code -> arithmetic_operation .)
    INTTYPE         reduce using rule 6 (block_code -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 6 (block_code -> arithmetic_operation .)
    RKEY            reduce using rule 6 (block_code -> arithmetic_operation .)
    PLUS            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 28 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! READ            [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! CONST           [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 28 (value_numeric -> arithmetic_operation .) ]


state 18

    (7) block_code -> logic_operation .

    PRINT           reduce using rule 7 (block_code -> logic_operation .)
    READ            reduce using rule 7 (block_code -> logic_operation .)
    VARIABLE        reduce using rule 7 (block_code -> logic_operation .)
    CONST           reduce using rule 7 (block_code -> logic_operation .)
    INTEGER         reduce using rule 7 (block_code -> logic_operation .)
    FLOAT_NUMBER    reduce using rule 7 (block_code -> logic_operation .)
    DECIMAL_NUMBER  reduce using rule 7 (block_code -> logic_operation .)
    PUBLIC          reduce using rule 7 (block_code -> logic_operation .)
    PRIVATE         reduce using rule 7 (block_code -> logic_operation .)
    CHARTYPE        reduce using rule 7 (block_code -> logic_operation .)
    STRINGTYPE      reduce using rule 7 (block_code -> logic_operation .)
    FLOATTYPE       reduce using rule 7 (block_code -> logic_operation .)
    DECIMALTYPE     reduce using rule 7 (block_code -> logic_operation .)
    INTTYPE         reduce using rule 7 (block_code -> logic_operation .)
    BOOLTYPE        reduce using rule 7 (block_code -> logic_operation .)
    RKEY            reduce using rule 7 (block_code -> logic_operation .)


state 19

    (54) def_const_or_var -> constant_assignation .

    PRINT           reduce using rule 54 (def_const_or_var -> constant_assignation .)
    READ            reduce using rule 54 (def_const_or_var -> constant_assignation .)
    VARIABLE        reduce using rule 54 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 54 (def_const_or_var -> constant_assignation .)
    INTEGER         reduce using rule 54 (def_const_or_var -> constant_assignation .)
    FLOAT_NUMBER    reduce using rule 54 (def_const_or_var -> constant_assignation .)
    DECIMAL_NUMBER  reduce using rule 54 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 54 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 54 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 54 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 54 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 54 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 54 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 54 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 54 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 54 (def_const_or_var -> constant_assignation .)


state 20

    (55) def_const_or_var -> variable_assignation .

    PRINT           reduce using rule 55 (def_const_or_var -> variable_assignation .)
    READ            reduce using rule 55 (def_const_or_var -> variable_assignation .)
    VARIABLE        reduce using rule 55 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 55 (def_const_or_var -> variable_assignation .)
    INTEGER         reduce using rule 55 (def_const_or_var -> variable_assignation .)
    FLOAT_NUMBER    reduce using rule 55 (def_const_or_var -> variable_assignation .)
    DECIMAL_NUMBER  reduce using rule 55 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 55 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 55 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 55 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 55 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 55 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 55 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 55 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 55 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 55 (def_const_or_var -> variable_assignation .)


state 21

    (56) def_const_or_var -> late_initialization .

    PRINT           reduce using rule 56 (def_const_or_var -> late_initialization .)
    READ            reduce using rule 56 (def_const_or_var -> late_initialization .)
    VARIABLE        reduce using rule 56 (def_const_or_var -> late_initialization .)
    CONST           reduce using rule 56 (def_const_or_var -> late_initialization .)
    INTEGER         reduce using rule 56 (def_const_or_var -> late_initialization .)
    FLOAT_NUMBER    reduce using rule 56 (def_const_or_var -> late_initialization .)
    DECIMAL_NUMBER  reduce using rule 56 (def_const_or_var -> late_initialization .)
    PUBLIC          reduce using rule 56 (def_const_or_var -> late_initialization .)
    PRIVATE         reduce using rule 56 (def_const_or_var -> late_initialization .)
    CHARTYPE        reduce using rule 56 (def_const_or_var -> late_initialization .)
    STRINGTYPE      reduce using rule 56 (def_const_or_var -> late_initialization .)
    FLOATTYPE       reduce using rule 56 (def_const_or_var -> late_initialization .)
    DECIMALTYPE     reduce using rule 56 (def_const_or_var -> late_initialization .)
    INTTYPE         reduce using rule 56 (def_const_or_var -> late_initialization .)
    BOOLTYPE        reduce using rule 56 (def_const_or_var -> late_initialization .)
    RKEY            reduce using rule 56 (def_const_or_var -> late_initialization .)


state 22

    (10) print_data -> PRINT . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 60


state 23

    (11) read_data -> READ . LPARENT RPARENT DOTANDCOMMA
    (69) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 61


state 24

    (29) arithmetic_operation -> value_numeric .
    (31) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (33) logic_operation -> value_numeric .
    (35) logic_operation -> value_numeric . logic_operator logic_operation
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT
    (37) logic_operator -> . GREATER_THAN
    (38) logic_operator -> . SMALLER_THAN
    (39) logic_operator -> . EQUAL_COMPARATION
    (40) logic_operator -> . INEQUALITY
    (41) logic_operator -> . GREATER_THAN_OR_EQUAL
    (42) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (43) logic_operator -> . LOGICAND
    (44) logic_operator -> . LOGICOR
    (45) logic_operator -> . LOGICNOT
    (46) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for PRINT resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for READ resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CONST resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTEGER resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 29 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 29 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47
    GREATER_THAN    shift and go to state 48
    SMALLER_THAN    shift and go to state 49
    EQUAL_COMPARATION shift and go to state 50
    INEQUALITY      shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    SMALLER_THAN_OR_EQUAL shift and go to state 53
    LOGICAND        shift and go to state 54
    LOGICOR         shift and go to state 55
    LOGICNOT        shift and go to state 56
    LOGICXOR        shift and go to state 57

  ! PLUS            [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! PRINT           [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! READ            [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! VARIABLE        [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! CONST           [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! INTEGER         [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! FLOAT_NUMBER    [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! PUBLIC          [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! PRIVATE         [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! CHARTYPE        [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! STRINGTYPE      [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! FLOATTYPE       [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! DECIMALTYPE     [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! INTTYPE         [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! BOOLTYPE        [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 33 (logic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 62
    logic_operator                 shift and go to state 63

state 25

    (57) constant_assignation -> access_modifiers . CONST data_type assignation_key_value DOTANDCOMMA
    (59) constant_assignation -> access_modifiers . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (61) variable_assignation -> access_modifiers . data_type assignation_key_value DOTANDCOMMA
    (63) variable_assignation -> access_modifiers . data_type assignation_key_value_multiple DOTANDCOMMA
    (65) late_initialization -> access_modifiers . VARIABLE DOTANDCOMMA
    (74) data_type -> . CHARTYPE
    (75) data_type -> . STRINGTYPE
    (76) data_type -> . FLOATTYPE
    (77) data_type -> . DECIMALTYPE
    (78) data_type -> . INTTYPE
    (79) data_type -> . BOOLTYPE

    CONST           shift and go to state 64
    VARIABLE        shift and go to state 66
    CHARTYPE        shift and go to state 33
    STRINGTYPE      shift and go to state 34
    FLOATTYPE       shift and go to state 35
    DECIMALTYPE     shift and go to state 36
    INTTYPE         shift and go to state 37
    BOOLTYPE        shift and go to state 38

    data_type                      shift and go to state 65

state 26

    (58) constant_assignation -> CONST . data_type assignation_key_value DOTANDCOMMA
    (60) constant_assignation -> CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (74) data_type -> . CHARTYPE
    (75) data_type -> . STRINGTYPE
    (76) data_type -> . FLOATTYPE
    (77) data_type -> . DECIMALTYPE
    (78) data_type -> . INTTYPE
    (79) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 33
    STRINGTYPE      shift and go to state 34
    FLOATTYPE       shift and go to state 35
    DECIMALTYPE     shift and go to state 36
    INTTYPE         shift and go to state 37
    BOOLTYPE        shift and go to state 38

    data_type                      shift and go to state 67

state 27

    (62) variable_assignation -> data_type . assignation_key_value DOTANDCOMMA
    (64) variable_assignation -> data_type . assignation_key_value_multiple DOTANDCOMMA
    (68) assignation_key_value -> . VARIABLE ASSIGNATION value
    (69) assignation_key_value -> . READ LPARENT RPARENT
    (70) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (71) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 70
    READ            shift and go to state 71

    assignation_key_value          shift and go to state 68
    assignation_key_value_multiple shift and go to state 69

state 28

    (67) late_initialization -> assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 72


state 29

    (25) value_numeric -> INTEGER .

    PRINT           reduce using rule 25 (value_numeric -> INTEGER .)
    READ            reduce using rule 25 (value_numeric -> INTEGER .)
    VARIABLE        reduce using rule 25 (value_numeric -> INTEGER .)
    CONST           reduce using rule 25 (value_numeric -> INTEGER .)
    INTEGER         reduce using rule 25 (value_numeric -> INTEGER .)
    FLOAT_NUMBER    reduce using rule 25 (value_numeric -> INTEGER .)
    DECIMAL_NUMBER  reduce using rule 25 (value_numeric -> INTEGER .)
    PUBLIC          reduce using rule 25 (value_numeric -> INTEGER .)
    PRIVATE         reduce using rule 25 (value_numeric -> INTEGER .)
    CHARTYPE        reduce using rule 25 (value_numeric -> INTEGER .)
    STRINGTYPE      reduce using rule 25 (value_numeric -> INTEGER .)
    FLOATTYPE       reduce using rule 25 (value_numeric -> INTEGER .)
    DECIMALTYPE     reduce using rule 25 (value_numeric -> INTEGER .)
    INTTYPE         reduce using rule 25 (value_numeric -> INTEGER .)
    BOOLTYPE        reduce using rule 25 (value_numeric -> INTEGER .)
    RKEY            reduce using rule 25 (value_numeric -> INTEGER .)
    PLUS            reduce using rule 25 (value_numeric -> INTEGER .)
    MINUS           reduce using rule 25 (value_numeric -> INTEGER .)
    TIMES           reduce using rule 25 (value_numeric -> INTEGER .)
    DIVIDE          reduce using rule 25 (value_numeric -> INTEGER .)
    PERCENT         reduce using rule 25 (value_numeric -> INTEGER .)
    GREATER_THAN    reduce using rule 25 (value_numeric -> INTEGER .)
    SMALLER_THAN    reduce using rule 25 (value_numeric -> INTEGER .)
    EQUAL_COMPARATION reduce using rule 25 (value_numeric -> INTEGER .)
    INEQUALITY      reduce using rule 25 (value_numeric -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 25 (value_numeric -> INTEGER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 25 (value_numeric -> INTEGER .)
    LOGICAND        reduce using rule 25 (value_numeric -> INTEGER .)
    LOGICOR         reduce using rule 25 (value_numeric -> INTEGER .)
    LOGICNOT        reduce using rule 25 (value_numeric -> INTEGER .)
    LOGICXOR        reduce using rule 25 (value_numeric -> INTEGER .)
    DOTANDCOMMA     reduce using rule 25 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 25 (value_numeric -> INTEGER .)


state 30

    (26) value_numeric -> FLOAT_NUMBER .

    PRINT           reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    READ            reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    VARIABLE        reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    CONST           reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    INTEGER         reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    PUBLIC          reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    PRIVATE         reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    CHARTYPE        reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    STRINGTYPE      reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    FLOATTYPE       reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    DECIMALTYPE     reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    INTTYPE         reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    BOOLTYPE        reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    RKEY            reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    PLUS            reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    MINUS           reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    TIMES           reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    PERCENT         reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN    reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    EQUAL_COMPARATION reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    INEQUALITY      reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    LOGICAND        reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    LOGICOR         reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    LOGICNOT        reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    LOGICXOR        reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    DOTANDCOMMA     reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 26 (value_numeric -> FLOAT_NUMBER .)


state 31

    (27) value_numeric -> DECIMAL_NUMBER .

    PRINT           reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    READ            reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    VARIABLE        reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    CONST           reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    INTEGER         reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    FLOAT_NUMBER    reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    PUBLIC          reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    PRIVATE         reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    CHARTYPE        reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    STRINGTYPE      reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    FLOATTYPE       reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    DECIMALTYPE     reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    INTTYPE         reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    BOOLTYPE        reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    RKEY            reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    PLUS            reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    MINUS           reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    TIMES           reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    DIVIDE          reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    PERCENT         reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN    reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN    reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    EQUAL_COMPARATION reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    INEQUALITY      reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    LOGICAND        reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    LOGICOR         reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    LOGICNOT        reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    LOGICXOR        reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    DOTANDCOMMA     reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 27 (value_numeric -> DECIMAL_NUMBER .)


state 32

    (53) access_modifiers -> PRIVATE .

    CONST           reduce using rule 53 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 53 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 53 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 53 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 53 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 53 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 53 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 53 (access_modifiers -> PRIVATE .)


state 33

    (74) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 74 (data_type -> CHARTYPE .)
    READ            reduce using rule 74 (data_type -> CHARTYPE .)


state 34

    (75) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 75 (data_type -> STRINGTYPE .)
    READ            reduce using rule 75 (data_type -> STRINGTYPE .)


state 35

    (76) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 76 (data_type -> FLOATTYPE .)
    READ            reduce using rule 76 (data_type -> FLOATTYPE .)


state 36

    (77) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 77 (data_type -> DECIMALTYPE .)
    READ            reduce using rule 77 (data_type -> DECIMALTYPE .)


state 37

    (78) data_type -> INTTYPE .

    VARIABLE        reduce using rule 78 (data_type -> INTTYPE .)
    READ            reduce using rule 78 (data_type -> INTTYPE .)


state 38

    (79) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 79 (data_type -> BOOLTYPE .)
    READ            reduce using rule 79 (data_type -> BOOLTYPE .)


state 39

    (32) arithmetic_operation -> VARIABLE arithmetic_operator . arithmetic_operation
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 73
    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31

    arithmetic_operation           shift and go to state 74
    value_numeric                  shift and go to state 75

state 40

    (36) logic_operation -> VARIABLE logic_operator . logic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 76
    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31

    logic_operation                shift and go to state 77
    value_numeric                  shift and go to state 78
    arithmetic_operation           shift and go to state 79

state 41

    (66) late_initialization -> VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 66 (late_initialization -> VARIABLE DOTANDCOMMA .)


state 42

    (68) assignation_key_value -> VARIABLE ASSIGNATION . value
    (14) value -> . value_numeric
    (15) value -> . value_logic
    (16) value -> . value_string
    (17) value -> . read_data
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (22) value_logic -> . BOOLTRUE
    (23) value_logic -> . BOOLFALSE
    (24) value_logic -> . logic_operation
    (18) value_string -> . STRING
    (19) value_string -> . CHAR
    (20) value_string -> . VARIABLE
    (21) value_string -> . concatenation
    (11) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (12) concatenation -> . STRING
    (13) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31
    BOOLTRUE        shift and go to state 86
    BOOLFALSE       shift and go to state 87
    STRING          shift and go to state 89
    CHAR            shift and go to state 90
    VARIABLE        shift and go to state 80
    READ            shift and go to state 92

    value                          shift and go to state 81
    value_numeric                  shift and go to state 82
    value_logic                    shift and go to state 83
    value_string                   shift and go to state 84
    read_data                      shift and go to state 85
    arithmetic_operation           shift and go to state 79
    logic_operation                shift and go to state 88
    concatenation                  shift and go to state 91

state 43

    (47) arithmetic_operator -> PLUS .

    VARIABLE        reduce using rule 47 (arithmetic_operator -> PLUS .)
    INTEGER         reduce using rule 47 (arithmetic_operator -> PLUS .)
    FLOAT_NUMBER    reduce using rule 47 (arithmetic_operator -> PLUS .)
    DECIMAL_NUMBER  reduce using rule 47 (arithmetic_operator -> PLUS .)


state 44

    (48) arithmetic_operator -> MINUS .

    VARIABLE        reduce using rule 48 (arithmetic_operator -> MINUS .)
    INTEGER         reduce using rule 48 (arithmetic_operator -> MINUS .)
    FLOAT_NUMBER    reduce using rule 48 (arithmetic_operator -> MINUS .)
    DECIMAL_NUMBER  reduce using rule 48 (arithmetic_operator -> MINUS .)


state 45

    (49) arithmetic_operator -> TIMES .

    VARIABLE        reduce using rule 49 (arithmetic_operator -> TIMES .)
    INTEGER         reduce using rule 49 (arithmetic_operator -> TIMES .)
    FLOAT_NUMBER    reduce using rule 49 (arithmetic_operator -> TIMES .)
    DECIMAL_NUMBER  reduce using rule 49 (arithmetic_operator -> TIMES .)


state 46

    (50) arithmetic_operator -> DIVIDE .

    VARIABLE        reduce using rule 50 (arithmetic_operator -> DIVIDE .)
    INTEGER         reduce using rule 50 (arithmetic_operator -> DIVIDE .)
    FLOAT_NUMBER    reduce using rule 50 (arithmetic_operator -> DIVIDE .)
    DECIMAL_NUMBER  reduce using rule 50 (arithmetic_operator -> DIVIDE .)


state 47

    (51) arithmetic_operator -> PERCENT .

    VARIABLE        reduce using rule 51 (arithmetic_operator -> PERCENT .)
    INTEGER         reduce using rule 51 (arithmetic_operator -> PERCENT .)
    FLOAT_NUMBER    reduce using rule 51 (arithmetic_operator -> PERCENT .)
    DECIMAL_NUMBER  reduce using rule 51 (arithmetic_operator -> PERCENT .)


state 48

    (37) logic_operator -> GREATER_THAN .

    VARIABLE        reduce using rule 37 (logic_operator -> GREATER_THAN .)
    INTEGER         reduce using rule 37 (logic_operator -> GREATER_THAN .)
    FLOAT_NUMBER    reduce using rule 37 (logic_operator -> GREATER_THAN .)
    DECIMAL_NUMBER  reduce using rule 37 (logic_operator -> GREATER_THAN .)


state 49

    (38) logic_operator -> SMALLER_THAN .

    VARIABLE        reduce using rule 38 (logic_operator -> SMALLER_THAN .)
    INTEGER         reduce using rule 38 (logic_operator -> SMALLER_THAN .)
    FLOAT_NUMBER    reduce using rule 38 (logic_operator -> SMALLER_THAN .)
    DECIMAL_NUMBER  reduce using rule 38 (logic_operator -> SMALLER_THAN .)


state 50

    (39) logic_operator -> EQUAL_COMPARATION .

    VARIABLE        reduce using rule 39 (logic_operator -> EQUAL_COMPARATION .)
    INTEGER         reduce using rule 39 (logic_operator -> EQUAL_COMPARATION .)
    FLOAT_NUMBER    reduce using rule 39 (logic_operator -> EQUAL_COMPARATION .)
    DECIMAL_NUMBER  reduce using rule 39 (logic_operator -> EQUAL_COMPARATION .)


state 51

    (40) logic_operator -> INEQUALITY .

    VARIABLE        reduce using rule 40 (logic_operator -> INEQUALITY .)
    INTEGER         reduce using rule 40 (logic_operator -> INEQUALITY .)
    FLOAT_NUMBER    reduce using rule 40 (logic_operator -> INEQUALITY .)
    DECIMAL_NUMBER  reduce using rule 40 (logic_operator -> INEQUALITY .)


state 52

    (41) logic_operator -> GREATER_THAN_OR_EQUAL .

    VARIABLE        reduce using rule 41 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    INTEGER         reduce using rule 41 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    FLOAT_NUMBER    reduce using rule 41 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    DECIMAL_NUMBER  reduce using rule 41 (logic_operator -> GREATER_THAN_OR_EQUAL .)


state 53

    (42) logic_operator -> SMALLER_THAN_OR_EQUAL .

    VARIABLE        reduce using rule 42 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    INTEGER         reduce using rule 42 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    FLOAT_NUMBER    reduce using rule 42 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    DECIMAL_NUMBER  reduce using rule 42 (logic_operator -> SMALLER_THAN_OR_EQUAL .)


state 54

    (43) logic_operator -> LOGICAND .

    VARIABLE        reduce using rule 43 (logic_operator -> LOGICAND .)
    INTEGER         reduce using rule 43 (logic_operator -> LOGICAND .)
    FLOAT_NUMBER    reduce using rule 43 (logic_operator -> LOGICAND .)
    DECIMAL_NUMBER  reduce using rule 43 (logic_operator -> LOGICAND .)


state 55

    (44) logic_operator -> LOGICOR .

    VARIABLE        reduce using rule 44 (logic_operator -> LOGICOR .)
    INTEGER         reduce using rule 44 (logic_operator -> LOGICOR .)
    FLOAT_NUMBER    reduce using rule 44 (logic_operator -> LOGICOR .)
    DECIMAL_NUMBER  reduce using rule 44 (logic_operator -> LOGICOR .)


state 56

    (45) logic_operator -> LOGICNOT .

    VARIABLE        reduce using rule 45 (logic_operator -> LOGICNOT .)
    INTEGER         reduce using rule 45 (logic_operator -> LOGICNOT .)
    FLOAT_NUMBER    reduce using rule 45 (logic_operator -> LOGICNOT .)
    DECIMAL_NUMBER  reduce using rule 45 (logic_operator -> LOGICNOT .)


state 57

    (46) logic_operator -> LOGICXOR .

    VARIABLE        reduce using rule 46 (logic_operator -> LOGICXOR .)
    INTEGER         reduce using rule 46 (logic_operator -> LOGICXOR .)
    FLOAT_NUMBER    reduce using rule 46 (logic_operator -> LOGICXOR .)
    DECIMAL_NUMBER  reduce using rule 46 (logic_operator -> LOGICXOR .)


state 58

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 2 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)


state 59

    (9) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 9 (all_block_code -> block_code all_block_code .)


state 60

    (10) print_data -> PRINT LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 93


state 61

    (11) read_data -> READ LPARENT . RPARENT DOTANDCOMMA
    (69) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 94


state 62

    (31) arithmetic_operation -> value_numeric arithmetic_operator . arithmetic_operation
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 73
    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31

    value_numeric                  shift and go to state 75
    arithmetic_operation           shift and go to state 95

state 63

    (35) logic_operation -> value_numeric logic_operator . logic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 76
    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31

    value_numeric                  shift and go to state 78
    logic_operation                shift and go to state 96
    arithmetic_operation           shift and go to state 79

state 64

    (57) constant_assignation -> access_modifiers CONST . data_type assignation_key_value DOTANDCOMMA
    (59) constant_assignation -> access_modifiers CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (74) data_type -> . CHARTYPE
    (75) data_type -> . STRINGTYPE
    (76) data_type -> . FLOATTYPE
    (77) data_type -> . DECIMALTYPE
    (78) data_type -> . INTTYPE
    (79) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 33
    STRINGTYPE      shift and go to state 34
    FLOATTYPE       shift and go to state 35
    DECIMALTYPE     shift and go to state 36
    INTTYPE         shift and go to state 37
    BOOLTYPE        shift and go to state 38

    data_type                      shift and go to state 97

state 65

    (61) variable_assignation -> access_modifiers data_type . assignation_key_value DOTANDCOMMA
    (63) variable_assignation -> access_modifiers data_type . assignation_key_value_multiple DOTANDCOMMA
    (68) assignation_key_value -> . VARIABLE ASSIGNATION value
    (69) assignation_key_value -> . READ LPARENT RPARENT
    (70) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (71) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 70
    READ            shift and go to state 71

    assignation_key_value          shift and go to state 98
    assignation_key_value_multiple shift and go to state 99

state 66

    (65) late_initialization -> access_modifiers VARIABLE . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 100


state 67

    (58) constant_assignation -> CONST data_type . assignation_key_value DOTANDCOMMA
    (60) constant_assignation -> CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (68) assignation_key_value -> . VARIABLE ASSIGNATION value
    (69) assignation_key_value -> . READ LPARENT RPARENT
    (70) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (71) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 70
    READ            shift and go to state 71

    assignation_key_value          shift and go to state 101
    assignation_key_value_multiple shift and go to state 102

state 68

    (62) variable_assignation -> data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 103


state 69

    (64) variable_assignation -> data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 104


state 70

    (68) assignation_key_value -> VARIABLE . ASSIGNATION value
    (70) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value
    (71) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value COMMA assignation_key_value_multiple

    ASSIGNATION     shift and go to state 105


state 71

    (69) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 106


state 72

    (67) late_initialization -> assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 67 (late_initialization -> assignation_key_value DOTANDCOMMA .)


state 73

    (30) arithmetic_operation -> VARIABLE .
    (32) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN    reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN    reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    EQUAL_COMPARATION reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INEQUALITY      reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN_OR_EQUAL reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    LOGICAND        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    LOGICOR         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    LOGICNOT        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    LOGICXOR        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    COMMA           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47

  ! PLUS            [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 39

state 74

    (32) arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .
    (28) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 28 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 28 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 28 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 32 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]


state 75

    (29) arithmetic_operation -> value_numeric .
    (31) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 29 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 29 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 29 (arithmetic_operation -> value_numeric .)
    GREATER_THAN    reduce using rule 29 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN    reduce using rule 29 (arithmetic_operation -> value_numeric .)
    EQUAL_COMPARATION reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INEQUALITY      reduce using rule 29 (arithmetic_operation -> value_numeric .)
    GREATER_THAN_OR_EQUAL reduce using rule 29 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN_OR_EQUAL reduce using rule 29 (arithmetic_operation -> value_numeric .)
    LOGICAND        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    LOGICOR         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    LOGICNOT        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    LOGICXOR        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DOTANDCOMMA     reduce using rule 29 (arithmetic_operation -> value_numeric .)
    COMMA           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47

  ! PLUS            [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 62

state 76

    (34) logic_operation -> VARIABLE .
    (36) logic_operation -> VARIABLE . logic_operator logic_operation
    (30) arithmetic_operation -> VARIABLE .
    (32) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (37) logic_operator -> . GREATER_THAN
    (38) logic_operator -> . SMALLER_THAN
    (39) logic_operator -> . EQUAL_COMPARATION
    (40) logic_operator -> . INEQUALITY
    (41) logic_operator -> . GREATER_THAN_OR_EQUAL
    (42) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (43) logic_operator -> . LOGICAND
    (44) logic_operator -> . LOGICOR
    (45) logic_operator -> . LOGICNOT
    (46) logic_operator -> . LOGICXOR
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT

  ! reduce/reduce conflict for PRINT resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for READ resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTEGER resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 30 (arithmetic_operation -> VARIABLE .)
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    COMMA           reduce using rule 30 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN    shift and go to state 48
    SMALLER_THAN    shift and go to state 49
    EQUAL_COMPARATION shift and go to state 50
    INEQUALITY      shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    SMALLER_THAN_OR_EQUAL shift and go to state 53
    LOGICAND        shift and go to state 54
    LOGICOR         shift and go to state 55
    LOGICNOT        shift and go to state 56
    LOGICXOR        shift and go to state 57
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47

  ! PRINT           [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! READ            [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! CONST           [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! INTEGER         [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! FLOAT_NUMBER    [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! PUBLIC          [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! PRIVATE         [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! CHARTYPE        [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! STRINGTYPE      [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! FLOATTYPE       [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! DECIMALTYPE     [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! INTTYPE         [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! BOOLTYPE        [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]

    logic_operator                 shift and go to state 40
    arithmetic_operator            shift and go to state 39

state 77

    (36) logic_operation -> VARIABLE logic_operator logic_operation .

    PRINT           reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    READ            reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    VARIABLE        reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    CONST           reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    INTEGER         reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    FLOAT_NUMBER    reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DECIMAL_NUMBER  reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    PUBLIC          reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    PRIVATE         reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    CHARTYPE        reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    STRINGTYPE      reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    FLOATTYPE       reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DECIMALTYPE     reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    INTTYPE         reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    BOOLTYPE        reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    RKEY            reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DOTANDCOMMA     reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)
    COMMA           reduce using rule 36 (logic_operation -> VARIABLE logic_operator logic_operation .)


state 78

    (33) logic_operation -> value_numeric .
    (35) logic_operation -> value_numeric . logic_operator logic_operation
    (29) arithmetic_operation -> value_numeric .
    (31) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (37) logic_operator -> . GREATER_THAN
    (38) logic_operator -> . SMALLER_THAN
    (39) logic_operator -> . EQUAL_COMPARATION
    (40) logic_operator -> . INEQUALITY
    (41) logic_operator -> . GREATER_THAN_OR_EQUAL
    (42) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (43) logic_operator -> . LOGICAND
    (44) logic_operator -> . LOGICOR
    (45) logic_operator -> . LOGICNOT
    (46) logic_operator -> . LOGICXOR
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT

  ! reduce/reduce conflict for PRINT resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for READ resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CONST resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTEGER resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 29 (arithmetic_operation -> value_numeric .)
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 29 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 29 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 29 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 29 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 29 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 29 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 29 (arithmetic_operation -> value_numeric .)
    DOTANDCOMMA     reduce using rule 29 (arithmetic_operation -> value_numeric .)
    COMMA           reduce using rule 29 (arithmetic_operation -> value_numeric .)
    GREATER_THAN    shift and go to state 48
    SMALLER_THAN    shift and go to state 49
    EQUAL_COMPARATION shift and go to state 50
    INEQUALITY      shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    SMALLER_THAN_OR_EQUAL shift and go to state 53
    LOGICAND        shift and go to state 54
    LOGICOR         shift and go to state 55
    LOGICNOT        shift and go to state 56
    LOGICXOR        shift and go to state 57
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47

  ! PRINT           [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! READ            [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! VARIABLE        [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! CONST           [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! INTEGER         [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! FLOAT_NUMBER    [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! PUBLIC          [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! PRIVATE         [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! CHARTYPE        [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! STRINGTYPE      [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! FLOATTYPE       [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! DECIMALTYPE     [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! INTTYPE         [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! BOOLTYPE        [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! PLUS            [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]

    logic_operator                 shift and go to state 63
    arithmetic_operator            shift and go to state 62

state 79

    (28) value_numeric -> arithmetic_operation .

    GREATER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 28 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 28 (value_numeric -> arithmetic_operation .)


state 80

    (20) value_string -> VARIABLE .
    (30) arithmetic_operation -> VARIABLE .
    (32) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (34) logic_operation -> VARIABLE .
    (36) logic_operation -> VARIABLE . logic_operator logic_operation
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT
    (37) logic_operator -> . GREATER_THAN
    (38) logic_operator -> . SMALLER_THAN
    (39) logic_operator -> . EQUAL_COMPARATION
    (40) logic_operator -> . INEQUALITY
    (41) logic_operator -> . GREATER_THAN_OR_EQUAL
    (42) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (43) logic_operator -> . LOGICAND
    (44) logic_operator -> . LOGICOR
    (45) logic_operator -> . LOGICNOT
    (46) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 20 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 20 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 20 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 20 (value_string -> VARIABLE .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 20 (value_string -> VARIABLE .)
    COMMA           reduce using rule 20 (value_string -> VARIABLE .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47
    GREATER_THAN    shift and go to state 48
    SMALLER_THAN    shift and go to state 49
    EQUAL_COMPARATION shift and go to state 50
    INEQUALITY      shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    SMALLER_THAN_OR_EQUAL shift and go to state 53
    LOGICAND        shift and go to state 54
    LOGICOR         shift and go to state 55
    LOGICNOT        shift and go to state 56
    LOGICXOR        shift and go to state 57

  ! PLUS            [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 30 (arithmetic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 34 (logic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 34 (logic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 39
    logic_operator                 shift and go to state 40

state 81

    (68) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 68 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 82

    (14) value -> value_numeric .
    (29) arithmetic_operation -> value_numeric .
    (31) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (33) logic_operation -> value_numeric .
    (35) logic_operation -> value_numeric . logic_operator logic_operation
    (47) arithmetic_operator -> . PLUS
    (48) arithmetic_operator -> . MINUS
    (49) arithmetic_operator -> . TIMES
    (50) arithmetic_operator -> . DIVIDE
    (51) arithmetic_operator -> . PERCENT
    (37) logic_operator -> . GREATER_THAN
    (38) logic_operator -> . SMALLER_THAN
    (39) logic_operator -> . EQUAL_COMPARATION
    (40) logic_operator -> . INEQUALITY
    (41) logic_operator -> . GREATER_THAN_OR_EQUAL
    (42) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (43) logic_operator -> . LOGICAND
    (44) logic_operator -> . LOGICOR
    (45) logic_operator -> . LOGICNOT
    (46) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 14 (value -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (value -> value_numeric .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 14 (value -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (value -> value_numeric .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 14 (value -> value_numeric .)
    COMMA           reduce using rule 14 (value -> value_numeric .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    TIMES           shift and go to state 45
    DIVIDE          shift and go to state 46
    PERCENT         shift and go to state 47
    GREATER_THAN    shift and go to state 48
    SMALLER_THAN    shift and go to state 49
    EQUAL_COMPARATION shift and go to state 50
    INEQUALITY      shift and go to state 51
    GREATER_THAN_OR_EQUAL shift and go to state 52
    SMALLER_THAN_OR_EQUAL shift and go to state 53
    LOGICAND        shift and go to state 54
    LOGICOR         shift and go to state 55
    LOGICNOT        shift and go to state 56
    LOGICXOR        shift and go to state 57

  ! PLUS            [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 29 (arithmetic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 33 (logic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 33 (logic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 62
    logic_operator                 shift and go to state 63

state 83

    (15) value -> value_logic .

    DOTANDCOMMA     reduce using rule 15 (value -> value_logic .)
    COMMA           reduce using rule 15 (value -> value_logic .)


state 84

    (16) value -> value_string .

    DOTANDCOMMA     reduce using rule 16 (value -> value_string .)
    COMMA           reduce using rule 16 (value -> value_string .)


state 85

    (17) value -> read_data .

    DOTANDCOMMA     reduce using rule 17 (value -> read_data .)
    COMMA           reduce using rule 17 (value -> read_data .)


state 86

    (22) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 22 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 22 (value_logic -> BOOLTRUE .)


state 87

    (23) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 23 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 23 (value_logic -> BOOLFALSE .)


state 88

    (24) value_logic -> logic_operation .

    DOTANDCOMMA     reduce using rule 24 (value_logic -> logic_operation .)
    COMMA           reduce using rule 24 (value_logic -> logic_operation .)


state 89

    (18) value_string -> STRING .
    (12) concatenation -> STRING .
    (13) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 12 (concatenation -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 12 (concatenation -> STRING .)
    DOTANDCOMMA     reduce using rule 12 (concatenation -> STRING .)
    COMMA           reduce using rule 12 (concatenation -> STRING .)
    PLUS            shift and go to state 107

  ! DOTANDCOMMA     [ reduce using rule 18 (value_string -> STRING .) ]
  ! COMMA           [ reduce using rule 18 (value_string -> STRING .) ]


state 90

    (19) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 19 (value_string -> CHAR .)
    COMMA           reduce using rule 19 (value_string -> CHAR .)


state 91

    (21) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 21 (value_string -> concatenation .)
    COMMA           reduce using rule 21 (value_string -> concatenation .)


state 92

    (11) read_data -> READ . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 108


state 93

    (10) print_data -> PRINT LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 109


state 94

    (11) read_data -> READ LPARENT RPARENT . DOTANDCOMMA
    (69) assignation_key_value -> READ LPARENT RPARENT .

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 110

  ! DOTANDCOMMA     [ reduce using rule 69 (assignation_key_value -> READ LPARENT RPARENT .) ]


state 95

    (31) arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .
    (28) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 28 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 28 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 28 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 28 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 28 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 28 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 28 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 28 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 28 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 28 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 31 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]


state 96

    (35) logic_operation -> value_numeric logic_operator logic_operation .

    PRINT           reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    READ            reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    VARIABLE        reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    CONST           reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    INTEGER         reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    FLOAT_NUMBER    reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    DECIMAL_NUMBER  reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    PUBLIC          reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    PRIVATE         reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    CHARTYPE        reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    STRINGTYPE      reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    FLOATTYPE       reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    DECIMALTYPE     reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    INTTYPE         reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    BOOLTYPE        reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    RKEY            reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    DOTANDCOMMA     reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)
    COMMA           reduce using rule 35 (logic_operation -> value_numeric logic_operator logic_operation .)


state 97

    (57) constant_assignation -> access_modifiers CONST data_type . assignation_key_value DOTANDCOMMA
    (59) constant_assignation -> access_modifiers CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (68) assignation_key_value -> . VARIABLE ASSIGNATION value
    (69) assignation_key_value -> . READ LPARENT RPARENT
    (70) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (71) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 70
    READ            shift and go to state 71

    assignation_key_value          shift and go to state 111
    assignation_key_value_multiple shift and go to state 112

state 98

    (61) variable_assignation -> access_modifiers data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 113


state 99

    (63) variable_assignation -> access_modifiers data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 114


state 100

    (65) late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 65 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)


state 101

    (58) constant_assignation -> CONST data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 115


state 102

    (60) constant_assignation -> CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 116


state 103

    (62) variable_assignation -> data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 62 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)


state 104

    (64) variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 64 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)


state 105

    (68) assignation_key_value -> VARIABLE ASSIGNATION . value
    (70) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value
    (71) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value COMMA assignation_key_value_multiple
    (14) value -> . value_numeric
    (15) value -> . value_logic
    (16) value -> . value_string
    (17) value -> . read_data
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (22) value_logic -> . BOOLTRUE
    (23) value_logic -> . BOOLFALSE
    (24) value_logic -> . logic_operation
    (18) value_string -> . STRING
    (19) value_string -> . CHAR
    (20) value_string -> . VARIABLE
    (21) value_string -> . concatenation
    (11) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (12) concatenation -> . STRING
    (13) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31
    BOOLTRUE        shift and go to state 86
    BOOLFALSE       shift and go to state 87
    STRING          shift and go to state 89
    CHAR            shift and go to state 90
    VARIABLE        shift and go to state 80
    READ            shift and go to state 92

    value                          shift and go to state 117
    value_numeric                  shift and go to state 82
    value_logic                    shift and go to state 83
    value_string                   shift and go to state 84
    read_data                      shift and go to state 85
    arithmetic_operation           shift and go to state 79
    logic_operation                shift and go to state 88
    concatenation                  shift and go to state 91

state 106

    (69) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 118


state 107

    (13) concatenation -> STRING PLUS . concatenation
    (12) concatenation -> . STRING
    (13) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 119

    concatenation                  shift and go to state 120

state 108

    (11) read_data -> READ LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 121


state 109

    (10) print_data -> PRINT LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 122


state 110

    (11) read_data -> READ LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DOTANDCOMMA     reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    COMMA           reduce using rule 11 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)


state 111

    (57) constant_assignation -> access_modifiers CONST data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 123


state 112

    (59) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 124


state 113

    (61) variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 61 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)


state 114

    (63) variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 63 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)


state 115

    (58) constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 58 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)


state 116

    (60) constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 60 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 117

    (68) assignation_key_value -> VARIABLE ASSIGNATION value .
    (70) assignation_key_value_multiple -> VARIABLE ASSIGNATION value .
    (71) assignation_key_value_multiple -> VARIABLE ASSIGNATION value . COMMA assignation_key_value_multiple

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 68 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    DOTANDCOMMA     reduce using rule 68 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           shift and go to state 125

  ! DOTANDCOMMA     [ reduce using rule 70 (assignation_key_value_multiple -> VARIABLE ASSIGNATION value .) ]


state 118

    (69) assignation_key_value -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 69 (assignation_key_value -> READ LPARENT RPARENT .)


state 119

    (12) concatenation -> STRING .
    (13) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 12 (concatenation -> STRING .)
    COMMA           reduce using rule 12 (concatenation -> STRING .)
    PLUS            shift and go to state 107


state 120

    (13) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 13 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 13 (concatenation -> STRING PLUS concatenation .)


state 121

    (11) read_data -> READ LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 110


state 122

    (10) print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 10 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)


state 123

    (57) constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 57 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)


state 124

    (59) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 59 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 125

    (71) assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA . assignation_key_value_multiple
    (70) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (71) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 126

    assignation_key_value_multiple shift and go to state 127

state 126

    (70) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value
    (71) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value COMMA assignation_key_value_multiple

    ASSIGNATION     shift and go to state 128


state 127

    (71) assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple .

    DOTANDCOMMA     reduce using rule 71 (assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple .)


state 128

    (70) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value
    (71) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value COMMA assignation_key_value_multiple
    (14) value -> . value_numeric
    (15) value -> . value_logic
    (16) value -> . value_string
    (17) value -> . read_data
    (25) value_numeric -> . INTEGER
    (26) value_numeric -> . FLOAT_NUMBER
    (27) value_numeric -> . DECIMAL_NUMBER
    (28) value_numeric -> . arithmetic_operation
    (22) value_logic -> . BOOLTRUE
    (23) value_logic -> . BOOLFALSE
    (24) value_logic -> . logic_operation
    (18) value_string -> . STRING
    (19) value_string -> . CHAR
    (20) value_string -> . VARIABLE
    (21) value_string -> . concatenation
    (11) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (29) arithmetic_operation -> . value_numeric
    (30) arithmetic_operation -> . VARIABLE
    (31) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (32) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (33) logic_operation -> . value_numeric
    (34) logic_operation -> . VARIABLE
    (35) logic_operation -> . value_numeric logic_operator logic_operation
    (36) logic_operation -> . VARIABLE logic_operator logic_operation
    (12) concatenation -> . STRING
    (13) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 29
    FLOAT_NUMBER    shift and go to state 30
    DECIMAL_NUMBER  shift and go to state 31
    BOOLTRUE        shift and go to state 86
    BOOLFALSE       shift and go to state 87
    STRING          shift and go to state 89
    CHAR            shift and go to state 90
    VARIABLE        shift and go to state 80
    READ            shift and go to state 92

    value                          shift and go to state 129
    value_numeric                  shift and go to state 82
    value_logic                    shift and go to state 83
    value_string                   shift and go to state 84
    read_data                      shift and go to state 85
    arithmetic_operation           shift and go to state 79
    logic_operation                shift and go to state 88
    concatenation                  shift and go to state 91

state 129

    (70) assignation_key_value_multiple -> VARIABLE ASSIGNATION value .
    (71) assignation_key_value_multiple -> VARIABLE ASSIGNATION value . COMMA assignation_key_value_multiple

    DOTANDCOMMA     reduce using rule 70 (assignation_key_value_multiple -> VARIABLE ASSIGNATION value .)
    COMMA           shift and go to state 125

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 11 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 11 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 11 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 11 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 11 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 24 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 24 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 24 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 24 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 24 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 24 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 24 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 24 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 24 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 24 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 24 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 75 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 76 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 76 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 76 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 76 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 76 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 76 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 76 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 78 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 78 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 78 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 78 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 78 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 80 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 80 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 80 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 80 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 80 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 80 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 82 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 82 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 82 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 82 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 82 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 82 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 82 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 94 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (arithmetic_operation -> VARIABLE)
WARNING: rejected rule (logic_operation -> VARIABLE) in state 11
WARNING: reduce/reduce conflict in state 17 resolved using rule (block_code -> arithmetic_operation)
WARNING: rejected rule (value_numeric -> arithmetic_operation) in state 17
WARNING: reduce/reduce conflict in state 24 resolved using rule (arithmetic_operation -> value_numeric)
WARNING: rejected rule (logic_operation -> value_numeric) in state 24
WARNING: reduce/reduce conflict in state 74 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) in state 74
WARNING: reduce/reduce conflict in state 76 resolved using rule (arithmetic_operation -> VARIABLE)
WARNING: rejected rule (logic_operation -> VARIABLE) in state 76
WARNING: reduce/reduce conflict in state 78 resolved using rule (arithmetic_operation -> value_numeric)
WARNING: rejected rule (logic_operation -> value_numeric) in state 78
WARNING: reduce/reduce conflict in state 80 resolved using rule (value_string -> VARIABLE)
WARNING: rejected rule (arithmetic_operation -> VARIABLE) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (value_string -> VARIABLE)
WARNING: rejected rule (logic_operation -> VARIABLE) in state 80
WARNING: reduce/reduce conflict in state 82 resolved using rule (value -> value_numeric)
WARNING: rejected rule (arithmetic_operation -> value_numeric) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (value -> value_numeric)
WARNING: rejected rule (logic_operation -> value_numeric) in state 82
WARNING: reduce/reduce conflict in state 89 resolved using rule (concatenation -> STRING)
WARNING: rejected rule (value_string -> STRING) in state 89
WARNING: reduce/reduce conflict in state 95 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) in state 95
WARNING: reduce/reduce conflict in state 117 resolved using rule (assignation_key_value -> VARIABLE ASSIGNATION value)
WARNING: rejected rule (assignation_key_value_multiple -> VARIABLE ASSIGNATION value) in state 117
WARNING: Rule (logic_operation -> VARIABLE) is never reduced
WARNING: Rule (logic_operation -> value_numeric) is never reduced
WARNING: Rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) is never reduced
WARNING: Rule (value_string -> STRING) is never reduced
WARNING: Rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) is never reduced
