Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DECREMENT
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLE_QUOTATION_MARKS
    FOR
    ID
    INCREMENT
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    PRINT
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    STATIC
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> block_using block_publicClass
Rule 2     block_using -> USING SYSTEM DOTANDCOMMA
Rule 3     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 4     all_block_code -> block_code
Rule 5     all_block_code -> block_code all_block_code
Rule 6     block_code -> def_const_or_var
Rule 7     block_code -> estruct_of_data
Rule 8     block_code -> block_try_catch

Rule 9     block_code -> block_while
Rule 10    block_code -> block_if
Rule 11    block_code -> VARIABLE
Rule 12    block_code -> dict_estruct
Rule 13    block_code -> functions_list
Rule 14    block_code -> declaration_lambda

Rule 9     block_code -> VARIABLE
Rule 10    block_code -> dict_estruct
Rule 11    block_code -> functions_dict
Rule 12    block_code -> functions_list
Rule 13    block_code -> declaration_lambda
Rule 14    block_code -> block_if




Rule 15    def_const_or_var -> constant_assignation
Rule 16    def_const_or_var -> variable_assignation
Rule 17    variable_assignation -> access_modifiers all_asignations
Rule 18    variable_assignation -> all_asignations
Rule 19    constant_assignation -> access_modifiers CONST all_asignations
Rule 20    constant_assignation -> CONST all_asignations
Rule 21    constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant
Rule 22    all_asignations -> assignation_with_datatype
Rule 23    all_asignations -> assignation_without_datatype
Rule 24    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 25    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 26    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 27    assignation_without_datatype -> assignation_key_value DOTANDCOMMA
Rule 28    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 29    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 30    some_assignation_constant -> assignation_key_value DOTANDCOMMA
Rule 31    some_assignation_constant -> assignation_key_value COMMA some_assignation_constant
Rule 32    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 33    data_type -> CHARTYPE
Rule 34    data_type -> STRINGTYPE
Rule 35    data_type -> FLOATTYPE
Rule 36    data_type -> DECIMALTYPE
Rule 37    data_type -> INTTYPE
Rule 38    data_type -> BOOLTYPE
Rule 39    value -> value_numeric
Rule 40    value -> value_logic
Rule 41    value -> value_string
Rule 42    value_string -> STRING
Rule 43    value_string -> CHAR
Rule 44    value_string -> VARIABLE
Rule 45    value_string -> READ LPARENT RPARENT
Rule 46    value_string -> concatenation
Rule 47    value_logic -> BOOLTRUE
Rule 48    value_logic -> BOOLFALSE
Rule 49    value_numeric -> INTEGER
Rule 50    value_numeric -> FLOAT_NUMBER
Rule 51    value_numeric -> DECIMAL_NUMBER
Rule 52    block_try_catch -> try_catch_simply
Rule 53    block_try_catch -> try_catch_finally
Rule 54    try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
Rule 55    try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
Rule 56    access_modifiers -> PUBLIC
Rule 57    access_modifiers -> PRIVATE

Rule 58    block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 59    other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 60    other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 61    not_yes_nested_if -> block_if
Rule 62    not_yes_nested_if -> block_code
Rule 63    arithmetic_operation -> value_numeric
Rule 64    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 65    logic_operation -> value_logic
Rule 66    logic_operation -> value_logic logic_operator logic_operation
Rule 67    concatenation -> STRING
Rule 68    concatenation -> STRING PLUS concatenation
Rule 69    logic_operator -> GREATER_THAN
Rule 70    logic_operator -> SMALLER_THAN
Rule 71    logic_operator -> EQUAL_COMPARATION
Rule 72    logic_operator -> INEQUALITY
Rule 73    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 74    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 75    logic_operator -> LOGICAND
Rule 76    logic_operator -> LOGICOR
Rule 77    logic_operator -> LOGICNOT
Rule 78    logic_operator -> LOGICXOR
Rule 79    arithmetic_operator -> PLUS
Rule 80    arithmetic_operator -> MINUS
Rule 81    arithmetic_operator -> TIMES
Rule 82    arithmetic_operator -> DIVIDE
Rule 83    arithmetic_operator -> PERCENT
Rule 84    variable_assignation_multiline -> <empty>
Rule 85    dict_estruct -> dict_empty
Rule 86    dict_estruct -> dict_full
Rule 87    dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 88    dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 89    dictionary_value -> LKEY key_value_pair RKEY
Rule 90    key_value_pairs -> key_value_pair
Rule 91    key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 92    key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 93    valueHash -> INTTYPE
Rule 94    estruct_of_data -> list_empty
Rule 95    estruct_of_data -> list_full
Rule 96    functions_dict -> dict_func_put
Rule 97    functions_dict -> dict_func_remove
Rule 98    dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
Rule 99    dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
Rule 100   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 101   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 102   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 103   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 104   strings_list -> STRING
Rule 105   strings_list -> STRING COMMA strings_list
Rule 106   ints_list -> INTEGER
Rule 107   ints_list -> INTEGER COMMA ints_list
Rule 108   functions_list -> list_func_clear
Rule 109   functions_list -> list_func_count
Rule 110   functions_list -> list_func_add
Rule 111   functions_list -> list_func_removeat
Rule 112   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 113   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 114   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 115   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 116   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

Terminals, with rules where they appear

ACTION               : 116
ADD                  : 114
ADDITION_ASSIGNMENT  : 
ARROW                : 116
ASSIGNATION          : 32 87 88 100 101 102 103 116


Rule 58    block_while -> normal_while
Rule 59    block_while -> do_while
Rule 60    do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 61    normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
Rule 62    block_if -> normal_if
Rule 63    block_if -> if_else
Rule 64    block_if -> if_elseif
Rule 65    normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY
Rule 66    if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
Rule 67    elseif -> ELSE IF LPARENT logic_operation RPARENT LKEY block_code RKEY
Rule 68    repit_elseif -> elseif
Rule 69    repit_elseif -> elseif repit_elseif
Rule 70    repit_normal_if -> normal_if
Rule 71    repit_normal_if -> normal_if repit_normal_if
Rule 72    if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
Rule 73    if_ifelse -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_normal_if ELSE LKEY block_code RKEY
Rule 74    arithmetic_operation -> value_numeric
Rule 75    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 76    logic_operation -> value_logic
Rule 77    logic_operation -> value_logic logic_operator logic_operation
Rule 78    concatenation -> STRING
Rule 79    concatenation -> STRING PLUS concatenation
Rule 80    logic_operator -> GREATER_THAN
Rule 81    logic_operator -> SMALLER_THAN
Rule 82    logic_operator -> EQUAL_COMPARATION
Rule 83    logic_operator -> INEQUALITY
Rule 84    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 85    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 86    logic_operator -> LOGICAND
Rule 87    logic_operator -> LOGICOR
Rule 88    logic_operator -> LOGICNOT
Rule 89    logic_operator -> LOGICXOR
Rule 90    arithmetic_operator -> PLUS
Rule 91    arithmetic_operator -> MINUS
Rule 92    arithmetic_operator -> TIMES
Rule 93    arithmetic_operator -> DIVIDE
Rule 94    arithmetic_operator -> PERCENT
Rule 95    variable_assignation_multiline -> <empty>
Rule 96    dict_estruct -> dict_empty
Rule 97    dict_estruct -> dict_full
Rule 98    dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 99    dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 100   dictionary_value -> LKEY key_value_pair RKEY
Rule 101   key_value_pairs -> key_value_pair
Rule 102   key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 103   key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 104   valueHash -> INTTYPE
Rule 105   estruct_of_data -> list_empty
Rule 106   estruct_of_data -> list_full
Rule 107   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 108   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 109   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 110   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 111   strings_list -> STRING
Rule 112   strings_list -> STRING COMMA strings_list
Rule 113   ints_list -> INTEGER
Rule 114   ints_list -> INTEGER COMMA ints_list
Rule 115   functions_list -> list_func_clear
Rule 116   functions_list -> list_func_count
Rule 117   functions_list -> list_func_add
Rule 118   functions_list -> list_func_removeat
Rule 119   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 120   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 121   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 122   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 123   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

Terminals, with rules where they appear

ACTION               : 123
ADD                  : 121
ADDITION_ASSIGNMENT  : 
ARROW                : 123
ASSIGNATION          : 32 98 99 107 108 109 110 123

Rule 58    block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 59    other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 60    other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 61    not_yes_nested_if -> block_if
Rule 62    not_yes_nested_if -> block_code
Rule 63    arithmetic_operation -> value_numeric
Rule 64    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 65    logic_operation -> value_logic
Rule 66    logic_operation -> value_logic logic_operator logic_operation
Rule 67    concatenation -> STRING
Rule 68    concatenation -> STRING PLUS concatenation
Rule 69    logic_operator -> GREATER_THAN
Rule 70    logic_operator -> SMALLER_THAN
Rule 71    logic_operator -> EQUAL_COMPARATION
Rule 72    logic_operator -> INEQUALITY
Rule 73    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 74    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 75    logic_operator -> LOGICAND
Rule 76    logic_operator -> LOGICOR
Rule 77    logic_operator -> LOGICNOT
Rule 78    logic_operator -> LOGICXOR
Rule 79    arithmetic_operator -> PLUS
Rule 80    arithmetic_operator -> MINUS
Rule 81    arithmetic_operator -> TIMES
Rule 82    arithmetic_operator -> DIVIDE
Rule 83    arithmetic_operator -> PERCENT
Rule 84    variable_assignation_multiline -> <empty>
Rule 85    dict_estruct -> dict_empty
Rule 86    dict_estruct -> dict_full
Rule 87    dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 88    dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 89    dictionary_value -> LKEY key_value_pair RKEY
Rule 90    key_value_pairs -> key_value_pair
Rule 91    key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 92    key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 93    valueHash -> INTTYPE
Rule 94    estruct_of_data -> list_empty
Rule 95    estruct_of_data -> list_full
Rule 96    functions_dict -> dict_func_put
Rule 97    functions_dict -> dict_func_remove
Rule 98    dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
Rule 99    dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
Rule 100   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 101   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 102   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 103   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 104   strings_list -> STRING
Rule 105   strings_list -> STRING COMMA strings_list
Rule 106   ints_list -> INTEGER
Rule 107   ints_list -> INTEGER COMMA ints_list
Rule 108   functions_list -> list_func_clear
Rule 109   functions_list -> list_func_count
Rule 110   functions_list -> list_func_add
Rule 111   functions_list -> list_func_removeat
Rule 112   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 113   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 114   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 115   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 116   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

Terminals, with rules where they appear

ACTION               : 116
ADD                  : 114
ADDITION_ASSIGNMENT  : 
ARROW                : 116
ASSIGNATION          : 32 87 88 100 101 102 103 116


BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 48
BOOLTRUE             : 47
BOOLTYPE             : 38
BREAK                : 
CATCH                : 54 55
CHAR                 : 43
CHARTYPE             : 33
CLASS                : 3

CLEAR                : 112
COMMA                : 21 31 91 98 105 107
CONST                : 19 20 21
COUNT                : 113
DECIMALTYPE          : 36
DECIMAL_NUMBER       : 51
DECREMENT            : 
DICTIONARY           : 87 87 88 88
DIVIDE               : 82


CLEAR                : 119
COMMA                : 21 31 102 112 114
CONST                : 19 20 21
COUNT                : 120
DECIMALTYPE          : 36
DECIMAL_NUMBER       : 51
DECREMENT            : 
DICTIONARY           : 98 98 99 99
DIVIDE               : 93

CLEAR                : 112
COMMA                : 21 31 91 98 105 107
CONST                : 19 20 21
COUNT                : 113
DECIMALTYPE          : 36
DECIMAL_NUMBER       : 51
DECREMENT            : 
DICTIONARY           : 87 87 88 88
DIVIDE               : 82


DIVISION_ASSIGNMENT  : 
DO                   : 60
DOLLARSIGN           : 

DOT                  : 98 99 112 113 114 115
DOTANDCOMMA          : 2 24 25 26 27 28 29 30 87 88 98 99 100 101 112 113 114 115
DOUBLEPOINT          : 92
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 59
ELSE_IF              : 60
EQUAL_COMPARATION    : 71


DOT                  : 119 120 121 122
DOTANDCOMMA          : 2 24 25 26 27 28 29 30 98 99 107 108 119 120 121 122
DOUBLEPOINT          : 103
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 66 67 72 73
EQUAL_COMPARATION    : 82

DOT                  : 98 99 112 113 114 115
DOTANDCOMMA          : 2 24 25 26 27 28 29 30 87 88 98 99 100 101 112 113 114 115
DOUBLEPOINT          : 92
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 59
ELSE_IF              : 60
EQUAL_COMPARATION    : 71


EXCEPTION            : 54 55
FINALLY              : 55
FLOATTYPE            : 35
FLOAT_NUMBER         : 50
FOR                  : 

GREATER_THAN         : 69 87 87 88 88 100 100 101 101 102 102 103 103 116
GREATER_THAN_OR_EQUAL : 73
ID                   : 
IF                   : 58
INCREMENT            : 
INEQUALITY           : 72
INTEGER              : 49 106 107 115
INTTYPE              : 37 93 101 101 103 103
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 100 100 101 101 102 102 103 103
LKEY                 : 3 54 54 55 55 55 58 59 60 88 89 102 103 116
LOGICAND             : 75
LOGICNOT             : 77
LOGICOR              : 76
LOGICXOR             : 78
LONG                 : 
LPARENT              : 45 54 55 58 60 87 88 98 99 100 101 102 103 112 113 114 115
MINUS                : 80
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 87 88 100 101 102 103
PERCENT              : 83
PIPE                 : 
PLUS                 : 68 79
PRINT                : 
PRIVATE              : 57
PUBLIC               : 3 56
PUT                  : 98
RBRACKET             : 
READ                 : 45
REMOVE               : 99
REMOVEAT             : 115
RETURN               : 
RKEY                 : 3 54 54 55 55 55 58 59 60 88 89 102 103 116
RPARENT              : 45 54 55 58 60 87 88 98 99 100 101 102 103 112 113 114 115
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 70 87 87 88 88 100 100 101 101 102 102 103 103 116
SMALLER_THAN_OR_EQUAL : 74
STATIC               : 
STRING               : 42 67 68 92 98 98 98 99 99 104 105 114
STRINGTYPE           : 34 100 100 102 102 116


GREATER_THAN         : 80 98 98 99 99 107 107 108 108 109 109 110 110 123
GREATER_THAN_OR_EQUAL : 84
ID                   : 
IF                   : 65 66 67 72 73
INCREMENT            : 
INEQUALITY           : 83
INTEGER              : 49 113 114 122
INTTYPE              : 37 104 108 108 110 110
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 107 107 108 108 109 109 110 110
LKEY                 : 3 54 54 55 55 55 60 61 65 66 66 67 72 72 73 73 99 100 109 110 123
LOGICAND             : 86
LOGICNOT             : 88
LOGICOR              : 87
LOGICXOR             : 89
LONG                 : 
LPARENT              : 45 54 55 60 61 65 66 67 72 73 98 99 107 108 109 110 119 120 121 122
MINUS                : 91
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 98 99 107 108 109 110
PERCENT              : 94
PIPE                 : 
PLUS                 : 79 90
PRINT                : 
PRIVATE              : 57
PUBLIC               : 3 56
RBRACKET             : 
READ                 : 45
REMOVEAT             : 122
RETURN               : 
RKEY                 : 3 54 54 55 55 55 60 61 65 66 66 67 72 72 73 73 99 100 109 110 123
RPARENT              : 45 54 55 60 61 65 66 67 72 73 98 99 107 108 109 110 119 120 121 122
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 81 98 98 99 99 107 107 108 108 109 109 110 110 123
SMALLER_THAN_OR_EQUAL : 85
STATIC               : 
STRING               : 42 78 79 103 111 112 121
STRINGTYPE           : 34 107 107 109 109 123

GREATER_THAN         : 69 87 87 88 88 100 100 101 101 102 102 103 103 116
GREATER_THAN_OR_EQUAL : 73
ID                   : 
IF                   : 58
INCREMENT            : 
INEQUALITY           : 72
INTEGER              : 49 106 107 115
INTTYPE              : 37 93 101 101 103 103
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 100 100 101 101 102 102 103 103
LKEY                 : 3 54 54 55 55 55 58 59 60 88 89 102 103 116
LOGICAND             : 75
LOGICNOT             : 77
LOGICOR              : 76
LOGICXOR             : 78
LONG                 : 
LPARENT              : 45 54 55 58 60 87 88 98 99 100 101 102 103 112 113 114 115
MINUS                : 80
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 87 88 100 101 102 103
PERCENT              : 83
PIPE                 : 
PLUS                 : 68 79
PRINT                : 
PRIVATE              : 57
PUBLIC               : 3 56
PUT                  : 98
RBRACKET             : 
READ                 : 45
REMOVE               : 99
REMOVEAT             : 115
RETURN               : 
RKEY                 : 3 54 54 55 55 55 58 59 60 88 89 102 103 116
RPARENT              : 45 54 55 58 60 87 88 98 99 100 101 102 103 112 113 114 115
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 70 87 87 88 88 100 100 101 101 102 102 103 103 116
SMALLER_THAN_OR_EQUAL : 74
STATIC               : 
STRING               : 42 67 68 92 98 98 98 99 99 104 105 114
STRINGTYPE           : 34 100 100 102 102 116


SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 2
TABULATION           : 

TIMES                : 81
TRY                  : 54 55
USING                : 2
VARIABLE             : 3 9 32 44 54 55 58 60 87 88 100 101 102 103 112 113 114 115 116 116


TIMES                : 92
TRY                  : 54 55
USING                : 2
VARIABLE             : 3 11 32 44 54 55 98 99 107 108 109 110 119 120 121 122 123 123

TIMES                : 81
TRY                  : 54 55
USING                : 2
VARIABLE             : 3 9 32 44 54 55 58 60 87 88 100 101 102 103 112 113 114 115 116 116


VOID                 : 
WHILE                : 60 61
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 17 19
all_asignations      : 17 18 19 20
all_block_code       : 3 5

arithmetic_operation : 64
arithmetic_operator  : 64
assignation_key_value : 21 24 25 26 27 28 29 30 31
assignation_with_datatype : 22 25 29
assignation_without_datatype : 23 26 28
block_code           : 4 5 54 54 55 55 55 62
block_if             : 14 61
block_publicClass    : 1
block_try_catch      : 8
block_using          : 1
concatenation        : 46 68
constant_assignation : 15
data_type            : 21 24 25 26
declaration_lambda   : 13
def_const_or_var     : 6
dict_empty           : 85
dict_estruct         : 10
dict_full            : 86
dict_func_put        : 96
dict_func_remove     : 97
dictionary_value     : 88
estruct_of_data      : 7
functions_dict       : 11
functions_list       : 12
ints_list            : 103 107
key_value_pair       : 89 90 91
key_value_pairs      : 91
list_empty           : 94
list_full            : 95
list_func_add        : 110
list_func_clear      : 108
list_func_count      : 109
list_func_removeat   : 111
logic_operation      : 66
logic_operator       : 66
not_yes_nested_if    : 58 59 60
other_if             : 58 60
program              : 0


arithmetic_operation : 75
arithmetic_operator  : 75
assignation_key_value : 21 24 25 26 27 28 29 30 31
assignation_with_datatype : 22 25 29
assignation_without_datatype : 23 26 28
block_code           : 4 5 54 54 55 55 55 60 61 65 66 66 67 72 72 73 73
block_if             : 10
block_publicClass    : 1
block_try_catch      : 8
block_using          : 1
block_while          : 9
concatenation        : 46 79
constant_assignation : 15
data_type            : 21 24 25 26
declaration_lambda   : 14
def_const_or_var     : 6
dict_empty           : 96
dict_estruct         : 12
dict_full            : 97
dictionary_value     : 99
do_while             : 59
elseif               : 68 69
estruct_of_data      : 7
functions_list       : 13
if_else              : 63
if_elseif            : 64
if_ifelse            : 
ints_list            : 110 114
key_value_pair       : 100 101 102
key_value_pairs      : 102
list_empty           : 105
list_full            : 106
list_func_add        : 117
list_func_clear      : 115
list_func_count      : 116
list_func_removeat   : 118
logic_operation      : 60 61 65 66 67 72 73 77
logic_operator       : 77
normal_if            : 62 70 71
normal_while         : 58
program              : 0
repit_elseif         : 69 72
repit_normal_if      : 71 73
some_assignation_constant : 21 31
strings_list         : 109 112
try_catch_finally    : 53
try_catch_simply     : 52
value                : 32
valueHash            : 103
value_logic          : 40 76 77
value_numeric        : 39 74 75

arithmetic_operation : 64
arithmetic_operator  : 64
assignation_key_value : 21 24 25 26 27 28 29 30 31
assignation_with_datatype : 22 25 29
assignation_without_datatype : 23 26 28
block_code           : 4 5 54 54 55 55 55 62
block_if             : 14 61
block_publicClass    : 1
block_try_catch      : 8
block_using          : 1
concatenation        : 46 68
constant_assignation : 15
data_type            : 21 24 25 26
declaration_lambda   : 13
def_const_or_var     : 6
dict_empty           : 85
dict_estruct         : 10
dict_full            : 86
dict_func_put        : 96
dict_func_remove     : 97
dictionary_value     : 88
estruct_of_data      : 7
functions_dict       : 11
functions_list       : 12
ints_list            : 103 107
key_value_pair       : 89 90 91
key_value_pairs      : 91
list_empty           : 94
list_full            : 95
list_func_add        : 110
list_func_clear      : 108
list_func_count      : 109
list_func_removeat   : 111
logic_operation      : 66
logic_operator       : 66
not_yes_nested_if    : 58 59 60
other_if             : 58 60
program              : 0

some_assignation_constant : 21 31
strings_list         : 102 105
try_catch_finally    : 53
try_catch_simply     : 52
value                : 32
valueHash            : 92
value_logic          : 40 65 66
value_numeric        : 39 63 64




value_string         : 41
variable_assignation : 16
variable_assignation_multiline : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_using block_publicClass
    (2) block_using -> . USING SYSTEM DOTANDCOMMA

    USING           shift and go to state 3

    program                        shift and go to state 1
    block_using                    shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_using . block_publicClass
    (3) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 5

    block_publicClass              shift and go to state 4

state 3

    (2) block_using -> USING . SYSTEM DOTANDCOMMA

    SYSTEM          shift and go to state 6


state 4

    (1) program -> block_using block_publicClass .

    $end            reduce using rule 1 (program -> block_using block_publicClass .)


state 5

    (3) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 6

    (2) block_using -> USING SYSTEM . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 8


state 7

    (3) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 9


state 8

    (2) block_using -> USING SYSTEM DOTANDCOMMA .

    PUBLIC          reduce using rule 2 (block_using -> USING SYSTEM DOTANDCOMMA .)


state 9

    (3) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 10


state 10

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch

    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if




    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations



    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA


    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA




    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12

    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11


    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11

    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56





    all_block_code                 shift and go to state 13
    block_code                     shift and go to state 14
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17

    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22

    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    block_if                       shift and go to state 22




    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28



    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56


    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52





state 11

    (56) access_modifiers -> PUBLIC .

    CONST           reduce using rule 56 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 56 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 56 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 56 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 56 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 56 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 56 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 56 (access_modifiers -> PUBLIC .)


state 12


    (11) block_code -> VARIABLE .
    (119) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (32) assignation_key_value -> VARIABLE . ASSIGNATION value

    VARIABLE        reduce using rule 11 (block_code -> VARIABLE .)
    ACTION          reduce using rule 11 (block_code -> VARIABLE .)
    CONST           reduce using rule 11 (block_code -> VARIABLE .)
    LIST            reduce using rule 11 (block_code -> VARIABLE .)
    TRY             reduce using rule 11 (block_code -> VARIABLE .)
    WHILE           reduce using rule 11 (block_code -> VARIABLE .)
    DO              reduce using rule 11 (block_code -> VARIABLE .)
    IF              reduce using rule 11 (block_code -> VARIABLE .)
    DICTIONARY      reduce using rule 11 (block_code -> VARIABLE .)
    PUBLIC          reduce using rule 11 (block_code -> VARIABLE .)
    PRIVATE         reduce using rule 11 (block_code -> VARIABLE .)
    CHARTYPE        reduce using rule 11 (block_code -> VARIABLE .)
    STRINGTYPE      reduce using rule 11 (block_code -> VARIABLE .)
    FLOATTYPE       reduce using rule 11 (block_code -> VARIABLE .)
    DECIMALTYPE     reduce using rule 11 (block_code -> VARIABLE .)
    INTTYPE         reduce using rule 11 (block_code -> VARIABLE .)
    BOOLTYPE        reduce using rule 11 (block_code -> VARIABLE .)
    RKEY            reduce using rule 11 (block_code -> VARIABLE .)
    DOT             shift and go to state 61
    ASSIGNATION     shift and go to state 62

    (9) block_code -> VARIABLE .
    (112) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (32) assignation_key_value -> VARIABLE . ASSIGNATION value

    VARIABLE        reduce using rule 9 (block_code -> VARIABLE .)
    ACTION          reduce using rule 9 (block_code -> VARIABLE .)
    IF              reduce using rule 9 (block_code -> VARIABLE .)
    CONST           reduce using rule 9 (block_code -> VARIABLE .)
    LIST            reduce using rule 9 (block_code -> VARIABLE .)
    TRY             reduce using rule 9 (block_code -> VARIABLE .)
    DICTIONARY      reduce using rule 9 (block_code -> VARIABLE .)
    STRING          reduce using rule 9 (block_code -> VARIABLE .)
    PUBLIC          reduce using rule 9 (block_code -> VARIABLE .)
    PRIVATE         reduce using rule 9 (block_code -> VARIABLE .)
    CHARTYPE        reduce using rule 9 (block_code -> VARIABLE .)
    STRINGTYPE      reduce using rule 9 (block_code -> VARIABLE .)
    FLOATTYPE       reduce using rule 9 (block_code -> VARIABLE .)
    DECIMALTYPE     reduce using rule 9 (block_code -> VARIABLE .)
    INTTYPE         reduce using rule 9 (block_code -> VARIABLE .)
    BOOLTYPE        reduce using rule 9 (block_code -> VARIABLE .)
    RKEY            reduce using rule 9 (block_code -> VARIABLE .)
    DOT             shift and go to state 57
    ASSIGNATION     shift and go to state 58






state 13

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY


    RKEY            shift and go to state 59


    RKEY            shift and go to state 63

    RKEY            shift and go to state 59




state 14

    (4) all_block_code -> block_code .
    (5) all_block_code -> block_code . all_block_code
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch

    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if




    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations



    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA


    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA




    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    RKEY            reduce using rule 4 (all_block_code -> block_code .)
    VARIABLE        shift and go to state 12

    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56

    block_code                     shift and go to state 14


    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 14
    all_block_code                 shift and go to state 64
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22

    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56

    block_code                     shift and go to state 14

    all_block_code                 shift and go to state 60
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    block_if                       shift and go to state 22




    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28



    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56


    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52





state 15

    (6) block_code -> def_const_or_var .

    VARIABLE        reduce using rule 6 (block_code -> def_const_or_var .)
    ACTION          reduce using rule 6 (block_code -> def_const_or_var .)
    IF              reduce using rule 6 (block_code -> def_const_or_var .)
    CONST           reduce using rule 6 (block_code -> def_const_or_var .)
    LIST            reduce using rule 6 (block_code -> def_const_or_var .)
    TRY             reduce using rule 6 (block_code -> def_const_or_var .)
    WHILE           reduce using rule 6 (block_code -> def_const_or_var .)
    DO              reduce using rule 6 (block_code -> def_const_or_var .)
    IF              reduce using rule 6 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 6 (block_code -> def_const_or_var .)
    STRING          reduce using rule 6 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 6 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 6 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 6 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 6 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 6 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 6 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 6 (block_code -> def_const_or_var .)


state 16

    (7) block_code -> estruct_of_data .

    VARIABLE        reduce using rule 7 (block_code -> estruct_of_data .)
    ACTION          reduce using rule 7 (block_code -> estruct_of_data .)
    IF              reduce using rule 7 (block_code -> estruct_of_data .)
    CONST           reduce using rule 7 (block_code -> estruct_of_data .)
    LIST            reduce using rule 7 (block_code -> estruct_of_data .)
    TRY             reduce using rule 7 (block_code -> estruct_of_data .)
    WHILE           reduce using rule 7 (block_code -> estruct_of_data .)
    DO              reduce using rule 7 (block_code -> estruct_of_data .)
    IF              reduce using rule 7 (block_code -> estruct_of_data .)
    DICTIONARY      reduce using rule 7 (block_code -> estruct_of_data .)
    STRING          reduce using rule 7 (block_code -> estruct_of_data .)
    PUBLIC          reduce using rule 7 (block_code -> estruct_of_data .)
    PRIVATE         reduce using rule 7 (block_code -> estruct_of_data .)
    CHARTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    STRINGTYPE      reduce using rule 7 (block_code -> estruct_of_data .)
    FLOATTYPE       reduce using rule 7 (block_code -> estruct_of_data .)
    DECIMALTYPE     reduce using rule 7 (block_code -> estruct_of_data .)
    INTTYPE         reduce using rule 7 (block_code -> estruct_of_data .)
    BOOLTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    RKEY            reduce using rule 7 (block_code -> estruct_of_data .)


state 17

    (8) block_code -> block_try_catch .

    VARIABLE        reduce using rule 8 (block_code -> block_try_catch .)
    ACTION          reduce using rule 8 (block_code -> block_try_catch .)
    IF              reduce using rule 8 (block_code -> block_try_catch .)
    CONST           reduce using rule 8 (block_code -> block_try_catch .)
    LIST            reduce using rule 8 (block_code -> block_try_catch .)
    TRY             reduce using rule 8 (block_code -> block_try_catch .)
    WHILE           reduce using rule 8 (block_code -> block_try_catch .)
    DO              reduce using rule 8 (block_code -> block_try_catch .)
    IF              reduce using rule 8 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 8 (block_code -> block_try_catch .)
    STRING          reduce using rule 8 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 8 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 8 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 8 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 8 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 8 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 8 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    RKEY            reduce using rule 8 (block_code -> block_try_catch .)


state 18

    (9) block_code -> block_while .


    VARIABLE        reduce using rule 9 (block_code -> block_while .)
    ACTION          reduce using rule 9 (block_code -> block_while .)
    CONST           reduce using rule 9 (block_code -> block_while .)
    LIST            reduce using rule 9 (block_code -> block_while .)
    TRY             reduce using rule 9 (block_code -> block_while .)
    WHILE           reduce using rule 9 (block_code -> block_while .)
    DO              reduce using rule 9 (block_code -> block_while .)
    IF              reduce using rule 9 (block_code -> block_while .)
    DICTIONARY      reduce using rule 9 (block_code -> block_while .)
    PUBLIC          reduce using rule 9 (block_code -> block_while .)
    PRIVATE         reduce using rule 9 (block_code -> block_while .)
    CHARTYPE        reduce using rule 9 (block_code -> block_while .)
    STRINGTYPE      reduce using rule 9 (block_code -> block_while .)
    FLOATTYPE       reduce using rule 9 (block_code -> block_while .)
    DECIMALTYPE     reduce using rule 9 (block_code -> block_while .)
    INTTYPE         reduce using rule 9 (block_code -> block_while .)
    BOOLTYPE        reduce using rule 9 (block_code -> block_while .)
    RKEY            reduce using rule 9 (block_code -> block_while .)

    VARIABLE        reduce using rule 10 (block_code -> dict_estruct .)
    ACTION          reduce using rule 10 (block_code -> dict_estruct .)
    IF              reduce using rule 10 (block_code -> dict_estruct .)
    CONST           reduce using rule 10 (block_code -> dict_estruct .)
    LIST            reduce using rule 10 (block_code -> dict_estruct .)
    TRY             reduce using rule 10 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 10 (block_code -> dict_estruct .)
    STRING          reduce using rule 10 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 10 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 10 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 10 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 10 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 10 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 10 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    RKEY            reduce using rule 10 (block_code -> dict_estruct .)



state 19

    (11) block_code -> functions_dict .

    VARIABLE        reduce using rule 11 (block_code -> functions_dict .)
    ACTION          reduce using rule 11 (block_code -> functions_dict .)
    IF              reduce using rule 11 (block_code -> functions_dict .)
    CONST           reduce using rule 11 (block_code -> functions_dict .)
    LIST            reduce using rule 11 (block_code -> functions_dict .)
    TRY             reduce using rule 11 (block_code -> functions_dict .)
    DICTIONARY      reduce using rule 11 (block_code -> functions_dict .)
    STRING          reduce using rule 11 (block_code -> functions_dict .)
    PUBLIC          reduce using rule 11 (block_code -> functions_dict .)
    PRIVATE         reduce using rule 11 (block_code -> functions_dict .)
    CHARTYPE        reduce using rule 11 (block_code -> functions_dict .)
    STRINGTYPE      reduce using rule 11 (block_code -> functions_dict .)
    FLOATTYPE       reduce using rule 11 (block_code -> functions_dict .)
    DECIMALTYPE     reduce using rule 11 (block_code -> functions_dict .)
    INTTYPE         reduce using rule 11 (block_code -> functions_dict .)
    BOOLTYPE        reduce using rule 11 (block_code -> functions_dict .)
    RKEY            reduce using rule 11 (block_code -> functions_dict .)


state 20

    (12) block_code -> functions_list .

    VARIABLE        reduce using rule 12 (block_code -> functions_list .)
    ACTION          reduce using rule 12 (block_code -> functions_list .)
    IF              reduce using rule 12 (block_code -> functions_list .)
    CONST           reduce using rule 12 (block_code -> functions_list .)
    LIST            reduce using rule 12 (block_code -> functions_list .)
    TRY             reduce using rule 12 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 12 (block_code -> functions_list .)
    STRING          reduce using rule 12 (block_code -> functions_list .)
    PUBLIC          reduce using rule 12 (block_code -> functions_list .)
    PRIVATE         reduce using rule 12 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 12 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 12 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 12 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 12 (block_code -> functions_list .)
    INTTYPE         reduce using rule 12 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 12 (block_code -> functions_list .)
    RKEY            reduce using rule 12 (block_code -> functions_list .)


state 21

    (13) block_code -> declaration_lambda .

    VARIABLE        reduce using rule 13 (block_code -> declaration_lambda .)
    ACTION          reduce using rule 13 (block_code -> declaration_lambda .)
    IF              reduce using rule 13 (block_code -> declaration_lambda .)
    CONST           reduce using rule 13 (block_code -> declaration_lambda .)
    LIST            reduce using rule 13 (block_code -> declaration_lambda .)
    TRY             reduce using rule 13 (block_code -> declaration_lambda .)
    DICTIONARY      reduce using rule 13 (block_code -> declaration_lambda .)
    STRING          reduce using rule 13 (block_code -> declaration_lambda .)
    PUBLIC          reduce using rule 13 (block_code -> declaration_lambda .)
    PRIVATE         reduce using rule 13 (block_code -> declaration_lambda .)
    CHARTYPE        reduce using rule 13 (block_code -> declaration_lambda .)
    STRINGTYPE      reduce using rule 13 (block_code -> declaration_lambda .)
    FLOATTYPE       reduce using rule 13 (block_code -> declaration_lambda .)
    DECIMALTYPE     reduce using rule 13 (block_code -> declaration_lambda .)
    INTTYPE         reduce using rule 13 (block_code -> declaration_lambda .)
    BOOLTYPE        reduce using rule 13 (block_code -> declaration_lambda .)
    RKEY            reduce using rule 13 (block_code -> declaration_lambda .)


state 22

    (14) block_code -> block_if .

    VARIABLE        reduce using rule 14 (block_code -> block_if .)
    ACTION          reduce using rule 14 (block_code -> block_if .)
    IF              reduce using rule 14 (block_code -> block_if .)
    CONST           reduce using rule 14 (block_code -> block_if .)
    LIST            reduce using rule 14 (block_code -> block_if .)
    TRY             reduce using rule 14 (block_code -> block_if .)
    DICTIONARY      reduce using rule 14 (block_code -> block_if .)
    STRING          reduce using rule 14 (block_code -> block_if .)
    PUBLIC          reduce using rule 14 (block_code -> block_if .)
    PRIVATE         reduce using rule 14 (block_code -> block_if .)
    CHARTYPE        reduce using rule 14 (block_code -> block_if .)
    STRINGTYPE      reduce using rule 14 (block_code -> block_if .)
    FLOATTYPE       reduce using rule 14 (block_code -> block_if .)
    DECIMALTYPE     reduce using rule 14 (block_code -> block_if .)
    INTTYPE         reduce using rule 14 (block_code -> block_if .)
    BOOLTYPE        reduce using rule 14 (block_code -> block_if .)
    RKEY            reduce using rule 14 (block_code -> block_if .)


state 23

    (15) def_const_or_var -> constant_assignation .

    VARIABLE        reduce using rule 15 (def_const_or_var -> constant_assignation .)
    ACTION          reduce using rule 15 (def_const_or_var -> constant_assignation .)
    IF              reduce using rule 15 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 15 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 15 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 15 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 15 (def_const_or_var -> constant_assignation .)
    STRING          reduce using rule 15 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 15 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 15 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 15 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 15 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 15 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 15 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 15 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 15 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 15 (def_const_or_var -> constant_assignation .)


state 24

    (16) def_const_or_var -> variable_assignation .

    VARIABLE        reduce using rule 16 (def_const_or_var -> variable_assignation .)
    ACTION          reduce using rule 16 (def_const_or_var -> variable_assignation .)
    IF              reduce using rule 16 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 16 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 16 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 16 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 16 (def_const_or_var -> variable_assignation .)
    STRING          reduce using rule 16 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 16 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 16 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 16 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 16 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 16 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 16 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 16 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 16 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 16 (def_const_or_var -> variable_assignation .)


state 25

    (94) estruct_of_data -> list_empty .

    VARIABLE        reduce using rule 94 (estruct_of_data -> list_empty .)
    ACTION          reduce using rule 94 (estruct_of_data -> list_empty .)
    IF              reduce using rule 94 (estruct_of_data -> list_empty .)
    CONST           reduce using rule 94 (estruct_of_data -> list_empty .)
    LIST            reduce using rule 94 (estruct_of_data -> list_empty .)
    TRY             reduce using rule 94 (estruct_of_data -> list_empty .)
    DICTIONARY      reduce using rule 94 (estruct_of_data -> list_empty .)
    STRING          reduce using rule 94 (estruct_of_data -> list_empty .)
    PUBLIC          reduce using rule 94 (estruct_of_data -> list_empty .)
    PRIVATE         reduce using rule 94 (estruct_of_data -> list_empty .)
    CHARTYPE        reduce using rule 94 (estruct_of_data -> list_empty .)
    STRINGTYPE      reduce using rule 94 (estruct_of_data -> list_empty .)
    FLOATTYPE       reduce using rule 94 (estruct_of_data -> list_empty .)
    DECIMALTYPE     reduce using rule 94 (estruct_of_data -> list_empty .)
    INTTYPE         reduce using rule 94 (estruct_of_data -> list_empty .)
    BOOLTYPE        reduce using rule 94 (estruct_of_data -> list_empty .)
    RKEY            reduce using rule 94 (estruct_of_data -> list_empty .)


state 26

    (95) estruct_of_data -> list_full .

    VARIABLE        reduce using rule 95 (estruct_of_data -> list_full .)
    ACTION          reduce using rule 95 (estruct_of_data -> list_full .)
    IF              reduce using rule 95 (estruct_of_data -> list_full .)
    CONST           reduce using rule 95 (estruct_of_data -> list_full .)
    LIST            reduce using rule 95 (estruct_of_data -> list_full .)
    TRY             reduce using rule 95 (estruct_of_data -> list_full .)
    DICTIONARY      reduce using rule 95 (estruct_of_data -> list_full .)
    STRING          reduce using rule 95 (estruct_of_data -> list_full .)
    PUBLIC          reduce using rule 95 (estruct_of_data -> list_full .)
    PRIVATE         reduce using rule 95 (estruct_of_data -> list_full .)
    CHARTYPE        reduce using rule 95 (estruct_of_data -> list_full .)
    STRINGTYPE      reduce using rule 95 (estruct_of_data -> list_full .)
    FLOATTYPE       reduce using rule 95 (estruct_of_data -> list_full .)
    DECIMALTYPE     reduce using rule 95 (estruct_of_data -> list_full .)
    INTTYPE         reduce using rule 95 (estruct_of_data -> list_full .)
    BOOLTYPE        reduce using rule 95 (estruct_of_data -> list_full .)
    RKEY            reduce using rule 95 (estruct_of_data -> list_full .)


state 27

    (52) block_try_catch -> try_catch_simply .

    VARIABLE        reduce using rule 52 (block_try_catch -> try_catch_simply .)
    ACTION          reduce using rule 52 (block_try_catch -> try_catch_simply .)
    IF              reduce using rule 52 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 52 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 52 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 52 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 52 (block_try_catch -> try_catch_simply .)
    STRING          reduce using rule 52 (block_try_catch -> try_catch_simply .)




    PUBLIC          reduce using rule 52 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 52 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 52 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 52 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 52 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 52 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 52 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 52 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 52 (block_try_catch -> try_catch_simply .)


state 28

    (53) block_try_catch -> try_catch_finally .

    VARIABLE        reduce using rule 53 (block_try_catch -> try_catch_finally .)
    ACTION          reduce using rule 53 (block_try_catch -> try_catch_finally .)



    CONST           reduce using rule 53 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 53 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 53 (block_try_catch -> try_catch_finally .)
    WHILE           reduce using rule 53 (block_try_catch -> try_catch_finally .)
    DO              reduce using rule 53 (block_try_catch -> try_catch_finally .)
    IF              reduce using rule 53 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 53 (block_try_catch -> try_catch_finally .)


    IF              reduce using rule 53 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 53 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 53 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 53 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 53 (block_try_catch -> try_catch_finally .)
    STRING          reduce using rule 53 (block_try_catch -> try_catch_finally .)




    PUBLIC          reduce using rule 53 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 53 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 53 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 53 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 53 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 53 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 53 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 53 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 53 (block_try_catch -> try_catch_finally .)


state 29


    (85) dict_estruct -> dict_empty .



    (58) block_while -> normal_while .

    VARIABLE        reduce using rule 58 (block_while -> normal_while .)
    ACTION          reduce using rule 58 (block_while -> normal_while .)
    CONST           reduce using rule 58 (block_while -> normal_while .)
    LIST            reduce using rule 58 (block_while -> normal_while .)
    TRY             reduce using rule 58 (block_while -> normal_while .)
    WHILE           reduce using rule 58 (block_while -> normal_while .)
    DO              reduce using rule 58 (block_while -> normal_while .)
    IF              reduce using rule 58 (block_while -> normal_while .)
    DICTIONARY      reduce using rule 58 (block_while -> normal_while .)
    PUBLIC          reduce using rule 58 (block_while -> normal_while .)
    PRIVATE         reduce using rule 58 (block_while -> normal_while .)
    CHARTYPE        reduce using rule 58 (block_while -> normal_while .)
    STRINGTYPE      reduce using rule 58 (block_while -> normal_while .)
    FLOATTYPE       reduce using rule 58 (block_while -> normal_while .)
    DECIMALTYPE     reduce using rule 58 (block_while -> normal_while .)
    INTTYPE         reduce using rule 58 (block_while -> normal_while .)
    BOOLTYPE        reduce using rule 58 (block_while -> normal_while .)
    RKEY            reduce using rule 58 (block_while -> normal_while .)

    (85) dict_estruct -> dict_empty .


    VARIABLE        reduce using rule 85 (dict_estruct -> dict_empty .)
    ACTION          reduce using rule 85 (dict_estruct -> dict_empty .)
    IF              reduce using rule 85 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 85 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 85 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 85 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 85 (dict_estruct -> dict_empty .)
    STRING          reduce using rule 85 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 85 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 85 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 85 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 85 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 85 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 85 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 85 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 85 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 85 (dict_estruct -> dict_empty .)






state 30


    (86) dict_estruct -> dict_full .



    (59) block_while -> do_while .

    VARIABLE        reduce using rule 59 (block_while -> do_while .)
    ACTION          reduce using rule 59 (block_while -> do_while .)
    CONST           reduce using rule 59 (block_while -> do_while .)
    LIST            reduce using rule 59 (block_while -> do_while .)
    TRY             reduce using rule 59 (block_while -> do_while .)
    WHILE           reduce using rule 59 (block_while -> do_while .)
    DO              reduce using rule 59 (block_while -> do_while .)
    IF              reduce using rule 59 (block_while -> do_while .)
    DICTIONARY      reduce using rule 59 (block_while -> do_while .)
    PUBLIC          reduce using rule 59 (block_while -> do_while .)
    PRIVATE         reduce using rule 59 (block_while -> do_while .)
    CHARTYPE        reduce using rule 59 (block_while -> do_while .)
    STRINGTYPE      reduce using rule 59 (block_while -> do_while .)
    FLOATTYPE       reduce using rule 59 (block_while -> do_while .)
    DECIMALTYPE     reduce using rule 59 (block_while -> do_while .)
    INTTYPE         reduce using rule 59 (block_while -> do_while .)
    BOOLTYPE        reduce using rule 59 (block_while -> do_while .)
    RKEY            reduce using rule 59 (block_while -> do_while .)

    (86) dict_estruct -> dict_full .


    VARIABLE        reduce using rule 86 (dict_estruct -> dict_full .)
    ACTION          reduce using rule 86 (dict_estruct -> dict_full .)
    IF              reduce using rule 86 (dict_estruct -> dict_full .)
    CONST           reduce using rule 86 (dict_estruct -> dict_full .)
    LIST            reduce using rule 86 (dict_estruct -> dict_full .)
    TRY             reduce using rule 86 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 86 (dict_estruct -> dict_full .)
    STRING          reduce using rule 86 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 86 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 86 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 86 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 86 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 86 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 86 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 86 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 86 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 86 (dict_estruct -> dict_full .)






state 31


    (96) functions_dict -> dict_func_put .



    (62) block_if -> normal_if .

    VARIABLE        reduce using rule 62 (block_if -> normal_if .)
    ACTION          reduce using rule 62 (block_if -> normal_if .)
    CONST           reduce using rule 62 (block_if -> normal_if .)
    LIST            reduce using rule 62 (block_if -> normal_if .)
    TRY             reduce using rule 62 (block_if -> normal_if .)
    WHILE           reduce using rule 62 (block_if -> normal_if .)
    DO              reduce using rule 62 (block_if -> normal_if .)
    IF              reduce using rule 62 (block_if -> normal_if .)
    DICTIONARY      reduce using rule 62 (block_if -> normal_if .)
    PUBLIC          reduce using rule 62 (block_if -> normal_if .)
    PRIVATE         reduce using rule 62 (block_if -> normal_if .)
    CHARTYPE        reduce using rule 62 (block_if -> normal_if .)
    STRINGTYPE      reduce using rule 62 (block_if -> normal_if .)
    FLOATTYPE       reduce using rule 62 (block_if -> normal_if .)
    DECIMALTYPE     reduce using rule 62 (block_if -> normal_if .)
    INTTYPE         reduce using rule 62 (block_if -> normal_if .)
    BOOLTYPE        reduce using rule 62 (block_if -> normal_if .)
    RKEY            reduce using rule 62 (block_if -> normal_if .)

    (96) functions_dict -> dict_func_put .


    VARIABLE        reduce using rule 96 (functions_dict -> dict_func_put .)
    ACTION          reduce using rule 96 (functions_dict -> dict_func_put .)
    IF              reduce using rule 96 (functions_dict -> dict_func_put .)
    CONST           reduce using rule 96 (functions_dict -> dict_func_put .)
    LIST            reduce using rule 96 (functions_dict -> dict_func_put .)
    TRY             reduce using rule 96 (functions_dict -> dict_func_put .)
    DICTIONARY      reduce using rule 96 (functions_dict -> dict_func_put .)
    STRING          reduce using rule 96 (functions_dict -> dict_func_put .)
    PUBLIC          reduce using rule 96 (functions_dict -> dict_func_put .)
    PRIVATE         reduce using rule 96 (functions_dict -> dict_func_put .)
    CHARTYPE        reduce using rule 96 (functions_dict -> dict_func_put .)
    STRINGTYPE      reduce using rule 96 (functions_dict -> dict_func_put .)
    FLOATTYPE       reduce using rule 96 (functions_dict -> dict_func_put .)
    DECIMALTYPE     reduce using rule 96 (functions_dict -> dict_func_put .)
    INTTYPE         reduce using rule 96 (functions_dict -> dict_func_put .)
    BOOLTYPE        reduce using rule 96 (functions_dict -> dict_func_put .)
    RKEY            reduce using rule 96 (functions_dict -> dict_func_put .)






state 32


    (97) functions_dict -> dict_func_remove .



    (63) block_if -> if_else .

    VARIABLE        reduce using rule 63 (block_if -> if_else .)
    ACTION          reduce using rule 63 (block_if -> if_else .)
    CONST           reduce using rule 63 (block_if -> if_else .)
    LIST            reduce using rule 63 (block_if -> if_else .)
    TRY             reduce using rule 63 (block_if -> if_else .)
    WHILE           reduce using rule 63 (block_if -> if_else .)
    DO              reduce using rule 63 (block_if -> if_else .)
    IF              reduce using rule 63 (block_if -> if_else .)
    DICTIONARY      reduce using rule 63 (block_if -> if_else .)
    PUBLIC          reduce using rule 63 (block_if -> if_else .)
    PRIVATE         reduce using rule 63 (block_if -> if_else .)
    CHARTYPE        reduce using rule 63 (block_if -> if_else .)
    STRINGTYPE      reduce using rule 63 (block_if -> if_else .)
    FLOATTYPE       reduce using rule 63 (block_if -> if_else .)
    DECIMALTYPE     reduce using rule 63 (block_if -> if_else .)
    INTTYPE         reduce using rule 63 (block_if -> if_else .)
    BOOLTYPE        reduce using rule 63 (block_if -> if_else .)
    RKEY            reduce using rule 63 (block_if -> if_else .)

    (97) functions_dict -> dict_func_remove .


    VARIABLE        reduce using rule 97 (functions_dict -> dict_func_remove .)
    ACTION          reduce using rule 97 (functions_dict -> dict_func_remove .)
    IF              reduce using rule 97 (functions_dict -> dict_func_remove .)
    CONST           reduce using rule 97 (functions_dict -> dict_func_remove .)
    LIST            reduce using rule 97 (functions_dict -> dict_func_remove .)
    TRY             reduce using rule 97 (functions_dict -> dict_func_remove .)
    DICTIONARY      reduce using rule 97 (functions_dict -> dict_func_remove .)
    STRING          reduce using rule 97 (functions_dict -> dict_func_remove .)
    PUBLIC          reduce using rule 97 (functions_dict -> dict_func_remove .)
    PRIVATE         reduce using rule 97 (functions_dict -> dict_func_remove .)
    CHARTYPE        reduce using rule 97 (functions_dict -> dict_func_remove .)
    STRINGTYPE      reduce using rule 97 (functions_dict -> dict_func_remove .)
    FLOATTYPE       reduce using rule 97 (functions_dict -> dict_func_remove .)
    DECIMALTYPE     reduce using rule 97 (functions_dict -> dict_func_remove .)
    INTTYPE         reduce using rule 97 (functions_dict -> dict_func_remove .)
    BOOLTYPE        reduce using rule 97 (functions_dict -> dict_func_remove .)
    RKEY            reduce using rule 97 (functions_dict -> dict_func_remove .)






state 33


    (108) functions_list -> list_func_clear .



    (64) block_if -> if_elseif .

    VARIABLE        reduce using rule 64 (block_if -> if_elseif .)
    ACTION          reduce using rule 64 (block_if -> if_elseif .)
    CONST           reduce using rule 64 (block_if -> if_elseif .)
    LIST            reduce using rule 64 (block_if -> if_elseif .)
    TRY             reduce using rule 64 (block_if -> if_elseif .)
    WHILE           reduce using rule 64 (block_if -> if_elseif .)
    DO              reduce using rule 64 (block_if -> if_elseif .)
    IF              reduce using rule 64 (block_if -> if_elseif .)
    DICTIONARY      reduce using rule 64 (block_if -> if_elseif .)
    PUBLIC          reduce using rule 64 (block_if -> if_elseif .)
    PRIVATE         reduce using rule 64 (block_if -> if_elseif .)
    CHARTYPE        reduce using rule 64 (block_if -> if_elseif .)
    STRINGTYPE      reduce using rule 64 (block_if -> if_elseif .)
    FLOATTYPE       reduce using rule 64 (block_if -> if_elseif .)
    DECIMALTYPE     reduce using rule 64 (block_if -> if_elseif .)
    INTTYPE         reduce using rule 64 (block_if -> if_elseif .)
    BOOLTYPE        reduce using rule 64 (block_if -> if_elseif .)
    RKEY            reduce using rule 64 (block_if -> if_elseif .)

    (108) functions_list -> list_func_clear .


    VARIABLE        reduce using rule 108 (functions_list -> list_func_clear .)
    ACTION          reduce using rule 108 (functions_list -> list_func_clear .)
    IF              reduce using rule 108 (functions_list -> list_func_clear .)
    CONST           reduce using rule 108 (functions_list -> list_func_clear .)
    LIST            reduce using rule 108 (functions_list -> list_func_clear .)
    TRY             reduce using rule 108 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 108 (functions_list -> list_func_clear .)
    STRING          reduce using rule 108 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 108 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 108 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 108 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 108 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 108 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 108 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 108 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 108 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 108 (functions_list -> list_func_clear .)






state 34


    (109) functions_list -> list_func_count .



    (96) dict_estruct -> dict_empty .

    VARIABLE        reduce using rule 96 (dict_estruct -> dict_empty .)
    ACTION          reduce using rule 96 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 96 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 96 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 96 (dict_estruct -> dict_empty .)
    WHILE           reduce using rule 96 (dict_estruct -> dict_empty .)
    DO              reduce using rule 96 (dict_estruct -> dict_empty .)
    IF              reduce using rule 96 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 96 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 96 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 96 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 96 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 96 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 96 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 96 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 96 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 96 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 96 (dict_estruct -> dict_empty .)

    (109) functions_list -> list_func_count .


    VARIABLE        reduce using rule 109 (functions_list -> list_func_count .)
    ACTION          reduce using rule 109 (functions_list -> list_func_count .)
    IF              reduce using rule 109 (functions_list -> list_func_count .)
    CONST           reduce using rule 109 (functions_list -> list_func_count .)
    LIST            reduce using rule 109 (functions_list -> list_func_count .)
    TRY             reduce using rule 109 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 109 (functions_list -> list_func_count .)
    STRING          reduce using rule 109 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 109 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 109 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 109 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 109 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 109 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 109 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 109 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 109 (functions_list -> list_func_count .)
    RKEY            reduce using rule 109 (functions_list -> list_func_count .)






state 35


    (110) functions_list -> list_func_add .



    (97) dict_estruct -> dict_full .

    VARIABLE        reduce using rule 97 (dict_estruct -> dict_full .)
    ACTION          reduce using rule 97 (dict_estruct -> dict_full .)
    CONST           reduce using rule 97 (dict_estruct -> dict_full .)
    LIST            reduce using rule 97 (dict_estruct -> dict_full .)
    TRY             reduce using rule 97 (dict_estruct -> dict_full .)
    WHILE           reduce using rule 97 (dict_estruct -> dict_full .)
    DO              reduce using rule 97 (dict_estruct -> dict_full .)
    IF              reduce using rule 97 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 97 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 97 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 97 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 97 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 97 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 97 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 97 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 97 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 97 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 97 (dict_estruct -> dict_full .)

    (110) functions_list -> list_func_add .


    VARIABLE        reduce using rule 110 (functions_list -> list_func_add .)
    ACTION          reduce using rule 110 (functions_list -> list_func_add .)
    IF              reduce using rule 110 (functions_list -> list_func_add .)
    CONST           reduce using rule 110 (functions_list -> list_func_add .)
    LIST            reduce using rule 110 (functions_list -> list_func_add .)
    TRY             reduce using rule 110 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 110 (functions_list -> list_func_add .)
    STRING          reduce using rule 110 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 110 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 110 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 110 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 110 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 110 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 110 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 110 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 110 (functions_list -> list_func_add .)
    RKEY            reduce using rule 110 (functions_list -> list_func_add .)






state 36


    (111) functions_list -> list_func_removeat .



    (115) functions_list -> list_func_clear .

    VARIABLE        reduce using rule 115 (functions_list -> list_func_clear .)
    ACTION          reduce using rule 115 (functions_list -> list_func_clear .)
    CONST           reduce using rule 115 (functions_list -> list_func_clear .)
    LIST            reduce using rule 115 (functions_list -> list_func_clear .)
    TRY             reduce using rule 115 (functions_list -> list_func_clear .)
    WHILE           reduce using rule 115 (functions_list -> list_func_clear .)
    DO              reduce using rule 115 (functions_list -> list_func_clear .)
    IF              reduce using rule 115 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 115 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 115 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 115 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 115 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 115 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 115 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 115 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 115 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 115 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 115 (functions_list -> list_func_clear .)

    (111) functions_list -> list_func_removeat .


    VARIABLE        reduce using rule 111 (functions_list -> list_func_removeat .)
    ACTION          reduce using rule 111 (functions_list -> list_func_removeat .)
    IF              reduce using rule 111 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 111 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 111 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 111 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 111 (functions_list -> list_func_removeat .)
    STRING          reduce using rule 111 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 111 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 111 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 111 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 111 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 111 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 111 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 111 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 111 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 111 (functions_list -> list_func_removeat .)






state 37


    (116) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    SMALLER_THAN    shift and go to state 61


    (116) functions_list -> list_func_count .

    VARIABLE        reduce using rule 116 (functions_list -> list_func_count .)
    ACTION          reduce using rule 116 (functions_list -> list_func_count .)
    CONST           reduce using rule 116 (functions_list -> list_func_count .)
    LIST            reduce using rule 116 (functions_list -> list_func_count .)
    TRY             reduce using rule 116 (functions_list -> list_func_count .)
    WHILE           reduce using rule 116 (functions_list -> list_func_count .)
    DO              reduce using rule 116 (functions_list -> list_func_count .)
    IF              reduce using rule 116 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 116 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 116 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 116 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 116 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 116 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 116 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 116 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 116 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 116 (functions_list -> list_func_count .)
    RKEY            reduce using rule 116 (functions_list -> list_func_count .)

    (116) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    SMALLER_THAN    shift and go to state 61




state 38


    (34) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 34 (data_type -> STRINGTYPE .)


    (117) functions_list -> list_func_add .

    VARIABLE        reduce using rule 117 (functions_list -> list_func_add .)
    ACTION          reduce using rule 117 (functions_list -> list_func_add .)
    CONST           reduce using rule 117 (functions_list -> list_func_add .)
    LIST            reduce using rule 117 (functions_list -> list_func_add .)
    TRY             reduce using rule 117 (functions_list -> list_func_add .)
    WHILE           reduce using rule 117 (functions_list -> list_func_add .)
    DO              reduce using rule 117 (functions_list -> list_func_add .)
    IF              reduce using rule 117 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 117 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 117 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 117 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 117 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 117 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 117 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 117 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 117 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 117 (functions_list -> list_func_add .)
    RKEY            reduce using rule 117 (functions_list -> list_func_add .)

    (34) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 34 (data_type -> STRINGTYPE .)




state 39


    (58) block_if -> IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 62


    (118) functions_list -> list_func_removeat .

    VARIABLE        reduce using rule 118 (functions_list -> list_func_removeat .)
    ACTION          reduce using rule 118 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 118 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 118 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 118 (functions_list -> list_func_removeat .)
    WHILE           reduce using rule 118 (functions_list -> list_func_removeat .)
    DO              reduce using rule 118 (functions_list -> list_func_removeat .)
    IF              reduce using rule 118 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 118 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 118 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 118 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 118 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 118 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 118 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 118 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 118 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 118 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 118 (functions_list -> list_func_removeat .)

    (58) block_if -> IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 62




state 40


    (19) constant_assignation -> access_modifiers . CONST all_asignations
    (17) variable_assignation -> access_modifiers . all_asignations
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 63
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56
    VARIABLE        shift and go to state 65



    (123) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    (19) constant_assignation -> access_modifiers . CONST all_asignations
    (17) variable_assignation -> access_modifiers . all_asignations
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 63
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56
    VARIABLE        shift and go to state 65


    all_asignations                shift and go to state 64
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44

state 41

    (20) constant_assignation -> CONST . all_asignations
    (21) constant_assignation -> CONST . data_type assignation_key_value COMMA some_assignation_constant
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56
    VARIABLE        shift and go to state 65

    all_asignations                shift and go to state 66
    data_type                      shift and go to state 67
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 42

    (18) variable_assignation -> all_asignations .

    VARIABLE        reduce using rule 18 (variable_assignation -> all_asignations .)
    ACTION          reduce using rule 18 (variable_assignation -> all_asignations .)
    IF              reduce using rule 18 (variable_assignation -> all_asignations .)
    CONST           reduce using rule 18 (variable_assignation -> all_asignations .)
    LIST            reduce using rule 18 (variable_assignation -> all_asignations .)
    TRY             reduce using rule 18 (variable_assignation -> all_asignations .)
    DICTIONARY      reduce using rule 18 (variable_assignation -> all_asignations .)
    STRING          reduce using rule 18 (variable_assignation -> all_asignations .)
    PUBLIC          reduce using rule 18 (variable_assignation -> all_asignations .)
    PRIVATE         reduce using rule 18 (variable_assignation -> all_asignations .)
    CHARTYPE        reduce using rule 18 (variable_assignation -> all_asignations .)
    STRINGTYPE      reduce using rule 18 (variable_assignation -> all_asignations .)
    FLOATTYPE       reduce using rule 18 (variable_assignation -> all_asignations .)
    DECIMALTYPE     reduce using rule 18 (variable_assignation -> all_asignations .)
    INTTYPE         reduce using rule 18 (variable_assignation -> all_asignations .)
    BOOLTYPE        reduce using rule 18 (variable_assignation -> all_asignations .)
    RKEY            reduce using rule 18 (variable_assignation -> all_asignations .)


state 43

    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 65

    assignation_key_value          shift and go to state 68

state 44

    (27) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (28) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 69


    VARIABLE        shift and go to state 65

    assignation_key_value          shift and go to state 68

state 41

    (34) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 34 (data_type -> STRINGTYPE .)


state 42

    (19) constant_assignation -> access_modifiers . CONST all_asignations
    (17) variable_assignation -> access_modifiers . all_asignations
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 66
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60
    VARIABLE        shift and go to state 68

    all_asignations                shift and go to state 67
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46

state 43

    (20) constant_assignation -> CONST . all_asignations
    (21) constant_assignation -> CONST . data_type assignation_key_value COMMA some_assignation_constant
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60
    VARIABLE        shift and go to state 68

    all_asignations                shift and go to state 69
    data_type                      shift and go to state 70
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 44


    (18) variable_assignation -> all_asignations .

    VARIABLE        reduce using rule 18 (variable_assignation -> all_asignations .)
    ACTION          reduce using rule 18 (variable_assignation -> all_asignations .)
    CONST           reduce using rule 18 (variable_assignation -> all_asignations .)
    LIST            reduce using rule 18 (variable_assignation -> all_asignations .)
    TRY             reduce using rule 18 (variable_assignation -> all_asignations .)
    WHILE           reduce using rule 18 (variable_assignation -> all_asignations .)
    DO              reduce using rule 18 (variable_assignation -> all_asignations .)
    IF              reduce using rule 18 (variable_assignation -> all_asignations .)
    DICTIONARY      reduce using rule 18 (variable_assignation -> all_asignations .)
    PUBLIC          reduce using rule 18 (variable_assignation -> all_asignations .)
    PRIVATE         reduce using rule 18 (variable_assignation -> all_asignations .)
    CHARTYPE        reduce using rule 18 (variable_assignation -> all_asignations .)
    STRINGTYPE      reduce using rule 18 (variable_assignation -> all_asignations .)
    FLOATTYPE       reduce using rule 18 (variable_assignation -> all_asignations .)
    DECIMALTYPE     reduce using rule 18 (variable_assignation -> all_asignations .)
    INTTYPE         reduce using rule 18 (variable_assignation -> all_asignations .)
    BOOLTYPE        reduce using rule 18 (variable_assignation -> all_asignations .)
    RKEY            reduce using rule 18 (variable_assignation -> all_asignations .)

    (27) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (28) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 69




state 45


    (100) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 70


    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 68

    (100) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 70


    assignation_key_value          shift and go to state 71

state 46


    (37) data_type -> INTTYPE .

    VARIABLE        reduce using rule 37 (data_type -> INTTYPE .)


    (27) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (28) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 72

    (37) data_type -> INTTYPE .

    VARIABLE        reduce using rule 37 (data_type -> INTTYPE .)




state 47


    (54) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 71


    (107) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 73

    (54) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 71




state 48


    (87) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 72


    (37) data_type -> INTTYPE .

    VARIABLE        reduce using rule 37 (data_type -> INTTYPE .)

    (87) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 72




state 49


    (98) dict_func_put -> STRING . DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> STRING . DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    DOT             shift and go to state 73


    (54) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 74

    (98) dict_func_put -> STRING . DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> STRING . DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    DOT             shift and go to state 73




state 50


    (57) access_modifiers -> PRIVATE .



    (61) normal_while -> WHILE . LPARENT logic_operation RPARENT LKEY block_code RKEY

    LPARENT         shift and go to state 75

    (57) access_modifiers -> PRIVATE .


    CONST           reduce using rule 57 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 57 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 57 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 57 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 57 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 57 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 57 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 57 (access_modifiers -> PRIVATE .)






state 51


    (22) all_asignations -> assignation_with_datatype .



    (60) do_while -> DO . LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT

    LKEY            shift and go to state 76

    (22) all_asignations -> assignation_with_datatype .


    VARIABLE        reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    ACTION          reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    IF              reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    CONST           reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    LIST            reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    TRY             reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    DICTIONARY      reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    STRING          reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    PUBLIC          reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    PRIVATE         reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    CHARTYPE        reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    STRINGTYPE      reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    FLOATTYPE       reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    INTTYPE         reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    BOOLTYPE        reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    RKEY            reduce using rule 22 (all_asignations -> assignation_with_datatype .)






state 52


    (23) all_asignations -> assignation_without_datatype .



    (65) normal_if -> IF . LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> IF . LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> IF . LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY

    LPARENT         shift and go to state 77

    (23) all_asignations -> assignation_without_datatype .


    VARIABLE        reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    ACTION          reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    IF              reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    CONST           reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    LIST            reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    TRY             reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    DICTIONARY      reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    STRING          reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    PUBLIC          reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    PRIVATE         reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    CHARTYPE        reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    STRINGTYPE      reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    FLOATTYPE       reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    INTTYPE         reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    BOOLTYPE        reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    RKEY            reduce using rule 23 (all_asignations -> assignation_without_datatype .)






state 53




    (98) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 78


state 54

    (57) access_modifiers -> PRIVATE .

    CONST           reduce using rule 57 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 57 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 57 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 57 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 57 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 57 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 57 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 57 (access_modifiers -> PRIVATE .)


state 55

    (22) all_asignations -> assignation_with_datatype .

    VARIABLE        reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    ACTION          reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    CONST           reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    LIST            reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    TRY             reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    WHILE           reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    DO              reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    IF              reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    DICTIONARY      reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    PUBLIC          reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    PRIVATE         reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    CHARTYPE        reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    STRINGTYPE      reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    FLOATTYPE       reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    INTTYPE         reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    BOOLTYPE        reduce using rule 22 (all_asignations -> assignation_with_datatype .)
    RKEY            reduce using rule 22 (all_asignations -> assignation_with_datatype .)


state 56

    (23) all_asignations -> assignation_without_datatype .

    VARIABLE        reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    ACTION          reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    CONST           reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    LIST            reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    TRY             reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    WHILE           reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    DO              reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    IF              reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    DICTIONARY      reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    PUBLIC          reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    PRIVATE         reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    CHARTYPE        reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    STRINGTYPE      reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    FLOATTYPE       reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    INTTYPE         reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    BOOLTYPE        reduce using rule 23 (all_asignations -> assignation_without_datatype .)
    RKEY            reduce using rule 23 (all_asignations -> assignation_without_datatype .)


state 57




    (33) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 33 (data_type -> CHARTYPE .)



state 54



state 58

state 54



    (35) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 35 (data_type -> FLOATTYPE .)



state 55



state 59

state 55



    (36) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 36 (data_type -> DECIMALTYPE .)



state 56



state 60

state 56



    (38) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 38 (data_type -> BOOLTYPE .)





state 61

    (119) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 79
    COUNT           shift and go to state 80
    ADD             shift and go to state 81
    REMOVEAT        shift and go to state 82


state 62


state 57

    (112) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 74
    COUNT           shift and go to state 75
    ADD             shift and go to state 76
    REMOVEAT        shift and go to state 77


state 58





    (32) assignation_key_value -> VARIABLE ASSIGNATION . value
    (39) value -> . value_numeric
    (40) value -> . value_logic
    (41) value -> . value_string
    (49) value_numeric -> . INTEGER
    (50) value_numeric -> . FLOAT_NUMBER
    (51) value_numeric -> . DECIMAL_NUMBER
    (47) value_logic -> . BOOLTRUE
    (48) value_logic -> . BOOLFALSE
    (42) value_string -> . STRING
    (43) value_string -> . CHAR
    (44) value_string -> . VARIABLE
    (45) value_string -> . READ LPARENT RPARENT
    (46) value_string -> . concatenation



    (78) concatenation -> . STRING
    (79) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 88
    FLOAT_NUMBER    shift and go to state 89
    DECIMAL_NUMBER  shift and go to state 90
    BOOLTRUE        shift and go to state 91
    BOOLFALSE       shift and go to state 92
    STRING          shift and go to state 93
    CHAR            shift and go to state 94
    VARIABLE        shift and go to state 83
    READ            shift and go to state 95

    value                          shift and go to state 84
    value_numeric                  shift and go to state 85
    value_logic                    shift and go to state 86
    value_string                   shift and go to state 87
    concatenation                  shift and go to state 96

state 63


    (67) concatenation -> . STRING
    (68) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 83
    FLOAT_NUMBER    shift and go to state 84
    DECIMAL_NUMBER  shift and go to state 85
    BOOLTRUE        shift and go to state 86
    BOOLFALSE       shift and go to state 87
    STRING          shift and go to state 88
    CHAR            shift and go to state 89
    VARIABLE        shift and go to state 78
    READ            shift and go to state 90

    value                          shift and go to state 79
    value_numeric                  shift and go to state 80
    value_logic                    shift and go to state 81
    value_string                   shift and go to state 82
    concatenation                  shift and go to state 91

state 59





    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 3 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)



state 60


state 64

state 60



    (5) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 5 (all_block_code -> block_code all_block_code .)





state 65

    (123) declaration_lambda -> ACTION SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    STRINGTYPE      shift and go to state 97


state 61

    (116) declaration_lambda -> ACTION SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    STRINGTYPE      shift and go to state 92


state 62

    (58) block_if -> IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    VARIABLE        shift and go to state 93


state 63

    (19) constant_assignation -> access_modifiers CONST . all_asignations
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56
    VARIABLE        shift and go to state 65

    all_asignations                shift and go to state 94
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44

state 64

    (17) variable_assignation -> access_modifiers all_asignations .

    VARIABLE        reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    ACTION          reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    IF              reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    CONST           reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    LIST            reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    TRY             reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    DICTIONARY      reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    STRING          reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    PUBLIC          reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    PRIVATE         reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    CHARTYPE        reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    STRINGTYPE      reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    FLOATTYPE       reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    DECIMALTYPE     reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    INTTYPE         reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    BOOLTYPE        reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    RKEY            reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)


state 65

    (32) assignation_key_value -> VARIABLE . ASSIGNATION value


    ASSIGNATION     shift and go to state 58


    ASSIGNATION     shift and go to state 58




state 66


    (20) constant_assignation -> CONST all_asignations .

    VARIABLE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    ACTION          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    IF              reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    CONST           reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    LIST            reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    TRY             reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DICTIONARY      reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    STRING          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    PUBLIC          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    PRIVATE         reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    CHARTYPE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    STRINGTYPE      reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    FLOATTYPE       reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DECIMALTYPE     reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    INTTYPE         reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    BOOLTYPE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    RKEY            reduce using rule 20 (constant_assignation -> CONST all_asignations .)


    (19) constant_assignation -> access_modifiers CONST . all_asignations
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60
    VARIABLE        shift and go to state 68

    (20) constant_assignation -> CONST all_asignations .

    VARIABLE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    ACTION          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    IF              reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    CONST           reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    LIST            reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    TRY             reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DICTIONARY      reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    STRING          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    PUBLIC          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    PRIVATE         reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    CHARTYPE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    STRINGTYPE      reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    FLOATTYPE       reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DECIMALTYPE     reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    INTTYPE         reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    BOOLTYPE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    RKEY            reduce using rule 20 (constant_assignation -> CONST all_asignations .)


    all_asignations                shift and go to state 98
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46

state 67


    (21) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 65



    (17) variable_assignation -> access_modifiers all_asignations .

    VARIABLE        reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    ACTION          reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    CONST           reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    LIST            reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    TRY             reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    WHILE           reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    DO              reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    IF              reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    DICTIONARY      reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    PUBLIC          reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    PRIVATE         reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    CHARTYPE        reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    STRINGTYPE      reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    FLOATTYPE       reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    DECIMALTYPE     reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    INTTYPE         reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    BOOLTYPE        reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)
    RKEY            reduce using rule 17 (variable_assignation -> access_modifiers all_asignations .)

    (21) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 65



    assignation_key_value          shift and go to state 95

state 68


    (24) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 96


    (32) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 62

    (24) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 96




state 69


    (27) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
    ACTION          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 65
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    (20) constant_assignation -> CONST all_asignations .

    VARIABLE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    ACTION          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    CONST           reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    LIST            reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    TRY             reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    WHILE           reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DO              reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    IF              reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DICTIONARY      reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    PUBLIC          reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    PRIVATE         reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    CHARTYPE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    STRINGTYPE      reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    FLOATTYPE       reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    DECIMALTYPE     reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    INTTYPE         reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    BOOLTYPE        reduce using rule 20 (constant_assignation -> CONST all_asignations .)
    RKEY            reduce using rule 20 (constant_assignation -> CONST all_asignations .)

    (27) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
    ACTION          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 65
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



  ! VARIABLE        [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]

    assignation_key_value          shift and go to state 44
    assignation_without_datatype   shift and go to state 97
    assignation_with_datatype      shift and go to state 98
    data_type                      shift and go to state 43

state 70


    (100) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 99
    INTTYPE         shift and go to state 100


    (21) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 68

    (100) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 99
    INTTYPE         shift and go to state 100


    assignation_key_value          shift and go to state 99

state 71


    (54) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    (24) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 100

    (54) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    block_code                     shift and go to state 101
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    block_if                       shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 72


    (87) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 102


    (27) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE


  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
    ACTION          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 68
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    (87) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 102


  ! VARIABLE        [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]

    assignation_key_value          shift and go to state 46
    assignation_without_datatype   shift and go to state 101
    assignation_with_datatype      shift and go to state 102
    data_type                      shift and go to state 45

state 73


    (98) dict_func_put -> STRING DOT . PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> STRING DOT . REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    PUT             shift and go to state 103
    REMOVE          shift and go to state 104


    (107) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 103
    INTTYPE         shift and go to state 104

    (98) dict_func_put -> STRING DOT . PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> STRING DOT . REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    PUT             shift and go to state 103
    REMOVE          shift and go to state 104




state 74


    (112) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 105


    (54) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    (112) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 105


    block_code                     shift and go to state 105
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 75


    (113) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 106


    (61) normal_while -> WHILE LPARENT . logic_operation RPARENT LKEY block_code RKEY
    (76) logic_operation -> . value_logic
    (77) logic_operation -> . value_logic logic_operator logic_operation
    (47) value_logic -> . BOOLTRUE
    (48) value_logic -> . BOOLFALSE


    BOOLTRUE        shift and go to state 91
    BOOLFALSE       shift and go to state 92

    (113) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 106


    logic_operation                shift and go to state 106
    value_logic                    shift and go to state 107

state 76


    (114) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 107


    (60) do_while -> DO LKEY . block_code RKEY WHILE LPARENT logic_operation RPARENT
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    (114) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 107


    block_code                     shift and go to state 108
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 77


    (115) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 108


    (65) normal_if -> IF LPARENT . logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> IF LPARENT . logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> IF LPARENT . logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (76) logic_operation -> . value_logic
    (77) logic_operation -> . value_logic logic_operator logic_operation
    (47) value_logic -> . BOOLTRUE
    (48) value_logic -> . BOOLFALSE


    BOOLTRUE        shift and go to state 91
    BOOLFALSE       shift and go to state 92

    (115) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 108


    logic_operation                shift and go to state 109
    value_logic                    shift and go to state 107

state 78


    (44) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 44 (value_string -> VARIABLE .)
    COMMA           reduce using rule 44 (value_string -> VARIABLE .)


    (98) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 110

    (44) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 44 (value_string -> VARIABLE .)
    COMMA           reduce using rule 44 (value_string -> VARIABLE .)




state 79


    (32) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 32 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 32 (assignation_key_value -> VARIABLE ASSIGNATION value .)


    (119) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 111

    (32) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 32 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 32 (assignation_key_value -> VARIABLE ASSIGNATION value .)




state 80


    (39) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 39 (value -> value_numeric .)
    COMMA           reduce using rule 39 (value -> value_numeric .)


    (120) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 112

    (39) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 39 (value -> value_numeric .)
    COMMA           reduce using rule 39 (value -> value_numeric .)




state 81


    (40) value -> value_logic .

    DOTANDCOMMA     reduce using rule 40 (value -> value_logic .)
    COMMA           reduce using rule 40 (value -> value_logic .)


    (121) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 113

    (40) value -> value_logic .

    DOTANDCOMMA     reduce using rule 40 (value -> value_logic .)
    COMMA           reduce using rule 40 (value -> value_logic .)




state 82


    (41) value -> value_string .

    DOTANDCOMMA     reduce using rule 41 (value -> value_string .)
    COMMA           reduce using rule 41 (value -> value_string .)


    (122) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 114

    (41) value -> value_string .

    DOTANDCOMMA     reduce using rule 41 (value -> value_string .)
    COMMA           reduce using rule 41 (value -> value_string .)




state 83


    (49) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 49 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 49 (value_numeric -> INTEGER .)


    (44) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 44 (value_string -> VARIABLE .)
    COMMA           reduce using rule 44 (value_string -> VARIABLE .)

    (49) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 49 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 49 (value_numeric -> INTEGER .)




state 84


    (50) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 50 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 50 (value_numeric -> FLOAT_NUMBER .)


    (32) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 32 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 32 (assignation_key_value -> VARIABLE ASSIGNATION value .)

    (50) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 50 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 50 (value_numeric -> FLOAT_NUMBER .)




state 85


    (51) value_numeric -> DECIMAL_NUMBER .

    DOTANDCOMMA     reduce using rule 51 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 51 (value_numeric -> DECIMAL_NUMBER .)


    (39) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 39 (value -> value_numeric .)
    COMMA           reduce using rule 39 (value -> value_numeric .)

    (51) value_numeric -> DECIMAL_NUMBER .

    DOTANDCOMMA     reduce using rule 51 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 51 (value_numeric -> DECIMAL_NUMBER .)




state 86


    (47) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 47 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 47 (value_logic -> BOOLTRUE .)


    (40) value -> value_logic .

    DOTANDCOMMA     reduce using rule 40 (value -> value_logic .)
    COMMA           reduce using rule 40 (value -> value_logic .)

    (47) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 47 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 47 (value_logic -> BOOLTRUE .)




state 87




    (41) value -> value_string .

    DOTANDCOMMA     reduce using rule 41 (value -> value_string .)
    COMMA           reduce using rule 41 (value -> value_string .)


state 88

    (49) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 49 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 49 (value_numeric -> INTEGER .)


state 89

    (50) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 50 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 50 (value_numeric -> FLOAT_NUMBER .)


state 90

    (51) value_numeric -> DECIMAL_NUMBER .

    DOTANDCOMMA     reduce using rule 51 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 51 (value_numeric -> DECIMAL_NUMBER .)


state 91

    (47) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 47 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 47 (value_logic -> BOOLTRUE .)
    GREATER_THAN    reduce using rule 47 (value_logic -> BOOLTRUE .)
    SMALLER_THAN    reduce using rule 47 (value_logic -> BOOLTRUE .)
    EQUAL_COMPARATION reduce using rule 47 (value_logic -> BOOLTRUE .)
    INEQUALITY      reduce using rule 47 (value_logic -> BOOLTRUE .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (value_logic -> BOOLTRUE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 47 (value_logic -> BOOLTRUE .)
    LOGICAND        reduce using rule 47 (value_logic -> BOOLTRUE .)
    LOGICOR         reduce using rule 47 (value_logic -> BOOLTRUE .)
    LOGICNOT        reduce using rule 47 (value_logic -> BOOLTRUE .)
    LOGICXOR        reduce using rule 47 (value_logic -> BOOLTRUE .)
    RPARENT         reduce using rule 47 (value_logic -> BOOLTRUE .)


state 92




    (48) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 48 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 48 (value_logic -> BOOLFALSE .)



    GREATER_THAN    reduce using rule 48 (value_logic -> BOOLFALSE .)
    SMALLER_THAN    reduce using rule 48 (value_logic -> BOOLFALSE .)
    EQUAL_COMPARATION reduce using rule 48 (value_logic -> BOOLFALSE .)
    INEQUALITY      reduce using rule 48 (value_logic -> BOOLFALSE .)
    GREATER_THAN_OR_EQUAL reduce using rule 48 (value_logic -> BOOLFALSE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 48 (value_logic -> BOOLFALSE .)
    LOGICAND        reduce using rule 48 (value_logic -> BOOLFALSE .)
    LOGICOR         reduce using rule 48 (value_logic -> BOOLFALSE .)
    LOGICNOT        reduce using rule 48 (value_logic -> BOOLFALSE .)
    LOGICXOR        reduce using rule 48 (value_logic -> BOOLFALSE .)
    RPARENT         reduce using rule 48 (value_logic -> BOOLFALSE .)


state 93

    (42) value_string -> STRING .
    (78) concatenation -> STRING .
    (79) concatenation -> STRING . PLUS concatenation




state 88

    (42) value_string -> STRING .
    (67) concatenation -> STRING .
    (68) concatenation -> STRING . PLUS concatenation





  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 42 (value_string -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 42 (value_string -> STRING .)
    DOTANDCOMMA     reduce using rule 42 (value_string -> STRING .)
    COMMA           reduce using rule 42 (value_string -> STRING .)



    PLUS            shift and go to state 115

  ! DOTANDCOMMA     [ reduce using rule 78 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 78 (concatenation -> STRING .) ]


state 94


    PLUS            shift and go to state 109

  ! DOTANDCOMMA     [ reduce using rule 67 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 67 (concatenation -> STRING .) ]


state 89





    (43) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 43 (value_string -> CHAR .)
    COMMA           reduce using rule 43 (value_string -> CHAR .)





state 95

    (45) value_string -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 116


state 96


state 90

    (45) value_string -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 110


state 91





    (46) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 46 (value_string -> concatenation .)
    COMMA           reduce using rule 46 (value_string -> concatenation .)





state 97

    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    GREATER_THAN    shift and go to state 117


state 98


state 92

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    GREATER_THAN    shift and go to state 111


state 93

    (58) block_if -> IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 112


state 94





    (19) constant_assignation -> access_modifiers CONST all_asignations .

    VARIABLE        reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    ACTION          reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)



    CONST           reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    LIST            reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    TRY             reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    WHILE           reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    DO              reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    IF              reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    DICTIONARY      reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)


    IF              reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    CONST           reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    LIST            reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    TRY             reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    DICTIONARY      reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRING          reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)




    PUBLIC          reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    PRIVATE         reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    CHARTYPE        reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRINGTYPE      reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    FLOATTYPE       reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    DECIMALTYPE     reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    INTTYPE         reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    BOOLTYPE        reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)
    RKEY            reduce using rule 19 (constant_assignation -> access_modifiers CONST all_asignations .)



state 95



state 99

state 95



    (21) constant_assignation -> CONST data_type assignation_key_value . COMMA some_assignation_constant
    (24) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype




    COMMA           shift and go to state 118
    DOTANDCOMMA     shift and go to state 100


state 100


    COMMA           shift and go to state 113
    DOTANDCOMMA     shift and go to state 96


state 96





    (24) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .
    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (26) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ACTION          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)

    IF              reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56
    VARIABLE        shift and go to state 65



    CONST           reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60
    VARIABLE        shift and go to state 68

    IF              reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56
    VARIABLE        shift and go to state 65



  ! VARIABLE        [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]






    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 114
    assignation_without_datatype   shift and go to state 115

state 97

    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 98

    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRING          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 99

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 116


state 100

    (101) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 117


    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 119
    assignation_without_datatype   shift and go to state 120

state 101


    (54) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 118


    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    WHILE           reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DO              reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)

    (54) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 118




state 102


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA


    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    WHILE           reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DO              reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 103

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 121


state 104

    (108) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 122


state 105

    (54) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA


    RKEY            shift and go to state 123


state 103

    (98) dict_func_put -> STRING DOT PUT . LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 120


state 104

    (99) dict_func_remove -> STRING DOT REMOVE . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 121


state 105

    (112) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 122


state 103

    (98) dict_func_put -> STRING DOT PUT . LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 120


state 104

    (99) dict_func_remove -> STRING DOT REMOVE . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 121


state 105

    (112) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 122


state 106


    (113) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA



    (61) normal_while -> WHILE LPARENT logic_operation . RPARENT LKEY block_code RKEY

    (113) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA


    RPARENT         shift and go to state 123


state 107

    (114) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 124


state 108

    (115) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 125


state 109

    (68) concatenation -> STRING PLUS . concatenation
    (67) concatenation -> . STRING
    (68) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 126



    concatenation                  shift and go to state 127

state 110

    (45) value_string -> READ LPARENT . RPARENT


    RPARENT         shift and go to state 128


state 107

    (76) logic_operation -> value_logic .
    (77) logic_operation -> value_logic . logic_operator logic_operation
    (80) logic_operator -> . GREATER_THAN
    (81) logic_operator -> . SMALLER_THAN
    (82) logic_operator -> . EQUAL_COMPARATION
    (83) logic_operator -> . INEQUALITY
    (84) logic_operator -> . GREATER_THAN_OR_EQUAL
    (85) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (86) logic_operator -> . LOGICAND
    (87) logic_operator -> . LOGICOR
    (88) logic_operator -> . LOGICNOT
    (89) logic_operator -> . LOGICXOR

    RPARENT         reduce using rule 76 (logic_operation -> value_logic .)
    GREATER_THAN    shift and go to state 126
    SMALLER_THAN    shift and go to state 127
    EQUAL_COMPARATION shift and go to state 128
    INEQUALITY      shift and go to state 129
    GREATER_THAN_OR_EQUAL shift and go to state 130
    SMALLER_THAN_OR_EQUAL shift and go to state 131
    LOGICAND        shift and go to state 132
    LOGICOR         shift and go to state 133
    LOGICNOT        shift and go to state 134
    LOGICXOR        shift and go to state 135

    logic_operator                 shift and go to state 125

state 108

    (60) do_while -> DO LKEY block_code . RKEY WHILE LPARENT logic_operation RPARENT

    RKEY            shift and go to state 136


state 109

    (65) normal_if -> IF LPARENT logic_operation . RPARENT LKEY block_code RKEY
    (66) if_else -> IF LPARENT logic_operation . RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> IF LPARENT logic_operation . RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY

    RPARENT         shift and go to state 137


    concatenation                  shift and go to state 127

state 110


    (45) value_string -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 128

    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 138



state 111


    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 129


    (119) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 139

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 129




state 112


    (58) block_if -> IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 130


    (120) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 140

    (58) block_if -> IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 130




state 113


    (21) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (30) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (31) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 65



    (121) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 141

    (21) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (30) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (31) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 65



    assignation_key_value          shift and go to state 131
    some_assignation_constant      shift and go to state 132

state 114


    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .



    (122) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 142

    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .


    VARIABLE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRING          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)






state 115


    (26) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)


    (79) concatenation -> STRING PLUS . concatenation
    (78) concatenation -> . STRING
    (79) concatenation -> . STRING PLUS concatenation


    STRING          shift and go to state 143

    (26) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)


    concatenation                  shift and go to state 144

state 116


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 133


    (45) value_string -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 145

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 133




state 117


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 134


    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 146

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 134




state 118


    (54) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 135


    (21) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (30) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (31) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 68

    (54) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 135


    assignation_key_value          shift and go to state 147
    some_assignation_constant      shift and go to state 148

state 119


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 136


    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    WHILE           reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DO              reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 136




state 120


    (98) dict_func_put -> STRING DOT PUT LPARENT . STRING COMMA STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 137


    (26) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    WHILE           reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DO              reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)

    (98) dict_func_put -> STRING DOT PUT LPARENT . STRING COMMA STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 137




state 121


    (99) dict_func_remove -> STRING DOT REMOVE LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 138


    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 149

    (99) dict_func_remove -> STRING DOT REMOVE LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 138




state 122


    (112) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 139


    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 150

    (112) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 139




state 123


    (113) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 140


    (54) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 151

    (113) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 140




state 124


    (114) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 141


    (61) normal_while -> WHILE LPARENT logic_operation RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 152

    (114) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 141




state 125


    (115) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 142


    (77) logic_operation -> value_logic logic_operator . logic_operation
    (76) logic_operation -> . value_logic
    (77) logic_operation -> . value_logic logic_operator logic_operation
    (47) value_logic -> . BOOLTRUE
    (48) value_logic -> . BOOLFALSE


    BOOLTRUE        shift and go to state 91
    BOOLFALSE       shift and go to state 92

    (115) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 142


    value_logic                    shift and go to state 107
    logic_operation                shift and go to state 153

state 126


    (67) concatenation -> STRING .
    (68) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 67 (concatenation -> STRING .)
    COMMA           reduce using rule 67 (concatenation -> STRING .)
    PLUS            shift and go to state 109


    (80) logic_operator -> GREATER_THAN .

    BOOLTRUE        reduce using rule 80 (logic_operator -> GREATER_THAN .)
    BOOLFALSE       reduce using rule 80 (logic_operator -> GREATER_THAN .)

    (67) concatenation -> STRING .
    (68) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 67 (concatenation -> STRING .)
    COMMA           reduce using rule 67 (concatenation -> STRING .)
    PLUS            shift and go to state 109




state 127


    (68) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 68 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 68 (concatenation -> STRING PLUS concatenation .)


    (81) logic_operator -> SMALLER_THAN .

    BOOLTRUE        reduce using rule 81 (logic_operator -> SMALLER_THAN .)
    BOOLFALSE       reduce using rule 81 (logic_operator -> SMALLER_THAN .)

    (68) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 68 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 68 (concatenation -> STRING PLUS concatenation .)




state 128


    (45) value_string -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 45 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 45 (value_string -> READ LPARENT RPARENT .)


    (82) logic_operator -> EQUAL_COMPARATION .

    BOOLTRUE        reduce using rule 82 (logic_operator -> EQUAL_COMPARATION .)
    BOOLFALSE       reduce using rule 82 (logic_operator -> EQUAL_COMPARATION .)

    (45) value_string -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 45 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 45 (value_string -> READ LPARENT RPARENT .)




state 129


    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY RKEY

    ASSIGNATION     shift and go to state 143


    (83) logic_operator -> INEQUALITY .

    BOOLTRUE        reduce using rule 83 (logic_operator -> INEQUALITY .)
    BOOLFALSE       reduce using rule 83 (logic_operator -> INEQUALITY .)

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY RKEY

    ASSIGNATION     shift and go to state 143




state 130


    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (61) not_yes_nested_if -> . block_if
    (62) not_yes_nested_if -> . block_code
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 39
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    (84) logic_operator -> GREATER_THAN_OR_EQUAL .

    BOOLTRUE        reduce using rule 84 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    BOOLFALSE       reduce using rule 84 (logic_operator -> GREATER_THAN_OR_EQUAL .)

    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (61) not_yes_nested_if -> . block_if
    (62) not_yes_nested_if -> . block_code
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 39
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    not_yes_nested_if              shift and go to state 144
    block_if                       shift and go to state 145
    block_code                     shift and go to state 146
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 131


    (30) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (31) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 147
    COMMA           shift and go to state 148


    (85) logic_operator -> SMALLER_THAN_OR_EQUAL .

    BOOLTRUE        reduce using rule 85 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    BOOLFALSE       reduce using rule 85 (logic_operator -> SMALLER_THAN_OR_EQUAL .)

    (30) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (31) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 147
    COMMA           shift and go to state 148




state 132


    (21) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .



    (86) logic_operator -> LOGICAND .

    BOOLTRUE        reduce using rule 86 (logic_operator -> LOGICAND .)
    BOOLFALSE       reduce using rule 86 (logic_operator -> LOGICAND .)

    (21) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .


    VARIABLE        reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRING          reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)






state 133


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 149


    (87) logic_operator -> LOGICOR .

    BOOLTRUE        reduce using rule 87 (logic_operator -> LOGICOR .)
    BOOLFALSE       reduce using rule 87 (logic_operator -> LOGICOR .)

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 149




state 134


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 150


    (88) logic_operator -> LOGICNOT .

    BOOLTRUE        reduce using rule 88 (logic_operator -> LOGICNOT .)
    BOOLFALSE       reduce using rule 88 (logic_operator -> LOGICNOT .)

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 150




state 135


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LPARENT         shift and go to state 151


    (89) logic_operator -> LOGICXOR .

    BOOLTRUE        reduce using rule 89 (logic_operator -> LOGICXOR .)
    BOOLFALSE       reduce using rule 89 (logic_operator -> LOGICXOR .)

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LPARENT         shift and go to state 151




state 136


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 152


    (60) do_while -> DO LKEY block_code RKEY . WHILE LPARENT logic_operation RPARENT

    WHILE           shift and go to state 154

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 152




state 137


    (98) dict_func_put -> STRING DOT PUT LPARENT STRING . COMMA STRING RPARENT DOTANDCOMMA

    COMMA           shift and go to state 153


    (65) normal_if -> IF LPARENT logic_operation RPARENT . LKEY block_code RKEY
    (66) if_else -> IF LPARENT logic_operation RPARENT . LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> IF LPARENT logic_operation RPARENT . LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY

    LKEY            shift and go to state 155

    (98) dict_func_put -> STRING DOT PUT LPARENT STRING . COMMA STRING RPARENT DOTANDCOMMA

    COMMA           shift and go to state 153




state 138


    (99) dict_func_remove -> STRING DOT REMOVE LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 154


    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 156

    (99) dict_func_remove -> STRING DOT REMOVE LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 154




state 139


    (112) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .



    (119) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 157

    (112) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .


    VARIABLE        reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 112 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)






state 140


    (113) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .



    (120) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 158

    (113) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .


    VARIABLE        reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 113 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)






state 141


    (114) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA



    (121) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    (114) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA


    DOTANDCOMMA     shift and go to state 155


state 142

    (115) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 156


state 143

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 157


state 144

    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 158


state 145

    (61) not_yes_nested_if -> block_if .
    (14) block_code -> block_if .

  ! reduce/reduce conflict for RKEY resolved using rule 14 (block_code -> block_if .)
    RKEY            reduce using rule 14 (block_code -> block_if .)

  ! RKEY            [ reduce using rule 61 (not_yes_nested_if -> block_if .) ]


state 146

    (62) not_yes_nested_if -> block_code .

    RKEY            reduce using rule 62 (not_yes_nested_if -> block_code .)


state 147

    (30) some_assignation_constant -> assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    ACTION          reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)


state 148

    (31) some_assignation_constant -> assignation_key_value COMMA . some_assignation_constant
    (30) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (31) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 65

    assignation_key_value          shift and go to state 131
    some_assignation_constant      shift and go to state 159

state 149

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    NEW             shift and go to state 160


state 150

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    NEW             shift and go to state 161


state 151

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    EXCEPTION       shift and go to state 162


state 152

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 163


state 153

    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 164


state 154

    (99) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 165


state 155

    (114) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .


    VARIABLE        reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)



    VARIABLE        reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 114 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 142

    (122) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 160


state 143

    (78) concatenation -> STRING .
    (79) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 78 (concatenation -> STRING .)
    COMMA           reduce using rule 78 (concatenation -> STRING .)
    PLUS            shift and go to state 115


state 144

    (79) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 79 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 79 (concatenation -> STRING PLUS concatenation .)


state 145

    (45) value_string -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 45 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 45 (value_string -> READ LPARENT RPARENT .)


state 146

    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY RKEY

    ASSIGNATION     shift and go to state 161


state 147

    (30) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (31) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 162
    COMMA           shift and go to state 163


state 148

    (21) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    WHILE           reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DO              reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 21 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)


state 149

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 164


state 150

    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 165


state 151

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LPARENT         shift and go to state 166


state 152

    (61) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 167
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 153

    (77) logic_operation -> value_logic logic_operator logic_operation .

    RPARENT         reduce using rule 77 (logic_operation -> value_logic logic_operator logic_operation .)


state 154

    (60) do_while -> DO LKEY block_code RKEY WHILE . LPARENT logic_operation RPARENT

    LPARENT         shift and go to state 168


state 155

    (65) normal_if -> IF LPARENT logic_operation RPARENT LKEY . block_code RKEY
    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY . block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY . block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 169
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 156


    (115) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .



    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 170

    (115) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .


    VARIABLE        reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    IF              reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 115 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)






state 157


    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY RKEY

    ARROW           shift and go to state 166


    (119) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 119 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY RKEY

    ARROW           shift and go to state 166




state 158


    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (59) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (60) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 168
    ELSE_IF         shift and go to state 169



    (120) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 120 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)

    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (59) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (60) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 168
    ELSE_IF         shift and go to state 169



    other_if                       shift and go to state 167

state 159


    (31) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .



    (121) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 171

    (31) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .


    VARIABLE        reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRING          reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)






state 160


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    LIST            shift and go to state 170


    (122) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 172

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    LIST            shift and go to state 170




state 161


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 171


    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 173

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 171




state 162


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 172


    (30) some_assignation_constant -> assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    ACTION          reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 30 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 172




state 163


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 173


    (31) some_assignation_constant -> assignation_key_value COMMA . some_assignation_constant
    (30) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (31) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value


    VARIABLE        shift and go to state 68

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 173


    assignation_key_value          shift and go to state 147
    some_assignation_constant      shift and go to state 174

state 164


    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 174


    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    NEW             shift and go to state 175

    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 174




state 165


    (99) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .



    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    NEW             shift and go to state 176

    (99) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .


    VARIABLE        reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 99 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)






state 166


    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY RKEY

    LKEY            shift and go to state 175


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    EXCEPTION       shift and go to state 177

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY RKEY

    LKEY            shift and go to state 175




state 167


    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .



    (61) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 178

    (58) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .


    VARIABLE        reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRING          reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 58 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)






state 168


    (59) other_if -> ELSE . LKEY not_yes_nested_if RKEY

    LKEY            shift and go to state 176


state 169

    (60) other_if -> ELSE_IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 177


    (60) do_while -> DO LKEY block_code RKEY WHILE LPARENT . logic_operation RPARENT
    (76) logic_operation -> . value_logic
    (77) logic_operation -> . value_logic logic_operator logic_operation
    (47) value_logic -> . BOOLTRUE
    (48) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 91
    BOOLFALSE       shift and go to state 92

    logic_operation                shift and go to state 179
    value_logic                    shift and go to state 107

state 169

    (65) normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code . RKEY
    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY block_code . RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code . RKEY repit_elseif ELSE LKEY block_code RKEY

    RKEY            shift and go to state 180

    (59) other_if -> ELSE . LKEY not_yes_nested_if RKEY

    LKEY            shift and go to state 176


state 169

    (60) other_if -> ELSE_IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 177




state 170


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 178


    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 181

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 178




state 171


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 179


    (121) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 121 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 179




state 172


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 180


    (122) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DO              reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    IF              reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 122 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 180




state 173


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 181


    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY RKEY

    ARROW           shift and go to state 182

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 181




state 174


    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 182


state 175

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . RKEY

    RKEY            shift and go to state 183


state 176

    (59) other_if -> ELSE LKEY . not_yes_nested_if RKEY
    (61) not_yes_nested_if -> . block_if
    (62) not_yes_nested_if -> . block_code
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 39
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    (31) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    WHILE           reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DO              reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 31 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)

    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 182



state 175


    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . RKEY


    LIST            shift and go to state 183


state 176


    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 184

    (59) other_if -> ELSE LKEY . not_yes_nested_if RKEY
    (61) not_yes_nested_if -> . block_if
    (62) not_yes_nested_if -> . block_code
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 39
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    not_yes_nested_if              shift and go to state 184
    block_if                       shift and go to state 145
    block_code                     shift and go to state 146
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 177


    (60) other_if -> ELSE_IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if



    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    (60) other_if -> ELSE_IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if



    VARIABLE        shift and go to state 185


state 178


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 186


    (61) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .

    VARIABLE        reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 186




state 179


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 187


    (60) do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation . RPARENT

    RPARENT         shift and go to state 186

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 187




state 180


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 188


    (65) normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .
    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY . ELSE LKEY block_code RKEY
    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY . repit_elseif ELSE LKEY block_code RKEY
    (68) repit_elseif -> . elseif
    (69) repit_elseif -> . elseif repit_elseif
    (67) elseif -> . ELSE IF LPARENT logic_operation RPARENT LKEY block_code RKEY


    VARIABLE        reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 65 (normal_if -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    ELSE            shift and go to state 187

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 188


    repit_elseif                   shift and go to state 188
    elseif                         shift and go to state 189

state 181


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 189


    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 190

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 189




state 182


    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .



    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY RKEY

    LKEY            shift and go to state 191

    (98) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .


    VARIABLE        reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 98 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)






state 183


    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .



    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 192

    (116) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .


    VARIABLE        reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    ACTION          reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    IF              reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CONST           reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    LIST            reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    TRY             reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DICTIONARY      reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    STRING          reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PUBLIC          reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PRIVATE         reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CHARTYPE        reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    STRINGTYPE      reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    FLOATTYPE       reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DECIMALTYPE     reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    INTTYPE         reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    BOOLTYPE        reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    RKEY            reduce using rule 116 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)






state 184


    (59) other_if -> ELSE LKEY not_yes_nested_if . RKEY

    RKEY            shift and go to state 190


    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 193

    (59) other_if -> ELSE LKEY not_yes_nested_if . RKEY

    RKEY            shift and go to state 190




state 185


    (60) other_if -> ELSE_IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 191


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 194

    (60) other_if -> ELSE_IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 191




state 186


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 192


    (60) do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .

    VARIABLE        reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    ACTION          reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CONST           reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    LIST            reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    TRY             reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    WHILE           reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DO              reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    IF              reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DICTIONARY      reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PUBLIC          reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRIVATE         reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CHARTYPE        reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRINGTYPE      reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOATTYPE       reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMALTYPE     reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTTYPE         reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    BOOLTYPE        reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RKEY            reduce using rule 60 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 192




state 187


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 193


    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE . LKEY block_code RKEY
    (67) elseif -> ELSE . IF LPARENT logic_operation RPARENT LKEY block_code RKEY

    LKEY            shift and go to state 196
    IF              shift and go to state 195

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 193




state 188


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif . ELSE LKEY block_code RKEY

    ELSE            shift and go to state 197

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56



    block_code                     shift and go to state 194
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    block_if                       shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 189


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 195


state 190

    (59) other_if -> ELSE LKEY not_yes_nested_if RKEY .

    VARIABLE        reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    ACTION          reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    IF              reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CONST           reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    LIST            reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    TRY             reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DICTIONARY      reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRING          reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PUBLIC          reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PRIVATE         reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CHARTYPE        reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRINGTYPE      reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FLOATTYPE       reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DECIMALTYPE     reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    INTTYPE         reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    BOOLTYPE        reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    RKEY            reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)


    (68) repit_elseif -> elseif .
    (69) repit_elseif -> elseif . repit_elseif
    (68) repit_elseif -> . elseif
    (69) repit_elseif -> . elseif repit_elseif
    (67) elseif -> . ELSE IF LPARENT logic_operation RPARENT LKEY block_code RKEY

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 199

  ! ELSE            [ reduce using rule 68 (repit_elseif -> elseif .) ]

    elseif                         shift and go to state 189
    repit_elseif                   shift and go to state 198

state 190

    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 200

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 195


state 190

    (59) other_if -> ELSE LKEY not_yes_nested_if RKEY .

    VARIABLE        reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    ACTION          reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    IF              reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CONST           reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    LIST            reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    TRY             reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DICTIONARY      reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRING          reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PUBLIC          reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PRIVATE         reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CHARTYPE        reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRINGTYPE      reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FLOATTYPE       reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DECIMALTYPE     reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    INTTYPE         reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    BOOLTYPE        reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    RKEY            reduce using rule 59 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)




state 191


    (60) other_if -> ELSE_IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 196


    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . RKEY

    RKEY            shift and go to state 201

    (60) other_if -> ELSE_IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 196




state 192


    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 197


    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 202

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 197




state 193


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 198


    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 203

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 198




state 194


    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 199


state 195



    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 204

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 199



state 195


    (67) elseif -> ELSE IF . LPARENT logic_operation RPARENT LKEY block_code RKEY

    LPARENT         shift and go to state 205


    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY dictionary_value RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 200
    LKEY            shift and go to state 201



state 196



state 196


    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY


    (60) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (61) not_yes_nested_if -> . block_if
    (62) not_yes_nested_if -> . block_code
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY




    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations



    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA


    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA




    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value




    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 206
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22


    IF              shift and go to state 39
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 37
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56

    not_yes_nested_if              shift and go to state 202
    block_if                       shift and go to state 145
    block_code                     shift and go to state 146
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21




    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28



    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 197

    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE . LKEY block_code RKEY

    LKEY            shift and go to state 207


    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 197

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY

    RPARENT         shift and go to state 203



state 198



state 198


    (69) repit_elseif -> elseif repit_elseif .

    ELSE            reduce using rule 69 (repit_elseif -> elseif repit_elseif .)


    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY

    RPARENT         shift and go to state 204



state 199



state 199


    (67) elseif -> ELSE . IF LPARENT logic_operation RPARENT LKEY block_code RKEY

    IF              shift and go to state 195


state 200

    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 208


state 201

    (123) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .

    VARIABLE        reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    ACTION          reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CONST           reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    LIST            reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    TRY             reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    WHILE           reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DO              reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    IF              reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DICTIONARY      reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PUBLIC          reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PRIVATE         reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CHARTYPE        reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    STRINGTYPE      reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    FLOATTYPE       reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DECIMALTYPE     reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    INTTYPE         reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    BOOLTYPE        reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    RKEY            reduce using rule 123 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)


state 202

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 209


state 203

    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 210


state 204

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 211
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 205

    (67) elseif -> ELSE IF LPARENT . logic_operation RPARENT LKEY block_code RKEY
    (76) logic_operation -> . value_logic
    (77) logic_operation -> . value_logic logic_operator logic_operation
    (47) value_logic -> . BOOLTRUE
    (48) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 91
    BOOLFALSE       shift and go to state 92

    logic_operation                shift and go to state 212
    value_logic                    shift and go to state 107

state 206

    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code . RKEY

    RKEY            shift and go to state 213


state 207

    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 214
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 208

    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 215


state 209

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 216


state 210

    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 217


state 211

    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 218


state 212

    (67) elseif -> ELSE IF LPARENT logic_operation . RPARENT LKEY block_code RKEY

    RPARENT         shift and go to state 219


state 213

    (66) if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .

    VARIABLE        reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    ACTION          reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    CONST           reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    LIST            reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    TRY             reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    WHILE           reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    DO              reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    IF              reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    PUBLIC          reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    PRIVATE         reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    INTTYPE         reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)
    RKEY            reduce using rule 66 (if_else -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY .)


state 214

    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code . RKEY

    RKEY            shift and go to state 220


state 215

    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY dictionary_value RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 221
    LKEY            shift and go to state 222


state 216

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY

    RPARENT         shift and go to state 223


state 217

    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY

    RPARENT         shift and go to state 224


state 218




    (54) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .
    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY . FINALLY LKEY block_code RKEY

    VARIABLE        reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)



    CONST           reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)


    IF              reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)




    PUBLIC          reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 54 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)



    FINALLY         shift and go to state 225


state 219

    (67) elseif -> ELSE IF LPARENT logic_operation RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 226


state 220

    (72) if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .

    VARIABLE        reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    ACTION          reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    CONST           reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    LIST            reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    TRY             reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    WHILE           reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    DO              reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    IF              reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    PUBLIC          reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    PRIVATE         reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    INTTYPE         reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)
    RKEY            reduce using rule 72 (if_elseif -> IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY .)


state 221

    (98) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 98 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 222

    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . dictionary_value RKEY DOTANDCOMMA
    (100) dictionary_value -> . LKEY key_value_pair RKEY

    LKEY            shift and go to state 227

    dictionary_value               shift and go to state 228

state 223

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY

    DOTANDCOMMA     shift and go to state 229
    LKEY            shift and go to state 230


state 224

    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY

    DOTANDCOMMA     shift and go to state 231
    LKEY            shift and go to state 232


state 225

    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY . LKEY block_code RKEY

    LKEY            shift and go to state 233


state 226

    (67) elseif -> ELSE IF LPARENT logic_operation RPARENT LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations
    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 234
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28
    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 227

    (100) dictionary_value -> LKEY . key_value_pair RKEY
    (103) key_value_pair -> . STRING DOUBLEPOINT valueHash

    STRING          shift and go to state 236

    key_value_pair                 shift and go to state 235

state 228

    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value . RKEY DOTANDCOMMA

    RKEY            shift and go to state 237


state 229

    (107) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 107 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 230

    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY
    (111) strings_list -> . STRING
    (112) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 239

    strings_list                   shift and go to state 238

state 231

    (108) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 108 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 232

    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY
    (113) ints_list -> . INTEGER
    (114) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 241

    ints_list                      shift and go to state 240

state 233


    FINALLY         shift and go to state 205


state 200

    (87) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 87 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 201

    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . dictionary_value RKEY DOTANDCOMMA
    (89) dictionary_value -> . LKEY key_value_pair RKEY

    LKEY            shift and go to state 206

    dictionary_value               shift and go to state 207

state 202

    (60) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 208


state 203

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY

    DOTANDCOMMA     shift and go to state 209
    LKEY            shift and go to state 210


state 204

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY

    DOTANDCOMMA     shift and go to state 211
    LKEY            shift and go to state 212


state 205

    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY . LKEY block_code RKEY

    LKEY            shift and go to state 213


state 206

    (89) dictionary_value -> LKEY . key_value_pair RKEY
    (92) key_value_pair -> . STRING DOUBLEPOINT valueHash

    STRING          shift and go to state 215

    key_value_pair                 shift and go to state 214

state 207

    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value . RKEY DOTANDCOMMA

    RKEY            shift and go to state 216


state 208

    (60) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (59) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (60) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 168
    ELSE_IF         shift and go to state 169

    other_if                       shift and go to state 217

state 209

    (100) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 100 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 210

    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY
    (104) strings_list -> . STRING
    (105) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 219

    strings_list                   shift and go to state 218

state 211

    (101) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 101 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 212

    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY
    (106) ints_list -> . INTEGER
    (107) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 221

    ints_list                      shift and go to state 220

state 213





    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch



    (9) block_code -> . block_while
    (10) block_code -> . block_if
    (11) block_code -> . VARIABLE
    (12) block_code -> . dict_estruct
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (105) estruct_of_data -> . list_empty
    (106) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (58) block_while -> . normal_while
    (59) block_while -> . do_while
    (62) block_if -> . normal_if
    (63) block_if -> . if_else
    (64) block_if -> . if_elseif
    (96) dict_estruct -> . dict_empty
    (97) dict_estruct -> . dict_full
    (115) functions_list -> . list_func_clear
    (116) functions_list -> . list_func_count
    (117) functions_list -> . list_func_add
    (118) functions_list -> . list_func_removeat
    (123) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY


    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . functions_list
    (13) block_code -> . declaration_lambda
    (14) block_code -> . block_if
    (15) def_const_or_var -> . constant_assignation
    (16) def_const_or_var -> . variable_assignation
    (94) estruct_of_data -> . list_empty
    (95) estruct_of_data -> . list_full
    (52) block_try_catch -> . try_catch_simply
    (53) block_try_catch -> . try_catch_finally
    (85) dict_estruct -> . dict_empty
    (86) dict_estruct -> . dict_full
    (96) functions_dict -> . dict_func_put
    (97) functions_dict -> . dict_func_remove
    (108) functions_list -> . list_func_clear
    (109) functions_list -> . list_func_count
    (110) functions_list -> . list_func_add
    (111) functions_list -> . list_func_removeat
    (116) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (58) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if




    (19) constant_assignation -> . access_modifiers CONST all_asignations
    (20) constant_assignation -> . CONST all_asignations
    (21) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (17) variable_assignation -> . access_modifiers all_asignations
    (18) variable_assignation -> . all_asignations



    (107) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (109) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (110) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (60) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (65) normal_if -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY
    (66) if_else -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY ELSE LKEY block_code RKEY
    (72) if_elseif -> . IF LPARENT logic_operation RPARENT LKEY block_code RKEY repit_elseif ELSE LKEY block_code RKEY
    (98) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (99) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (119) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (120) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (121) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (122) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA


    (100) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (101) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (102) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (103) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (54) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (55) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (87) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (88) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (98) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (99) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (112) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (113) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (114) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (115) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA




    (56) access_modifiers -> . PUBLIC
    (57) access_modifiers -> . PRIVATE
    (22) all_asignations -> . assignation_with_datatype
    (23) all_asignations -> . assignation_without_datatype
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) data_type -> . CHARTYPE
    (34) data_type -> . STRINGTYPE
    (35) data_type -> . FLOATTYPE
    (36) data_type -> . DECIMALTYPE
    (37) data_type -> . INTTYPE
    (38) data_type -> . BOOLTYPE
    (32) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12



    ACTION          shift and go to state 40
    CONST           shift and go to state 43
    LIST            shift and go to state 47
    TRY             shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 51
    IF              shift and go to state 52
    DICTIONARY      shift and go to state 53
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 54
    CHARTYPE        shift and go to state 57
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 58
    DECIMALTYPE     shift and go to state 59
    INTTYPE         shift and go to state 48
    BOOLTYPE        shift and go to state 60

    block_code                     shift and go to state 242
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    block_if                       shift and go to state 19
    dict_estruct                   shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22


    ACTION          shift and go to state 37
    IF              shift and go to state 39
    CONST           shift and go to state 41
    LIST            shift and go to state 45
    TRY             shift and go to state 47
    DICTIONARY      shift and go to state 48
    STRING          shift and go to state 49
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 50
    CHARTYPE        shift and go to state 53
    STRINGTYPE      shift and go to state 38
    FLOATTYPE       shift and go to state 54
    DECIMALTYPE     shift and go to state 55
    INTTYPE         shift and go to state 46
    BOOLTYPE        shift and go to state 56

    block_code                     shift and go to state 222
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_dict                 shift and go to state 19
    functions_list                 shift and go to state 20
    declaration_lambda             shift and go to state 21
    block_if                       shift and go to state 22




    constant_assignation           shift and go to state 23
    variable_assignation           shift and go to state 24
    list_empty                     shift and go to state 25
    list_full                      shift and go to state 26
    try_catch_simply               shift and go to state 27
    try_catch_finally              shift and go to state 28



    normal_while                   shift and go to state 29
    do_while                       shift and go to state 30
    normal_if                      shift and go to state 31
    if_else                        shift and go to state 32
    if_elseif                      shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 42
    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 46
    assignation_with_datatype      shift and go to state 55
    assignation_without_datatype   shift and go to state 56

state 234

    (67) elseif -> ELSE IF LPARENT logic_operation RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 243


state 235

    (100) dictionary_value -> LKEY key_value_pair . RKEY

    RKEY            shift and go to state 244


state 236

    (103) key_value_pair -> STRING . DOUBLEPOINT valueHash

    DOUBLEPOINT     shift and go to state 245


state 237

    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 246


state 238

    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY

    RKEY            shift and go to state 247


state 239

    (111) strings_list -> STRING .
    (112) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 111 (strings_list -> STRING .)
    COMMA           shift and go to state 248


state 240

    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY

    RKEY            shift and go to state 249


state 241

    (113) ints_list -> INTEGER .
    (114) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 113 (ints_list -> INTEGER .)
    COMMA           shift and go to state 250


state 242

    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code . RKEY

    RKEY            shift and go to state 251


state 243

    (67) elseif -> ELSE IF LPARENT logic_operation RPARENT LKEY block_code RKEY .

    ELSE            reduce using rule 67 (elseif -> ELSE IF LPARENT logic_operation RPARENT LKEY block_code RKEY .)


state 244

    (100) dictionary_value -> LKEY key_value_pair RKEY .

    RKEY            reduce using rule 100 (dictionary_value -> LKEY key_value_pair RKEY .)


state 245

    (103) key_value_pair -> STRING DOUBLEPOINT . valueHash
    (104) valueHash -> . INTTYPE

    INTTYPE         shift and go to state 253

    valueHash                      shift and go to state 252

state 246

    (99) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .

    VARIABLE        reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    ACTION          reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CONST           reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    LIST            reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    TRY             reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DO              reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    IF              reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 99 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)


state 247

    (109) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .

    VARIABLE        reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    ACTION          reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CONST           reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    LIST            reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    TRY             reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    WHILE           reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DO              reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    IF              reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DICTIONARY      reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PUBLIC          reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRIVATE         reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CHARTYPE        reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRINGTYPE      reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOATTYPE       reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMALTYPE     reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTTYPE         reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    BOOLTYPE        reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    RKEY            reduce using rule 109 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)


state 248

    (112) strings_list -> STRING COMMA . strings_list
    (111) strings_list -> . STRING
    (112) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 239

    strings_list                   shift and go to state 254

state 249

    (110) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .

    VARIABLE        reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    ACTION          reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CONST           reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    LIST            reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    TRY             reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    WHILE           reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DO              reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    IF              reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DICTIONARY      reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PUBLIC          reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRIVATE         reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CHARTYPE        reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRINGTYPE      reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOATTYPE       reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMALTYPE     reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTTYPE         reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    BOOLTYPE        reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    RKEY            reduce using rule 110 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)


state 250

    (114) ints_list -> INTEGER COMMA . ints_list
    (113) ints_list -> . INTEGER
    (114) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 241

    ints_list                      shift and go to state 255

state 251


    dict_empty                     shift and go to state 29
    dict_full                      shift and go to state 30
    dict_func_put                  shift and go to state 31
    dict_func_remove               shift and go to state 32
    list_func_clear                shift and go to state 33
    list_func_count                shift and go to state 34
    list_func_add                  shift and go to state 35
    list_func_removeat             shift and go to state 36
    access_modifiers               shift and go to state 40
    all_asignations                shift and go to state 42
    data_type                      shift and go to state 43
    assignation_key_value          shift and go to state 44
    assignation_with_datatype      shift and go to state 51
    assignation_without_datatype   shift and go to state 52

state 214

    (89) dictionary_value -> LKEY key_value_pair . RKEY

    RKEY            shift and go to state 223


state 215

    (92) key_value_pair -> STRING . DOUBLEPOINT valueHash

    DOUBLEPOINT     shift and go to state 224


state 216

    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 225


state 217

    (60) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRING          reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 60 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 218

    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY

    RKEY            shift and go to state 226


state 219

    (104) strings_list -> STRING .
    (105) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 104 (strings_list -> STRING .)
    COMMA           shift and go to state 227


state 220

    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY

    RKEY            shift and go to state 228


state 221

    (106) ints_list -> INTEGER .
    (107) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 106 (ints_list -> INTEGER .)
    COMMA           shift and go to state 229


state 222

    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code . RKEY

    RKEY            shift and go to state 230


state 223

    (89) dictionary_value -> LKEY key_value_pair RKEY .

    RKEY            reduce using rule 89 (dictionary_value -> LKEY key_value_pair RKEY .)


state 224

    (92) key_value_pair -> STRING DOUBLEPOINT . valueHash
    (93) valueHash -> . INTTYPE

    INTTYPE         shift and go to state 232

    valueHash                      shift and go to state 231

state 225

    (88) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .

    VARIABLE        reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    ACTION          reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    IF              reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CONST           reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    LIST            reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    TRY             reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRING          reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 88 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)


state 226

    (102) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .

    VARIABLE        reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    ACTION          reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    IF              reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CONST           reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    LIST            reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    TRY             reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DICTIONARY      reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRING          reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PUBLIC          reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRIVATE         reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CHARTYPE        reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRINGTYPE      reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOATTYPE       reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMALTYPE     reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTTYPE         reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    BOOLTYPE        reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    RKEY            reduce using rule 102 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)


state 227

    (105) strings_list -> STRING COMMA . strings_list
    (104) strings_list -> . STRING
    (105) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 219

    strings_list                   shift and go to state 233

state 228

    (103) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .

    VARIABLE        reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    ACTION          reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    IF              reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CONST           reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    LIST            reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    TRY             reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DICTIONARY      reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRING          reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PUBLIC          reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRIVATE         reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CHARTYPE        reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRINGTYPE      reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOATTYPE       reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMALTYPE     reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTTYPE         reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    BOOLTYPE        reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    RKEY            reduce using rule 103 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)


state 229

    (107) ints_list -> INTEGER COMMA . ints_list
    (106) ints_list -> . INTEGER
    (107) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 221

    ints_list                      shift and go to state 234

state 230





    (55) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .

    VARIABLE        reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    ACTION          reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)



    CONST           reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    LIST            reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    TRY             reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    WHILE           reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DO              reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    IF              reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)


    IF              reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CONST           reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    LIST            reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    TRY             reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRING          reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)




    PUBLIC          reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PRIVATE         reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    INTTYPE         reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    RKEY            reduce using rule 55 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)





state 252

    (103) key_value_pair -> STRING DOUBLEPOINT valueHash .

    RKEY            reduce using rule 103 (key_value_pair -> STRING DOUBLEPOINT valueHash .)


state 253

    (104) valueHash -> INTTYPE .

    RKEY            reduce using rule 104 (valueHash -> INTTYPE .)


state 254

    (112) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 112 (strings_list -> STRING COMMA strings_list .)


state 255

    (114) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 114 (ints_list -> INTEGER COMMA ints_list .)


state 231

    (92) key_value_pair -> STRING DOUBLEPOINT valueHash .

    RKEY            reduce using rule 92 (key_value_pair -> STRING DOUBLEPOINT valueHash .)


state 232

    (93) valueHash -> INTTYPE .

    RKEY            reduce using rule 93 (valueHash -> INTTYPE .)


state 233

    (105) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 105 (strings_list -> STRING COMMA strings_list .)


state 234

    (107) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 107 (ints_list -> INTEGER COMMA ints_list .)





WARNING: 
WARNING: Conflicts:
WARNING: 



WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 72 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 72 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 72 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 72 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 72 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 100 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 100 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 100 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 100 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 100 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 100 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 100 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 189 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 93


WARNING: shift/reduce conflict for VARIABLE in state 69 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 69 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 69 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 69 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 69 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 69 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 69 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 96 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 96 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 96 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 96 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 96 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 96 resolved as shift
WARNING: reduce/reduce conflict in state 88 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 88
WARNING: reduce/reduce conflict in state 145 resolved using rule (block_code -> block_if)
WARNING: rejected rule (not_yes_nested_if -> block_if) in state 145
WARNING: Rule (not_yes_nested_if -> block_if) is never reduced




