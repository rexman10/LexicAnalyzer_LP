Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACTION
    ADD
    ADDITION_ASSIGNMENT
    ARROW
    ASYNC
    AWAIT
    BACK_SLASH
    BREAK
    CATCH
    CLEAR
    CONCURRENT
    COUNT
    DECREMENT
    DEQUEUE
    DICTIONARY
    DIVISION_ASSIGNMENT
    DO
    DOLLARSIGN
    DOT
    DOUBLEPOINT
    DOUBLE_QUOTATION_MARKS
    ELSE
    ELSE_IF
    ENQUEUE
    EXCEPTION
    FINALLY
    FOR
    FOREACH
    ID
    IDENTIFIER
    IF
    IN
    INCREMENT
    ISEMPTY
    JUMP_LINE
    LIST
    LONG
    METHOD
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    NEW
    PEEK
    PIPE
    POP
    PUSH
    PUT
    QUEUE
    REMOVE
    REMOVEAT
    RETURN
    SIPLE_QUOTATION_MARKS
    STACK
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    TASK
    TRY
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> USING SYSTEM DOTANDCOMMA block_publicClass
Rule 2     block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY
Rule 3     block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY
Rule 4     block_code -> def_const_or_var
Rule 5     block_code -> print_data
Rule 6     block_code -> boolean_operation
Rule 7     block_code -> arithmetic_operation
Rule 8     all_block_code -> block_code
Rule 9     all_block_code -> block_code all_block_code
Rule 10    data_type -> CHARTYPE
Rule 11    data_type -> STRINGTYPE
Rule 12    data_type -> FLOATTYPE
Rule 13    data_type -> DECIMALTYPE
Rule 14    data_type -> INTTYPE
Rule 15    data_type -> BOOLTYPE
Rule 16    value_string -> STRING
Rule 17    value_string -> CHAR
Rule 18    value_string -> concatenation
Rule 19    value_boolean -> BOOLTRUE
Rule 20    value_boolean -> BOOLFALSE
Rule 21    value_boolean -> VARIABLE
Rule 22    value_boolean -> comparison_operation
Rule 23    value_numeric -> INTEGER
Rule 24    value_numeric -> FLOAT_NUMBER
Rule 25    value_numeric -> DECIMAL_NUMBER
Rule 26    value_numeric -> VARIABLE
Rule 27    print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA
Rule 28    print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
Rule 29    read_data -> READ LPARENT RPARENT DOTANDCOMMA
Rule 30    concatenation -> STRING
Rule 31    concatenation -> STRING PLUS concatenation
Rule 32    value -> value_numeric
Rule 33    value -> value_boolean
Rule 34    value -> value_string
Rule 35    value -> VARIABLE
Rule 36    value -> read_data
Rule 37    arithmetic_operation -> value_numeric
Rule 38    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 39    arithmetic_operator -> PLUS
Rule 40    arithmetic_operator -> MINUS
Rule 41    arithmetic_operator -> TIMES
Rule 42    arithmetic_operator -> DIVIDE
Rule 43    arithmetic_operator -> PERCENT
Rule 44    comparison_operation -> value_numeric
Rule 45    comparison_operation -> value_numeric comparison_operator comparison_operation
Rule 46    comparison_operator -> GREATER_THAN
Rule 47    comparison_operator -> SMALLER_THAN
Rule 48    comparison_operator -> EQUAL_COMPARATION
Rule 49    comparison_operator -> INEQUALITY
Rule 50    comparison_operator -> GREATER_THAN_OR_EQUAL
Rule 51    comparison_operator -> SMALLER_THAN_OR_EQUAL
Rule 52    boolean_operation -> value_boolean
Rule 53    boolean_operation -> LOGICNOT value_boolean
Rule 54    boolean_operation -> value_boolean boolean_operator boolean_operation
Rule 55    boolean_operator -> LOGICAND
Rule 56    boolean_operator -> LOGICOR
Rule 57    def_const_or_var -> constant_assignation
Rule 58    def_const_or_var -> variable_assignation
Rule 59    constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA
Rule 60    constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA
Rule 61    variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA
Rule 62    variable_assignation -> assignation_type_value_multiple DOTANDCOMMA
Rule 63    access_modifiers -> PUBLIC
Rule 64    access_modifiers -> PRIVATE
Rule 65    assignation_type_value -> INTTYPE assignation_int
Rule 66    assignation_type_value -> STRINGTYPE assignation_string
Rule 67    assignation_type_value -> FLOATTYPE assignation_float
Rule 68    assignation_type_value -> BOOLTYPE assignation_true
Rule 69    assignation_type_value -> BOOLTYPE assignation_false
Rule 70    assignation_int -> VARIABLE ASSIGNATION INTEGER
Rule 71    assignation_string -> VARIABLE ASSIGNATION STRING
Rule 72    assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER
Rule 73    assignation_true -> VARIABLE ASSIGNATION BOOLTRUE
Rule 74    assignation_false -> VARIABLE ASSIGNATION BOOLFALSE
Rule 75    assignation_type_value_multiple -> INTTYPE assignation_int_multiple
Rule 76    assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple
Rule 77    assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple
Rule 78    assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple
Rule 79    assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple
Rule 80    assignation_int_multiple -> assignation_int
Rule 81    assignation_int_multiple -> assignation_int COMMA assignation_int_multiple
Rule 82    assignation_string_multiple -> assignation_string
Rule 83    assignation_string_multiple -> assignation_string COMMA assignation_string_multiple
Rule 84    assignation_float_multiple -> assignation_float
Rule 85    assignation_float_multiple -> assignation_float COMMA assignation_float_multiple
Rule 86    assignation_true_multiple -> assignation_true
Rule 87    assignation_true_multiple -> assignation_true COMMA assignation_true_multiple
Rule 88    assignation_false_multiple -> assignation_false
Rule 89    assignation_false_multiple -> assignation_false COMMA assignation_false_multiple

Terminals, with rules where they appear

ACTION               : 
ADD                  : 
ADDITION_ASSIGNMENT  : 
ARROW                : 
ASSIGNATION          : 70 71 72 73 74
ASYNC                : 
AWAIT                : 
BACK_SLASH           : 
BOOLFALSE            : 20 74
BOOLTRUE             : 19 73
BOOLTYPE             : 15 68 69 78 79
BREAK                : 
CATCH                : 
CHAR                 : 17
CHARTYPE             : 10
CLASS                : 2
CLEAR                : 
COMMA                : 81 83 85 87 89
CONCURRENT           : 
CONST                : 59 60
COUNT                : 
DECIMALTYPE          : 13
DECIMAL_NUMBER       : 25
DECREMENT            : 
DEQUEUE              : 
DICTIONARY           : 
DIVIDE               : 42
DIVISION_ASSIGNMENT  : 
DO                   : 
DOLLARSIGN           : 
DOT                  : 
DOTANDCOMMA          : 1 27 28 29 59 60 61 62
DOUBLEPOINT          : 
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 
ELSE_IF              : 
ENQUEUE              : 
EQUAL_COMPARATION    : 48
EXCEPTION            : 
FINALLY              : 
FLOATTYPE            : 12 67 77
FLOAT_NUMBER         : 24 72
FOR                  : 
FOREACH              : 
GREATER_THAN         : 46
GREATER_THAN_OR_EQUAL : 50
ID                   : 
IDENTIFIER           : 
IF                   : 
IN                   : 
INCREMENT            : 
INEQUALITY           : 49
INTEGER              : 23 70
INTTYPE              : 14 65 75
ISEMPTY              : 
JUMP_LINE            : 
LBRACKET             : 3
LIST                 : 
LKEY                 : 2 3
LOGICAND             : 55
LOGICNOT             : 53
LOGICOR              : 56
LONG                 : 
LPARENT              : 3 27 28 29
MAIN                 : 3
METHOD               : 
MINUS                : 40
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 
PEEK                 : 
PERCENT              : 43
PIPE                 : 
PLUS                 : 31 39
POP                  : 
PRINT                : 27 28
PRIVATE              : 64
PUBLIC               : 2 63
PUSH                 : 
PUT                  : 
QUEUE                : 
RBRACKET             : 3
READ                 : 29
REMOVE               : 
REMOVEAT             : 
RETURN               : 
RKEY                 : 2 3
RPARENT              : 3 27 28 29
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 47
SMALLER_THAN_OR_EQUAL : 51
STACK                : 
STATIC               : 3
STRING               : 16 27 30 31 71
STRINGTYPE           : 3 11 66 76
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 1
TABULATION           : 
TASK                 : 
TIMES                : 41
TRY                  : 
USING                : 1
VARIABLE             : 2 3 21 26 28 35 70 71 72 73 74
VOID                 : 3
WHILE                : 
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 59 61
all_block_code       : 3 9
arithmetic_operation : 7 38
arithmetic_operator  : 38
assignation_false    : 69 88 89
assignation_false_multiple : 79 89
assignation_float    : 67 84 85
assignation_float_multiple : 77 85
assignation_int      : 65 80 81
assignation_int_multiple : 75 81
assignation_string   : 66 82 83
assignation_string_multiple : 76 83
assignation_true     : 68 86 87
assignation_true_multiple : 78 87
assignation_type_value : 
assignation_type_value_multiple : 59 60 61 62
block_code           : 8 9
block_main_method    : 2
block_publicClass    : 1
boolean_operation    : 6 54
boolean_operator     : 54
comparison_operation : 22 45
comparison_operator  : 45
concatenation        : 18 31
constant_assignation : 57
data_type            : 
def_const_or_var     : 4
print_data           : 5
program              : 0
read_data            : 36
value                : 
value_boolean        : 33 52 53 54
value_numeric        : 32 37 38 44 45
value_string         : 34
variable_assignation : 58

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . USING SYSTEM DOTANDCOMMA block_publicClass

    USING           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> USING . SYSTEM DOTANDCOMMA block_publicClass

    SYSTEM          shift and go to state 3


state 3

    (1) program -> USING SYSTEM . DOTANDCOMMA block_publicClass

    DOTANDCOMMA     shift and go to state 4


state 4

    (1) program -> USING SYSTEM DOTANDCOMMA . block_publicClass
    (2) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY block_main_method RKEY

    PUBLIC          shift and go to state 6

    block_publicClass              shift and go to state 5

state 5

    (1) program -> USING SYSTEM DOTANDCOMMA block_publicClass .

    $end            reduce using rule 1 (program -> USING SYSTEM DOTANDCOMMA block_publicClass .)


state 6

    (2) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY block_main_method RKEY

    CLASS           shift and go to state 7


state 7

    (2) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY block_main_method RKEY

    VARIABLE        shift and go to state 8


state 8

    (2) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY block_main_method RKEY

    LKEY            shift and go to state 9


state 9

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . block_main_method RKEY
    (3) block_main_method -> . STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    STATIC          shift and go to state 11

    block_main_method              shift and go to state 10

state 10

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method . RKEY

    RKEY            shift and go to state 12


state 11

    (3) block_main_method -> STATIC . VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    VOID            shift and go to state 13


state 12

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY .

    $end            reduce using rule 2 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_main_method RKEY .)


state 13

    (3) block_main_method -> STATIC VOID . MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    MAIN            shift and go to state 14


state 14

    (3) block_main_method -> STATIC VOID MAIN . LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 15


state 15

    (3) block_main_method -> STATIC VOID MAIN LPARENT . STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    STRINGTYPE      shift and go to state 16


state 16

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE . LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    LBRACKET        shift and go to state 17


state 17

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET . RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY

    RBRACKET        shift and go to state 18


state 18

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET . VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 19


state 19

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 20


state 20

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 21


state 21

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY . all_block_code RKEY
    (8) all_block_code -> . block_code
    (9) all_block_code -> . block_code all_block_code
    (4) block_code -> . def_const_or_var
    (5) block_code -> . print_data
    (6) block_code -> . boolean_operation
    (7) block_code -> . arithmetic_operation
    (57) def_const_or_var -> . constant_assignation
    (58) def_const_or_var -> . variable_assignation
    (27) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (28) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (52) boolean_operation -> . value_boolean
    (53) boolean_operation -> . LOGICNOT value_boolean
    (54) boolean_operation -> . value_boolean boolean_operator boolean_operation
    (37) arithmetic_operation -> . value_numeric
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (59) constant_assignation -> . access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA
    (60) constant_assignation -> . CONST assignation_type_value_multiple DOTANDCOMMA
    (61) variable_assignation -> . access_modifiers assignation_type_value_multiple DOTANDCOMMA
    (62) variable_assignation -> . assignation_type_value_multiple DOTANDCOMMA
    (19) value_boolean -> . BOOLTRUE
    (20) value_boolean -> . BOOLFALSE
    (21) value_boolean -> . VARIABLE
    (22) value_boolean -> . comparison_operation
    (23) value_numeric -> . INTEGER
    (24) value_numeric -> . FLOAT_NUMBER
    (25) value_numeric -> . DECIMAL_NUMBER
    (26) value_numeric -> . VARIABLE
    (63) access_modifiers -> . PUBLIC
    (64) access_modifiers -> . PRIVATE
    (75) assignation_type_value_multiple -> . INTTYPE assignation_int_multiple
    (76) assignation_type_value_multiple -> . STRINGTYPE assignation_string_multiple
    (77) assignation_type_value_multiple -> . FLOATTYPE assignation_float_multiple
    (78) assignation_type_value_multiple -> . BOOLTYPE assignation_true_multiple
    (79) assignation_type_value_multiple -> . BOOLTYPE assignation_false_multiple
    (44) comparison_operation -> . value_numeric
    (45) comparison_operation -> . value_numeric comparison_operator comparison_operation

    PRINT           shift and go to state 32
    LOGICNOT        shift and go to state 34
    CONST           shift and go to state 37
    BOOLTRUE        shift and go to state 39
    BOOLFALSE       shift and go to state 40
    VARIABLE        shift and go to state 23
    INTEGER         shift and go to state 42
    FLOAT_NUMBER    shift and go to state 43
    DECIMAL_NUMBER  shift and go to state 44
    PUBLIC          shift and go to state 45
    PRIVATE         shift and go to state 46
    INTTYPE         shift and go to state 47
    STRINGTYPE      shift and go to state 22
    FLOATTYPE       shift and go to state 48
    BOOLTYPE        shift and go to state 49

    all_block_code                 shift and go to state 24
    block_code                     shift and go to state 25
    def_const_or_var               shift and go to state 26
    print_data                     shift and go to state 27
    boolean_operation              shift and go to state 28
    arithmetic_operation           shift and go to state 29
    constant_assignation           shift and go to state 30
    variable_assignation           shift and go to state 31
    value_boolean                  shift and go to state 33
    value_numeric                  shift and go to state 35
    access_modifiers               shift and go to state 36
    assignation_type_value_multiple shift and go to state 38
    comparison_operation           shift and go to state 41

state 22

    (76) assignation_type_value_multiple -> STRINGTYPE . assignation_string_multiple
    (82) assignation_string_multiple -> . assignation_string
    (83) assignation_string_multiple -> . assignation_string COMMA assignation_string_multiple
    (71) assignation_string -> . VARIABLE ASSIGNATION STRING

    VARIABLE        shift and go to state 52

    assignation_string_multiple    shift and go to state 50
    assignation_string             shift and go to state 51

state 23

    (21) value_boolean -> VARIABLE .
    (26) value_numeric -> VARIABLE .

  ! reduce/reduce conflict for PRINT resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for BOOLTRUE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for BOOLFALSE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for INTEGER resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 21 (value_boolean -> VARIABLE .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 21 (value_boolean -> VARIABLE .)
    LOGICAND        reduce using rule 21 (value_boolean -> VARIABLE .)
    LOGICOR         reduce using rule 21 (value_boolean -> VARIABLE .)
    PRINT           reduce using rule 21 (value_boolean -> VARIABLE .)
    LOGICNOT        reduce using rule 21 (value_boolean -> VARIABLE .)
    CONST           reduce using rule 21 (value_boolean -> VARIABLE .)
    BOOLTRUE        reduce using rule 21 (value_boolean -> VARIABLE .)
    BOOLFALSE       reduce using rule 21 (value_boolean -> VARIABLE .)
    VARIABLE        reduce using rule 21 (value_boolean -> VARIABLE .)
    INTEGER         reduce using rule 21 (value_boolean -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 21 (value_boolean -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 21 (value_boolean -> VARIABLE .)
    PUBLIC          reduce using rule 21 (value_boolean -> VARIABLE .)
    PRIVATE         reduce using rule 21 (value_boolean -> VARIABLE .)
    INTTYPE         reduce using rule 21 (value_boolean -> VARIABLE .)
    STRINGTYPE      reduce using rule 21 (value_boolean -> VARIABLE .)
    FLOATTYPE       reduce using rule 21 (value_boolean -> VARIABLE .)
    BOOLTYPE        reduce using rule 21 (value_boolean -> VARIABLE .)
    RKEY            reduce using rule 21 (value_boolean -> VARIABLE .)
    PLUS            reduce using rule 26 (value_numeric -> VARIABLE .)
    MINUS           reduce using rule 26 (value_numeric -> VARIABLE .)
    TIMES           reduce using rule 26 (value_numeric -> VARIABLE .)
    DIVIDE          reduce using rule 26 (value_numeric -> VARIABLE .)
    PERCENT         reduce using rule 26 (value_numeric -> VARIABLE .)
    GREATER_THAN    reduce using rule 26 (value_numeric -> VARIABLE .)
    SMALLER_THAN    reduce using rule 26 (value_numeric -> VARIABLE .)
    EQUAL_COMPARATION reduce using rule 26 (value_numeric -> VARIABLE .)
    INEQUALITY      reduce using rule 26 (value_numeric -> VARIABLE .)
    GREATER_THAN_OR_EQUAL reduce using rule 26 (value_numeric -> VARIABLE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 26 (value_numeric -> VARIABLE .)

  ! PRINT           [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! CONST           [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! BOOLTRUE        [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! BOOLFALSE       [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! INTEGER         [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! FLOAT_NUMBER    [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! PUBLIC          [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! PRIVATE         [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! INTTYPE         [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! STRINGTYPE      [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! FLOATTYPE       [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! BOOLTYPE        [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 26 (value_numeric -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 26 (value_numeric -> VARIABLE .) ]


state 24

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 53


state 25

    (8) all_block_code -> block_code .
    (9) all_block_code -> block_code . all_block_code
    (8) all_block_code -> . block_code
    (9) all_block_code -> . block_code all_block_code
    (4) block_code -> . def_const_or_var
    (5) block_code -> . print_data
    (6) block_code -> . boolean_operation
    (7) block_code -> . arithmetic_operation
    (57) def_const_or_var -> . constant_assignation
    (58) def_const_or_var -> . variable_assignation
    (27) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (28) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (52) boolean_operation -> . value_boolean
    (53) boolean_operation -> . LOGICNOT value_boolean
    (54) boolean_operation -> . value_boolean boolean_operator boolean_operation
    (37) arithmetic_operation -> . value_numeric
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (59) constant_assignation -> . access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA
    (60) constant_assignation -> . CONST assignation_type_value_multiple DOTANDCOMMA
    (61) variable_assignation -> . access_modifiers assignation_type_value_multiple DOTANDCOMMA
    (62) variable_assignation -> . assignation_type_value_multiple DOTANDCOMMA
    (19) value_boolean -> . BOOLTRUE
    (20) value_boolean -> . BOOLFALSE
    (21) value_boolean -> . VARIABLE
    (22) value_boolean -> . comparison_operation
    (23) value_numeric -> . INTEGER
    (24) value_numeric -> . FLOAT_NUMBER
    (25) value_numeric -> . DECIMAL_NUMBER
    (26) value_numeric -> . VARIABLE
    (63) access_modifiers -> . PUBLIC
    (64) access_modifiers -> . PRIVATE
    (75) assignation_type_value_multiple -> . INTTYPE assignation_int_multiple
    (76) assignation_type_value_multiple -> . STRINGTYPE assignation_string_multiple
    (77) assignation_type_value_multiple -> . FLOATTYPE assignation_float_multiple
    (78) assignation_type_value_multiple -> . BOOLTYPE assignation_true_multiple
    (79) assignation_type_value_multiple -> . BOOLTYPE assignation_false_multiple
    (44) comparison_operation -> . value_numeric
    (45) comparison_operation -> . value_numeric comparison_operator comparison_operation

    RKEY            reduce using rule 8 (all_block_code -> block_code .)
    PRINT           shift and go to state 32
    LOGICNOT        shift and go to state 34
    CONST           shift and go to state 37
    BOOLTRUE        shift and go to state 39
    BOOLFALSE       shift and go to state 40
    VARIABLE        shift and go to state 23
    INTEGER         shift and go to state 42
    FLOAT_NUMBER    shift and go to state 43
    DECIMAL_NUMBER  shift and go to state 44
    PUBLIC          shift and go to state 45
    PRIVATE         shift and go to state 46
    INTTYPE         shift and go to state 47
    STRINGTYPE      shift and go to state 22
    FLOATTYPE       shift and go to state 48
    BOOLTYPE        shift and go to state 49

    block_code                     shift and go to state 25
    all_block_code                 shift and go to state 54
    def_const_or_var               shift and go to state 26
    print_data                     shift and go to state 27
    boolean_operation              shift and go to state 28
    arithmetic_operation           shift and go to state 29
    constant_assignation           shift and go to state 30
    variable_assignation           shift and go to state 31
    value_boolean                  shift and go to state 33
    value_numeric                  shift and go to state 35
    access_modifiers               shift and go to state 36
    assignation_type_value_multiple shift and go to state 38
    comparison_operation           shift and go to state 41

state 26

    (4) block_code -> def_const_or_var .

    PRINT           reduce using rule 4 (block_code -> def_const_or_var .)
    LOGICNOT        reduce using rule 4 (block_code -> def_const_or_var .)
    CONST           reduce using rule 4 (block_code -> def_const_or_var .)
    BOOLTRUE        reduce using rule 4 (block_code -> def_const_or_var .)
    BOOLFALSE       reduce using rule 4 (block_code -> def_const_or_var .)
    VARIABLE        reduce using rule 4 (block_code -> def_const_or_var .)
    INTEGER         reduce using rule 4 (block_code -> def_const_or_var .)
    FLOAT_NUMBER    reduce using rule 4 (block_code -> def_const_or_var .)
    DECIMAL_NUMBER  reduce using rule 4 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 4 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 4 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 4 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 4 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 4 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 4 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 4 (block_code -> def_const_or_var .)


state 27

    (5) block_code -> print_data .

    PRINT           reduce using rule 5 (block_code -> print_data .)
    LOGICNOT        reduce using rule 5 (block_code -> print_data .)
    CONST           reduce using rule 5 (block_code -> print_data .)
    BOOLTRUE        reduce using rule 5 (block_code -> print_data .)
    BOOLFALSE       reduce using rule 5 (block_code -> print_data .)
    VARIABLE        reduce using rule 5 (block_code -> print_data .)
    INTEGER         reduce using rule 5 (block_code -> print_data .)
    FLOAT_NUMBER    reduce using rule 5 (block_code -> print_data .)
    DECIMAL_NUMBER  reduce using rule 5 (block_code -> print_data .)
    PUBLIC          reduce using rule 5 (block_code -> print_data .)
    PRIVATE         reduce using rule 5 (block_code -> print_data .)
    INTTYPE         reduce using rule 5 (block_code -> print_data .)
    STRINGTYPE      reduce using rule 5 (block_code -> print_data .)
    FLOATTYPE       reduce using rule 5 (block_code -> print_data .)
    BOOLTYPE        reduce using rule 5 (block_code -> print_data .)
    RKEY            reduce using rule 5 (block_code -> print_data .)


state 28

    (6) block_code -> boolean_operation .

    PRINT           reduce using rule 6 (block_code -> boolean_operation .)
    LOGICNOT        reduce using rule 6 (block_code -> boolean_operation .)
    CONST           reduce using rule 6 (block_code -> boolean_operation .)
    BOOLTRUE        reduce using rule 6 (block_code -> boolean_operation .)
    BOOLFALSE       reduce using rule 6 (block_code -> boolean_operation .)
    VARIABLE        reduce using rule 6 (block_code -> boolean_operation .)
    INTEGER         reduce using rule 6 (block_code -> boolean_operation .)
    FLOAT_NUMBER    reduce using rule 6 (block_code -> boolean_operation .)
    DECIMAL_NUMBER  reduce using rule 6 (block_code -> boolean_operation .)
    PUBLIC          reduce using rule 6 (block_code -> boolean_operation .)
    PRIVATE         reduce using rule 6 (block_code -> boolean_operation .)
    INTTYPE         reduce using rule 6 (block_code -> boolean_operation .)
    STRINGTYPE      reduce using rule 6 (block_code -> boolean_operation .)
    FLOATTYPE       reduce using rule 6 (block_code -> boolean_operation .)
    BOOLTYPE        reduce using rule 6 (block_code -> boolean_operation .)
    RKEY            reduce using rule 6 (block_code -> boolean_operation .)


state 29

    (7) block_code -> arithmetic_operation .

    PRINT           reduce using rule 7 (block_code -> arithmetic_operation .)
    LOGICNOT        reduce using rule 7 (block_code -> arithmetic_operation .)
    CONST           reduce using rule 7 (block_code -> arithmetic_operation .)
    BOOLTRUE        reduce using rule 7 (block_code -> arithmetic_operation .)
    BOOLFALSE       reduce using rule 7 (block_code -> arithmetic_operation .)
    VARIABLE        reduce using rule 7 (block_code -> arithmetic_operation .)
    INTEGER         reduce using rule 7 (block_code -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 7 (block_code -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 7 (block_code -> arithmetic_operation .)
    PUBLIC          reduce using rule 7 (block_code -> arithmetic_operation .)
    PRIVATE         reduce using rule 7 (block_code -> arithmetic_operation .)
    INTTYPE         reduce using rule 7 (block_code -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 7 (block_code -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 7 (block_code -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 7 (block_code -> arithmetic_operation .)
    RKEY            reduce using rule 7 (block_code -> arithmetic_operation .)


state 30

    (57) def_const_or_var -> constant_assignation .

    PRINT           reduce using rule 57 (def_const_or_var -> constant_assignation .)
    LOGICNOT        reduce using rule 57 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 57 (def_const_or_var -> constant_assignation .)
    BOOLTRUE        reduce using rule 57 (def_const_or_var -> constant_assignation .)
    BOOLFALSE       reduce using rule 57 (def_const_or_var -> constant_assignation .)
    VARIABLE        reduce using rule 57 (def_const_or_var -> constant_assignation .)
    INTEGER         reduce using rule 57 (def_const_or_var -> constant_assignation .)
    FLOAT_NUMBER    reduce using rule 57 (def_const_or_var -> constant_assignation .)
    DECIMAL_NUMBER  reduce using rule 57 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 57 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 57 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 57 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 57 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 57 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 57 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 57 (def_const_or_var -> constant_assignation .)


state 31

    (58) def_const_or_var -> variable_assignation .

    PRINT           reduce using rule 58 (def_const_or_var -> variable_assignation .)
    LOGICNOT        reduce using rule 58 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 58 (def_const_or_var -> variable_assignation .)
    BOOLTRUE        reduce using rule 58 (def_const_or_var -> variable_assignation .)
    BOOLFALSE       reduce using rule 58 (def_const_or_var -> variable_assignation .)
    VARIABLE        reduce using rule 58 (def_const_or_var -> variable_assignation .)
    INTEGER         reduce using rule 58 (def_const_or_var -> variable_assignation .)
    FLOAT_NUMBER    reduce using rule 58 (def_const_or_var -> variable_assignation .)
    DECIMAL_NUMBER  reduce using rule 58 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 58 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 58 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 58 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 58 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 58 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 58 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 58 (def_const_or_var -> variable_assignation .)


state 32

    (27) print_data -> PRINT . LPARENT STRING RPARENT DOTANDCOMMA
    (28) print_data -> PRINT . LPARENT VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 55


state 33

    (52) boolean_operation -> value_boolean .
    (54) boolean_operation -> value_boolean . boolean_operator boolean_operation
    (55) boolean_operator -> . LOGICAND
    (56) boolean_operator -> . LOGICOR

    PRINT           reduce using rule 52 (boolean_operation -> value_boolean .)
    LOGICNOT        reduce using rule 52 (boolean_operation -> value_boolean .)
    CONST           reduce using rule 52 (boolean_operation -> value_boolean .)
    BOOLTRUE        reduce using rule 52 (boolean_operation -> value_boolean .)
    BOOLFALSE       reduce using rule 52 (boolean_operation -> value_boolean .)
    VARIABLE        reduce using rule 52 (boolean_operation -> value_boolean .)
    INTEGER         reduce using rule 52 (boolean_operation -> value_boolean .)
    FLOAT_NUMBER    reduce using rule 52 (boolean_operation -> value_boolean .)
    DECIMAL_NUMBER  reduce using rule 52 (boolean_operation -> value_boolean .)
    PUBLIC          reduce using rule 52 (boolean_operation -> value_boolean .)
    PRIVATE         reduce using rule 52 (boolean_operation -> value_boolean .)
    INTTYPE         reduce using rule 52 (boolean_operation -> value_boolean .)
    STRINGTYPE      reduce using rule 52 (boolean_operation -> value_boolean .)
    FLOATTYPE       reduce using rule 52 (boolean_operation -> value_boolean .)
    BOOLTYPE        reduce using rule 52 (boolean_operation -> value_boolean .)
    RKEY            reduce using rule 52 (boolean_operation -> value_boolean .)
    LOGICAND        shift and go to state 57
    LOGICOR         shift and go to state 58

    boolean_operator               shift and go to state 56

state 34

    (53) boolean_operation -> LOGICNOT . value_boolean
    (19) value_boolean -> . BOOLTRUE
    (20) value_boolean -> . BOOLFALSE
    (21) value_boolean -> . VARIABLE
    (22) value_boolean -> . comparison_operation
    (44) comparison_operation -> . value_numeric
    (45) comparison_operation -> . value_numeric comparison_operator comparison_operation
    (23) value_numeric -> . INTEGER
    (24) value_numeric -> . FLOAT_NUMBER
    (25) value_numeric -> . DECIMAL_NUMBER
    (26) value_numeric -> . VARIABLE

    BOOLTRUE        shift and go to state 39
    BOOLFALSE       shift and go to state 40
    VARIABLE        shift and go to state 23
    INTEGER         shift and go to state 42
    FLOAT_NUMBER    shift and go to state 43
    DECIMAL_NUMBER  shift and go to state 44

    value_boolean                  shift and go to state 59
    comparison_operation           shift and go to state 41
    value_numeric                  shift and go to state 60

state 35

    (37) arithmetic_operation -> value_numeric .
    (38) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (44) comparison_operation -> value_numeric .
    (45) comparison_operation -> value_numeric . comparison_operator comparison_operation
    (39) arithmetic_operator -> . PLUS
    (40) arithmetic_operator -> . MINUS
    (41) arithmetic_operator -> . TIMES
    (42) arithmetic_operator -> . DIVIDE
    (43) arithmetic_operator -> . PERCENT
    (46) comparison_operator -> . GREATER_THAN
    (47) comparison_operator -> . SMALLER_THAN
    (48) comparison_operator -> . EQUAL_COMPARATION
    (49) comparison_operator -> . INEQUALITY
    (50) comparison_operator -> . GREATER_THAN_OR_EQUAL
    (51) comparison_operator -> . SMALLER_THAN_OR_EQUAL

  ! reduce/reduce conflict for PRINT resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CONST resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLTRUE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLFALSE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTEGER resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 37 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 37 (arithmetic_operation -> value_numeric .)
    PRINT           reduce using rule 37 (arithmetic_operation -> value_numeric .)
    LOGICNOT        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 37 (arithmetic_operation -> value_numeric .)
    BOOLTRUE        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    BOOLFALSE       reduce using rule 37 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 37 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 37 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 37 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 37 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 37 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 37 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 37 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 37 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 37 (arithmetic_operation -> value_numeric .)
    LOGICAND        reduce using rule 44 (comparison_operation -> value_numeric .)
    LOGICOR         reduce using rule 44 (comparison_operation -> value_numeric .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PERCENT         shift and go to state 67
    GREATER_THAN    shift and go to state 68
    SMALLER_THAN    shift and go to state 69
    EQUAL_COMPARATION shift and go to state 70
    INEQUALITY      shift and go to state 71
    GREATER_THAN_OR_EQUAL shift and go to state 72
    SMALLER_THAN_OR_EQUAL shift and go to state 73

  ! PRINT           [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! CONST           [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! BOOLTRUE        [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! BOOLFALSE       [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! VARIABLE        [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! INTEGER         [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! FLOAT_NUMBER    [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! PUBLIC          [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! PRIVATE         [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! INTTYPE         [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! STRINGTYPE      [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! FLOATTYPE       [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! BOOLTYPE        [ reduce using rule 44 (comparison_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 44 (comparison_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 61
    comparison_operator            shift and go to state 62

state 36

    (59) constant_assignation -> access_modifiers . CONST assignation_type_value_multiple DOTANDCOMMA
    (61) variable_assignation -> access_modifiers . assignation_type_value_multiple DOTANDCOMMA
    (75) assignation_type_value_multiple -> . INTTYPE assignation_int_multiple
    (76) assignation_type_value_multiple -> . STRINGTYPE assignation_string_multiple
    (77) assignation_type_value_multiple -> . FLOATTYPE assignation_float_multiple
    (78) assignation_type_value_multiple -> . BOOLTYPE assignation_true_multiple
    (79) assignation_type_value_multiple -> . BOOLTYPE assignation_false_multiple

    CONST           shift and go to state 74
    INTTYPE         shift and go to state 47
    STRINGTYPE      shift and go to state 22
    FLOATTYPE       shift and go to state 48
    BOOLTYPE        shift and go to state 49

    assignation_type_value_multiple shift and go to state 75

state 37

    (60) constant_assignation -> CONST . assignation_type_value_multiple DOTANDCOMMA
    (75) assignation_type_value_multiple -> . INTTYPE assignation_int_multiple
    (76) assignation_type_value_multiple -> . STRINGTYPE assignation_string_multiple
    (77) assignation_type_value_multiple -> . FLOATTYPE assignation_float_multiple
    (78) assignation_type_value_multiple -> . BOOLTYPE assignation_true_multiple
    (79) assignation_type_value_multiple -> . BOOLTYPE assignation_false_multiple

    INTTYPE         shift and go to state 47
    STRINGTYPE      shift and go to state 22
    FLOATTYPE       shift and go to state 48
    BOOLTYPE        shift and go to state 49

    assignation_type_value_multiple shift and go to state 76

state 38

    (62) variable_assignation -> assignation_type_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 77


state 39

    (19) value_boolean -> BOOLTRUE .

    LOGICAND        reduce using rule 19 (value_boolean -> BOOLTRUE .)
    LOGICOR         reduce using rule 19 (value_boolean -> BOOLTRUE .)
    PRINT           reduce using rule 19 (value_boolean -> BOOLTRUE .)
    LOGICNOT        reduce using rule 19 (value_boolean -> BOOLTRUE .)
    CONST           reduce using rule 19 (value_boolean -> BOOLTRUE .)
    BOOLTRUE        reduce using rule 19 (value_boolean -> BOOLTRUE .)
    BOOLFALSE       reduce using rule 19 (value_boolean -> BOOLTRUE .)
    VARIABLE        reduce using rule 19 (value_boolean -> BOOLTRUE .)
    INTEGER         reduce using rule 19 (value_boolean -> BOOLTRUE .)
    FLOAT_NUMBER    reduce using rule 19 (value_boolean -> BOOLTRUE .)
    DECIMAL_NUMBER  reduce using rule 19 (value_boolean -> BOOLTRUE .)
    PUBLIC          reduce using rule 19 (value_boolean -> BOOLTRUE .)
    PRIVATE         reduce using rule 19 (value_boolean -> BOOLTRUE .)
    INTTYPE         reduce using rule 19 (value_boolean -> BOOLTRUE .)
    STRINGTYPE      reduce using rule 19 (value_boolean -> BOOLTRUE .)
    FLOATTYPE       reduce using rule 19 (value_boolean -> BOOLTRUE .)
    BOOLTYPE        reduce using rule 19 (value_boolean -> BOOLTRUE .)
    RKEY            reduce using rule 19 (value_boolean -> BOOLTRUE .)


state 40

    (20) value_boolean -> BOOLFALSE .

    LOGICAND        reduce using rule 20 (value_boolean -> BOOLFALSE .)
    LOGICOR         reduce using rule 20 (value_boolean -> BOOLFALSE .)
    PRINT           reduce using rule 20 (value_boolean -> BOOLFALSE .)
    LOGICNOT        reduce using rule 20 (value_boolean -> BOOLFALSE .)
    CONST           reduce using rule 20 (value_boolean -> BOOLFALSE .)
    BOOLTRUE        reduce using rule 20 (value_boolean -> BOOLFALSE .)
    BOOLFALSE       reduce using rule 20 (value_boolean -> BOOLFALSE .)
    VARIABLE        reduce using rule 20 (value_boolean -> BOOLFALSE .)
    INTEGER         reduce using rule 20 (value_boolean -> BOOLFALSE .)
    FLOAT_NUMBER    reduce using rule 20 (value_boolean -> BOOLFALSE .)
    DECIMAL_NUMBER  reduce using rule 20 (value_boolean -> BOOLFALSE .)
    PUBLIC          reduce using rule 20 (value_boolean -> BOOLFALSE .)
    PRIVATE         reduce using rule 20 (value_boolean -> BOOLFALSE .)
    INTTYPE         reduce using rule 20 (value_boolean -> BOOLFALSE .)
    STRINGTYPE      reduce using rule 20 (value_boolean -> BOOLFALSE .)
    FLOATTYPE       reduce using rule 20 (value_boolean -> BOOLFALSE .)
    BOOLTYPE        reduce using rule 20 (value_boolean -> BOOLFALSE .)
    RKEY            reduce using rule 20 (value_boolean -> BOOLFALSE .)


state 41

    (22) value_boolean -> comparison_operation .

    LOGICAND        reduce using rule 22 (value_boolean -> comparison_operation .)
    LOGICOR         reduce using rule 22 (value_boolean -> comparison_operation .)
    PRINT           reduce using rule 22 (value_boolean -> comparison_operation .)
    LOGICNOT        reduce using rule 22 (value_boolean -> comparison_operation .)
    CONST           reduce using rule 22 (value_boolean -> comparison_operation .)
    BOOLTRUE        reduce using rule 22 (value_boolean -> comparison_operation .)
    BOOLFALSE       reduce using rule 22 (value_boolean -> comparison_operation .)
    VARIABLE        reduce using rule 22 (value_boolean -> comparison_operation .)
    INTEGER         reduce using rule 22 (value_boolean -> comparison_operation .)
    FLOAT_NUMBER    reduce using rule 22 (value_boolean -> comparison_operation .)
    DECIMAL_NUMBER  reduce using rule 22 (value_boolean -> comparison_operation .)
    PUBLIC          reduce using rule 22 (value_boolean -> comparison_operation .)
    PRIVATE         reduce using rule 22 (value_boolean -> comparison_operation .)
    INTTYPE         reduce using rule 22 (value_boolean -> comparison_operation .)
    STRINGTYPE      reduce using rule 22 (value_boolean -> comparison_operation .)
    FLOATTYPE       reduce using rule 22 (value_boolean -> comparison_operation .)
    BOOLTYPE        reduce using rule 22 (value_boolean -> comparison_operation .)
    RKEY            reduce using rule 22 (value_boolean -> comparison_operation .)


state 42

    (23) value_numeric -> INTEGER .

    PLUS            reduce using rule 23 (value_numeric -> INTEGER .)
    MINUS           reduce using rule 23 (value_numeric -> INTEGER .)
    TIMES           reduce using rule 23 (value_numeric -> INTEGER .)
    DIVIDE          reduce using rule 23 (value_numeric -> INTEGER .)
    PERCENT         reduce using rule 23 (value_numeric -> INTEGER .)
    GREATER_THAN    reduce using rule 23 (value_numeric -> INTEGER .)
    SMALLER_THAN    reduce using rule 23 (value_numeric -> INTEGER .)
    EQUAL_COMPARATION reduce using rule 23 (value_numeric -> INTEGER .)
    INEQUALITY      reduce using rule 23 (value_numeric -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 23 (value_numeric -> INTEGER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 23 (value_numeric -> INTEGER .)
    PRINT           reduce using rule 23 (value_numeric -> INTEGER .)
    LOGICNOT        reduce using rule 23 (value_numeric -> INTEGER .)
    CONST           reduce using rule 23 (value_numeric -> INTEGER .)
    BOOLTRUE        reduce using rule 23 (value_numeric -> INTEGER .)
    BOOLFALSE       reduce using rule 23 (value_numeric -> INTEGER .)
    VARIABLE        reduce using rule 23 (value_numeric -> INTEGER .)
    INTEGER         reduce using rule 23 (value_numeric -> INTEGER .)
    FLOAT_NUMBER    reduce using rule 23 (value_numeric -> INTEGER .)
    DECIMAL_NUMBER  reduce using rule 23 (value_numeric -> INTEGER .)
    PUBLIC          reduce using rule 23 (value_numeric -> INTEGER .)
    PRIVATE         reduce using rule 23 (value_numeric -> INTEGER .)
    INTTYPE         reduce using rule 23 (value_numeric -> INTEGER .)
    STRINGTYPE      reduce using rule 23 (value_numeric -> INTEGER .)
    FLOATTYPE       reduce using rule 23 (value_numeric -> INTEGER .)
    BOOLTYPE        reduce using rule 23 (value_numeric -> INTEGER .)
    RKEY            reduce using rule 23 (value_numeric -> INTEGER .)
    LOGICAND        reduce using rule 23 (value_numeric -> INTEGER .)
    LOGICOR         reduce using rule 23 (value_numeric -> INTEGER .)


state 43

    (24) value_numeric -> FLOAT_NUMBER .

    PLUS            reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    MINUS           reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    TIMES           reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    PERCENT         reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN    reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    EQUAL_COMPARATION reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    INEQUALITY      reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    PRINT           reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    LOGICNOT        reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    CONST           reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    BOOLTRUE        reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    BOOLFALSE       reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    VARIABLE        reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    INTEGER         reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    PUBLIC          reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    PRIVATE         reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    INTTYPE         reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    STRINGTYPE      reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    FLOATTYPE       reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    BOOLTYPE        reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    RKEY            reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    LOGICAND        reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)
    LOGICOR         reduce using rule 24 (value_numeric -> FLOAT_NUMBER .)


state 44

    (25) value_numeric -> DECIMAL_NUMBER .

    PLUS            reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    MINUS           reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    TIMES           reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    DIVIDE          reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    PERCENT         reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN    reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN    reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    EQUAL_COMPARATION reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    INEQUALITY      reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    PRINT           reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    LOGICNOT        reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    CONST           reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    BOOLTRUE        reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    BOOLFALSE       reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    VARIABLE        reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    INTEGER         reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    FLOAT_NUMBER    reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    PUBLIC          reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    PRIVATE         reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    INTTYPE         reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    STRINGTYPE      reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    FLOATTYPE       reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    BOOLTYPE        reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    RKEY            reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    LOGICAND        reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)
    LOGICOR         reduce using rule 25 (value_numeric -> DECIMAL_NUMBER .)


state 45

    (63) access_modifiers -> PUBLIC .

    CONST           reduce using rule 63 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 63 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 63 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 63 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 63 (access_modifiers -> PUBLIC .)


state 46

    (64) access_modifiers -> PRIVATE .

    CONST           reduce using rule 64 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 64 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 64 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 64 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 64 (access_modifiers -> PRIVATE .)


state 47

    (75) assignation_type_value_multiple -> INTTYPE . assignation_int_multiple
    (80) assignation_int_multiple -> . assignation_int
    (81) assignation_int_multiple -> . assignation_int COMMA assignation_int_multiple
    (70) assignation_int -> . VARIABLE ASSIGNATION INTEGER

    VARIABLE        shift and go to state 80

    assignation_int_multiple       shift and go to state 78
    assignation_int                shift and go to state 79

state 48

    (77) assignation_type_value_multiple -> FLOATTYPE . assignation_float_multiple
    (84) assignation_float_multiple -> . assignation_float
    (85) assignation_float_multiple -> . assignation_float COMMA assignation_float_multiple
    (72) assignation_float -> . VARIABLE ASSIGNATION FLOAT_NUMBER

    VARIABLE        shift and go to state 83

    assignation_float_multiple     shift and go to state 81
    assignation_float              shift and go to state 82

state 49

    (78) assignation_type_value_multiple -> BOOLTYPE . assignation_true_multiple
    (79) assignation_type_value_multiple -> BOOLTYPE . assignation_false_multiple
    (86) assignation_true_multiple -> . assignation_true
    (87) assignation_true_multiple -> . assignation_true COMMA assignation_true_multiple
    (88) assignation_false_multiple -> . assignation_false
    (89) assignation_false_multiple -> . assignation_false COMMA assignation_false_multiple
    (73) assignation_true -> . VARIABLE ASSIGNATION BOOLTRUE
    (74) assignation_false -> . VARIABLE ASSIGNATION BOOLFALSE

    VARIABLE        shift and go to state 88

    assignation_true_multiple      shift and go to state 84
    assignation_false_multiple     shift and go to state 85
    assignation_true               shift and go to state 86
    assignation_false              shift and go to state 87

state 50

    (76) assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple .

    DOTANDCOMMA     reduce using rule 76 (assignation_type_value_multiple -> STRINGTYPE assignation_string_multiple .)


state 51

    (82) assignation_string_multiple -> assignation_string .
    (83) assignation_string_multiple -> assignation_string . COMMA assignation_string_multiple

    DOTANDCOMMA     reduce using rule 82 (assignation_string_multiple -> assignation_string .)
    COMMA           shift and go to state 89


state 52

    (71) assignation_string -> VARIABLE . ASSIGNATION STRING

    ASSIGNATION     shift and go to state 90


state 53

    (3) block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY .

    RKEY            reduce using rule 3 (block_main_method -> STATIC VOID MAIN LPARENT STRINGTYPE LBRACKET RBRACKET VARIABLE RPARENT LKEY all_block_code RKEY .)


state 54

    (9) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 9 (all_block_code -> block_code all_block_code .)


state 55

    (27) print_data -> PRINT LPARENT . STRING RPARENT DOTANDCOMMA
    (28) print_data -> PRINT LPARENT . VARIABLE RPARENT DOTANDCOMMA

    STRING          shift and go to state 91
    VARIABLE        shift and go to state 92


state 56

    (54) boolean_operation -> value_boolean boolean_operator . boolean_operation
    (52) boolean_operation -> . value_boolean
    (53) boolean_operation -> . LOGICNOT value_boolean
    (54) boolean_operation -> . value_boolean boolean_operator boolean_operation
    (19) value_boolean -> . BOOLTRUE
    (20) value_boolean -> . BOOLFALSE
    (21) value_boolean -> . VARIABLE
    (22) value_boolean -> . comparison_operation
    (44) comparison_operation -> . value_numeric
    (45) comparison_operation -> . value_numeric comparison_operator comparison_operation
    (23) value_numeric -> . INTEGER
    (24) value_numeric -> . FLOAT_NUMBER
    (25) value_numeric -> . DECIMAL_NUMBER
    (26) value_numeric -> . VARIABLE

    LOGICNOT        shift and go to state 34
    BOOLTRUE        shift and go to state 39
    BOOLFALSE       shift and go to state 40
    VARIABLE        shift and go to state 23
    INTEGER         shift and go to state 42
    FLOAT_NUMBER    shift and go to state 43
    DECIMAL_NUMBER  shift and go to state 44

    value_boolean                  shift and go to state 33
    boolean_operation              shift and go to state 93
    comparison_operation           shift and go to state 41
    value_numeric                  shift and go to state 60

state 57

    (55) boolean_operator -> LOGICAND .

    LOGICNOT        reduce using rule 55 (boolean_operator -> LOGICAND .)
    BOOLTRUE        reduce using rule 55 (boolean_operator -> LOGICAND .)
    BOOLFALSE       reduce using rule 55 (boolean_operator -> LOGICAND .)
    VARIABLE        reduce using rule 55 (boolean_operator -> LOGICAND .)
    INTEGER         reduce using rule 55 (boolean_operator -> LOGICAND .)
    FLOAT_NUMBER    reduce using rule 55 (boolean_operator -> LOGICAND .)
    DECIMAL_NUMBER  reduce using rule 55 (boolean_operator -> LOGICAND .)


state 58

    (56) boolean_operator -> LOGICOR .

    LOGICNOT        reduce using rule 56 (boolean_operator -> LOGICOR .)
    BOOLTRUE        reduce using rule 56 (boolean_operator -> LOGICOR .)
    BOOLFALSE       reduce using rule 56 (boolean_operator -> LOGICOR .)
    VARIABLE        reduce using rule 56 (boolean_operator -> LOGICOR .)
    INTEGER         reduce using rule 56 (boolean_operator -> LOGICOR .)
    FLOAT_NUMBER    reduce using rule 56 (boolean_operator -> LOGICOR .)
    DECIMAL_NUMBER  reduce using rule 56 (boolean_operator -> LOGICOR .)


state 59

    (53) boolean_operation -> LOGICNOT value_boolean .

    PRINT           reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    LOGICNOT        reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    CONST           reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    BOOLTRUE        reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    BOOLFALSE       reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    VARIABLE        reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    INTEGER         reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    FLOAT_NUMBER    reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    DECIMAL_NUMBER  reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    PUBLIC          reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    PRIVATE         reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    INTTYPE         reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    STRINGTYPE      reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    FLOATTYPE       reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    BOOLTYPE        reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)
    RKEY            reduce using rule 53 (boolean_operation -> LOGICNOT value_boolean .)


state 60

    (44) comparison_operation -> value_numeric .
    (45) comparison_operation -> value_numeric . comparison_operator comparison_operation
    (46) comparison_operator -> . GREATER_THAN
    (47) comparison_operator -> . SMALLER_THAN
    (48) comparison_operator -> . EQUAL_COMPARATION
    (49) comparison_operator -> . INEQUALITY
    (50) comparison_operator -> . GREATER_THAN_OR_EQUAL
    (51) comparison_operator -> . SMALLER_THAN_OR_EQUAL

    PRINT           reduce using rule 44 (comparison_operation -> value_numeric .)
    LOGICNOT        reduce using rule 44 (comparison_operation -> value_numeric .)
    CONST           reduce using rule 44 (comparison_operation -> value_numeric .)
    BOOLTRUE        reduce using rule 44 (comparison_operation -> value_numeric .)
    BOOLFALSE       reduce using rule 44 (comparison_operation -> value_numeric .)
    VARIABLE        reduce using rule 44 (comparison_operation -> value_numeric .)
    INTEGER         reduce using rule 44 (comparison_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 44 (comparison_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 44 (comparison_operation -> value_numeric .)
    PUBLIC          reduce using rule 44 (comparison_operation -> value_numeric .)
    PRIVATE         reduce using rule 44 (comparison_operation -> value_numeric .)
    INTTYPE         reduce using rule 44 (comparison_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 44 (comparison_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 44 (comparison_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 44 (comparison_operation -> value_numeric .)
    RKEY            reduce using rule 44 (comparison_operation -> value_numeric .)
    LOGICAND        reduce using rule 44 (comparison_operation -> value_numeric .)
    LOGICOR         reduce using rule 44 (comparison_operation -> value_numeric .)
    GREATER_THAN    shift and go to state 68
    SMALLER_THAN    shift and go to state 69
    EQUAL_COMPARATION shift and go to state 70
    INEQUALITY      shift and go to state 71
    GREATER_THAN_OR_EQUAL shift and go to state 72
    SMALLER_THAN_OR_EQUAL shift and go to state 73

    comparison_operator            shift and go to state 62

state 61

    (38) arithmetic_operation -> value_numeric arithmetic_operator . arithmetic_operation
    (37) arithmetic_operation -> . value_numeric
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (23) value_numeric -> . INTEGER
    (24) value_numeric -> . FLOAT_NUMBER
    (25) value_numeric -> . DECIMAL_NUMBER
    (26) value_numeric -> . VARIABLE

    INTEGER         shift and go to state 42
    FLOAT_NUMBER    shift and go to state 43
    DECIMAL_NUMBER  shift and go to state 44
    VARIABLE        shift and go to state 96

    value_numeric                  shift and go to state 94
    arithmetic_operation           shift and go to state 95

state 62

    (45) comparison_operation -> value_numeric comparison_operator . comparison_operation
    (44) comparison_operation -> . value_numeric
    (45) comparison_operation -> . value_numeric comparison_operator comparison_operation
    (23) value_numeric -> . INTEGER
    (24) value_numeric -> . FLOAT_NUMBER
    (25) value_numeric -> . DECIMAL_NUMBER
    (26) value_numeric -> . VARIABLE

    INTEGER         shift and go to state 42
    FLOAT_NUMBER    shift and go to state 43
    DECIMAL_NUMBER  shift and go to state 44
    VARIABLE        shift and go to state 96

    value_numeric                  shift and go to state 60
    comparison_operation           shift and go to state 97

state 63

    (39) arithmetic_operator -> PLUS .

    INTEGER         reduce using rule 39 (arithmetic_operator -> PLUS .)
    FLOAT_NUMBER    reduce using rule 39 (arithmetic_operator -> PLUS .)
    DECIMAL_NUMBER  reduce using rule 39 (arithmetic_operator -> PLUS .)
    VARIABLE        reduce using rule 39 (arithmetic_operator -> PLUS .)


state 64

    (40) arithmetic_operator -> MINUS .

    INTEGER         reduce using rule 40 (arithmetic_operator -> MINUS .)
    FLOAT_NUMBER    reduce using rule 40 (arithmetic_operator -> MINUS .)
    DECIMAL_NUMBER  reduce using rule 40 (arithmetic_operator -> MINUS .)
    VARIABLE        reduce using rule 40 (arithmetic_operator -> MINUS .)


state 65

    (41) arithmetic_operator -> TIMES .

    INTEGER         reduce using rule 41 (arithmetic_operator -> TIMES .)
    FLOAT_NUMBER    reduce using rule 41 (arithmetic_operator -> TIMES .)
    DECIMAL_NUMBER  reduce using rule 41 (arithmetic_operator -> TIMES .)
    VARIABLE        reduce using rule 41 (arithmetic_operator -> TIMES .)


state 66

    (42) arithmetic_operator -> DIVIDE .

    INTEGER         reduce using rule 42 (arithmetic_operator -> DIVIDE .)
    FLOAT_NUMBER    reduce using rule 42 (arithmetic_operator -> DIVIDE .)
    DECIMAL_NUMBER  reduce using rule 42 (arithmetic_operator -> DIVIDE .)
    VARIABLE        reduce using rule 42 (arithmetic_operator -> DIVIDE .)


state 67

    (43) arithmetic_operator -> PERCENT .

    INTEGER         reduce using rule 43 (arithmetic_operator -> PERCENT .)
    FLOAT_NUMBER    reduce using rule 43 (arithmetic_operator -> PERCENT .)
    DECIMAL_NUMBER  reduce using rule 43 (arithmetic_operator -> PERCENT .)
    VARIABLE        reduce using rule 43 (arithmetic_operator -> PERCENT .)


state 68

    (46) comparison_operator -> GREATER_THAN .

    INTEGER         reduce using rule 46 (comparison_operator -> GREATER_THAN .)
    FLOAT_NUMBER    reduce using rule 46 (comparison_operator -> GREATER_THAN .)
    DECIMAL_NUMBER  reduce using rule 46 (comparison_operator -> GREATER_THAN .)
    VARIABLE        reduce using rule 46 (comparison_operator -> GREATER_THAN .)


state 69

    (47) comparison_operator -> SMALLER_THAN .

    INTEGER         reduce using rule 47 (comparison_operator -> SMALLER_THAN .)
    FLOAT_NUMBER    reduce using rule 47 (comparison_operator -> SMALLER_THAN .)
    DECIMAL_NUMBER  reduce using rule 47 (comparison_operator -> SMALLER_THAN .)
    VARIABLE        reduce using rule 47 (comparison_operator -> SMALLER_THAN .)


state 70

    (48) comparison_operator -> EQUAL_COMPARATION .

    INTEGER         reduce using rule 48 (comparison_operator -> EQUAL_COMPARATION .)
    FLOAT_NUMBER    reduce using rule 48 (comparison_operator -> EQUAL_COMPARATION .)
    DECIMAL_NUMBER  reduce using rule 48 (comparison_operator -> EQUAL_COMPARATION .)
    VARIABLE        reduce using rule 48 (comparison_operator -> EQUAL_COMPARATION .)


state 71

    (49) comparison_operator -> INEQUALITY .

    INTEGER         reduce using rule 49 (comparison_operator -> INEQUALITY .)
    FLOAT_NUMBER    reduce using rule 49 (comparison_operator -> INEQUALITY .)
    DECIMAL_NUMBER  reduce using rule 49 (comparison_operator -> INEQUALITY .)
    VARIABLE        reduce using rule 49 (comparison_operator -> INEQUALITY .)


state 72

    (50) comparison_operator -> GREATER_THAN_OR_EQUAL .

    INTEGER         reduce using rule 50 (comparison_operator -> GREATER_THAN_OR_EQUAL .)
    FLOAT_NUMBER    reduce using rule 50 (comparison_operator -> GREATER_THAN_OR_EQUAL .)
    DECIMAL_NUMBER  reduce using rule 50 (comparison_operator -> GREATER_THAN_OR_EQUAL .)
    VARIABLE        reduce using rule 50 (comparison_operator -> GREATER_THAN_OR_EQUAL .)


state 73

    (51) comparison_operator -> SMALLER_THAN_OR_EQUAL .

    INTEGER         reduce using rule 51 (comparison_operator -> SMALLER_THAN_OR_EQUAL .)
    FLOAT_NUMBER    reduce using rule 51 (comparison_operator -> SMALLER_THAN_OR_EQUAL .)
    DECIMAL_NUMBER  reduce using rule 51 (comparison_operator -> SMALLER_THAN_OR_EQUAL .)
    VARIABLE        reduce using rule 51 (comparison_operator -> SMALLER_THAN_OR_EQUAL .)


state 74

    (59) constant_assignation -> access_modifiers CONST . assignation_type_value_multiple DOTANDCOMMA
    (75) assignation_type_value_multiple -> . INTTYPE assignation_int_multiple
    (76) assignation_type_value_multiple -> . STRINGTYPE assignation_string_multiple
    (77) assignation_type_value_multiple -> . FLOATTYPE assignation_float_multiple
    (78) assignation_type_value_multiple -> . BOOLTYPE assignation_true_multiple
    (79) assignation_type_value_multiple -> . BOOLTYPE assignation_false_multiple

    INTTYPE         shift and go to state 47
    STRINGTYPE      shift and go to state 22
    FLOATTYPE       shift and go to state 48
    BOOLTYPE        shift and go to state 49

    assignation_type_value_multiple shift and go to state 98

state 75

    (61) variable_assignation -> access_modifiers assignation_type_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 99


state 76

    (60) constant_assignation -> CONST assignation_type_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 100


state 77

    (62) variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    LOGICNOT        reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 62 (variable_assignation -> assignation_type_value_multiple DOTANDCOMMA .)


state 78

    (75) assignation_type_value_multiple -> INTTYPE assignation_int_multiple .

    DOTANDCOMMA     reduce using rule 75 (assignation_type_value_multiple -> INTTYPE assignation_int_multiple .)


state 79

    (80) assignation_int_multiple -> assignation_int .
    (81) assignation_int_multiple -> assignation_int . COMMA assignation_int_multiple

    DOTANDCOMMA     reduce using rule 80 (assignation_int_multiple -> assignation_int .)
    COMMA           shift and go to state 101


state 80

    (70) assignation_int -> VARIABLE . ASSIGNATION INTEGER

    ASSIGNATION     shift and go to state 102


state 81

    (77) assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple .

    DOTANDCOMMA     reduce using rule 77 (assignation_type_value_multiple -> FLOATTYPE assignation_float_multiple .)


state 82

    (84) assignation_float_multiple -> assignation_float .
    (85) assignation_float_multiple -> assignation_float . COMMA assignation_float_multiple

    DOTANDCOMMA     reduce using rule 84 (assignation_float_multiple -> assignation_float .)
    COMMA           shift and go to state 103


state 83

    (72) assignation_float -> VARIABLE . ASSIGNATION FLOAT_NUMBER

    ASSIGNATION     shift and go to state 104


state 84

    (78) assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple .

    DOTANDCOMMA     reduce using rule 78 (assignation_type_value_multiple -> BOOLTYPE assignation_true_multiple .)


state 85

    (79) assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple .

    DOTANDCOMMA     reduce using rule 79 (assignation_type_value_multiple -> BOOLTYPE assignation_false_multiple .)


state 86

    (86) assignation_true_multiple -> assignation_true .
    (87) assignation_true_multiple -> assignation_true . COMMA assignation_true_multiple

    DOTANDCOMMA     reduce using rule 86 (assignation_true_multiple -> assignation_true .)
    COMMA           shift and go to state 105


state 87

    (88) assignation_false_multiple -> assignation_false .
    (89) assignation_false_multiple -> assignation_false . COMMA assignation_false_multiple

    DOTANDCOMMA     reduce using rule 88 (assignation_false_multiple -> assignation_false .)
    COMMA           shift and go to state 106


state 88

    (73) assignation_true -> VARIABLE . ASSIGNATION BOOLTRUE
    (74) assignation_false -> VARIABLE . ASSIGNATION BOOLFALSE

    ASSIGNATION     shift and go to state 107


state 89

    (83) assignation_string_multiple -> assignation_string COMMA . assignation_string_multiple
    (82) assignation_string_multiple -> . assignation_string
    (83) assignation_string_multiple -> . assignation_string COMMA assignation_string_multiple
    (71) assignation_string -> . VARIABLE ASSIGNATION STRING

    VARIABLE        shift and go to state 52

    assignation_string             shift and go to state 51
    assignation_string_multiple    shift and go to state 108

state 90

    (71) assignation_string -> VARIABLE ASSIGNATION . STRING

    STRING          shift and go to state 109


state 91

    (27) print_data -> PRINT LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 110


state 92

    (28) print_data -> PRINT LPARENT VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 111


state 93

    (54) boolean_operation -> value_boolean boolean_operator boolean_operation .

    PRINT           reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    LOGICNOT        reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    CONST           reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    BOOLTRUE        reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    BOOLFALSE       reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    VARIABLE        reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    INTEGER         reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    FLOAT_NUMBER    reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    DECIMAL_NUMBER  reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    PUBLIC          reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    PRIVATE         reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    INTTYPE         reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    STRINGTYPE      reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    FLOATTYPE       reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    BOOLTYPE        reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)
    RKEY            reduce using rule 54 (boolean_operation -> value_boolean boolean_operator boolean_operation .)


state 94

    (37) arithmetic_operation -> value_numeric .
    (38) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (39) arithmetic_operator -> . PLUS
    (40) arithmetic_operator -> . MINUS
    (41) arithmetic_operator -> . TIMES
    (42) arithmetic_operator -> . DIVIDE
    (43) arithmetic_operator -> . PERCENT

    PRINT           reduce using rule 37 (arithmetic_operation -> value_numeric .)
    LOGICNOT        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 37 (arithmetic_operation -> value_numeric .)
    BOOLTRUE        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    BOOLFALSE       reduce using rule 37 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 37 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 37 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 37 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 37 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 37 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 37 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 37 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 37 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 37 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 37 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PERCENT         shift and go to state 67

    arithmetic_operator            shift and go to state 61

state 95

    (38) arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .

    PRINT           reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    LOGICNOT        reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    CONST           reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    BOOLTRUE        reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    BOOLFALSE       reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    VARIABLE        reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    INTEGER         reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    PUBLIC          reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    PRIVATE         reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    INTTYPE         reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    STRINGTYPE      reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    FLOATTYPE       reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    BOOLTYPE        reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)
    RKEY            reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .)


state 96

    (26) value_numeric -> VARIABLE .

    PLUS            reduce using rule 26 (value_numeric -> VARIABLE .)
    MINUS           reduce using rule 26 (value_numeric -> VARIABLE .)
    TIMES           reduce using rule 26 (value_numeric -> VARIABLE .)
    DIVIDE          reduce using rule 26 (value_numeric -> VARIABLE .)
    PERCENT         reduce using rule 26 (value_numeric -> VARIABLE .)
    PRINT           reduce using rule 26 (value_numeric -> VARIABLE .)
    LOGICNOT        reduce using rule 26 (value_numeric -> VARIABLE .)
    CONST           reduce using rule 26 (value_numeric -> VARIABLE .)
    BOOLTRUE        reduce using rule 26 (value_numeric -> VARIABLE .)
    BOOLFALSE       reduce using rule 26 (value_numeric -> VARIABLE .)
    VARIABLE        reduce using rule 26 (value_numeric -> VARIABLE .)
    INTEGER         reduce using rule 26 (value_numeric -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 26 (value_numeric -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 26 (value_numeric -> VARIABLE .)
    PUBLIC          reduce using rule 26 (value_numeric -> VARIABLE .)
    PRIVATE         reduce using rule 26 (value_numeric -> VARIABLE .)
    INTTYPE         reduce using rule 26 (value_numeric -> VARIABLE .)
    STRINGTYPE      reduce using rule 26 (value_numeric -> VARIABLE .)
    FLOATTYPE       reduce using rule 26 (value_numeric -> VARIABLE .)
    BOOLTYPE        reduce using rule 26 (value_numeric -> VARIABLE .)
    RKEY            reduce using rule 26 (value_numeric -> VARIABLE .)
    GREATER_THAN    reduce using rule 26 (value_numeric -> VARIABLE .)
    SMALLER_THAN    reduce using rule 26 (value_numeric -> VARIABLE .)
    EQUAL_COMPARATION reduce using rule 26 (value_numeric -> VARIABLE .)
    INEQUALITY      reduce using rule 26 (value_numeric -> VARIABLE .)
    GREATER_THAN_OR_EQUAL reduce using rule 26 (value_numeric -> VARIABLE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 26 (value_numeric -> VARIABLE .)
    LOGICAND        reduce using rule 26 (value_numeric -> VARIABLE .)
    LOGICOR         reduce using rule 26 (value_numeric -> VARIABLE .)


state 97

    (45) comparison_operation -> value_numeric comparison_operator comparison_operation .

    LOGICAND        reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    LOGICOR         reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    PRINT           reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    LOGICNOT        reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    CONST           reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    BOOLTRUE        reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    BOOLFALSE       reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    VARIABLE        reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    INTEGER         reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    FLOAT_NUMBER    reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    DECIMAL_NUMBER  reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    PUBLIC          reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    PRIVATE         reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    INTTYPE         reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    STRINGTYPE      reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    FLOATTYPE       reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    BOOLTYPE        reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)
    RKEY            reduce using rule 45 (comparison_operation -> value_numeric comparison_operator comparison_operation .)


state 98

    (59) constant_assignation -> access_modifiers CONST assignation_type_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 112


state 99

    (61) variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    LOGICNOT        reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 61 (variable_assignation -> access_modifiers assignation_type_value_multiple DOTANDCOMMA .)


state 100

    (60) constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    LOGICNOT        reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 60 (constant_assignation -> CONST assignation_type_value_multiple DOTANDCOMMA .)


state 101

    (81) assignation_int_multiple -> assignation_int COMMA . assignation_int_multiple
    (80) assignation_int_multiple -> . assignation_int
    (81) assignation_int_multiple -> . assignation_int COMMA assignation_int_multiple
    (70) assignation_int -> . VARIABLE ASSIGNATION INTEGER

    VARIABLE        shift and go to state 80

    assignation_int                shift and go to state 79
    assignation_int_multiple       shift and go to state 113

state 102

    (70) assignation_int -> VARIABLE ASSIGNATION . INTEGER

    INTEGER         shift and go to state 114


state 103

    (85) assignation_float_multiple -> assignation_float COMMA . assignation_float_multiple
    (84) assignation_float_multiple -> . assignation_float
    (85) assignation_float_multiple -> . assignation_float COMMA assignation_float_multiple
    (72) assignation_float -> . VARIABLE ASSIGNATION FLOAT_NUMBER

    VARIABLE        shift and go to state 83

    assignation_float              shift and go to state 82
    assignation_float_multiple     shift and go to state 115

state 104

    (72) assignation_float -> VARIABLE ASSIGNATION . FLOAT_NUMBER

    FLOAT_NUMBER    shift and go to state 116


state 105

    (87) assignation_true_multiple -> assignation_true COMMA . assignation_true_multiple
    (86) assignation_true_multiple -> . assignation_true
    (87) assignation_true_multiple -> . assignation_true COMMA assignation_true_multiple
    (73) assignation_true -> . VARIABLE ASSIGNATION BOOLTRUE

    VARIABLE        shift and go to state 118

    assignation_true               shift and go to state 86
    assignation_true_multiple      shift and go to state 117

state 106

    (89) assignation_false_multiple -> assignation_false COMMA . assignation_false_multiple
    (88) assignation_false_multiple -> . assignation_false
    (89) assignation_false_multiple -> . assignation_false COMMA assignation_false_multiple
    (74) assignation_false -> . VARIABLE ASSIGNATION BOOLFALSE

    VARIABLE        shift and go to state 120

    assignation_false              shift and go to state 87
    assignation_false_multiple     shift and go to state 119

state 107

    (73) assignation_true -> VARIABLE ASSIGNATION . BOOLTRUE
    (74) assignation_false -> VARIABLE ASSIGNATION . BOOLFALSE

    BOOLTRUE        shift and go to state 121
    BOOLFALSE       shift and go to state 122


state 108

    (83) assignation_string_multiple -> assignation_string COMMA assignation_string_multiple .

    DOTANDCOMMA     reduce using rule 83 (assignation_string_multiple -> assignation_string COMMA assignation_string_multiple .)


state 109

    (71) assignation_string -> VARIABLE ASSIGNATION STRING .

    COMMA           reduce using rule 71 (assignation_string -> VARIABLE ASSIGNATION STRING .)
    DOTANDCOMMA     reduce using rule 71 (assignation_string -> VARIABLE ASSIGNATION STRING .)


state 110

    (27) print_data -> PRINT LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 123


state 111

    (28) print_data -> PRINT LPARENT VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 124


state 112

    (59) constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    LOGICNOT        reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 59 (constant_assignation -> access_modifiers CONST assignation_type_value_multiple DOTANDCOMMA .)


state 113

    (81) assignation_int_multiple -> assignation_int COMMA assignation_int_multiple .

    DOTANDCOMMA     reduce using rule 81 (assignation_int_multiple -> assignation_int COMMA assignation_int_multiple .)


state 114

    (70) assignation_int -> VARIABLE ASSIGNATION INTEGER .

    COMMA           reduce using rule 70 (assignation_int -> VARIABLE ASSIGNATION INTEGER .)
    DOTANDCOMMA     reduce using rule 70 (assignation_int -> VARIABLE ASSIGNATION INTEGER .)


state 115

    (85) assignation_float_multiple -> assignation_float COMMA assignation_float_multiple .

    DOTANDCOMMA     reduce using rule 85 (assignation_float_multiple -> assignation_float COMMA assignation_float_multiple .)


state 116

    (72) assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER .

    COMMA           reduce using rule 72 (assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER .)
    DOTANDCOMMA     reduce using rule 72 (assignation_float -> VARIABLE ASSIGNATION FLOAT_NUMBER .)


state 117

    (87) assignation_true_multiple -> assignation_true COMMA assignation_true_multiple .

    DOTANDCOMMA     reduce using rule 87 (assignation_true_multiple -> assignation_true COMMA assignation_true_multiple .)


state 118

    (73) assignation_true -> VARIABLE . ASSIGNATION BOOLTRUE

    ASSIGNATION     shift and go to state 125


state 119

    (89) assignation_false_multiple -> assignation_false COMMA assignation_false_multiple .

    DOTANDCOMMA     reduce using rule 89 (assignation_false_multiple -> assignation_false COMMA assignation_false_multiple .)


state 120

    (74) assignation_false -> VARIABLE . ASSIGNATION BOOLFALSE

    ASSIGNATION     shift and go to state 126


state 121

    (73) assignation_true -> VARIABLE ASSIGNATION BOOLTRUE .

    COMMA           reduce using rule 73 (assignation_true -> VARIABLE ASSIGNATION BOOLTRUE .)
    DOTANDCOMMA     reduce using rule 73 (assignation_true -> VARIABLE ASSIGNATION BOOLTRUE .)


state 122

    (74) assignation_false -> VARIABLE ASSIGNATION BOOLFALSE .

    COMMA           reduce using rule 74 (assignation_false -> VARIABLE ASSIGNATION BOOLFALSE .)
    DOTANDCOMMA     reduce using rule 74 (assignation_false -> VARIABLE ASSIGNATION BOOLFALSE .)


state 123

    (27) print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    LOGICNOT        reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 27 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)


state 124

    (28) print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    LOGICNOT        reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 28 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)


state 125

    (73) assignation_true -> VARIABLE ASSIGNATION . BOOLTRUE

    BOOLTRUE        shift and go to state 121


state 126

    (74) assignation_false -> VARIABLE ASSIGNATION . BOOLFALSE

    BOOLFALSE       shift and go to state 122

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 23 resolved using rule (value_boolean -> VARIABLE)
WARNING: rejected rule (value_numeric -> VARIABLE) in state 23
WARNING: reduce/reduce conflict in state 35 resolved using rule (arithmetic_operation -> value_numeric)
WARNING: rejected rule (comparison_operation -> value_numeric) in state 35
