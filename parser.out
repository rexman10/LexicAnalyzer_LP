Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLE_QUOTATION_MARKS
    ID
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> block_using block_publicClass
Rule 2     block_using -> USING SYSTEM DOTANDCOMMA
Rule 3     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 4     all_block_code -> block_code
Rule 5     all_block_code -> block_code all_block_code
Rule 6     block_code -> def_const_or_var
Rule 7     block_code -> estruct_of_data
Rule 8     block_code -> block_try_catch
Rule 9     block_code -> block_while
Rule 10    block_code -> VARIABLE
Rule 11    block_code -> dict_estruct
Rule 12    block_code -> functions_dict
Rule 13    block_code -> functions_list
Rule 14    block_code -> declaration_lambda
Rule 15    block_code -> block_if
Rule 16    block_code -> print_data
Rule 17    block_code -> block_for
Rule 18    def_const_or_var -> constant_assignation
Rule 19    def_const_or_var -> variable_assignation
Rule 20    variable_assignation -> access_modifiers all_asignations
Rule 21    variable_assignation -> all_asignations
Rule 22    constant_assignation -> access_modifiers CONST all_asignations
Rule 23    constant_assignation -> CONST all_asignations
Rule 24    constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant
Rule 25    all_asignations -> assignation_with_datatype
Rule 26    all_asignations -> assignation_without_datatype
Rule 27    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 28    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 29    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 30    assignation_without_datatype -> assignation_key_value DOTANDCOMMA
Rule 31    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 32    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 33    some_assignation_constant -> assignation_key_value DOTANDCOMMA
Rule 34    some_assignation_constant -> assignation_key_value COMMA some_assignation_constant
Rule 35    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 36    data_type -> CHARTYPE
Rule 37    data_type -> STRINGTYPE
Rule 38    data_type -> FLOATTYPE
Rule 39    data_type -> DECIMALTYPE
Rule 40    data_type -> INTTYPE
Rule 41    data_type -> BOOLTYPE
Rule 42    print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA
Rule 43    read_data -> READ RPARENT LPARENT
Rule 44    value -> value_numeric
Rule 45    value -> value_logic
Rule 46    value -> value_string
Rule 47    value -> read_data
Rule 48    value_string -> STRING
Rule 49    value_string -> CHAR
Rule 50    value_string -> VARIABLE
Rule 51    value_string -> READ LPARENT RPARENT
Rule 52    value_string -> concatenation
Rule 53    value_logic -> BOOLTRUE
Rule 54    value_logic -> BOOLFALSE
Rule 55    value_numeric -> INTEGER
Rule 56    value_numeric -> FLOAT_NUMBER
Rule 57    value_numeric -> DECIMAL_NUMBER
Rule 58    block_for -> for_anidado
Rule 59    block_for -> for_each
Rule 60    for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
Rule 61    for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
Rule 62    for_anidado -> for_simple
Rule 63    for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
Rule 64    for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
Rule 65    for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
Rule 66    block_try_catch -> try_catch_simply
Rule 67    block_try_catch -> try_catch_finally
Rule 68    try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
Rule 69    try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
Rule 70    access_modifiers -> PUBLIC
Rule 71    access_modifiers -> PRIVATE
Rule 72    block_while -> normal_while
Rule 73    block_while -> do_while
Rule 74    normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
Rule 75    do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 76    block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 77    other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 78    other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 79    not_yes_nested_if -> block_if
Rule 80    not_yes_nested_if -> block_code
Rule 81    arithmetic_operation -> value_numeric
Rule 82    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 83    logic_operation -> value_logic
Rule 84    logic_operation -> value_logic logic_operator logic_operation
Rule 85    concatenation -> STRING
Rule 86    concatenation -> STRING PLUS concatenation
Rule 87    logic_operator -> GREATER_THAN
Rule 88    logic_operator -> SMALLER_THAN
Rule 89    logic_operator -> EQUAL_COMPARATION
Rule 90    logic_operator -> INEQUALITY
Rule 91    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 92    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 93    logic_operator -> LOGICAND
Rule 94    logic_operator -> LOGICOR
Rule 95    logic_operator -> LOGICNOT
Rule 96    logic_operator -> LOGICXOR
Rule 97    arithmetic_operator -> PLUS
Rule 98    arithmetic_operator -> MINUS
Rule 99    arithmetic_operator -> TIMES
Rule 100   arithmetic_operator -> DIVIDE
Rule 101   arithmetic_operator -> PERCENT
Rule 102   variable_assignation_multiline -> <empty>
Rule 103   dict_estruct -> dict_empty
Rule 104   dict_estruct -> dict_full
Rule 105   dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 106   dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 107   dictionary_value -> LKEY key_value_pair RKEY
Rule 108   key_value_pairs -> key_value_pair
Rule 109   key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 110   key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 111   valueHash -> INTTYPE
Rule 112   estruct_of_data -> list_empty
Rule 113   estruct_of_data -> list_full
Rule 114   functions_dict -> dict_func_put
Rule 115   functions_dict -> dict_func_remove
Rule 116   dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
Rule 117   dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
Rule 118   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 119   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 120   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 121   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 122   strings_list -> STRING
Rule 123   strings_list -> STRING COMMA strings_list
Rule 124   ints_list -> INTEGER
Rule 125   ints_list -> INTEGER COMMA ints_list
Rule 126   functions_list -> list_func_clear
Rule 127   functions_list -> list_func_count
Rule 128   functions_list -> list_func_add
Rule 129   functions_list -> list_func_removeat
Rule 130   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 131   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 132   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 133   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 134   stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
Rule 135   stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
Rule 136   stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
Rule 137   queue_assignation -> QUEUE VARIABLE ASSIGNATION NEW QUEUE LPARENT RPARENT DOTANDCOMMA
Rule 138   queue_push -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
Rule 139   queue_pop -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
Rule 140   declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
Rule 141   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

Terminals, with rules where they appear

ACTION               : 141
ADD                  : 132
ADDITION_ASSIGNMENT  : 
ARROW                : 140 141
ASSIGNATION          : 35 105 106 118 119 120 121 134 137 141
ASYNC                : 140
AWAIT                : 140
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 54
BOOLTRUE             : 53
BOOLTYPE             : 41
BREAK                : 
CATCH                : 68 69
CHAR                 : 49
CHARTYPE             : 36
CLASS                : 3
CLEAR                : 130
COMMA                : 24 34 109 116 123 125
CONST                : 22 23 24
COUNT                : 131
DECIMALTYPE          : 39
DECIMAL_NUMBER       : 57
DECREMENT            : 61 64
DEQUEUE              : 139
DICTIONARY           : 105 105 106 106
DIVIDE               : 100
DIVISION_ASSIGNMENT  : 
DO                   : 75
DOLLARSIGN           : 
DOT                  : 116 117 130 131 132 133 135 136 138 139 140
DOTANDCOMMA          : 2 27 28 29 30 31 32 33 42 60 61 63 64 105 106 116 117 118 119 130 131 132 133 134 135 136 137 138 139 140
DOUBLEPOINT          : 110
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 77
ELSE_IF              : 78
ENQUEUE              : 138
EQUAL_COMPARATION    : 89
EXCEPTION            : 68 69
FINALLY              : 69
FLOATTYPE            : 38
FLOAT_NUMBER         : 56
FOR                  : 60 61 63 64
FOREACH              : 65
GREATER_THAN         : 87 105 105 106 106 118 118 119 119 120 120 121 121 141
GREATER_THAN_OR_EQUAL : 91
ID                   : 
IF                   : 76
IN                   : 65
INCREMENT            : 60 63
INEQUALITY           : 90
INTEGER              : 55 124 125 133
INTTYPE              : 40 111 119 119 121 121
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 118 118 119 119 120 120 121 121
LKEY                 : 3 60 61 63 64 65 68 68 69 69 69 74 75 76 77 78 106 107 120 121 140 140 141
LOGICAND             : 93
LOGICNOT             : 95
LOGICOR              : 94
LOGICXOR             : 96
LONG                 : 
LPARENT              : 42 43 51 60 61 63 64 65 68 69 74 75 76 78 105 106 116 117 118 119 120 121 130 131 132 133 134 135 136 137 138 139 140 140 140
METHOD               : 140 140
MINUS                : 98
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 105 106 118 119 120 121 134 137
PERCENT              : 101
PIPE                 : 
PLUS                 : 86 97
POP                  : 136
PRINT                : 42
PRIVATE              : 71
PUBLIC               : 3 70 140
PUSH                 : 135
PUT                  : 116
QUEUE                : 137 137
RBRACKET             : 
READ                 : 43 51
REMOVE               : 117
REMOVEAT             : 133
RETURN               : 
RKEY                 : 3 60 61 63 64 65 68 68 69 69 69 74 75 76 77 78 106 107 120 121 140 140 141
RPARENT              : 42 43 51 60 61 63 64 65 68 69 74 75 76 78 105 106 116 117 118 119 120 121 130 131 132 133 134 135 136 137 138 139 140 140 140
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 88 105 105 106 106 118 118 119 119 120 120 121 121 141
SMALLER_THAN_OR_EQUAL : 92
STACK                : 134 134
STATIC               : 140
STRING               : 42 48 85 86 110 116 116 116 117 117 122 123 132
STRINGTYPE           : 37 118 118 120 120 141
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 2
TABULATION           : 
TASK                 : 140 140
TIMES                : 99
TRY                  : 68 69
USING                : 2
VARIABLE             : 3 10 35 50 60 61 63 64 65 65 68 69 105 106 118 119 120 121 130 131 132 133 134 135 136 137 138 139 141 141
VOID                 : 
WHILE                : 74 75
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 20 22
all_asignations      : 20 21 22 23
all_block_code       : 3 5
arithmetic_operation : 82
arithmetic_operator  : 82
assignation_key_value : 24 27 28 29 30 31 32 33 34
assignation_with_datatype : 25 28 32 60 61 63 64
assignation_without_datatype : 26 29 31
block_code           : 4 5 60 61 65 68 68 69 69 69 74 75 80 140 141
block_for            : 17
block_if             : 15 79
block_publicClass    : 1
block_try_catch      : 8
block_using          : 1
block_while          : 9
concatenation        : 52 86
constant_assignation : 18
data_type            : 24 27 28 29 65
declaration_async    : 
declaration_lambda   : 14
def_const_or_var     : 6
dict_empty           : 103
dict_estruct         : 11
dict_full            : 104
dict_func_put        : 114
dict_func_remove     : 115
dictionary_value     : 106
do_while             : 73
estruct_of_data      : 7
for_anidado          : 58 63 64
for_each             : 59
for_simple           : 62
functions_dict       : 12
functions_list       : 13
ints_list            : 121 125
key_value_pair       : 107 108 109
key_value_pairs      : 109
list_empty           : 112
list_full            : 113
list_func_add        : 128
list_func_clear      : 126
list_func_count      : 127
list_func_removeat   : 129
logic_operation      : 60 61 63 64 74 75 76 78 84
logic_operator       : 84
normal_while         : 72
not_yes_nested_if    : 76 77 78
other_if             : 76 78
print_data           : 16
program              : 0
queue_assignation    : 
queue_pop            : 
queue_push           : 
read_data            : 47
some_assignation_constant : 24 34
stack_assignation    : 
stack_pop            : 
stack_push           : 
strings_list         : 120 123
try_catch_finally    : 67
try_catch_simply     : 66
value                : 35 135 138
valueHash            : 110
value_logic          : 45 83 84
value_numeric        : 44 81 82
value_string         : 46
variable_assignation : 19
variable_assignation_multiline : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_using block_publicClass
    (2) block_using -> . USING SYSTEM DOTANDCOMMA

    USING           shift and go to state 3

    program                        shift and go to state 1
    block_using                    shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_using . block_publicClass
    (3) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 5

    block_publicClass              shift and go to state 4

state 3

    (2) block_using -> USING . SYSTEM DOTANDCOMMA

    SYSTEM          shift and go to state 6


state 4

    (1) program -> block_using block_publicClass .

    $end            reduce using rule 1 (program -> block_using block_publicClass .)


state 5

    (3) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 6

    (2) block_using -> USING SYSTEM . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 8


state 7

    (3) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 9


state 8

    (2) block_using -> USING SYSTEM DOTANDCOMMA .

    PUBLIC          reduce using rule 2 (block_using -> USING SYSTEM DOTANDCOMMA .)


state 9

    (3) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 10


state 10

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    all_block_code                 shift and go to state 13
    block_code                     shift and go to state 14
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 11

    (70) access_modifiers -> PUBLIC .

    CONST           reduce using rule 70 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 70 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 70 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 70 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 70 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 70 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 70 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 70 (access_modifiers -> PUBLIC .)


state 12

    (10) block_code -> VARIABLE .
    (130) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (35) assignation_key_value -> VARIABLE . ASSIGNATION value

    VARIABLE        reduce using rule 10 (block_code -> VARIABLE .)
    ACTION          reduce using rule 10 (block_code -> VARIABLE .)
    IF              reduce using rule 10 (block_code -> VARIABLE .)
    PRINT           reduce using rule 10 (block_code -> VARIABLE .)
    CONST           reduce using rule 10 (block_code -> VARIABLE .)
    LIST            reduce using rule 10 (block_code -> VARIABLE .)
    TRY             reduce using rule 10 (block_code -> VARIABLE .)
    WHILE           reduce using rule 10 (block_code -> VARIABLE .)
    DO              reduce using rule 10 (block_code -> VARIABLE .)
    DICTIONARY      reduce using rule 10 (block_code -> VARIABLE .)
    STRING          reduce using rule 10 (block_code -> VARIABLE .)
    FOR             reduce using rule 10 (block_code -> VARIABLE .)
    FOREACH         reduce using rule 10 (block_code -> VARIABLE .)
    PUBLIC          reduce using rule 10 (block_code -> VARIABLE .)
    PRIVATE         reduce using rule 10 (block_code -> VARIABLE .)
    CHARTYPE        reduce using rule 10 (block_code -> VARIABLE .)
    STRINGTYPE      reduce using rule 10 (block_code -> VARIABLE .)
    FLOATTYPE       reduce using rule 10 (block_code -> VARIABLE .)
    DECIMALTYPE     reduce using rule 10 (block_code -> VARIABLE .)
    INTTYPE         reduce using rule 10 (block_code -> VARIABLE .)
    BOOLTYPE        reduce using rule 10 (block_code -> VARIABLE .)
    RKEY            reduce using rule 10 (block_code -> VARIABLE .)
    DOT             shift and go to state 70
    ASSIGNATION     shift and go to state 71


state 13

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY

    RKEY            shift and go to state 72


state 14

    (4) all_block_code -> block_code .
    (5) all_block_code -> block_code . all_block_code
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    RKEY            reduce using rule 4 (all_block_code -> block_code .)
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 14
    all_block_code                 shift and go to state 73
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 15

    (6) block_code -> def_const_or_var .

    VARIABLE        reduce using rule 6 (block_code -> def_const_or_var .)
    ACTION          reduce using rule 6 (block_code -> def_const_or_var .)
    IF              reduce using rule 6 (block_code -> def_const_or_var .)
    PRINT           reduce using rule 6 (block_code -> def_const_or_var .)
    CONST           reduce using rule 6 (block_code -> def_const_or_var .)
    LIST            reduce using rule 6 (block_code -> def_const_or_var .)
    TRY             reduce using rule 6 (block_code -> def_const_or_var .)
    WHILE           reduce using rule 6 (block_code -> def_const_or_var .)
    DO              reduce using rule 6 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 6 (block_code -> def_const_or_var .)
    STRING          reduce using rule 6 (block_code -> def_const_or_var .)
    FOR             reduce using rule 6 (block_code -> def_const_or_var .)
    FOREACH         reduce using rule 6 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 6 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 6 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 6 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 6 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 6 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 6 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 6 (block_code -> def_const_or_var .)


state 16

    (7) block_code -> estruct_of_data .

    VARIABLE        reduce using rule 7 (block_code -> estruct_of_data .)
    ACTION          reduce using rule 7 (block_code -> estruct_of_data .)
    IF              reduce using rule 7 (block_code -> estruct_of_data .)
    PRINT           reduce using rule 7 (block_code -> estruct_of_data .)
    CONST           reduce using rule 7 (block_code -> estruct_of_data .)
    LIST            reduce using rule 7 (block_code -> estruct_of_data .)
    TRY             reduce using rule 7 (block_code -> estruct_of_data .)
    WHILE           reduce using rule 7 (block_code -> estruct_of_data .)
    DO              reduce using rule 7 (block_code -> estruct_of_data .)
    DICTIONARY      reduce using rule 7 (block_code -> estruct_of_data .)
    STRING          reduce using rule 7 (block_code -> estruct_of_data .)
    FOR             reduce using rule 7 (block_code -> estruct_of_data .)
    FOREACH         reduce using rule 7 (block_code -> estruct_of_data .)
    PUBLIC          reduce using rule 7 (block_code -> estruct_of_data .)
    PRIVATE         reduce using rule 7 (block_code -> estruct_of_data .)
    CHARTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    STRINGTYPE      reduce using rule 7 (block_code -> estruct_of_data .)
    FLOATTYPE       reduce using rule 7 (block_code -> estruct_of_data .)
    DECIMALTYPE     reduce using rule 7 (block_code -> estruct_of_data .)
    INTTYPE         reduce using rule 7 (block_code -> estruct_of_data .)
    BOOLTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    RKEY            reduce using rule 7 (block_code -> estruct_of_data .)


state 17

    (8) block_code -> block_try_catch .

    VARIABLE        reduce using rule 8 (block_code -> block_try_catch .)
    ACTION          reduce using rule 8 (block_code -> block_try_catch .)
    IF              reduce using rule 8 (block_code -> block_try_catch .)
    PRINT           reduce using rule 8 (block_code -> block_try_catch .)
    CONST           reduce using rule 8 (block_code -> block_try_catch .)
    LIST            reduce using rule 8 (block_code -> block_try_catch .)
    TRY             reduce using rule 8 (block_code -> block_try_catch .)
    WHILE           reduce using rule 8 (block_code -> block_try_catch .)
    DO              reduce using rule 8 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 8 (block_code -> block_try_catch .)
    STRING          reduce using rule 8 (block_code -> block_try_catch .)
    FOR             reduce using rule 8 (block_code -> block_try_catch .)
    FOREACH         reduce using rule 8 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 8 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 8 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 8 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 8 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 8 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 8 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    RKEY            reduce using rule 8 (block_code -> block_try_catch .)


state 18

    (9) block_code -> block_while .

    VARIABLE        reduce using rule 9 (block_code -> block_while .)
    ACTION          reduce using rule 9 (block_code -> block_while .)
    IF              reduce using rule 9 (block_code -> block_while .)
    PRINT           reduce using rule 9 (block_code -> block_while .)
    CONST           reduce using rule 9 (block_code -> block_while .)
    LIST            reduce using rule 9 (block_code -> block_while .)
    TRY             reduce using rule 9 (block_code -> block_while .)
    WHILE           reduce using rule 9 (block_code -> block_while .)
    DO              reduce using rule 9 (block_code -> block_while .)
    DICTIONARY      reduce using rule 9 (block_code -> block_while .)
    STRING          reduce using rule 9 (block_code -> block_while .)
    FOR             reduce using rule 9 (block_code -> block_while .)
    FOREACH         reduce using rule 9 (block_code -> block_while .)
    PUBLIC          reduce using rule 9 (block_code -> block_while .)
    PRIVATE         reduce using rule 9 (block_code -> block_while .)
    CHARTYPE        reduce using rule 9 (block_code -> block_while .)
    STRINGTYPE      reduce using rule 9 (block_code -> block_while .)
    FLOATTYPE       reduce using rule 9 (block_code -> block_while .)
    DECIMALTYPE     reduce using rule 9 (block_code -> block_while .)
    INTTYPE         reduce using rule 9 (block_code -> block_while .)
    BOOLTYPE        reduce using rule 9 (block_code -> block_while .)
    RKEY            reduce using rule 9 (block_code -> block_while .)


state 19

    (11) block_code -> dict_estruct .

    VARIABLE        reduce using rule 11 (block_code -> dict_estruct .)
    ACTION          reduce using rule 11 (block_code -> dict_estruct .)
    IF              reduce using rule 11 (block_code -> dict_estruct .)
    PRINT           reduce using rule 11 (block_code -> dict_estruct .)
    CONST           reduce using rule 11 (block_code -> dict_estruct .)
    LIST            reduce using rule 11 (block_code -> dict_estruct .)
    TRY             reduce using rule 11 (block_code -> dict_estruct .)
    WHILE           reduce using rule 11 (block_code -> dict_estruct .)
    DO              reduce using rule 11 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 11 (block_code -> dict_estruct .)
    STRING          reduce using rule 11 (block_code -> dict_estruct .)
    FOR             reduce using rule 11 (block_code -> dict_estruct .)
    FOREACH         reduce using rule 11 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 11 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 11 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 11 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 11 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 11 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 11 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 11 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 11 (block_code -> dict_estruct .)
    RKEY            reduce using rule 11 (block_code -> dict_estruct .)


state 20

    (12) block_code -> functions_dict .

    VARIABLE        reduce using rule 12 (block_code -> functions_dict .)
    ACTION          reduce using rule 12 (block_code -> functions_dict .)
    IF              reduce using rule 12 (block_code -> functions_dict .)
    PRINT           reduce using rule 12 (block_code -> functions_dict .)
    CONST           reduce using rule 12 (block_code -> functions_dict .)
    LIST            reduce using rule 12 (block_code -> functions_dict .)
    TRY             reduce using rule 12 (block_code -> functions_dict .)
    WHILE           reduce using rule 12 (block_code -> functions_dict .)
    DO              reduce using rule 12 (block_code -> functions_dict .)
    DICTIONARY      reduce using rule 12 (block_code -> functions_dict .)
    STRING          reduce using rule 12 (block_code -> functions_dict .)
    FOR             reduce using rule 12 (block_code -> functions_dict .)
    FOREACH         reduce using rule 12 (block_code -> functions_dict .)
    PUBLIC          reduce using rule 12 (block_code -> functions_dict .)
    PRIVATE         reduce using rule 12 (block_code -> functions_dict .)
    CHARTYPE        reduce using rule 12 (block_code -> functions_dict .)
    STRINGTYPE      reduce using rule 12 (block_code -> functions_dict .)
    FLOATTYPE       reduce using rule 12 (block_code -> functions_dict .)
    DECIMALTYPE     reduce using rule 12 (block_code -> functions_dict .)
    INTTYPE         reduce using rule 12 (block_code -> functions_dict .)
    BOOLTYPE        reduce using rule 12 (block_code -> functions_dict .)
    RKEY            reduce using rule 12 (block_code -> functions_dict .)


state 21

    (13) block_code -> functions_list .

    VARIABLE        reduce using rule 13 (block_code -> functions_list .)
    ACTION          reduce using rule 13 (block_code -> functions_list .)
    IF              reduce using rule 13 (block_code -> functions_list .)
    PRINT           reduce using rule 13 (block_code -> functions_list .)
    CONST           reduce using rule 13 (block_code -> functions_list .)
    LIST            reduce using rule 13 (block_code -> functions_list .)
    TRY             reduce using rule 13 (block_code -> functions_list .)
    WHILE           reduce using rule 13 (block_code -> functions_list .)
    DO              reduce using rule 13 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 13 (block_code -> functions_list .)
    STRING          reduce using rule 13 (block_code -> functions_list .)
    FOR             reduce using rule 13 (block_code -> functions_list .)
    FOREACH         reduce using rule 13 (block_code -> functions_list .)
    PUBLIC          reduce using rule 13 (block_code -> functions_list .)
    PRIVATE         reduce using rule 13 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 13 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 13 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 13 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 13 (block_code -> functions_list .)
    INTTYPE         reduce using rule 13 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 13 (block_code -> functions_list .)
    RKEY            reduce using rule 13 (block_code -> functions_list .)


state 22

    (14) block_code -> declaration_lambda .

    VARIABLE        reduce using rule 14 (block_code -> declaration_lambda .)
    ACTION          reduce using rule 14 (block_code -> declaration_lambda .)
    IF              reduce using rule 14 (block_code -> declaration_lambda .)
    PRINT           reduce using rule 14 (block_code -> declaration_lambda .)
    CONST           reduce using rule 14 (block_code -> declaration_lambda .)
    LIST            reduce using rule 14 (block_code -> declaration_lambda .)
    TRY             reduce using rule 14 (block_code -> declaration_lambda .)
    WHILE           reduce using rule 14 (block_code -> declaration_lambda .)
    DO              reduce using rule 14 (block_code -> declaration_lambda .)
    DICTIONARY      reduce using rule 14 (block_code -> declaration_lambda .)
    STRING          reduce using rule 14 (block_code -> declaration_lambda .)
    FOR             reduce using rule 14 (block_code -> declaration_lambda .)
    FOREACH         reduce using rule 14 (block_code -> declaration_lambda .)
    PUBLIC          reduce using rule 14 (block_code -> declaration_lambda .)
    PRIVATE         reduce using rule 14 (block_code -> declaration_lambda .)
    CHARTYPE        reduce using rule 14 (block_code -> declaration_lambda .)
    STRINGTYPE      reduce using rule 14 (block_code -> declaration_lambda .)
    FLOATTYPE       reduce using rule 14 (block_code -> declaration_lambda .)
    DECIMALTYPE     reduce using rule 14 (block_code -> declaration_lambda .)
    INTTYPE         reduce using rule 14 (block_code -> declaration_lambda .)
    BOOLTYPE        reduce using rule 14 (block_code -> declaration_lambda .)
    RKEY            reduce using rule 14 (block_code -> declaration_lambda .)


state 23

    (15) block_code -> block_if .

    VARIABLE        reduce using rule 15 (block_code -> block_if .)
    ACTION          reduce using rule 15 (block_code -> block_if .)
    IF              reduce using rule 15 (block_code -> block_if .)
    PRINT           reduce using rule 15 (block_code -> block_if .)
    CONST           reduce using rule 15 (block_code -> block_if .)
    LIST            reduce using rule 15 (block_code -> block_if .)
    TRY             reduce using rule 15 (block_code -> block_if .)
    WHILE           reduce using rule 15 (block_code -> block_if .)
    DO              reduce using rule 15 (block_code -> block_if .)
    DICTIONARY      reduce using rule 15 (block_code -> block_if .)
    STRING          reduce using rule 15 (block_code -> block_if .)
    FOR             reduce using rule 15 (block_code -> block_if .)
    FOREACH         reduce using rule 15 (block_code -> block_if .)
    PUBLIC          reduce using rule 15 (block_code -> block_if .)
    PRIVATE         reduce using rule 15 (block_code -> block_if .)
    CHARTYPE        reduce using rule 15 (block_code -> block_if .)
    STRINGTYPE      reduce using rule 15 (block_code -> block_if .)
    FLOATTYPE       reduce using rule 15 (block_code -> block_if .)
    DECIMALTYPE     reduce using rule 15 (block_code -> block_if .)
    INTTYPE         reduce using rule 15 (block_code -> block_if .)
    BOOLTYPE        reduce using rule 15 (block_code -> block_if .)
    RKEY            reduce using rule 15 (block_code -> block_if .)


state 24

    (16) block_code -> print_data .

    VARIABLE        reduce using rule 16 (block_code -> print_data .)
    ACTION          reduce using rule 16 (block_code -> print_data .)
    IF              reduce using rule 16 (block_code -> print_data .)
    PRINT           reduce using rule 16 (block_code -> print_data .)
    CONST           reduce using rule 16 (block_code -> print_data .)
    LIST            reduce using rule 16 (block_code -> print_data .)
    TRY             reduce using rule 16 (block_code -> print_data .)
    WHILE           reduce using rule 16 (block_code -> print_data .)
    DO              reduce using rule 16 (block_code -> print_data .)
    DICTIONARY      reduce using rule 16 (block_code -> print_data .)
    STRING          reduce using rule 16 (block_code -> print_data .)
    FOR             reduce using rule 16 (block_code -> print_data .)
    FOREACH         reduce using rule 16 (block_code -> print_data .)
    PUBLIC          reduce using rule 16 (block_code -> print_data .)
    PRIVATE         reduce using rule 16 (block_code -> print_data .)
    CHARTYPE        reduce using rule 16 (block_code -> print_data .)
    STRINGTYPE      reduce using rule 16 (block_code -> print_data .)
    FLOATTYPE       reduce using rule 16 (block_code -> print_data .)
    DECIMALTYPE     reduce using rule 16 (block_code -> print_data .)
    INTTYPE         reduce using rule 16 (block_code -> print_data .)
    BOOLTYPE        reduce using rule 16 (block_code -> print_data .)
    RKEY            reduce using rule 16 (block_code -> print_data .)


state 25

    (17) block_code -> block_for .

    VARIABLE        reduce using rule 17 (block_code -> block_for .)
    ACTION          reduce using rule 17 (block_code -> block_for .)
    IF              reduce using rule 17 (block_code -> block_for .)
    PRINT           reduce using rule 17 (block_code -> block_for .)
    CONST           reduce using rule 17 (block_code -> block_for .)
    LIST            reduce using rule 17 (block_code -> block_for .)
    TRY             reduce using rule 17 (block_code -> block_for .)
    WHILE           reduce using rule 17 (block_code -> block_for .)
    DO              reduce using rule 17 (block_code -> block_for .)
    DICTIONARY      reduce using rule 17 (block_code -> block_for .)
    STRING          reduce using rule 17 (block_code -> block_for .)
    FOR             reduce using rule 17 (block_code -> block_for .)
    FOREACH         reduce using rule 17 (block_code -> block_for .)
    PUBLIC          reduce using rule 17 (block_code -> block_for .)
    PRIVATE         reduce using rule 17 (block_code -> block_for .)
    CHARTYPE        reduce using rule 17 (block_code -> block_for .)
    STRINGTYPE      reduce using rule 17 (block_code -> block_for .)
    FLOATTYPE       reduce using rule 17 (block_code -> block_for .)
    DECIMALTYPE     reduce using rule 17 (block_code -> block_for .)
    INTTYPE         reduce using rule 17 (block_code -> block_for .)
    BOOLTYPE        reduce using rule 17 (block_code -> block_for .)
    RKEY            reduce using rule 17 (block_code -> block_for .)


state 26

    (18) def_const_or_var -> constant_assignation .

    VARIABLE        reduce using rule 18 (def_const_or_var -> constant_assignation .)
    ACTION          reduce using rule 18 (def_const_or_var -> constant_assignation .)
    IF              reduce using rule 18 (def_const_or_var -> constant_assignation .)
    PRINT           reduce using rule 18 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 18 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 18 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 18 (def_const_or_var -> constant_assignation .)
    WHILE           reduce using rule 18 (def_const_or_var -> constant_assignation .)
    DO              reduce using rule 18 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 18 (def_const_or_var -> constant_assignation .)
    STRING          reduce using rule 18 (def_const_or_var -> constant_assignation .)
    FOR             reduce using rule 18 (def_const_or_var -> constant_assignation .)
    FOREACH         reduce using rule 18 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 18 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 18 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 18 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 18 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 18 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 18 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 18 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 18 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 18 (def_const_or_var -> constant_assignation .)


state 27

    (19) def_const_or_var -> variable_assignation .

    VARIABLE        reduce using rule 19 (def_const_or_var -> variable_assignation .)
    ACTION          reduce using rule 19 (def_const_or_var -> variable_assignation .)
    IF              reduce using rule 19 (def_const_or_var -> variable_assignation .)
    PRINT           reduce using rule 19 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 19 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 19 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 19 (def_const_or_var -> variable_assignation .)
    WHILE           reduce using rule 19 (def_const_or_var -> variable_assignation .)
    DO              reduce using rule 19 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 19 (def_const_or_var -> variable_assignation .)
    STRING          reduce using rule 19 (def_const_or_var -> variable_assignation .)
    FOR             reduce using rule 19 (def_const_or_var -> variable_assignation .)
    FOREACH         reduce using rule 19 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 19 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 19 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 19 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 19 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 19 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 19 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 19 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 19 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 19 (def_const_or_var -> variable_assignation .)


state 28

    (112) estruct_of_data -> list_empty .

    VARIABLE        reduce using rule 112 (estruct_of_data -> list_empty .)
    ACTION          reduce using rule 112 (estruct_of_data -> list_empty .)
    IF              reduce using rule 112 (estruct_of_data -> list_empty .)
    PRINT           reduce using rule 112 (estruct_of_data -> list_empty .)
    CONST           reduce using rule 112 (estruct_of_data -> list_empty .)
    LIST            reduce using rule 112 (estruct_of_data -> list_empty .)
    TRY             reduce using rule 112 (estruct_of_data -> list_empty .)
    WHILE           reduce using rule 112 (estruct_of_data -> list_empty .)
    DO              reduce using rule 112 (estruct_of_data -> list_empty .)
    DICTIONARY      reduce using rule 112 (estruct_of_data -> list_empty .)
    STRING          reduce using rule 112 (estruct_of_data -> list_empty .)
    FOR             reduce using rule 112 (estruct_of_data -> list_empty .)
    FOREACH         reduce using rule 112 (estruct_of_data -> list_empty .)
    PUBLIC          reduce using rule 112 (estruct_of_data -> list_empty .)
    PRIVATE         reduce using rule 112 (estruct_of_data -> list_empty .)
    CHARTYPE        reduce using rule 112 (estruct_of_data -> list_empty .)
    STRINGTYPE      reduce using rule 112 (estruct_of_data -> list_empty .)
    FLOATTYPE       reduce using rule 112 (estruct_of_data -> list_empty .)
    DECIMALTYPE     reduce using rule 112 (estruct_of_data -> list_empty .)
    INTTYPE         reduce using rule 112 (estruct_of_data -> list_empty .)
    BOOLTYPE        reduce using rule 112 (estruct_of_data -> list_empty .)
    RKEY            reduce using rule 112 (estruct_of_data -> list_empty .)


state 29

    (113) estruct_of_data -> list_full .

    VARIABLE        reduce using rule 113 (estruct_of_data -> list_full .)
    ACTION          reduce using rule 113 (estruct_of_data -> list_full .)
    IF              reduce using rule 113 (estruct_of_data -> list_full .)
    PRINT           reduce using rule 113 (estruct_of_data -> list_full .)
    CONST           reduce using rule 113 (estruct_of_data -> list_full .)
    LIST            reduce using rule 113 (estruct_of_data -> list_full .)
    TRY             reduce using rule 113 (estruct_of_data -> list_full .)
    WHILE           reduce using rule 113 (estruct_of_data -> list_full .)
    DO              reduce using rule 113 (estruct_of_data -> list_full .)
    DICTIONARY      reduce using rule 113 (estruct_of_data -> list_full .)
    STRING          reduce using rule 113 (estruct_of_data -> list_full .)
    FOR             reduce using rule 113 (estruct_of_data -> list_full .)
    FOREACH         reduce using rule 113 (estruct_of_data -> list_full .)
    PUBLIC          reduce using rule 113 (estruct_of_data -> list_full .)
    PRIVATE         reduce using rule 113 (estruct_of_data -> list_full .)
    CHARTYPE        reduce using rule 113 (estruct_of_data -> list_full .)
    STRINGTYPE      reduce using rule 113 (estruct_of_data -> list_full .)
    FLOATTYPE       reduce using rule 113 (estruct_of_data -> list_full .)
    DECIMALTYPE     reduce using rule 113 (estruct_of_data -> list_full .)
    INTTYPE         reduce using rule 113 (estruct_of_data -> list_full .)
    BOOLTYPE        reduce using rule 113 (estruct_of_data -> list_full .)
    RKEY            reduce using rule 113 (estruct_of_data -> list_full .)


state 30

    (66) block_try_catch -> try_catch_simply .

    VARIABLE        reduce using rule 66 (block_try_catch -> try_catch_simply .)
    ACTION          reduce using rule 66 (block_try_catch -> try_catch_simply .)
    IF              reduce using rule 66 (block_try_catch -> try_catch_simply .)
    PRINT           reduce using rule 66 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 66 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 66 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 66 (block_try_catch -> try_catch_simply .)
    WHILE           reduce using rule 66 (block_try_catch -> try_catch_simply .)
    DO              reduce using rule 66 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 66 (block_try_catch -> try_catch_simply .)
    STRING          reduce using rule 66 (block_try_catch -> try_catch_simply .)
    FOR             reduce using rule 66 (block_try_catch -> try_catch_simply .)
    FOREACH         reduce using rule 66 (block_try_catch -> try_catch_simply .)
    PUBLIC          reduce using rule 66 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 66 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 66 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 66 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 66 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 66 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 66 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 66 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 66 (block_try_catch -> try_catch_simply .)


state 31

    (67) block_try_catch -> try_catch_finally .

    VARIABLE        reduce using rule 67 (block_try_catch -> try_catch_finally .)
    ACTION          reduce using rule 67 (block_try_catch -> try_catch_finally .)
    IF              reduce using rule 67 (block_try_catch -> try_catch_finally .)
    PRINT           reduce using rule 67 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 67 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 67 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 67 (block_try_catch -> try_catch_finally .)
    WHILE           reduce using rule 67 (block_try_catch -> try_catch_finally .)
    DO              reduce using rule 67 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 67 (block_try_catch -> try_catch_finally .)
    STRING          reduce using rule 67 (block_try_catch -> try_catch_finally .)
    FOR             reduce using rule 67 (block_try_catch -> try_catch_finally .)
    FOREACH         reduce using rule 67 (block_try_catch -> try_catch_finally .)
    PUBLIC          reduce using rule 67 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 67 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 67 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 67 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 67 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 67 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 67 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 67 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 67 (block_try_catch -> try_catch_finally .)


state 32

    (72) block_while -> normal_while .

    VARIABLE        reduce using rule 72 (block_while -> normal_while .)
    ACTION          reduce using rule 72 (block_while -> normal_while .)
    IF              reduce using rule 72 (block_while -> normal_while .)
    PRINT           reduce using rule 72 (block_while -> normal_while .)
    CONST           reduce using rule 72 (block_while -> normal_while .)
    LIST            reduce using rule 72 (block_while -> normal_while .)
    TRY             reduce using rule 72 (block_while -> normal_while .)
    WHILE           reduce using rule 72 (block_while -> normal_while .)
    DO              reduce using rule 72 (block_while -> normal_while .)
    DICTIONARY      reduce using rule 72 (block_while -> normal_while .)
    STRING          reduce using rule 72 (block_while -> normal_while .)
    FOR             reduce using rule 72 (block_while -> normal_while .)
    FOREACH         reduce using rule 72 (block_while -> normal_while .)
    PUBLIC          reduce using rule 72 (block_while -> normal_while .)
    PRIVATE         reduce using rule 72 (block_while -> normal_while .)
    CHARTYPE        reduce using rule 72 (block_while -> normal_while .)
    STRINGTYPE      reduce using rule 72 (block_while -> normal_while .)
    FLOATTYPE       reduce using rule 72 (block_while -> normal_while .)
    DECIMALTYPE     reduce using rule 72 (block_while -> normal_while .)
    INTTYPE         reduce using rule 72 (block_while -> normal_while .)
    BOOLTYPE        reduce using rule 72 (block_while -> normal_while .)
    RKEY            reduce using rule 72 (block_while -> normal_while .)


state 33

    (73) block_while -> do_while .

    VARIABLE        reduce using rule 73 (block_while -> do_while .)
    ACTION          reduce using rule 73 (block_while -> do_while .)
    IF              reduce using rule 73 (block_while -> do_while .)
    PRINT           reduce using rule 73 (block_while -> do_while .)
    CONST           reduce using rule 73 (block_while -> do_while .)
    LIST            reduce using rule 73 (block_while -> do_while .)
    TRY             reduce using rule 73 (block_while -> do_while .)
    WHILE           reduce using rule 73 (block_while -> do_while .)
    DO              reduce using rule 73 (block_while -> do_while .)
    DICTIONARY      reduce using rule 73 (block_while -> do_while .)
    STRING          reduce using rule 73 (block_while -> do_while .)
    FOR             reduce using rule 73 (block_while -> do_while .)
    FOREACH         reduce using rule 73 (block_while -> do_while .)
    PUBLIC          reduce using rule 73 (block_while -> do_while .)
    PRIVATE         reduce using rule 73 (block_while -> do_while .)
    CHARTYPE        reduce using rule 73 (block_while -> do_while .)
    STRINGTYPE      reduce using rule 73 (block_while -> do_while .)
    FLOATTYPE       reduce using rule 73 (block_while -> do_while .)
    DECIMALTYPE     reduce using rule 73 (block_while -> do_while .)
    INTTYPE         reduce using rule 73 (block_while -> do_while .)
    BOOLTYPE        reduce using rule 73 (block_while -> do_while .)
    RKEY            reduce using rule 73 (block_while -> do_while .)


state 34

    (103) dict_estruct -> dict_empty .

    VARIABLE        reduce using rule 103 (dict_estruct -> dict_empty .)
    ACTION          reduce using rule 103 (dict_estruct -> dict_empty .)
    IF              reduce using rule 103 (dict_estruct -> dict_empty .)
    PRINT           reduce using rule 103 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 103 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 103 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 103 (dict_estruct -> dict_empty .)
    WHILE           reduce using rule 103 (dict_estruct -> dict_empty .)
    DO              reduce using rule 103 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 103 (dict_estruct -> dict_empty .)
    STRING          reduce using rule 103 (dict_estruct -> dict_empty .)
    FOR             reduce using rule 103 (dict_estruct -> dict_empty .)
    FOREACH         reduce using rule 103 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 103 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 103 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 103 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 103 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 103 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 103 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 103 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 103 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 103 (dict_estruct -> dict_empty .)


state 35

    (104) dict_estruct -> dict_full .

    VARIABLE        reduce using rule 104 (dict_estruct -> dict_full .)
    ACTION          reduce using rule 104 (dict_estruct -> dict_full .)
    IF              reduce using rule 104 (dict_estruct -> dict_full .)
    PRINT           reduce using rule 104 (dict_estruct -> dict_full .)
    CONST           reduce using rule 104 (dict_estruct -> dict_full .)
    LIST            reduce using rule 104 (dict_estruct -> dict_full .)
    TRY             reduce using rule 104 (dict_estruct -> dict_full .)
    WHILE           reduce using rule 104 (dict_estruct -> dict_full .)
    DO              reduce using rule 104 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 104 (dict_estruct -> dict_full .)
    STRING          reduce using rule 104 (dict_estruct -> dict_full .)
    FOR             reduce using rule 104 (dict_estruct -> dict_full .)
    FOREACH         reduce using rule 104 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 104 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 104 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 104 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 104 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 104 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 104 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 104 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 104 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 104 (dict_estruct -> dict_full .)


state 36

    (114) functions_dict -> dict_func_put .

    VARIABLE        reduce using rule 114 (functions_dict -> dict_func_put .)
    ACTION          reduce using rule 114 (functions_dict -> dict_func_put .)
    IF              reduce using rule 114 (functions_dict -> dict_func_put .)
    PRINT           reduce using rule 114 (functions_dict -> dict_func_put .)
    CONST           reduce using rule 114 (functions_dict -> dict_func_put .)
    LIST            reduce using rule 114 (functions_dict -> dict_func_put .)
    TRY             reduce using rule 114 (functions_dict -> dict_func_put .)
    WHILE           reduce using rule 114 (functions_dict -> dict_func_put .)
    DO              reduce using rule 114 (functions_dict -> dict_func_put .)
    DICTIONARY      reduce using rule 114 (functions_dict -> dict_func_put .)
    STRING          reduce using rule 114 (functions_dict -> dict_func_put .)
    FOR             reduce using rule 114 (functions_dict -> dict_func_put .)
    FOREACH         reduce using rule 114 (functions_dict -> dict_func_put .)
    PUBLIC          reduce using rule 114 (functions_dict -> dict_func_put .)
    PRIVATE         reduce using rule 114 (functions_dict -> dict_func_put .)
    CHARTYPE        reduce using rule 114 (functions_dict -> dict_func_put .)
    STRINGTYPE      reduce using rule 114 (functions_dict -> dict_func_put .)
    FLOATTYPE       reduce using rule 114 (functions_dict -> dict_func_put .)
    DECIMALTYPE     reduce using rule 114 (functions_dict -> dict_func_put .)
    INTTYPE         reduce using rule 114 (functions_dict -> dict_func_put .)
    BOOLTYPE        reduce using rule 114 (functions_dict -> dict_func_put .)
    RKEY            reduce using rule 114 (functions_dict -> dict_func_put .)


state 37

    (115) functions_dict -> dict_func_remove .

    VARIABLE        reduce using rule 115 (functions_dict -> dict_func_remove .)
    ACTION          reduce using rule 115 (functions_dict -> dict_func_remove .)
    IF              reduce using rule 115 (functions_dict -> dict_func_remove .)
    PRINT           reduce using rule 115 (functions_dict -> dict_func_remove .)
    CONST           reduce using rule 115 (functions_dict -> dict_func_remove .)
    LIST            reduce using rule 115 (functions_dict -> dict_func_remove .)
    TRY             reduce using rule 115 (functions_dict -> dict_func_remove .)
    WHILE           reduce using rule 115 (functions_dict -> dict_func_remove .)
    DO              reduce using rule 115 (functions_dict -> dict_func_remove .)
    DICTIONARY      reduce using rule 115 (functions_dict -> dict_func_remove .)
    STRING          reduce using rule 115 (functions_dict -> dict_func_remove .)
    FOR             reduce using rule 115 (functions_dict -> dict_func_remove .)
    FOREACH         reduce using rule 115 (functions_dict -> dict_func_remove .)
    PUBLIC          reduce using rule 115 (functions_dict -> dict_func_remove .)
    PRIVATE         reduce using rule 115 (functions_dict -> dict_func_remove .)
    CHARTYPE        reduce using rule 115 (functions_dict -> dict_func_remove .)
    STRINGTYPE      reduce using rule 115 (functions_dict -> dict_func_remove .)
    FLOATTYPE       reduce using rule 115 (functions_dict -> dict_func_remove .)
    DECIMALTYPE     reduce using rule 115 (functions_dict -> dict_func_remove .)
    INTTYPE         reduce using rule 115 (functions_dict -> dict_func_remove .)
    BOOLTYPE        reduce using rule 115 (functions_dict -> dict_func_remove .)
    RKEY            reduce using rule 115 (functions_dict -> dict_func_remove .)


state 38

    (126) functions_list -> list_func_clear .

    VARIABLE        reduce using rule 126 (functions_list -> list_func_clear .)
    ACTION          reduce using rule 126 (functions_list -> list_func_clear .)
    IF              reduce using rule 126 (functions_list -> list_func_clear .)
    PRINT           reduce using rule 126 (functions_list -> list_func_clear .)
    CONST           reduce using rule 126 (functions_list -> list_func_clear .)
    LIST            reduce using rule 126 (functions_list -> list_func_clear .)
    TRY             reduce using rule 126 (functions_list -> list_func_clear .)
    WHILE           reduce using rule 126 (functions_list -> list_func_clear .)
    DO              reduce using rule 126 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 126 (functions_list -> list_func_clear .)
    STRING          reduce using rule 126 (functions_list -> list_func_clear .)
    FOR             reduce using rule 126 (functions_list -> list_func_clear .)
    FOREACH         reduce using rule 126 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 126 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 126 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 126 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 126 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 126 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 126 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 126 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 126 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 126 (functions_list -> list_func_clear .)


state 39

    (127) functions_list -> list_func_count .

    VARIABLE        reduce using rule 127 (functions_list -> list_func_count .)
    ACTION          reduce using rule 127 (functions_list -> list_func_count .)
    IF              reduce using rule 127 (functions_list -> list_func_count .)
    PRINT           reduce using rule 127 (functions_list -> list_func_count .)
    CONST           reduce using rule 127 (functions_list -> list_func_count .)
    LIST            reduce using rule 127 (functions_list -> list_func_count .)
    TRY             reduce using rule 127 (functions_list -> list_func_count .)
    WHILE           reduce using rule 127 (functions_list -> list_func_count .)
    DO              reduce using rule 127 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 127 (functions_list -> list_func_count .)
    STRING          reduce using rule 127 (functions_list -> list_func_count .)
    FOR             reduce using rule 127 (functions_list -> list_func_count .)
    FOREACH         reduce using rule 127 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 127 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 127 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 127 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 127 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 127 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 127 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 127 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 127 (functions_list -> list_func_count .)
    RKEY            reduce using rule 127 (functions_list -> list_func_count .)


state 40

    (128) functions_list -> list_func_add .

    VARIABLE        reduce using rule 128 (functions_list -> list_func_add .)
    ACTION          reduce using rule 128 (functions_list -> list_func_add .)
    IF              reduce using rule 128 (functions_list -> list_func_add .)
    PRINT           reduce using rule 128 (functions_list -> list_func_add .)
    CONST           reduce using rule 128 (functions_list -> list_func_add .)
    LIST            reduce using rule 128 (functions_list -> list_func_add .)
    TRY             reduce using rule 128 (functions_list -> list_func_add .)
    WHILE           reduce using rule 128 (functions_list -> list_func_add .)
    DO              reduce using rule 128 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 128 (functions_list -> list_func_add .)
    STRING          reduce using rule 128 (functions_list -> list_func_add .)
    FOR             reduce using rule 128 (functions_list -> list_func_add .)
    FOREACH         reduce using rule 128 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 128 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 128 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 128 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 128 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 128 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 128 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 128 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 128 (functions_list -> list_func_add .)
    RKEY            reduce using rule 128 (functions_list -> list_func_add .)


state 41

    (129) functions_list -> list_func_removeat .

    VARIABLE        reduce using rule 129 (functions_list -> list_func_removeat .)
    ACTION          reduce using rule 129 (functions_list -> list_func_removeat .)
    IF              reduce using rule 129 (functions_list -> list_func_removeat .)
    PRINT           reduce using rule 129 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 129 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 129 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 129 (functions_list -> list_func_removeat .)
    WHILE           reduce using rule 129 (functions_list -> list_func_removeat .)
    DO              reduce using rule 129 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 129 (functions_list -> list_func_removeat .)
    STRING          reduce using rule 129 (functions_list -> list_func_removeat .)
    FOR             reduce using rule 129 (functions_list -> list_func_removeat .)
    FOREACH         reduce using rule 129 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 129 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 129 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 129 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 129 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 129 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 129 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 129 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 129 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 129 (functions_list -> list_func_removeat .)


state 42

    (141) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    SMALLER_THAN    shift and go to state 74


state 43

    (37) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 37 (data_type -> STRINGTYPE .)


state 44

    (76) block_if -> IF . LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 75


state 45

    (42) print_data -> PRINT . RPARENT STRING LPARENT DOTANDCOMMA

    RPARENT         shift and go to state 76


state 46

    (116) dict_func_put -> STRING . DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> STRING . DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    DOT             shift and go to state 77


state 47

    (58) block_for -> for_anidado .

    VARIABLE        reduce using rule 58 (block_for -> for_anidado .)
    ACTION          reduce using rule 58 (block_for -> for_anidado .)
    IF              reduce using rule 58 (block_for -> for_anidado .)
    PRINT           reduce using rule 58 (block_for -> for_anidado .)
    CONST           reduce using rule 58 (block_for -> for_anidado .)
    LIST            reduce using rule 58 (block_for -> for_anidado .)
    TRY             reduce using rule 58 (block_for -> for_anidado .)
    WHILE           reduce using rule 58 (block_for -> for_anidado .)
    DO              reduce using rule 58 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 58 (block_for -> for_anidado .)
    STRING          reduce using rule 58 (block_for -> for_anidado .)
    FOR             reduce using rule 58 (block_for -> for_anidado .)
    FOREACH         reduce using rule 58 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 58 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 58 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 58 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 58 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 58 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 58 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 58 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 58 (block_for -> for_anidado .)
    RKEY            reduce using rule 58 (block_for -> for_anidado .)


state 48

    (59) block_for -> for_each .

    VARIABLE        reduce using rule 59 (block_for -> for_each .)
    ACTION          reduce using rule 59 (block_for -> for_each .)
    IF              reduce using rule 59 (block_for -> for_each .)
    PRINT           reduce using rule 59 (block_for -> for_each .)
    CONST           reduce using rule 59 (block_for -> for_each .)
    LIST            reduce using rule 59 (block_for -> for_each .)
    TRY             reduce using rule 59 (block_for -> for_each .)
    WHILE           reduce using rule 59 (block_for -> for_each .)
    DO              reduce using rule 59 (block_for -> for_each .)
    DICTIONARY      reduce using rule 59 (block_for -> for_each .)
    STRING          reduce using rule 59 (block_for -> for_each .)
    FOR             reduce using rule 59 (block_for -> for_each .)
    FOREACH         reduce using rule 59 (block_for -> for_each .)
    PUBLIC          reduce using rule 59 (block_for -> for_each .)
    PRIVATE         reduce using rule 59 (block_for -> for_each .)
    CHARTYPE        reduce using rule 59 (block_for -> for_each .)
    STRINGTYPE      reduce using rule 59 (block_for -> for_each .)
    FLOATTYPE       reduce using rule 59 (block_for -> for_each .)
    DECIMALTYPE     reduce using rule 59 (block_for -> for_each .)
    INTTYPE         reduce using rule 59 (block_for -> for_each .)
    BOOLTYPE        reduce using rule 59 (block_for -> for_each .)
    RKEY            reduce using rule 59 (block_for -> for_each .)


state 49

    (22) constant_assignation -> access_modifiers . CONST all_asignations
    (20) variable_assignation -> access_modifiers . all_asignations
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 78
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69
    VARIABLE        shift and go to state 80

    all_asignations                shift and go to state 79
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53

state 50

    (23) constant_assignation -> CONST . all_asignations
    (24) constant_assignation -> CONST . data_type assignation_key_value COMMA some_assignation_constant
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69
    VARIABLE        shift and go to state 80

    all_asignations                shift and go to state 81
    data_type                      shift and go to state 82
    assignation_key_value          shift and go to state 53
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 51

    (21) variable_assignation -> all_asignations .

    VARIABLE        reduce using rule 21 (variable_assignation -> all_asignations .)
    ACTION          reduce using rule 21 (variable_assignation -> all_asignations .)
    IF              reduce using rule 21 (variable_assignation -> all_asignations .)
    PRINT           reduce using rule 21 (variable_assignation -> all_asignations .)
    CONST           reduce using rule 21 (variable_assignation -> all_asignations .)
    LIST            reduce using rule 21 (variable_assignation -> all_asignations .)
    TRY             reduce using rule 21 (variable_assignation -> all_asignations .)
    WHILE           reduce using rule 21 (variable_assignation -> all_asignations .)
    DO              reduce using rule 21 (variable_assignation -> all_asignations .)
    DICTIONARY      reduce using rule 21 (variable_assignation -> all_asignations .)
    STRING          reduce using rule 21 (variable_assignation -> all_asignations .)
    FOR             reduce using rule 21 (variable_assignation -> all_asignations .)
    FOREACH         reduce using rule 21 (variable_assignation -> all_asignations .)
    PUBLIC          reduce using rule 21 (variable_assignation -> all_asignations .)
    PRIVATE         reduce using rule 21 (variable_assignation -> all_asignations .)
    CHARTYPE        reduce using rule 21 (variable_assignation -> all_asignations .)
    STRINGTYPE      reduce using rule 21 (variable_assignation -> all_asignations .)
    FLOATTYPE       reduce using rule 21 (variable_assignation -> all_asignations .)
    DECIMALTYPE     reduce using rule 21 (variable_assignation -> all_asignations .)
    INTTYPE         reduce using rule 21 (variable_assignation -> all_asignations .)
    BOOLTYPE        reduce using rule 21 (variable_assignation -> all_asignations .)
    RKEY            reduce using rule 21 (variable_assignation -> all_asignations .)


state 52

    (27) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 80

    assignation_key_value          shift and go to state 83

state 53

    (30) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (31) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 84


state 54

    (118) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 85


state 55

    (40) data_type -> INTTYPE .

    VARIABLE        reduce using rule 40 (data_type -> INTTYPE .)


state 56

    (68) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 86


state 57

    (74) normal_while -> WHILE . LPARENT logic_operation RPARENT LKEY block_code RKEY

    LPARENT         shift and go to state 87


state 58

    (75) do_while -> DO . LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT

    LKEY            shift and go to state 88


state 59

    (105) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 89


state 60

    (62) for_anidado -> for_simple .

    VARIABLE        reduce using rule 62 (for_anidado -> for_simple .)
    ACTION          reduce using rule 62 (for_anidado -> for_simple .)
    IF              reduce using rule 62 (for_anidado -> for_simple .)
    PRINT           reduce using rule 62 (for_anidado -> for_simple .)
    CONST           reduce using rule 62 (for_anidado -> for_simple .)
    LIST            reduce using rule 62 (for_anidado -> for_simple .)
    TRY             reduce using rule 62 (for_anidado -> for_simple .)
    WHILE           reduce using rule 62 (for_anidado -> for_simple .)
    DO              reduce using rule 62 (for_anidado -> for_simple .)
    DICTIONARY      reduce using rule 62 (for_anidado -> for_simple .)
    STRING          reduce using rule 62 (for_anidado -> for_simple .)
    FOR             reduce using rule 62 (for_anidado -> for_simple .)
    FOREACH         reduce using rule 62 (for_anidado -> for_simple .)
    PUBLIC          reduce using rule 62 (for_anidado -> for_simple .)
    PRIVATE         reduce using rule 62 (for_anidado -> for_simple .)
    CHARTYPE        reduce using rule 62 (for_anidado -> for_simple .)
    STRINGTYPE      reduce using rule 62 (for_anidado -> for_simple .)
    FLOATTYPE       reduce using rule 62 (for_anidado -> for_simple .)
    DECIMALTYPE     reduce using rule 62 (for_anidado -> for_simple .)
    INTTYPE         reduce using rule 62 (for_anidado -> for_simple .)
    BOOLTYPE        reduce using rule 62 (for_anidado -> for_simple .)
    RKEY            reduce using rule 62 (for_anidado -> for_simple .)


state 61

    (63) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY

    LPARENT         shift and go to state 90


state 62

    (25) all_asignations -> assignation_with_datatype .

    VARIABLE        reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    ACTION          reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    IF              reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    PRINT           reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    CONST           reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    LIST            reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    TRY             reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    WHILE           reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    DO              reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    DICTIONARY      reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    STRING          reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    FOR             reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    FOREACH         reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    PUBLIC          reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    PRIVATE         reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    CHARTYPE        reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    STRINGTYPE      reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    FLOATTYPE       reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    INTTYPE         reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    BOOLTYPE        reduce using rule 25 (all_asignations -> assignation_with_datatype .)
    RKEY            reduce using rule 25 (all_asignations -> assignation_with_datatype .)


state 63

    (65) for_each -> FOREACH . LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY

    LPARENT         shift and go to state 91


state 64

    (71) access_modifiers -> PRIVATE .

    CONST           reduce using rule 71 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 71 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 71 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 71 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 71 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 71 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 71 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 71 (access_modifiers -> PRIVATE .)


state 65

    (26) all_asignations -> assignation_without_datatype .

    VARIABLE        reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    ACTION          reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    IF              reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    PRINT           reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    CONST           reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    LIST            reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    TRY             reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    WHILE           reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    DO              reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    DICTIONARY      reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    STRING          reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    FOR             reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    FOREACH         reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    PUBLIC          reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    PRIVATE         reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    CHARTYPE        reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    STRINGTYPE      reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    FLOATTYPE       reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    INTTYPE         reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    BOOLTYPE        reduce using rule 26 (all_asignations -> assignation_without_datatype .)
    RKEY            reduce using rule 26 (all_asignations -> assignation_without_datatype .)


state 66

    (36) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 36 (data_type -> CHARTYPE .)


state 67

    (38) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 38 (data_type -> FLOATTYPE .)


state 68

    (39) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 39 (data_type -> DECIMALTYPE .)


state 69

    (41) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 41 (data_type -> BOOLTYPE .)


state 70

    (130) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 92
    COUNT           shift and go to state 93
    ADD             shift and go to state 94
    REMOVEAT        shift and go to state 95


state 71

    (35) assignation_key_value -> VARIABLE ASSIGNATION . value
    (44) value -> . value_numeric
    (45) value -> . value_logic
    (46) value -> . value_string
    (47) value -> . read_data
    (55) value_numeric -> . INTEGER
    (56) value_numeric -> . FLOAT_NUMBER
    (57) value_numeric -> . DECIMAL_NUMBER
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE
    (48) value_string -> . STRING
    (49) value_string -> . CHAR
    (50) value_string -> . VARIABLE
    (51) value_string -> . READ LPARENT RPARENT
    (52) value_string -> . concatenation
    (43) read_data -> . READ RPARENT LPARENT
    (85) concatenation -> . STRING
    (86) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 102
    FLOAT_NUMBER    shift and go to state 103
    DECIMAL_NUMBER  shift and go to state 104
    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106
    STRING          shift and go to state 107
    CHAR            shift and go to state 108
    VARIABLE        shift and go to state 96
    READ            shift and go to state 109

    value                          shift and go to state 97
    value_numeric                  shift and go to state 98
    value_logic                    shift and go to state 99
    value_string                   shift and go to state 100
    read_data                      shift and go to state 101
    concatenation                  shift and go to state 110

state 72

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 3 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)


state 73

    (5) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 5 (all_block_code -> block_code all_block_code .)


state 74

    (141) declaration_lambda -> ACTION SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    STRINGTYPE      shift and go to state 111


state 75

    (76) block_if -> IF LPARENT . logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (83) logic_operation -> . value_logic
    (84) logic_operation -> . value_logic logic_operator logic_operation
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106

    logic_operation                shift and go to state 112
    value_logic                    shift and go to state 113

state 76

    (42) print_data -> PRINT RPARENT . STRING LPARENT DOTANDCOMMA

    STRING          shift and go to state 114


state 77

    (116) dict_func_put -> STRING DOT . PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> STRING DOT . REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    PUT             shift and go to state 115
    REMOVE          shift and go to state 116


state 78

    (22) constant_assignation -> access_modifiers CONST . all_asignations
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69
    VARIABLE        shift and go to state 80

    all_asignations                shift and go to state 117
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53

state 79

    (20) variable_assignation -> access_modifiers all_asignations .

    VARIABLE        reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    ACTION          reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    IF              reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    PRINT           reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    CONST           reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    LIST            reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    TRY             reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    WHILE           reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    DO              reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    DICTIONARY      reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    STRING          reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    FOR             reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    FOREACH         reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    PUBLIC          reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    PRIVATE         reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    CHARTYPE        reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    STRINGTYPE      reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    FLOATTYPE       reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    DECIMALTYPE     reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    INTTYPE         reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    BOOLTYPE        reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)
    RKEY            reduce using rule 20 (variable_assignation -> access_modifiers all_asignations .)


state 80

    (35) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 71


state 81

    (23) constant_assignation -> CONST all_asignations .

    VARIABLE        reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    ACTION          reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    IF              reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    PRINT           reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    CONST           reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    LIST            reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    TRY             reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    WHILE           reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    DO              reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    DICTIONARY      reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    STRING          reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    FOR             reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    FOREACH         reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    PUBLIC          reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    PRIVATE         reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    CHARTYPE        reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    STRINGTYPE      reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    FLOATTYPE       reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    DECIMALTYPE     reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    INTTYPE         reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    BOOLTYPE        reduce using rule 23 (constant_assignation -> CONST all_asignations .)
    RKEY            reduce using rule 23 (constant_assignation -> CONST all_asignations .)


state 82

    (24) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (27) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 80

    assignation_key_value          shift and go to state 118

state 83

    (27) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (28) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 119


state 84

    (30) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (31) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (32) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
    ACTION          reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRINT           reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 80
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

  ! VARIABLE        [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]

    assignation_key_value          shift and go to state 53
    assignation_without_datatype   shift and go to state 120
    assignation_with_datatype      shift and go to state 121
    data_type                      shift and go to state 52

state 85

    (118) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 122
    INTTYPE         shift and go to state 123


state 86

    (68) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 124
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 87

    (74) normal_while -> WHILE LPARENT . logic_operation RPARENT LKEY block_code RKEY
    (83) logic_operation -> . value_logic
    (84) logic_operation -> . value_logic logic_operator logic_operation
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106

    logic_operation                shift and go to state 125
    value_logic                    shift and go to state 113

state 88

    (75) do_while -> DO LKEY . block_code RKEY WHILE LPARENT logic_operation RPARENT
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 126
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 89

    (105) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 127


state 90

    (63) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    assignation_with_datatype      shift and go to state 128
    data_type                      shift and go to state 52

state 91

    (65) for_each -> FOREACH LPARENT . data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 129

state 92

    (130) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 130


state 93

    (131) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 131


state 94

    (132) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 132


state 95

    (133) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 133


state 96

    (50) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 50 (value_string -> VARIABLE .)
    COMMA           reduce using rule 50 (value_string -> VARIABLE .)


state 97

    (35) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 35 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 35 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 98

    (44) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 44 (value -> value_numeric .)
    COMMA           reduce using rule 44 (value -> value_numeric .)


state 99

    (45) value -> value_logic .

    DOTANDCOMMA     reduce using rule 45 (value -> value_logic .)
    COMMA           reduce using rule 45 (value -> value_logic .)


state 100

    (46) value -> value_string .

    DOTANDCOMMA     reduce using rule 46 (value -> value_string .)
    COMMA           reduce using rule 46 (value -> value_string .)


state 101

    (47) value -> read_data .

    DOTANDCOMMA     reduce using rule 47 (value -> read_data .)
    COMMA           reduce using rule 47 (value -> read_data .)


state 102

    (55) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 55 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 55 (value_numeric -> INTEGER .)


state 103

    (56) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 56 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 56 (value_numeric -> FLOAT_NUMBER .)


state 104

    (57) value_numeric -> DECIMAL_NUMBER .

    DOTANDCOMMA     reduce using rule 57 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 57 (value_numeric -> DECIMAL_NUMBER .)


state 105

    (53) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 53 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 53 (value_logic -> BOOLTRUE .)
    GREATER_THAN    reduce using rule 53 (value_logic -> BOOLTRUE .)
    SMALLER_THAN    reduce using rule 53 (value_logic -> BOOLTRUE .)
    EQUAL_COMPARATION reduce using rule 53 (value_logic -> BOOLTRUE .)
    INEQUALITY      reduce using rule 53 (value_logic -> BOOLTRUE .)
    GREATER_THAN_OR_EQUAL reduce using rule 53 (value_logic -> BOOLTRUE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 53 (value_logic -> BOOLTRUE .)
    LOGICAND        reduce using rule 53 (value_logic -> BOOLTRUE .)
    LOGICOR         reduce using rule 53 (value_logic -> BOOLTRUE .)
    LOGICNOT        reduce using rule 53 (value_logic -> BOOLTRUE .)
    LOGICXOR        reduce using rule 53 (value_logic -> BOOLTRUE .)
    RPARENT         reduce using rule 53 (value_logic -> BOOLTRUE .)


state 106

    (54) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 54 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 54 (value_logic -> BOOLFALSE .)
    GREATER_THAN    reduce using rule 54 (value_logic -> BOOLFALSE .)
    SMALLER_THAN    reduce using rule 54 (value_logic -> BOOLFALSE .)
    EQUAL_COMPARATION reduce using rule 54 (value_logic -> BOOLFALSE .)
    INEQUALITY      reduce using rule 54 (value_logic -> BOOLFALSE .)
    GREATER_THAN_OR_EQUAL reduce using rule 54 (value_logic -> BOOLFALSE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 54 (value_logic -> BOOLFALSE .)
    LOGICAND        reduce using rule 54 (value_logic -> BOOLFALSE .)
    LOGICOR         reduce using rule 54 (value_logic -> BOOLFALSE .)
    LOGICNOT        reduce using rule 54 (value_logic -> BOOLFALSE .)
    LOGICXOR        reduce using rule 54 (value_logic -> BOOLFALSE .)
    RPARENT         reduce using rule 54 (value_logic -> BOOLFALSE .)


state 107

    (48) value_string -> STRING .
    (85) concatenation -> STRING .
    (86) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 48 (value_string -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 48 (value_string -> STRING .)
    DOTANDCOMMA     reduce using rule 48 (value_string -> STRING .)
    COMMA           reduce using rule 48 (value_string -> STRING .)
    PLUS            shift and go to state 134

  ! DOTANDCOMMA     [ reduce using rule 85 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 85 (concatenation -> STRING .) ]


state 108

    (49) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 49 (value_string -> CHAR .)
    COMMA           reduce using rule 49 (value_string -> CHAR .)


state 109

    (51) value_string -> READ . LPARENT RPARENT
    (43) read_data -> READ . RPARENT LPARENT

    LPARENT         shift and go to state 135
    RPARENT         shift and go to state 136


state 110

    (52) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 52 (value_string -> concatenation .)
    COMMA           reduce using rule 52 (value_string -> concatenation .)


state 111

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    GREATER_THAN    shift and go to state 137


state 112

    (76) block_if -> IF LPARENT logic_operation . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 138


state 113

    (83) logic_operation -> value_logic .
    (84) logic_operation -> value_logic . logic_operator logic_operation
    (87) logic_operator -> . GREATER_THAN
    (88) logic_operator -> . SMALLER_THAN
    (89) logic_operator -> . EQUAL_COMPARATION
    (90) logic_operator -> . INEQUALITY
    (91) logic_operator -> . GREATER_THAN_OR_EQUAL
    (92) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (93) logic_operator -> . LOGICAND
    (94) logic_operator -> . LOGICOR
    (95) logic_operator -> . LOGICNOT
    (96) logic_operator -> . LOGICXOR

    RPARENT         reduce using rule 83 (logic_operation -> value_logic .)
    DOTANDCOMMA     reduce using rule 83 (logic_operation -> value_logic .)
    GREATER_THAN    shift and go to state 140
    SMALLER_THAN    shift and go to state 141
    EQUAL_COMPARATION shift and go to state 142
    INEQUALITY      shift and go to state 143
    GREATER_THAN_OR_EQUAL shift and go to state 144
    SMALLER_THAN_OR_EQUAL shift and go to state 145
    LOGICAND        shift and go to state 146
    LOGICOR         shift and go to state 147
    LOGICNOT        shift and go to state 148
    LOGICXOR        shift and go to state 149

    logic_operator                 shift and go to state 139

state 114

    (42) print_data -> PRINT RPARENT STRING . LPARENT DOTANDCOMMA

    LPARENT         shift and go to state 150


state 115

    (116) dict_func_put -> STRING DOT PUT . LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 151


state 116

    (117) dict_func_remove -> STRING DOT REMOVE . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 152


state 117

    (22) constant_assignation -> access_modifiers CONST all_asignations .

    VARIABLE        reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    ACTION          reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    IF              reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    PRINT           reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    CONST           reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    LIST            reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    TRY             reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    WHILE           reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    DO              reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    DICTIONARY      reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRING          reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    FOR             reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    FOREACH         reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    PUBLIC          reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    PRIVATE         reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    CHARTYPE        reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRINGTYPE      reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    FLOATTYPE       reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    DECIMALTYPE     reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    INTTYPE         reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    BOOLTYPE        reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)
    RKEY            reduce using rule 22 (constant_assignation -> access_modifiers CONST all_asignations .)


state 118

    (24) constant_assignation -> CONST data_type assignation_key_value . COMMA some_assignation_constant
    (27) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (28) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    COMMA           shift and go to state 153
    DOTANDCOMMA     shift and go to state 119


state 119

    (27) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .
    (28) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (29) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ACTION          reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRINT           reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    BOOLTRUE        reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    BOOLFALSE       reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69
    VARIABLE        shift and go to state 80

  ! VARIABLE        [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]

    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    assignation_with_datatype      shift and go to state 154
    assignation_without_datatype   shift and go to state 155

state 120

    (31) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRINT           reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    WHILE           reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DO              reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FOR             reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FOREACH         reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTRUE        reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLFALSE       reduce using rule 31 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 121

    (32) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRINT           reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    WHILE           reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DO              reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRING          reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FOR             reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FOREACH         reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTRUE        reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLFALSE       reduce using rule 32 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 122

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 156


state 123

    (119) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 157


state 124

    (68) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 158


state 125

    (74) normal_while -> WHILE LPARENT logic_operation . RPARENT LKEY block_code RKEY

    RPARENT         shift and go to state 159


state 126

    (75) do_while -> DO LKEY block_code . RKEY WHILE LPARENT logic_operation RPARENT

    RKEY            shift and go to state 160


state 127

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 161


state 128

    (63) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (83) logic_operation -> . value_logic
    (84) logic_operation -> . value_logic logic_operator logic_operation
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106

    logic_operation                shift and go to state 162
    value_logic                    shift and go to state 113

state 129

    (65) for_each -> FOREACH LPARENT data_type . VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY

    VARIABLE        shift and go to state 163


state 130

    (130) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 164


state 131

    (131) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 165


state 132

    (132) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 166


state 133

    (133) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 167


state 134

    (86) concatenation -> STRING PLUS . concatenation
    (85) concatenation -> . STRING
    (86) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 168

    concatenation                  shift and go to state 169

state 135

    (51) value_string -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 170


state 136

    (43) read_data -> READ RPARENT . LPARENT

    LPARENT         shift and go to state 171


state 137

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    VARIABLE        shift and go to state 172


state 138

    (76) block_if -> IF LPARENT logic_operation RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 173


state 139

    (84) logic_operation -> value_logic logic_operator . logic_operation
    (83) logic_operation -> . value_logic
    (84) logic_operation -> . value_logic logic_operator logic_operation
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106

    value_logic                    shift and go to state 113
    logic_operation                shift and go to state 174

state 140

    (87) logic_operator -> GREATER_THAN .

    BOOLTRUE        reduce using rule 87 (logic_operator -> GREATER_THAN .)
    BOOLFALSE       reduce using rule 87 (logic_operator -> GREATER_THAN .)


state 141

    (88) logic_operator -> SMALLER_THAN .

    BOOLTRUE        reduce using rule 88 (logic_operator -> SMALLER_THAN .)
    BOOLFALSE       reduce using rule 88 (logic_operator -> SMALLER_THAN .)


state 142

    (89) logic_operator -> EQUAL_COMPARATION .

    BOOLTRUE        reduce using rule 89 (logic_operator -> EQUAL_COMPARATION .)
    BOOLFALSE       reduce using rule 89 (logic_operator -> EQUAL_COMPARATION .)


state 143

    (90) logic_operator -> INEQUALITY .

    BOOLTRUE        reduce using rule 90 (logic_operator -> INEQUALITY .)
    BOOLFALSE       reduce using rule 90 (logic_operator -> INEQUALITY .)


state 144

    (91) logic_operator -> GREATER_THAN_OR_EQUAL .

    BOOLTRUE        reduce using rule 91 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    BOOLFALSE       reduce using rule 91 (logic_operator -> GREATER_THAN_OR_EQUAL .)


state 145

    (92) logic_operator -> SMALLER_THAN_OR_EQUAL .

    BOOLTRUE        reduce using rule 92 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    BOOLFALSE       reduce using rule 92 (logic_operator -> SMALLER_THAN_OR_EQUAL .)


state 146

    (93) logic_operator -> LOGICAND .

    BOOLTRUE        reduce using rule 93 (logic_operator -> LOGICAND .)
    BOOLFALSE       reduce using rule 93 (logic_operator -> LOGICAND .)


state 147

    (94) logic_operator -> LOGICOR .

    BOOLTRUE        reduce using rule 94 (logic_operator -> LOGICOR .)
    BOOLFALSE       reduce using rule 94 (logic_operator -> LOGICOR .)


state 148

    (95) logic_operator -> LOGICNOT .

    BOOLTRUE        reduce using rule 95 (logic_operator -> LOGICNOT .)
    BOOLFALSE       reduce using rule 95 (logic_operator -> LOGICNOT .)


state 149

    (96) logic_operator -> LOGICXOR .

    BOOLTRUE        reduce using rule 96 (logic_operator -> LOGICXOR .)
    BOOLFALSE       reduce using rule 96 (logic_operator -> LOGICXOR .)


state 150

    (42) print_data -> PRINT RPARENT STRING LPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 175


state 151

    (116) dict_func_put -> STRING DOT PUT LPARENT . STRING COMMA STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 176


state 152

    (117) dict_func_remove -> STRING DOT REMOVE LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 177


state 153

    (24) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (33) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (34) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 80

    assignation_key_value          shift and go to state 178
    some_assignation_constant      shift and go to state 179

state 154

    (28) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRINT           reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    WHILE           reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DO              reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRING          reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FOR             reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FOREACH         reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTRUE        reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLFALSE       reduce using rule 28 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 155

    (29) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRINT           reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    WHILE           reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DO              reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FOR             reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FOREACH         reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTRUE        reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLFALSE       reduce using rule 29 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 156

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 180


state 157

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 181


state 158

    (68) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 182


state 159

    (74) normal_while -> WHILE LPARENT logic_operation RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 183


state 160

    (75) do_while -> DO LKEY block_code RKEY . WHILE LPARENT logic_operation RPARENT

    WHILE           shift and go to state 184


state 161

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 185


state 162

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY

    DOTANDCOMMA     shift and go to state 186


state 163

    (65) for_each -> FOREACH LPARENT data_type VARIABLE . IN VARIABLE RPARENT LKEY block_code RKEY

    IN              shift and go to state 187


state 164

    (130) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 188


state 165

    (131) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 189


state 166

    (132) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 190


state 167

    (133) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 191


state 168

    (85) concatenation -> STRING .
    (86) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 85 (concatenation -> STRING .)
    COMMA           reduce using rule 85 (concatenation -> STRING .)
    PLUS            shift and go to state 134


state 169

    (86) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 86 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 86 (concatenation -> STRING PLUS concatenation .)


state 170

    (51) value_string -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 51 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 51 (value_string -> READ LPARENT RPARENT .)


state 171

    (43) read_data -> READ RPARENT LPARENT .

    DOTANDCOMMA     reduce using rule 43 (read_data -> READ RPARENT LPARENT .)
    COMMA           reduce using rule 43 (read_data -> READ RPARENT LPARENT .)


state 172

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

    ASSIGNATION     shift and go to state 192


state 173

    (76) block_if -> IF LPARENT logic_operation RPARENT LKEY . not_yes_nested_if RKEY other_if
    (79) not_yes_nested_if -> . block_if
    (80) not_yes_nested_if -> . block_code
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 44
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    not_yes_nested_if              shift and go to state 193
    block_if                       shift and go to state 194
    block_code                     shift and go to state 195
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 174

    (84) logic_operation -> value_logic logic_operator logic_operation .

    RPARENT         reduce using rule 84 (logic_operation -> value_logic logic_operator logic_operation .)
    DOTANDCOMMA     reduce using rule 84 (logic_operation -> value_logic logic_operator logic_operation .)


state 175

    (42) print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    IF              reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    CONST           reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    LIST            reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    TRY             reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    DO              reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    STRING          reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    FOR             reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 42 (print_data -> PRINT RPARENT STRING LPARENT DOTANDCOMMA .)


state 176

    (116) dict_func_put -> STRING DOT PUT LPARENT STRING . COMMA STRING RPARENT DOTANDCOMMA

    COMMA           shift and go to state 196


state 177

    (117) dict_func_remove -> STRING DOT REMOVE LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 197


state 178

    (33) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (34) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 198
    COMMA           shift and go to state 199


state 179

    (24) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PRINT           reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    WHILE           reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DO              reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRING          reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FOR             reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FOREACH         reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 24 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)


state 180

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 200


state 181

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 201


state 182

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LPARENT         shift and go to state 202


state 183

    (74) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 203
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 184

    (75) do_while -> DO LKEY block_code RKEY WHILE . LPARENT logic_operation RPARENT

    LPARENT         shift and go to state 204


state 185

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 205


state 186

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY block_code RKEY

    VARIABLE        shift and go to state 206


state 187

    (65) for_each -> FOREACH LPARENT data_type VARIABLE IN . VARIABLE RPARENT LKEY block_code RKEY

    VARIABLE        shift and go to state 207


state 188

    (130) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 130 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)


state 189

    (131) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 131 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)


state 190

    (132) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 208


state 191

    (133) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 209


state 192

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . VARIABLE ARROW LKEY block_code RKEY

    VARIABLE        shift and go to state 210


state 193

    (76) block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 211


state 194

    (79) not_yes_nested_if -> block_if .
    (15) block_code -> block_if .

  ! reduce/reduce conflict for RKEY resolved using rule 15 (block_code -> block_if .)
    RKEY            reduce using rule 15 (block_code -> block_if .)

  ! RKEY            [ reduce using rule 79 (not_yes_nested_if -> block_if .) ]


state 195

    (80) not_yes_nested_if -> block_code .

    RKEY            reduce using rule 80 (not_yes_nested_if -> block_code .)


state 196

    (116) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 212


state 197

    (117) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 213


state 198

    (33) some_assignation_constant -> assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    ACTION          reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PRINT           reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 33 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)


state 199

    (34) some_assignation_constant -> assignation_key_value COMMA . some_assignation_constant
    (33) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (34) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 80

    assignation_key_value          shift and go to state 178
    some_assignation_constant      shift and go to state 214

state 200

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    NEW             shift and go to state 215


state 201

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    NEW             shift and go to state 216


state 202

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    EXCEPTION       shift and go to state 217


state 203

    (74) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 218


state 204

    (75) do_while -> DO LKEY block_code RKEY WHILE LPARENT . logic_operation RPARENT
    (83) logic_operation -> . value_logic
    (84) logic_operation -> . value_logic logic_operator logic_operation
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106

    logic_operation                shift and go to state 219
    value_logic                    shift and go to state 113

state 205

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 220


state 206

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY block_code RKEY

    INCREMENT       shift and go to state 221
    DECREMENT       shift and go to state 222


state 207

    (65) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE . RPARENT LKEY block_code RKEY

    RPARENT         shift and go to state 223


state 208

    (132) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 132 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 209

    (133) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    IF              reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DO              reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 133 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)


state 210

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY block_code RKEY

    ARROW           shift and go to state 224


state 211

    (76) block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY . other_if
    (77) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (78) other_if -> . ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 226
    ELSE_IF         shift and go to state 227

    other_if                       shift and go to state 225

state 212

    (116) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 228


state 213

    (117) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 117 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)


state 214

    (34) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PRINT           reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    WHILE           reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DO              reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRING          reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FOR             reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FOREACH         reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 34 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)


state 215

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    LIST            shift and go to state 229


state 216

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 230


state 217

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 231


state 218

    (74) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .

    VARIABLE        reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PRINT           reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    FOR             reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    FOREACH         reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 74 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)


state 219

    (75) do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation . RPARENT

    RPARENT         shift and go to state 232


state 220

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 233


state 221

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY block_code RKEY

    RPARENT         shift and go to state 234


state 222

    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY for_anidado RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY block_code RKEY

    RPARENT         shift and go to state 235


state 223

    (65) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 236


state 224

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY block_code RKEY

    LKEY            shift and go to state 237


state 225

    (76) block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRINT           reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    WHILE           reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DO              reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRING          reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FOR             reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FOREACH         reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 76 (block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 226

    (77) other_if -> ELSE . LKEY not_yes_nested_if RKEY

    LKEY            shift and go to state 238


state 227

    (78) other_if -> ELSE_IF . LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 239


state 228

    (116) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 240


state 229

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 241


state 230

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 242


state 231

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 243


state 232

    (75) do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .

    VARIABLE        reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    ACTION          reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    IF              reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRINT           reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CONST           reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    LIST            reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    TRY             reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    WHILE           reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DO              reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DICTIONARY      reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRING          reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOR             reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOREACH         reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PUBLIC          reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRIVATE         reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CHARTYPE        reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRINGTYPE      reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOATTYPE       reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMALTYPE     reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTTYPE         reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    BOOLTYPE        reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RKEY            reduce using rule 75 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)


state 233

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 244


state 234

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 245


state 235

    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY for_anidado RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 246


state 236

    (65) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 52
    block_code                     shift and go to state 247
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 237

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 248
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 238

    (77) other_if -> ELSE LKEY . not_yes_nested_if RKEY
    (79) not_yes_nested_if -> . block_if
    (80) not_yes_nested_if -> . block_code
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 44
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    not_yes_nested_if              shift and go to state 249
    block_if                       shift and go to state 194
    block_code                     shift and go to state 195
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 239

    (78) other_if -> ELSE_IF LPARENT . logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (83) logic_operation -> . value_logic
    (84) logic_operation -> . value_logic logic_operator logic_operation
    (53) value_logic -> . BOOLTRUE
    (54) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 105
    BOOLFALSE       shift and go to state 106

    logic_operation                shift and go to state 250
    value_logic                    shift and go to state 113

state 240

    (116) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 116 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)


state 241

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 251


state 242

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 252


state 243

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 253


state 244

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 254


state 245

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . for_anidado RKEY
    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . block_code RKEY
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    FOR             shift and go to state 61
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    assignation_with_datatype      shift and go to state 62
    for_anidado                    shift and go to state 255
    block_code                     shift and go to state 256
    for_simple                     shift and go to state 60
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    assignation_without_datatype   shift and go to state 65

state 246

    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . for_anidado RKEY
    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . block_code RKEY
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    FOR             shift and go to state 61
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    assignation_with_datatype      shift and go to state 62
    for_anidado                    shift and go to state 257
    block_code                     shift and go to state 258
    for_simple                     shift and go to state 60
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    assignation_without_datatype   shift and go to state 65

state 247

    (65) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 259


state 248

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code . RKEY

    RKEY            shift and go to state 260


state 249

    (77) other_if -> ELSE LKEY not_yes_nested_if . RKEY

    RKEY            shift and go to state 261


state 250

    (78) other_if -> ELSE_IF LPARENT logic_operation . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 262


state 251

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 263


state 252

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 264


state 253

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 265
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 254

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 266


state 255

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado . RKEY
    (58) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 267

  ! RKEY            [ reduce using rule 58 (block_for -> for_anidado .) ]


state 256

    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 268


state 257

    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado . RKEY
    (58) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 269

  ! RKEY            [ reduce using rule 58 (block_for -> for_anidado .) ]


state 258

    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 270


state 259

    (65) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .

    VARIABLE        reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    PRINT           reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    FOR             reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    FOREACH         reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 65 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY .)


state 260

    (141) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .

    VARIABLE        reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    ACTION          reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    IF              reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    PRINT           reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    CONST           reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    LIST            reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    TRY             reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    WHILE           reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    DO              reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    STRING          reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    FOR             reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    FOREACH         reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    PUBLIC          reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    PRIVATE         reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    INTTYPE         reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)
    RKEY            reduce using rule 141 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY .)


state 261

    (77) other_if -> ELSE LKEY not_yes_nested_if RKEY .

    VARIABLE        reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    ACTION          reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    IF              reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PRINT           reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CONST           reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    LIST            reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    TRY             reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    WHILE           reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DO              reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DICTIONARY      reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRING          reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FOR             reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FOREACH         reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PUBLIC          reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PRIVATE         reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CHARTYPE        reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRINGTYPE      reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FLOATTYPE       reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DECIMALTYPE     reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    INTTYPE         reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    BOOLTYPE        reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    RKEY            reduce using rule 77 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)


state 262

    (78) other_if -> ELSE_IF LPARENT logic_operation RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 271


state 263

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 272


state 264

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 273


state 265

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 274


state 266

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY dictionary_value RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 275
    LKEY            shift and go to state 276


state 267

    (63) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .

    VARIABLE        reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    ACTION          reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    IF              reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PRINT           reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    STRING          reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 63 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)


state 268

    (60) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .

    VARIABLE        reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    PRINT           reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    FOR             reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    FOREACH         reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 60 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY .)


state 269

    (64) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .

    VARIABLE        reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    ACTION          reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    IF              reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PRINT           reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    STRING          reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 64 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)


state 270

    (61) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .

    VARIABLE        reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    PRINT           reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    FOR             reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    FOREACH         reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 61 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY .)


state 271

    (78) other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY . not_yes_nested_if RKEY other_if
    (79) not_yes_nested_if -> . block_if
    (80) not_yes_nested_if -> . block_code
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 44
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    not_yes_nested_if              shift and go to state 277
    block_if                       shift and go to state 194
    block_code                     shift and go to state 195
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 272

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY

    RPARENT         shift and go to state 278


state 273

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY

    RPARENT         shift and go to state 279


state 274

    (68) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .
    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY . FINALLY LKEY block_code RKEY

    VARIABLE        reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PRINT           reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FOR             reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FOREACH         reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 68 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FINALLY         shift and go to state 280


state 275

    (105) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 105 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 276

    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . dictionary_value RKEY DOTANDCOMMA
    (107) dictionary_value -> . LKEY key_value_pair RKEY

    LKEY            shift and go to state 281

    dictionary_value               shift and go to state 282

state 277

    (78) other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 283


state 278

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY

    DOTANDCOMMA     shift and go to state 284
    LKEY            shift and go to state 285


state 279

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY

    DOTANDCOMMA     shift and go to state 286
    LKEY            shift and go to state 287


state 280

    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY . LKEY block_code RKEY

    LKEY            shift and go to state 288


state 281

    (107) dictionary_value -> LKEY . key_value_pair RKEY
    (110) key_value_pair -> . STRING DOUBLEPOINT valueHash

    STRING          shift and go to state 290

    key_value_pair                 shift and go to state 289

state 282

    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value . RKEY DOTANDCOMMA

    RKEY            shift and go to state 291


state 283

    (78) other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY . other_if
    (77) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (78) other_if -> . ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 226
    ELSE_IF         shift and go to state 227

    other_if                       shift and go to state 292

state 284

    (118) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 118 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 285

    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY
    (122) strings_list -> . STRING
    (123) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 294

    strings_list                   shift and go to state 293

state 286

    (119) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 119 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 287

    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY
    (124) ints_list -> . INTEGER
    (125) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 296

    ints_list                      shift and go to state 295

state 288

    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) block_code -> . print_data
    (17) block_code -> . block_for
    (18) def_const_or_var -> . constant_assignation
    (19) def_const_or_var -> . variable_assignation
    (112) estruct_of_data -> . list_empty
    (113) estruct_of_data -> . list_full
    (66) block_try_catch -> . try_catch_simply
    (67) block_try_catch -> . try_catch_finally
    (72) block_while -> . normal_while
    (73) block_while -> . do_while
    (103) dict_estruct -> . dict_empty
    (104) dict_estruct -> . dict_full
    (114) functions_dict -> . dict_func_put
    (115) functions_dict -> . dict_func_remove
    (126) functions_list -> . list_func_clear
    (127) functions_list -> . list_func_count
    (128) functions_list -> . list_func_add
    (129) functions_list -> . list_func_removeat
    (141) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY
    (76) block_if -> . IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
    (42) print_data -> . PRINT RPARENT STRING LPARENT DOTANDCOMMA
    (58) block_for -> . for_anidado
    (59) block_for -> . for_each
    (22) constant_assignation -> . access_modifiers CONST all_asignations
    (23) constant_assignation -> . CONST all_asignations
    (24) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (20) variable_assignation -> . access_modifiers all_asignations
    (21) variable_assignation -> . all_asignations
    (118) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (119) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (120) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (121) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (68) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (69) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (74) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (75) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (105) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (116) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (117) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (130) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (131) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (132) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (133) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (62) for_anidado -> . for_simple
    (63) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (64) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (65) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY block_code RKEY
    (70) access_modifiers -> . PUBLIC
    (71) access_modifiers -> . PRIVATE
    (25) all_asignations -> . assignation_with_datatype
    (26) all_asignations -> . assignation_without_datatype
    (60) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY block_code RKEY
    (61) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY block_code RKEY
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (28) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (29) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (31) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (32) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (36) data_type -> . CHARTYPE
    (37) data_type -> . STRINGTYPE
    (38) data_type -> . FLOATTYPE
    (39) data_type -> . DECIMALTYPE
    (40) data_type -> . INTTYPE
    (41) data_type -> . BOOLTYPE
    (35) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 42
    IF              shift and go to state 44
    PRINT           shift and go to state 45
    CONST           shift and go to state 50
    LIST            shift and go to state 54
    TRY             shift and go to state 56
    WHILE           shift and go to state 57
    DO              shift and go to state 58
    DICTIONARY      shift and go to state 59
    STRING          shift and go to state 46
    FOR             shift and go to state 61
    FOREACH         shift and go to state 63
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 64
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 43
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 55
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 297
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    print_data                     shift and go to state 24
    block_for                      shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    list_empty                     shift and go to state 28
    list_full                      shift and go to state 29
    try_catch_simply               shift and go to state 30
    try_catch_finally              shift and go to state 31
    normal_while                   shift and go to state 32
    do_while                       shift and go to state 33
    dict_empty                     shift and go to state 34
    dict_full                      shift and go to state 35
    dict_func_put                  shift and go to state 36
    dict_func_remove               shift and go to state 37
    list_func_clear                shift and go to state 38
    list_func_count                shift and go to state 39
    list_func_add                  shift and go to state 40
    list_func_removeat             shift and go to state 41
    for_anidado                    shift and go to state 47
    for_each                       shift and go to state 48
    access_modifiers               shift and go to state 49
    all_asignations                shift and go to state 51
    data_type                      shift and go to state 52
    assignation_key_value          shift and go to state 53
    for_simple                     shift and go to state 60
    assignation_with_datatype      shift and go to state 62
    assignation_without_datatype   shift and go to state 65

state 289

    (107) dictionary_value -> LKEY key_value_pair . RKEY

    RKEY            shift and go to state 298


state 290

    (110) key_value_pair -> STRING . DOUBLEPOINT valueHash

    DOUBLEPOINT     shift and go to state 299


state 291

    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 300


state 292

    (78) other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRINT           reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    WHILE           reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DO              reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRING          reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FOR             reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FOREACH         reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 78 (other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 293

    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY

    RKEY            shift and go to state 301


state 294

    (122) strings_list -> STRING .
    (123) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 122 (strings_list -> STRING .)
    COMMA           shift and go to state 302


state 295

    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY

    RKEY            shift and go to state 303


state 296

    (124) ints_list -> INTEGER .
    (125) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 124 (ints_list -> INTEGER .)
    COMMA           shift and go to state 304


state 297

    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code . RKEY

    RKEY            shift and go to state 305


state 298

    (107) dictionary_value -> LKEY key_value_pair RKEY .

    RKEY            reduce using rule 107 (dictionary_value -> LKEY key_value_pair RKEY .)


state 299

    (110) key_value_pair -> STRING DOUBLEPOINT . valueHash
    (111) valueHash -> . INTTYPE

    INTTYPE         shift and go to state 307

    valueHash                      shift and go to state 306

state 300

    (106) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .

    VARIABLE        reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    ACTION          reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    IF              reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRINT           reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CONST           reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    LIST            reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    TRY             reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DO              reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRING          reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FOR             reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 106 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)


state 301

    (120) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .

    VARIABLE        reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    ACTION          reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    IF              reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRINT           reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CONST           reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    LIST            reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    TRY             reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    WHILE           reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DO              reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DICTIONARY      reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRING          reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FOR             reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FOREACH         reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PUBLIC          reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRIVATE         reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CHARTYPE        reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRINGTYPE      reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOATTYPE       reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMALTYPE     reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTTYPE         reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    BOOLTYPE        reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    RKEY            reduce using rule 120 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)


state 302

    (123) strings_list -> STRING COMMA . strings_list
    (122) strings_list -> . STRING
    (123) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 294

    strings_list                   shift and go to state 308

state 303

    (121) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .

    VARIABLE        reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    ACTION          reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    IF              reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRINT           reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CONST           reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    LIST            reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    TRY             reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    WHILE           reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DO              reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DICTIONARY      reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRING          reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FOR             reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FOREACH         reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PUBLIC          reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRIVATE         reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CHARTYPE        reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRINGTYPE      reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOATTYPE       reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMALTYPE     reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTTYPE         reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    BOOLTYPE        reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    RKEY            reduce using rule 121 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)


state 304

    (125) ints_list -> INTEGER COMMA . ints_list
    (124) ints_list -> . INTEGER
    (125) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 296

    ints_list                      shift and go to state 309

state 305

    (69) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .

    VARIABLE        reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    ACTION          reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    IF              reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PRINT           reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CONST           reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    LIST            reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    TRY             reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    WHILE           reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DO              reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRING          reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    FOR             reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    FOREACH         reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PUBLIC          reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PRIVATE         reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    INTTYPE         reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    RKEY            reduce using rule 69 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)


state 306

    (110) key_value_pair -> STRING DOUBLEPOINT valueHash .

    RKEY            reduce using rule 110 (key_value_pair -> STRING DOUBLEPOINT valueHash .)


state 307

    (111) valueHash -> INTTYPE .

    RKEY            reduce using rule 111 (valueHash -> INTTYPE .)


state 308

    (123) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 123 (strings_list -> STRING COMMA strings_list .)


state 309

    (125) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 125 (ints_list -> INTEGER COMMA ints_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 84 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 84 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 84 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 84 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 84 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 84 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 84 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 119 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 119 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 119 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 119 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 119 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 119 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 119 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 255 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 257 resolved as shift
WARNING: reduce/reduce conflict in state 107 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 107
WARNING: reduce/reduce conflict in state 194 resolved using rule (block_code -> block_if)
WARNING: rejected rule (not_yes_nested_if -> block_if) in state 194
WARNING: Rule (not_yes_nested_if -> block_if) is never reduced
