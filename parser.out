Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLE_QUOTATION_MARKS
    ID
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> USING SYSTEM DOTANDCOMMA block_publicClass
Rule 2     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 3     block_code -> def_const_or_var
Rule 4     block_code -> print_data
Rule 5     block_code -> read_data
Rule 6     block_code -> arithmetic_operation
Rule 7     block_code -> logic_operation
Rule 8     block_code -> lists
Rule 9     block_code -> functions_list
Rule 10    block_code -> dict_estruct
Rule 11    block_code -> functions_dict
Rule 12    block_code -> block_for
Rule 13    block_code -> block_try_catch
Rule 14    block_code -> block_while
Rule 15    all_block_code -> block_code
Rule 16    all_block_code -> block_code all_block_code
Rule 17    print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA
Rule 18    read_data -> READ LPARENT RPARENT DOTANDCOMMA
Rule 19    concatenation -> STRING
Rule 20    concatenation -> STRING PLUS concatenation
Rule 21    value -> value_numeric
Rule 22    value -> value_logic
Rule 23    value -> value_string
Rule 24    value -> read_data
Rule 25    value_string -> STRING
Rule 26    value_string -> CHAR
Rule 27    value_string -> VARIABLE
Rule 28    value_string -> concatenation
Rule 29    value_logic -> BOOLTRUE
Rule 30    value_logic -> BOOLFALSE
Rule 31    value_logic -> logic_operation
Rule 32    value_numeric -> INTEGER
Rule 33    value_numeric -> FLOAT_NUMBER
Rule 34    value_numeric -> DECIMAL_NUMBER
Rule 35    value_numeric -> arithmetic_operation
Rule 36    arithmetic_operation -> value_numeric
Rule 37    arithmetic_operation -> VARIABLE
Rule 38    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 39    arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation
Rule 40    logic_operation -> value_numeric
Rule 41    logic_operation -> VARIABLE
Rule 42    logic_operation -> value_numeric logic_operator logic_operation
Rule 43    logic_operation -> VARIABLE logic_operator logic_operation
Rule 44    logic_operator -> GREATER_THAN
Rule 45    logic_operator -> SMALLER_THAN
Rule 46    logic_operator -> EQUAL_COMPARATION
Rule 47    logic_operator -> INEQUALITY
Rule 48    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 49    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 50    logic_operator -> LOGICAND
Rule 51    logic_operator -> LOGICOR
Rule 52    logic_operator -> LOGICNOT
Rule 53    logic_operator -> LOGICXOR
Rule 54    arithmetic_operator -> PLUS
Rule 55    arithmetic_operator -> MINUS
Rule 56    arithmetic_operator -> TIMES
Rule 57    arithmetic_operator -> DIVIDE
Rule 58    arithmetic_operator -> PERCENT
Rule 59    access_modifiers -> PUBLIC
Rule 60    access_modifiers -> PRIVATE
Rule 61    def_const_or_var -> constant_assignation
Rule 62    def_const_or_var -> variable_assignation
Rule 63    def_const_or_var -> late_initialization
Rule 64    constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
Rule 65    constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA
Rule 66    constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 67    constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 68    variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA
Rule 69    variable_assignation -> data_type assignation_key_value DOTANDCOMMA
Rule 70    variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
Rule 71    variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA
Rule 72    late_initialization -> access_modifiers VARIABLE DOTANDCOMMA
Rule 73    late_initialization -> VARIABLE DOTANDCOMMA
Rule 74    late_initialization -> assignation_key_value DOTANDCOMMA
Rule 75    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 76    assignation_key_value -> READ LPARENT RPARENT
Rule 77    assignation_key_value_multiple -> VARIABLE ASSIGNATION value
Rule 78    assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple
Rule 79    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 80    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 81    data_type -> CHARTYPE
Rule 82    data_type -> STRINGTYPE
Rule 83    data_type -> FLOATTYPE
Rule 84    data_type -> DECIMALTYPE
Rule 85    data_type -> INTTYPE
Rule 86    data_type -> BOOLTYPE
Rule 87    block_for -> for_anidado
Rule 88    block_for -> for_each
Rule 89    for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
Rule 90    for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
Rule 91    for_anidado -> for_simple
Rule 92    for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
Rule 93    for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
Rule 94    for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
Rule 95    block_try_catch -> try_catch_simply
Rule 96    block_try_catch -> try_catch_finally
Rule 97    try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
Rule 98    try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
Rule 99    block_while -> normal_while
Rule 100   block_while -> do_while
Rule 101   normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
Rule 102   do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 103   block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 104   other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 105   other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 106   not_yes_nested_if -> block_if
Rule 107   not_yes_nested_if -> block_code
Rule 108   dict_estruct -> dict_empty
Rule 109   dict_estruct -> dict_full
Rule 110   dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 111   dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 112   dictionary_value -> LKEY key_value_pair RKEY
Rule 113   key_value_pairs -> key_value_pair
Rule 114   key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 115   key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 116   valueHash -> INTTYPE
Rule 117   estruct_of_data -> list_empty
Rule 118   estruct_of_data -> list_full
Rule 119   functions_dict -> dict_func_put
Rule 120   functions_dict -> dict_func_remove
Rule 121   dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
Rule 122   dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
Rule 123   lists -> list_empty
Rule 124   lists -> list_full
Rule 125   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 126   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 127   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 128   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 129   strings_list -> STRING
Rule 130   strings_list -> STRING COMMA strings_list
Rule 131   ints_list -> INTEGER
Rule 132   ints_list -> INTEGER COMMA ints_list
Rule 133   functions_list -> list_func_clear
Rule 134   functions_list -> list_func_count
Rule 135   functions_list -> list_func_add
Rule 136   functions_list -> list_func_removeat
Rule 137   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 138   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 139   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 140   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 141   stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
Rule 142   stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
Rule 143   stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
Rule 144   queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 145   queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
Rule 146   queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
Rule 147   queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 148   queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
Rule 149   queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
Rule 150   declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
Rule 151   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

Terminals, with rules where they appear

ACTION               : 151
ADD                  : 139
ADDITION_ASSIGNMENT  : 
ARROW                : 150 151
ASSIGNATION          : 75 77 78 110 111 125 126 127 128 141 144 151
ASYNC                : 150
AWAIT                : 150
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 30
BOOLTRUE             : 29
BOOLTYPE             : 86
BREAK                : 
CATCH                : 97 98
CHAR                 : 26
CHARTYPE             : 81
CLASS                : 2
CLEAR                : 137 147
COMMA                : 78 114 121 130 132
CONST                : 64 65 66 67
COUNT                : 138
DECIMALTYPE          : 84
DECIMAL_NUMBER       : 34
DECREMENT            : 90 93
DEQUEUE              : 146
DICTIONARY           : 110 110 111 111
DIVIDE               : 57
DIVISION_ASSIGNMENT  : 
DO                   : 102
DOLLARSIGN           : 
DOT                  : 121 122 137 138 139 140 142 143 145 146 147 148 149 150
DOTANDCOMMA          : 1 17 18 64 65 66 67 68 69 70 71 72 73 74 79 80 89 90 92 93 110 111 121 122 125 126 137 138 139 140 141 142 143 144 145 146 147 148 149 150
DOUBLEPOINT          : 115
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 104
ELSE_IF              : 105
ENQUEUE              : 145
EQUAL_COMPARATION    : 46
EXCEPTION            : 97 98
FINALLY              : 98
FLOATTYPE            : 83
FLOAT_NUMBER         : 33
FOR                  : 89 90 92 93
FOREACH              : 94
GREATER_THAN         : 44 110 110 111 111 125 125 126 126 127 127 128 128 144 144 151
GREATER_THAN_OR_EQUAL : 48
ID                   : 
IF                   : 103
IN                   : 94
INCREMENT            : 89 92
INEQUALITY           : 47
INTEGER              : 32 131 132 140
INTTYPE              : 85 116 126 126 128 128
ISEMPTY              : 149
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 125 125 126 126 127 127 128 128
LKEY                 : 2 89 90 92 93 94 97 97 98 98 98 101 102 103 104 105 111 112 127 128 150 150 151
LOGICAND             : 50
LOGICNOT             : 52
LOGICOR              : 51
LOGICXOR             : 53
LONG                 : 
LPARENT              : 17 18 76 89 90 92 93 94 97 98 101 102 103 105 110 111 121 122 125 126 127 128 137 138 139 140 141 142 143 144 145 146 147 148 149 150 150 150
METHOD               : 150 150
MINUS                : 55
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 110 111 125 126 127 128 141 144
PEEK                 : 148
PERCENT              : 58
PIPE                 : 
PLUS                 : 20 54
POP                  : 143
PRINT                : 17
PRIVATE              : 60
PUBLIC               : 2 59 150
PUSH                 : 142
PUT                  : 121
QUEUE                : 144 144
RBRACKET             : 
READ                 : 18 76
REMOVE               : 122
REMOVEAT             : 140
RETURN               : 
RKEY                 : 2 89 90 92 93 94 97 97 98 98 98 101 102 103 104 105 111 112 127 128 150 150 151
RPARENT              : 17 18 76 89 90 92 93 94 97 98 101 102 103 105 110 111 121 122 125 126 127 128 137 138 139 140 141 142 143 144 145 146 147 148 149 150 150 150
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 45 110 110 111 111 125 125 126 126 127 127 128 128 144 144 151
SMALLER_THAN_OR_EQUAL : 49
STACK                : 141 141
STATIC               : 150
STRING               : 17 19 20 25 115 121 129 130 139
STRINGTYPE           : 82 125 125 127 127 151
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 1
TABULATION           : 
TASK                 : 150 150
TIMES                : 56
TRY                  : 97 98
USING                : 1
VARIABLE             : 2 27 37 39 41 43 72 73 75 77 78 89 90 92 93 94 94 97 98 110 111 121 121 122 122 125 126 127 128 137 138 139 140 141 142 143 144 145 146 147 148 149 151 151
VOID                 : 
WHILE                : 101 102
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 64 66 68 70 72
all_block_code       : 2 16 89 90 94 97 97 98 98 98 101 102
arithmetic_operation : 6 35 38 39
arithmetic_operator  : 38 39
assignation_key_value : 64 65 68 69 74 79 80
assignation_key_value_multiple : 66 67 70 71 78
assignation_with_datatype : 80 89 90 92 93
block_code           : 15 16 107 150 151
block_for            : 12
block_if             : 106
block_publicClass    : 1
block_try_catch      : 13
block_while          : 14
concatenation        : 20 28
constant_assignation : 61
data_type            : 64 65 66 67 68 69 70 71 79 80 94 144 144
declaration_async    : 
declaration_lambda   : 
def_const_or_var     : 3
dict_empty           : 108
dict_estruct         : 10
dict_full            : 109
dict_func_put        : 119
dict_func_remove     : 120
dictionary_value     : 111
do_while             : 100
estruct_of_data      : 
for_anidado          : 87 92 93
for_each             : 88
for_simple           : 91
functions_dict       : 11
functions_list       : 9
ints_list            : 128 132
key_value_pair       : 112 113 114
key_value_pairs      : 114
late_initialization  : 63
list_empty           : 117 123
list_full            : 118 124
list_func_add        : 135
list_func_clear      : 133
list_func_count      : 134
list_func_removeat   : 136
lists                : 8
logic_operation      : 7 31 42 43 89 90 92 93 101 102 103 105
logic_operator       : 42 43
normal_while         : 99
not_yes_nested_if    : 103 104 105
other_if             : 103 105
print_data           : 4
program              : 0
queue_clear          : 
queue_dequeue        : 
queue_enqueue        : 
queue_isEmpty        : 
queue_struct         : 
read_data            : 5 24
stack_assignation    : 
stack_pop            : 
stack_push           : 
strings_list         : 127 130
try_catch_finally    : 96
try_catch_simply     : 95
value                : 75 77 78 142 145
valueHash            : 115
value_logic          : 22
value_numeric        : 21 36 38 40 42
value_string         : 23
variable_assignation : 62

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . USING SYSTEM DOTANDCOMMA block_publicClass

    USING           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> USING . SYSTEM DOTANDCOMMA block_publicClass

    SYSTEM          shift and go to state 3


state 3

    (1) program -> USING SYSTEM . DOTANDCOMMA block_publicClass

    DOTANDCOMMA     shift and go to state 4


state 4

    (1) program -> USING SYSTEM DOTANDCOMMA . block_publicClass
    (2) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 6

    block_publicClass              shift and go to state 5

state 5

    (1) program -> USING SYSTEM DOTANDCOMMA block_publicClass .

    $end            reduce using rule 1 (program -> USING SYSTEM DOTANDCOMMA block_publicClass .)


state 6

    (2) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 7

    (2) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 8


state 8

    (2) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 9


state 9

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    all_block_code                 shift and go to state 12
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 10

    (59) access_modifiers -> PUBLIC .

    CONST           reduce using rule 59 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 59 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 59 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 59 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 59 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 59 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 59 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 59 (access_modifiers -> PUBLIC .)


state 11

    (37) arithmetic_operation -> VARIABLE .
    (39) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (41) logic_operation -> VARIABLE .
    (43) logic_operation -> VARIABLE . logic_operator logic_operation
    (73) late_initialization -> VARIABLE . DOTANDCOMMA
    (137) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (121) dict_func_put -> VARIABLE . DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> VARIABLE . DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (75) assignation_key_value -> VARIABLE . ASSIGNATION value
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT
    (44) logic_operator -> . GREATER_THAN
    (45) logic_operator -> . SMALLER_THAN
    (46) logic_operator -> . EQUAL_COMPARATION
    (47) logic_operator -> . INEQUALITY
    (48) logic_operator -> . GREATER_THAN_OR_EQUAL
    (49) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (50) logic_operator -> . LOGICAND
    (51) logic_operator -> . LOGICOR
    (52) logic_operator -> . LOGICNOT
    (53) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for PRINT resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for READ resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTEGER resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for LIST resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FOREACH resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for TRY resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     shift and go to state 72
    DOT             shift and go to state 73
    ASSIGNATION     shift and go to state 74
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79
    GREATER_THAN    shift and go to state 80
    SMALLER_THAN    shift and go to state 81
    EQUAL_COMPARATION shift and go to state 82
    INEQUALITY      shift and go to state 83
    GREATER_THAN_OR_EQUAL shift and go to state 84
    SMALLER_THAN_OR_EQUAL shift and go to state 85
    LOGICAND        shift and go to state 86
    LOGICOR         shift and go to state 87
    LOGICNOT        shift and go to state 88
    LOGICXOR        shift and go to state 89

  ! PLUS            [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! READ            [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! CONST           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! INTEGER         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FLOAT_NUMBER    [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! LIST            [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DICTIONARY      [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FOR             [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FOREACH         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! TRY             [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DO              [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! PUBLIC          [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! PRIVATE         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! CHARTYPE        [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! STRINGTYPE      [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FLOATTYPE       [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DECIMALTYPE     [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! INTTYPE         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! BOOLTYPE        [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 41 (logic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 70
    logic_operator                 shift and go to state 71

state 12

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY

    RKEY            shift and go to state 90


state 13

    (15) all_block_code -> block_code .
    (16) all_block_code -> block_code . all_block_code
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    RKEY            reduce using rule 15 (all_block_code -> block_code .)
    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    block_code                     shift and go to state 13
    all_block_code                 shift and go to state 91
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 14

    (3) block_code -> def_const_or_var .

    PRINT           reduce using rule 3 (block_code -> def_const_or_var .)
    READ            reduce using rule 3 (block_code -> def_const_or_var .)
    VARIABLE        reduce using rule 3 (block_code -> def_const_or_var .)
    CONST           reduce using rule 3 (block_code -> def_const_or_var .)
    INTEGER         reduce using rule 3 (block_code -> def_const_or_var .)
    FLOAT_NUMBER    reduce using rule 3 (block_code -> def_const_or_var .)
    DECIMAL_NUMBER  reduce using rule 3 (block_code -> def_const_or_var .)
    LIST            reduce using rule 3 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 3 (block_code -> def_const_or_var .)
    FOR             reduce using rule 3 (block_code -> def_const_or_var .)
    FOREACH         reduce using rule 3 (block_code -> def_const_or_var .)
    TRY             reduce using rule 3 (block_code -> def_const_or_var .)
    WHILE           reduce using rule 3 (block_code -> def_const_or_var .)
    DO              reduce using rule 3 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 3 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 3 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 3 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 3 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 3 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 3 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 3 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 3 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 3 (block_code -> def_const_or_var .)


state 15

    (4) block_code -> print_data .

    PRINT           reduce using rule 4 (block_code -> print_data .)
    READ            reduce using rule 4 (block_code -> print_data .)
    VARIABLE        reduce using rule 4 (block_code -> print_data .)
    CONST           reduce using rule 4 (block_code -> print_data .)
    INTEGER         reduce using rule 4 (block_code -> print_data .)
    FLOAT_NUMBER    reduce using rule 4 (block_code -> print_data .)
    DECIMAL_NUMBER  reduce using rule 4 (block_code -> print_data .)
    LIST            reduce using rule 4 (block_code -> print_data .)
    DICTIONARY      reduce using rule 4 (block_code -> print_data .)
    FOR             reduce using rule 4 (block_code -> print_data .)
    FOREACH         reduce using rule 4 (block_code -> print_data .)
    TRY             reduce using rule 4 (block_code -> print_data .)
    WHILE           reduce using rule 4 (block_code -> print_data .)
    DO              reduce using rule 4 (block_code -> print_data .)
    PUBLIC          reduce using rule 4 (block_code -> print_data .)
    PRIVATE         reduce using rule 4 (block_code -> print_data .)
    CHARTYPE        reduce using rule 4 (block_code -> print_data .)
    STRINGTYPE      reduce using rule 4 (block_code -> print_data .)
    FLOATTYPE       reduce using rule 4 (block_code -> print_data .)
    DECIMALTYPE     reduce using rule 4 (block_code -> print_data .)
    INTTYPE         reduce using rule 4 (block_code -> print_data .)
    BOOLTYPE        reduce using rule 4 (block_code -> print_data .)
    RKEY            reduce using rule 4 (block_code -> print_data .)


state 16

    (5) block_code -> read_data .

    PRINT           reduce using rule 5 (block_code -> read_data .)
    READ            reduce using rule 5 (block_code -> read_data .)
    VARIABLE        reduce using rule 5 (block_code -> read_data .)
    CONST           reduce using rule 5 (block_code -> read_data .)
    INTEGER         reduce using rule 5 (block_code -> read_data .)
    FLOAT_NUMBER    reduce using rule 5 (block_code -> read_data .)
    DECIMAL_NUMBER  reduce using rule 5 (block_code -> read_data .)
    LIST            reduce using rule 5 (block_code -> read_data .)
    DICTIONARY      reduce using rule 5 (block_code -> read_data .)
    FOR             reduce using rule 5 (block_code -> read_data .)
    FOREACH         reduce using rule 5 (block_code -> read_data .)
    TRY             reduce using rule 5 (block_code -> read_data .)
    WHILE           reduce using rule 5 (block_code -> read_data .)
    DO              reduce using rule 5 (block_code -> read_data .)
    PUBLIC          reduce using rule 5 (block_code -> read_data .)
    PRIVATE         reduce using rule 5 (block_code -> read_data .)
    CHARTYPE        reduce using rule 5 (block_code -> read_data .)
    STRINGTYPE      reduce using rule 5 (block_code -> read_data .)
    FLOATTYPE       reduce using rule 5 (block_code -> read_data .)
    DECIMALTYPE     reduce using rule 5 (block_code -> read_data .)
    INTTYPE         reduce using rule 5 (block_code -> read_data .)
    BOOLTYPE        reduce using rule 5 (block_code -> read_data .)
    RKEY            reduce using rule 5 (block_code -> read_data .)


state 17

    (6) block_code -> arithmetic_operation .
    (35) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 6 (block_code -> arithmetic_operation .)
    PRINT           reduce using rule 6 (block_code -> arithmetic_operation .)
    READ            reduce using rule 6 (block_code -> arithmetic_operation .)
    VARIABLE        reduce using rule 6 (block_code -> arithmetic_operation .)
    CONST           reduce using rule 6 (block_code -> arithmetic_operation .)
    INTEGER         reduce using rule 6 (block_code -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 6 (block_code -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 6 (block_code -> arithmetic_operation .)
    LIST            reduce using rule 6 (block_code -> arithmetic_operation .)
    DICTIONARY      reduce using rule 6 (block_code -> arithmetic_operation .)
    FOR             reduce using rule 6 (block_code -> arithmetic_operation .)
    FOREACH         reduce using rule 6 (block_code -> arithmetic_operation .)
    TRY             reduce using rule 6 (block_code -> arithmetic_operation .)
    WHILE           reduce using rule 6 (block_code -> arithmetic_operation .)
    DO              reduce using rule 6 (block_code -> arithmetic_operation .)
    PUBLIC          reduce using rule 6 (block_code -> arithmetic_operation .)
    PRIVATE         reduce using rule 6 (block_code -> arithmetic_operation .)
    CHARTYPE        reduce using rule 6 (block_code -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 6 (block_code -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 6 (block_code -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 6 (block_code -> arithmetic_operation .)
    INTTYPE         reduce using rule 6 (block_code -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 6 (block_code -> arithmetic_operation .)
    RKEY            reduce using rule 6 (block_code -> arithmetic_operation .)
    PLUS            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 35 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! READ            [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! CONST           [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! LIST            [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! FOR             [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! TRY             [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! DO              [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 35 (value_numeric -> arithmetic_operation .) ]


state 18

    (7) block_code -> logic_operation .

    PRINT           reduce using rule 7 (block_code -> logic_operation .)
    READ            reduce using rule 7 (block_code -> logic_operation .)
    VARIABLE        reduce using rule 7 (block_code -> logic_operation .)
    CONST           reduce using rule 7 (block_code -> logic_operation .)
    INTEGER         reduce using rule 7 (block_code -> logic_operation .)
    FLOAT_NUMBER    reduce using rule 7 (block_code -> logic_operation .)
    DECIMAL_NUMBER  reduce using rule 7 (block_code -> logic_operation .)
    LIST            reduce using rule 7 (block_code -> logic_operation .)
    DICTIONARY      reduce using rule 7 (block_code -> logic_operation .)
    FOR             reduce using rule 7 (block_code -> logic_operation .)
    FOREACH         reduce using rule 7 (block_code -> logic_operation .)
    TRY             reduce using rule 7 (block_code -> logic_operation .)
    WHILE           reduce using rule 7 (block_code -> logic_operation .)
    DO              reduce using rule 7 (block_code -> logic_operation .)
    PUBLIC          reduce using rule 7 (block_code -> logic_operation .)
    PRIVATE         reduce using rule 7 (block_code -> logic_operation .)
    CHARTYPE        reduce using rule 7 (block_code -> logic_operation .)
    STRINGTYPE      reduce using rule 7 (block_code -> logic_operation .)
    FLOATTYPE       reduce using rule 7 (block_code -> logic_operation .)
    DECIMALTYPE     reduce using rule 7 (block_code -> logic_operation .)
    INTTYPE         reduce using rule 7 (block_code -> logic_operation .)
    BOOLTYPE        reduce using rule 7 (block_code -> logic_operation .)
    RKEY            reduce using rule 7 (block_code -> logic_operation .)


state 19

    (8) block_code -> lists .

    PRINT           reduce using rule 8 (block_code -> lists .)
    READ            reduce using rule 8 (block_code -> lists .)
    VARIABLE        reduce using rule 8 (block_code -> lists .)
    CONST           reduce using rule 8 (block_code -> lists .)
    INTEGER         reduce using rule 8 (block_code -> lists .)
    FLOAT_NUMBER    reduce using rule 8 (block_code -> lists .)
    DECIMAL_NUMBER  reduce using rule 8 (block_code -> lists .)
    LIST            reduce using rule 8 (block_code -> lists .)
    DICTIONARY      reduce using rule 8 (block_code -> lists .)
    FOR             reduce using rule 8 (block_code -> lists .)
    FOREACH         reduce using rule 8 (block_code -> lists .)
    TRY             reduce using rule 8 (block_code -> lists .)
    WHILE           reduce using rule 8 (block_code -> lists .)
    DO              reduce using rule 8 (block_code -> lists .)
    PUBLIC          reduce using rule 8 (block_code -> lists .)
    PRIVATE         reduce using rule 8 (block_code -> lists .)
    CHARTYPE        reduce using rule 8 (block_code -> lists .)
    STRINGTYPE      reduce using rule 8 (block_code -> lists .)
    FLOATTYPE       reduce using rule 8 (block_code -> lists .)
    DECIMALTYPE     reduce using rule 8 (block_code -> lists .)
    INTTYPE         reduce using rule 8 (block_code -> lists .)
    BOOLTYPE        reduce using rule 8 (block_code -> lists .)
    RKEY            reduce using rule 8 (block_code -> lists .)


state 20

    (9) block_code -> functions_list .

    PRINT           reduce using rule 9 (block_code -> functions_list .)
    READ            reduce using rule 9 (block_code -> functions_list .)
    VARIABLE        reduce using rule 9 (block_code -> functions_list .)
    CONST           reduce using rule 9 (block_code -> functions_list .)
    INTEGER         reduce using rule 9 (block_code -> functions_list .)
    FLOAT_NUMBER    reduce using rule 9 (block_code -> functions_list .)
    DECIMAL_NUMBER  reduce using rule 9 (block_code -> functions_list .)
    LIST            reduce using rule 9 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 9 (block_code -> functions_list .)
    FOR             reduce using rule 9 (block_code -> functions_list .)
    FOREACH         reduce using rule 9 (block_code -> functions_list .)
    TRY             reduce using rule 9 (block_code -> functions_list .)
    WHILE           reduce using rule 9 (block_code -> functions_list .)
    DO              reduce using rule 9 (block_code -> functions_list .)
    PUBLIC          reduce using rule 9 (block_code -> functions_list .)
    PRIVATE         reduce using rule 9 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 9 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 9 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 9 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 9 (block_code -> functions_list .)
    INTTYPE         reduce using rule 9 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 9 (block_code -> functions_list .)
    RKEY            reduce using rule 9 (block_code -> functions_list .)


state 21

    (10) block_code -> dict_estruct .

    PRINT           reduce using rule 10 (block_code -> dict_estruct .)
    READ            reduce using rule 10 (block_code -> dict_estruct .)
    VARIABLE        reduce using rule 10 (block_code -> dict_estruct .)
    CONST           reduce using rule 10 (block_code -> dict_estruct .)
    INTEGER         reduce using rule 10 (block_code -> dict_estruct .)
    FLOAT_NUMBER    reduce using rule 10 (block_code -> dict_estruct .)
    DECIMAL_NUMBER  reduce using rule 10 (block_code -> dict_estruct .)
    LIST            reduce using rule 10 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 10 (block_code -> dict_estruct .)
    FOR             reduce using rule 10 (block_code -> dict_estruct .)
    FOREACH         reduce using rule 10 (block_code -> dict_estruct .)
    TRY             reduce using rule 10 (block_code -> dict_estruct .)
    WHILE           reduce using rule 10 (block_code -> dict_estruct .)
    DO              reduce using rule 10 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 10 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 10 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 10 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 10 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 10 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 10 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    RKEY            reduce using rule 10 (block_code -> dict_estruct .)


state 22

    (11) block_code -> functions_dict .

    PRINT           reduce using rule 11 (block_code -> functions_dict .)
    READ            reduce using rule 11 (block_code -> functions_dict .)
    VARIABLE        reduce using rule 11 (block_code -> functions_dict .)
    CONST           reduce using rule 11 (block_code -> functions_dict .)
    INTEGER         reduce using rule 11 (block_code -> functions_dict .)
    FLOAT_NUMBER    reduce using rule 11 (block_code -> functions_dict .)
    DECIMAL_NUMBER  reduce using rule 11 (block_code -> functions_dict .)
    LIST            reduce using rule 11 (block_code -> functions_dict .)
    DICTIONARY      reduce using rule 11 (block_code -> functions_dict .)
    FOR             reduce using rule 11 (block_code -> functions_dict .)
    FOREACH         reduce using rule 11 (block_code -> functions_dict .)
    TRY             reduce using rule 11 (block_code -> functions_dict .)
    WHILE           reduce using rule 11 (block_code -> functions_dict .)
    DO              reduce using rule 11 (block_code -> functions_dict .)
    PUBLIC          reduce using rule 11 (block_code -> functions_dict .)
    PRIVATE         reduce using rule 11 (block_code -> functions_dict .)
    CHARTYPE        reduce using rule 11 (block_code -> functions_dict .)
    STRINGTYPE      reduce using rule 11 (block_code -> functions_dict .)
    FLOATTYPE       reduce using rule 11 (block_code -> functions_dict .)
    DECIMALTYPE     reduce using rule 11 (block_code -> functions_dict .)
    INTTYPE         reduce using rule 11 (block_code -> functions_dict .)
    BOOLTYPE        reduce using rule 11 (block_code -> functions_dict .)
    RKEY            reduce using rule 11 (block_code -> functions_dict .)


state 23

    (12) block_code -> block_for .

    PRINT           reduce using rule 12 (block_code -> block_for .)
    READ            reduce using rule 12 (block_code -> block_for .)
    VARIABLE        reduce using rule 12 (block_code -> block_for .)
    CONST           reduce using rule 12 (block_code -> block_for .)
    INTEGER         reduce using rule 12 (block_code -> block_for .)
    FLOAT_NUMBER    reduce using rule 12 (block_code -> block_for .)
    DECIMAL_NUMBER  reduce using rule 12 (block_code -> block_for .)
    LIST            reduce using rule 12 (block_code -> block_for .)
    DICTIONARY      reduce using rule 12 (block_code -> block_for .)
    FOR             reduce using rule 12 (block_code -> block_for .)
    FOREACH         reduce using rule 12 (block_code -> block_for .)
    TRY             reduce using rule 12 (block_code -> block_for .)
    WHILE           reduce using rule 12 (block_code -> block_for .)
    DO              reduce using rule 12 (block_code -> block_for .)
    PUBLIC          reduce using rule 12 (block_code -> block_for .)
    PRIVATE         reduce using rule 12 (block_code -> block_for .)
    CHARTYPE        reduce using rule 12 (block_code -> block_for .)
    STRINGTYPE      reduce using rule 12 (block_code -> block_for .)
    FLOATTYPE       reduce using rule 12 (block_code -> block_for .)
    DECIMALTYPE     reduce using rule 12 (block_code -> block_for .)
    INTTYPE         reduce using rule 12 (block_code -> block_for .)
    BOOLTYPE        reduce using rule 12 (block_code -> block_for .)
    RKEY            reduce using rule 12 (block_code -> block_for .)


state 24

    (13) block_code -> block_try_catch .

    PRINT           reduce using rule 13 (block_code -> block_try_catch .)
    READ            reduce using rule 13 (block_code -> block_try_catch .)
    VARIABLE        reduce using rule 13 (block_code -> block_try_catch .)
    CONST           reduce using rule 13 (block_code -> block_try_catch .)
    INTEGER         reduce using rule 13 (block_code -> block_try_catch .)
    FLOAT_NUMBER    reduce using rule 13 (block_code -> block_try_catch .)
    DECIMAL_NUMBER  reduce using rule 13 (block_code -> block_try_catch .)
    LIST            reduce using rule 13 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 13 (block_code -> block_try_catch .)
    FOR             reduce using rule 13 (block_code -> block_try_catch .)
    FOREACH         reduce using rule 13 (block_code -> block_try_catch .)
    TRY             reduce using rule 13 (block_code -> block_try_catch .)
    WHILE           reduce using rule 13 (block_code -> block_try_catch .)
    DO              reduce using rule 13 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 13 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 13 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 13 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 13 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 13 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 13 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 13 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 13 (block_code -> block_try_catch .)
    RKEY            reduce using rule 13 (block_code -> block_try_catch .)


state 25

    (14) block_code -> block_while .

    PRINT           reduce using rule 14 (block_code -> block_while .)
    READ            reduce using rule 14 (block_code -> block_while .)
    VARIABLE        reduce using rule 14 (block_code -> block_while .)
    CONST           reduce using rule 14 (block_code -> block_while .)
    INTEGER         reduce using rule 14 (block_code -> block_while .)
    FLOAT_NUMBER    reduce using rule 14 (block_code -> block_while .)
    DECIMAL_NUMBER  reduce using rule 14 (block_code -> block_while .)
    LIST            reduce using rule 14 (block_code -> block_while .)
    DICTIONARY      reduce using rule 14 (block_code -> block_while .)
    FOR             reduce using rule 14 (block_code -> block_while .)
    FOREACH         reduce using rule 14 (block_code -> block_while .)
    TRY             reduce using rule 14 (block_code -> block_while .)
    WHILE           reduce using rule 14 (block_code -> block_while .)
    DO              reduce using rule 14 (block_code -> block_while .)
    PUBLIC          reduce using rule 14 (block_code -> block_while .)
    PRIVATE         reduce using rule 14 (block_code -> block_while .)
    CHARTYPE        reduce using rule 14 (block_code -> block_while .)
    STRINGTYPE      reduce using rule 14 (block_code -> block_while .)
    FLOATTYPE       reduce using rule 14 (block_code -> block_while .)
    DECIMALTYPE     reduce using rule 14 (block_code -> block_while .)
    INTTYPE         reduce using rule 14 (block_code -> block_while .)
    BOOLTYPE        reduce using rule 14 (block_code -> block_while .)
    RKEY            reduce using rule 14 (block_code -> block_while .)


state 26

    (61) def_const_or_var -> constant_assignation .

    PRINT           reduce using rule 61 (def_const_or_var -> constant_assignation .)
    READ            reduce using rule 61 (def_const_or_var -> constant_assignation .)
    VARIABLE        reduce using rule 61 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 61 (def_const_or_var -> constant_assignation .)
    INTEGER         reduce using rule 61 (def_const_or_var -> constant_assignation .)
    FLOAT_NUMBER    reduce using rule 61 (def_const_or_var -> constant_assignation .)
    DECIMAL_NUMBER  reduce using rule 61 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 61 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 61 (def_const_or_var -> constant_assignation .)
    FOR             reduce using rule 61 (def_const_or_var -> constant_assignation .)
    FOREACH         reduce using rule 61 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 61 (def_const_or_var -> constant_assignation .)
    WHILE           reduce using rule 61 (def_const_or_var -> constant_assignation .)
    DO              reduce using rule 61 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 61 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 61 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 61 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 61 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 61 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 61 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 61 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 61 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 61 (def_const_or_var -> constant_assignation .)


state 27

    (62) def_const_or_var -> variable_assignation .

    PRINT           reduce using rule 62 (def_const_or_var -> variable_assignation .)
    READ            reduce using rule 62 (def_const_or_var -> variable_assignation .)
    VARIABLE        reduce using rule 62 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 62 (def_const_or_var -> variable_assignation .)
    INTEGER         reduce using rule 62 (def_const_or_var -> variable_assignation .)
    FLOAT_NUMBER    reduce using rule 62 (def_const_or_var -> variable_assignation .)
    DECIMAL_NUMBER  reduce using rule 62 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 62 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 62 (def_const_or_var -> variable_assignation .)
    FOR             reduce using rule 62 (def_const_or_var -> variable_assignation .)
    FOREACH         reduce using rule 62 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 62 (def_const_or_var -> variable_assignation .)
    WHILE           reduce using rule 62 (def_const_or_var -> variable_assignation .)
    DO              reduce using rule 62 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 62 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 62 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 62 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 62 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 62 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 62 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 62 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 62 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 62 (def_const_or_var -> variable_assignation .)


state 28

    (63) def_const_or_var -> late_initialization .

    PRINT           reduce using rule 63 (def_const_or_var -> late_initialization .)
    READ            reduce using rule 63 (def_const_or_var -> late_initialization .)
    VARIABLE        reduce using rule 63 (def_const_or_var -> late_initialization .)
    CONST           reduce using rule 63 (def_const_or_var -> late_initialization .)
    INTEGER         reduce using rule 63 (def_const_or_var -> late_initialization .)
    FLOAT_NUMBER    reduce using rule 63 (def_const_or_var -> late_initialization .)
    DECIMAL_NUMBER  reduce using rule 63 (def_const_or_var -> late_initialization .)
    LIST            reduce using rule 63 (def_const_or_var -> late_initialization .)
    DICTIONARY      reduce using rule 63 (def_const_or_var -> late_initialization .)
    FOR             reduce using rule 63 (def_const_or_var -> late_initialization .)
    FOREACH         reduce using rule 63 (def_const_or_var -> late_initialization .)
    TRY             reduce using rule 63 (def_const_or_var -> late_initialization .)
    WHILE           reduce using rule 63 (def_const_or_var -> late_initialization .)
    DO              reduce using rule 63 (def_const_or_var -> late_initialization .)
    PUBLIC          reduce using rule 63 (def_const_or_var -> late_initialization .)
    PRIVATE         reduce using rule 63 (def_const_or_var -> late_initialization .)
    CHARTYPE        reduce using rule 63 (def_const_or_var -> late_initialization .)
    STRINGTYPE      reduce using rule 63 (def_const_or_var -> late_initialization .)
    FLOATTYPE       reduce using rule 63 (def_const_or_var -> late_initialization .)
    DECIMALTYPE     reduce using rule 63 (def_const_or_var -> late_initialization .)
    INTTYPE         reduce using rule 63 (def_const_or_var -> late_initialization .)
    BOOLTYPE        reduce using rule 63 (def_const_or_var -> late_initialization .)
    RKEY            reduce using rule 63 (def_const_or_var -> late_initialization .)


state 29

    (17) print_data -> PRINT . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 92


state 30

    (18) read_data -> READ . LPARENT RPARENT DOTANDCOMMA
    (76) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 93


state 31

    (36) arithmetic_operation -> value_numeric .
    (38) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (40) logic_operation -> value_numeric .
    (42) logic_operation -> value_numeric . logic_operator logic_operation
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT
    (44) logic_operator -> . GREATER_THAN
    (45) logic_operator -> . SMALLER_THAN
    (46) logic_operator -> . EQUAL_COMPARATION
    (47) logic_operator -> . INEQUALITY
    (48) logic_operator -> . GREATER_THAN_OR_EQUAL
    (49) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (50) logic_operator -> . LOGICAND
    (51) logic_operator -> . LOGICOR
    (52) logic_operator -> . LOGICNOT
    (53) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for PRINT resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for READ resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CONST resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTEGER resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for LIST resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FOREACH resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for TRY resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DO resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 36 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79
    GREATER_THAN    shift and go to state 80
    SMALLER_THAN    shift and go to state 81
    EQUAL_COMPARATION shift and go to state 82
    INEQUALITY      shift and go to state 83
    GREATER_THAN_OR_EQUAL shift and go to state 84
    SMALLER_THAN_OR_EQUAL shift and go to state 85
    LOGICAND        shift and go to state 86
    LOGICOR         shift and go to state 87
    LOGICNOT        shift and go to state 88
    LOGICXOR        shift and go to state 89

  ! PLUS            [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! PRINT           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! READ            [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! VARIABLE        [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! CONST           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! INTEGER         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FLOAT_NUMBER    [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! LIST            [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DICTIONARY      [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FOR             [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FOREACH         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! TRY             [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! WHILE           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DO              [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! PUBLIC          [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! PRIVATE         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! CHARTYPE        [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! STRINGTYPE      [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FLOATTYPE       [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DECIMALTYPE     [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! INTTYPE         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! BOOLTYPE        [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 40 (logic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 94
    logic_operator                 shift and go to state 95

state 32

    (123) lists -> list_empty .

    PRINT           reduce using rule 123 (lists -> list_empty .)
    READ            reduce using rule 123 (lists -> list_empty .)
    VARIABLE        reduce using rule 123 (lists -> list_empty .)
    CONST           reduce using rule 123 (lists -> list_empty .)
    INTEGER         reduce using rule 123 (lists -> list_empty .)
    FLOAT_NUMBER    reduce using rule 123 (lists -> list_empty .)
    DECIMAL_NUMBER  reduce using rule 123 (lists -> list_empty .)
    LIST            reduce using rule 123 (lists -> list_empty .)
    DICTIONARY      reduce using rule 123 (lists -> list_empty .)
    FOR             reduce using rule 123 (lists -> list_empty .)
    FOREACH         reduce using rule 123 (lists -> list_empty .)
    TRY             reduce using rule 123 (lists -> list_empty .)
    WHILE           reduce using rule 123 (lists -> list_empty .)
    DO              reduce using rule 123 (lists -> list_empty .)
    PUBLIC          reduce using rule 123 (lists -> list_empty .)
    PRIVATE         reduce using rule 123 (lists -> list_empty .)
    CHARTYPE        reduce using rule 123 (lists -> list_empty .)
    STRINGTYPE      reduce using rule 123 (lists -> list_empty .)
    FLOATTYPE       reduce using rule 123 (lists -> list_empty .)
    DECIMALTYPE     reduce using rule 123 (lists -> list_empty .)
    INTTYPE         reduce using rule 123 (lists -> list_empty .)
    BOOLTYPE        reduce using rule 123 (lists -> list_empty .)
    RKEY            reduce using rule 123 (lists -> list_empty .)


state 33

    (124) lists -> list_full .

    PRINT           reduce using rule 124 (lists -> list_full .)
    READ            reduce using rule 124 (lists -> list_full .)
    VARIABLE        reduce using rule 124 (lists -> list_full .)
    CONST           reduce using rule 124 (lists -> list_full .)
    INTEGER         reduce using rule 124 (lists -> list_full .)
    FLOAT_NUMBER    reduce using rule 124 (lists -> list_full .)
    DECIMAL_NUMBER  reduce using rule 124 (lists -> list_full .)
    LIST            reduce using rule 124 (lists -> list_full .)
    DICTIONARY      reduce using rule 124 (lists -> list_full .)
    FOR             reduce using rule 124 (lists -> list_full .)
    FOREACH         reduce using rule 124 (lists -> list_full .)
    TRY             reduce using rule 124 (lists -> list_full .)
    WHILE           reduce using rule 124 (lists -> list_full .)
    DO              reduce using rule 124 (lists -> list_full .)
    PUBLIC          reduce using rule 124 (lists -> list_full .)
    PRIVATE         reduce using rule 124 (lists -> list_full .)
    CHARTYPE        reduce using rule 124 (lists -> list_full .)
    STRINGTYPE      reduce using rule 124 (lists -> list_full .)
    FLOATTYPE       reduce using rule 124 (lists -> list_full .)
    DECIMALTYPE     reduce using rule 124 (lists -> list_full .)
    INTTYPE         reduce using rule 124 (lists -> list_full .)
    BOOLTYPE        reduce using rule 124 (lists -> list_full .)
    RKEY            reduce using rule 124 (lists -> list_full .)


state 34

    (133) functions_list -> list_func_clear .

    PRINT           reduce using rule 133 (functions_list -> list_func_clear .)
    READ            reduce using rule 133 (functions_list -> list_func_clear .)
    VARIABLE        reduce using rule 133 (functions_list -> list_func_clear .)
    CONST           reduce using rule 133 (functions_list -> list_func_clear .)
    INTEGER         reduce using rule 133 (functions_list -> list_func_clear .)
    FLOAT_NUMBER    reduce using rule 133 (functions_list -> list_func_clear .)
    DECIMAL_NUMBER  reduce using rule 133 (functions_list -> list_func_clear .)
    LIST            reduce using rule 133 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 133 (functions_list -> list_func_clear .)
    FOR             reduce using rule 133 (functions_list -> list_func_clear .)
    FOREACH         reduce using rule 133 (functions_list -> list_func_clear .)
    TRY             reduce using rule 133 (functions_list -> list_func_clear .)
    WHILE           reduce using rule 133 (functions_list -> list_func_clear .)
    DO              reduce using rule 133 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 133 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 133 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 133 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 133 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 133 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 133 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 133 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 133 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 133 (functions_list -> list_func_clear .)


state 35

    (134) functions_list -> list_func_count .

    PRINT           reduce using rule 134 (functions_list -> list_func_count .)
    READ            reduce using rule 134 (functions_list -> list_func_count .)
    VARIABLE        reduce using rule 134 (functions_list -> list_func_count .)
    CONST           reduce using rule 134 (functions_list -> list_func_count .)
    INTEGER         reduce using rule 134 (functions_list -> list_func_count .)
    FLOAT_NUMBER    reduce using rule 134 (functions_list -> list_func_count .)
    DECIMAL_NUMBER  reduce using rule 134 (functions_list -> list_func_count .)
    LIST            reduce using rule 134 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 134 (functions_list -> list_func_count .)
    FOR             reduce using rule 134 (functions_list -> list_func_count .)
    FOREACH         reduce using rule 134 (functions_list -> list_func_count .)
    TRY             reduce using rule 134 (functions_list -> list_func_count .)
    WHILE           reduce using rule 134 (functions_list -> list_func_count .)
    DO              reduce using rule 134 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 134 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 134 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 134 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 134 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 134 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 134 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 134 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 134 (functions_list -> list_func_count .)
    RKEY            reduce using rule 134 (functions_list -> list_func_count .)


state 36

    (135) functions_list -> list_func_add .

    PRINT           reduce using rule 135 (functions_list -> list_func_add .)
    READ            reduce using rule 135 (functions_list -> list_func_add .)
    VARIABLE        reduce using rule 135 (functions_list -> list_func_add .)
    CONST           reduce using rule 135 (functions_list -> list_func_add .)
    INTEGER         reduce using rule 135 (functions_list -> list_func_add .)
    FLOAT_NUMBER    reduce using rule 135 (functions_list -> list_func_add .)
    DECIMAL_NUMBER  reduce using rule 135 (functions_list -> list_func_add .)
    LIST            reduce using rule 135 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 135 (functions_list -> list_func_add .)
    FOR             reduce using rule 135 (functions_list -> list_func_add .)
    FOREACH         reduce using rule 135 (functions_list -> list_func_add .)
    TRY             reduce using rule 135 (functions_list -> list_func_add .)
    WHILE           reduce using rule 135 (functions_list -> list_func_add .)
    DO              reduce using rule 135 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 135 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 135 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 135 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 135 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 135 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 135 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 135 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 135 (functions_list -> list_func_add .)
    RKEY            reduce using rule 135 (functions_list -> list_func_add .)


state 37

    (136) functions_list -> list_func_removeat .

    PRINT           reduce using rule 136 (functions_list -> list_func_removeat .)
    READ            reduce using rule 136 (functions_list -> list_func_removeat .)
    VARIABLE        reduce using rule 136 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 136 (functions_list -> list_func_removeat .)
    INTEGER         reduce using rule 136 (functions_list -> list_func_removeat .)
    FLOAT_NUMBER    reduce using rule 136 (functions_list -> list_func_removeat .)
    DECIMAL_NUMBER  reduce using rule 136 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 136 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 136 (functions_list -> list_func_removeat .)
    FOR             reduce using rule 136 (functions_list -> list_func_removeat .)
    FOREACH         reduce using rule 136 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 136 (functions_list -> list_func_removeat .)
    WHILE           reduce using rule 136 (functions_list -> list_func_removeat .)
    DO              reduce using rule 136 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 136 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 136 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 136 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 136 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 136 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 136 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 136 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 136 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 136 (functions_list -> list_func_removeat .)


state 38

    (108) dict_estruct -> dict_empty .

    PRINT           reduce using rule 108 (dict_estruct -> dict_empty .)
    READ            reduce using rule 108 (dict_estruct -> dict_empty .)
    VARIABLE        reduce using rule 108 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 108 (dict_estruct -> dict_empty .)
    INTEGER         reduce using rule 108 (dict_estruct -> dict_empty .)
    FLOAT_NUMBER    reduce using rule 108 (dict_estruct -> dict_empty .)
    DECIMAL_NUMBER  reduce using rule 108 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 108 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 108 (dict_estruct -> dict_empty .)
    FOR             reduce using rule 108 (dict_estruct -> dict_empty .)
    FOREACH         reduce using rule 108 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 108 (dict_estruct -> dict_empty .)
    WHILE           reduce using rule 108 (dict_estruct -> dict_empty .)
    DO              reduce using rule 108 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 108 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 108 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 108 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 108 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 108 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 108 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 108 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 108 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 108 (dict_estruct -> dict_empty .)


state 39

    (109) dict_estruct -> dict_full .

    PRINT           reduce using rule 109 (dict_estruct -> dict_full .)
    READ            reduce using rule 109 (dict_estruct -> dict_full .)
    VARIABLE        reduce using rule 109 (dict_estruct -> dict_full .)
    CONST           reduce using rule 109 (dict_estruct -> dict_full .)
    INTEGER         reduce using rule 109 (dict_estruct -> dict_full .)
    FLOAT_NUMBER    reduce using rule 109 (dict_estruct -> dict_full .)
    DECIMAL_NUMBER  reduce using rule 109 (dict_estruct -> dict_full .)
    LIST            reduce using rule 109 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 109 (dict_estruct -> dict_full .)
    FOR             reduce using rule 109 (dict_estruct -> dict_full .)
    FOREACH         reduce using rule 109 (dict_estruct -> dict_full .)
    TRY             reduce using rule 109 (dict_estruct -> dict_full .)
    WHILE           reduce using rule 109 (dict_estruct -> dict_full .)
    DO              reduce using rule 109 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 109 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 109 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 109 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 109 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 109 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 109 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 109 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 109 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 109 (dict_estruct -> dict_full .)


state 40

    (119) functions_dict -> dict_func_put .

    PRINT           reduce using rule 119 (functions_dict -> dict_func_put .)
    READ            reduce using rule 119 (functions_dict -> dict_func_put .)
    VARIABLE        reduce using rule 119 (functions_dict -> dict_func_put .)
    CONST           reduce using rule 119 (functions_dict -> dict_func_put .)
    INTEGER         reduce using rule 119 (functions_dict -> dict_func_put .)
    FLOAT_NUMBER    reduce using rule 119 (functions_dict -> dict_func_put .)
    DECIMAL_NUMBER  reduce using rule 119 (functions_dict -> dict_func_put .)
    LIST            reduce using rule 119 (functions_dict -> dict_func_put .)
    DICTIONARY      reduce using rule 119 (functions_dict -> dict_func_put .)
    FOR             reduce using rule 119 (functions_dict -> dict_func_put .)
    FOREACH         reduce using rule 119 (functions_dict -> dict_func_put .)
    TRY             reduce using rule 119 (functions_dict -> dict_func_put .)
    WHILE           reduce using rule 119 (functions_dict -> dict_func_put .)
    DO              reduce using rule 119 (functions_dict -> dict_func_put .)
    PUBLIC          reduce using rule 119 (functions_dict -> dict_func_put .)
    PRIVATE         reduce using rule 119 (functions_dict -> dict_func_put .)
    CHARTYPE        reduce using rule 119 (functions_dict -> dict_func_put .)
    STRINGTYPE      reduce using rule 119 (functions_dict -> dict_func_put .)
    FLOATTYPE       reduce using rule 119 (functions_dict -> dict_func_put .)
    DECIMALTYPE     reduce using rule 119 (functions_dict -> dict_func_put .)
    INTTYPE         reduce using rule 119 (functions_dict -> dict_func_put .)
    BOOLTYPE        reduce using rule 119 (functions_dict -> dict_func_put .)
    RKEY            reduce using rule 119 (functions_dict -> dict_func_put .)


state 41

    (120) functions_dict -> dict_func_remove .

    PRINT           reduce using rule 120 (functions_dict -> dict_func_remove .)
    READ            reduce using rule 120 (functions_dict -> dict_func_remove .)
    VARIABLE        reduce using rule 120 (functions_dict -> dict_func_remove .)
    CONST           reduce using rule 120 (functions_dict -> dict_func_remove .)
    INTEGER         reduce using rule 120 (functions_dict -> dict_func_remove .)
    FLOAT_NUMBER    reduce using rule 120 (functions_dict -> dict_func_remove .)
    DECIMAL_NUMBER  reduce using rule 120 (functions_dict -> dict_func_remove .)
    LIST            reduce using rule 120 (functions_dict -> dict_func_remove .)
    DICTIONARY      reduce using rule 120 (functions_dict -> dict_func_remove .)
    FOR             reduce using rule 120 (functions_dict -> dict_func_remove .)
    FOREACH         reduce using rule 120 (functions_dict -> dict_func_remove .)
    TRY             reduce using rule 120 (functions_dict -> dict_func_remove .)
    WHILE           reduce using rule 120 (functions_dict -> dict_func_remove .)
    DO              reduce using rule 120 (functions_dict -> dict_func_remove .)
    PUBLIC          reduce using rule 120 (functions_dict -> dict_func_remove .)
    PRIVATE         reduce using rule 120 (functions_dict -> dict_func_remove .)
    CHARTYPE        reduce using rule 120 (functions_dict -> dict_func_remove .)
    STRINGTYPE      reduce using rule 120 (functions_dict -> dict_func_remove .)
    FLOATTYPE       reduce using rule 120 (functions_dict -> dict_func_remove .)
    DECIMALTYPE     reduce using rule 120 (functions_dict -> dict_func_remove .)
    INTTYPE         reduce using rule 120 (functions_dict -> dict_func_remove .)
    BOOLTYPE        reduce using rule 120 (functions_dict -> dict_func_remove .)
    RKEY            reduce using rule 120 (functions_dict -> dict_func_remove .)


state 42

    (87) block_for -> for_anidado .

    PRINT           reduce using rule 87 (block_for -> for_anidado .)
    READ            reduce using rule 87 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 87 (block_for -> for_anidado .)
    CONST           reduce using rule 87 (block_for -> for_anidado .)
    INTEGER         reduce using rule 87 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 87 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 87 (block_for -> for_anidado .)
    LIST            reduce using rule 87 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 87 (block_for -> for_anidado .)
    FOR             reduce using rule 87 (block_for -> for_anidado .)
    FOREACH         reduce using rule 87 (block_for -> for_anidado .)
    TRY             reduce using rule 87 (block_for -> for_anidado .)
    WHILE           reduce using rule 87 (block_for -> for_anidado .)
    DO              reduce using rule 87 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 87 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 87 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 87 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 87 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 87 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 87 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 87 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 87 (block_for -> for_anidado .)
    RKEY            reduce using rule 87 (block_for -> for_anidado .)


state 43

    (88) block_for -> for_each .

    PRINT           reduce using rule 88 (block_for -> for_each .)
    READ            reduce using rule 88 (block_for -> for_each .)
    VARIABLE        reduce using rule 88 (block_for -> for_each .)
    CONST           reduce using rule 88 (block_for -> for_each .)
    INTEGER         reduce using rule 88 (block_for -> for_each .)
    FLOAT_NUMBER    reduce using rule 88 (block_for -> for_each .)
    DECIMAL_NUMBER  reduce using rule 88 (block_for -> for_each .)
    LIST            reduce using rule 88 (block_for -> for_each .)
    DICTIONARY      reduce using rule 88 (block_for -> for_each .)
    FOR             reduce using rule 88 (block_for -> for_each .)
    FOREACH         reduce using rule 88 (block_for -> for_each .)
    TRY             reduce using rule 88 (block_for -> for_each .)
    WHILE           reduce using rule 88 (block_for -> for_each .)
    DO              reduce using rule 88 (block_for -> for_each .)
    PUBLIC          reduce using rule 88 (block_for -> for_each .)
    PRIVATE         reduce using rule 88 (block_for -> for_each .)
    CHARTYPE        reduce using rule 88 (block_for -> for_each .)
    STRINGTYPE      reduce using rule 88 (block_for -> for_each .)
    FLOATTYPE       reduce using rule 88 (block_for -> for_each .)
    DECIMALTYPE     reduce using rule 88 (block_for -> for_each .)
    INTTYPE         reduce using rule 88 (block_for -> for_each .)
    BOOLTYPE        reduce using rule 88 (block_for -> for_each .)
    RKEY            reduce using rule 88 (block_for -> for_each .)


state 44

    (95) block_try_catch -> try_catch_simply .

    PRINT           reduce using rule 95 (block_try_catch -> try_catch_simply .)
    READ            reduce using rule 95 (block_try_catch -> try_catch_simply .)
    VARIABLE        reduce using rule 95 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 95 (block_try_catch -> try_catch_simply .)
    INTEGER         reduce using rule 95 (block_try_catch -> try_catch_simply .)
    FLOAT_NUMBER    reduce using rule 95 (block_try_catch -> try_catch_simply .)
    DECIMAL_NUMBER  reduce using rule 95 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 95 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 95 (block_try_catch -> try_catch_simply .)
    FOR             reduce using rule 95 (block_try_catch -> try_catch_simply .)
    FOREACH         reduce using rule 95 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 95 (block_try_catch -> try_catch_simply .)
    WHILE           reduce using rule 95 (block_try_catch -> try_catch_simply .)
    DO              reduce using rule 95 (block_try_catch -> try_catch_simply .)
    PUBLIC          reduce using rule 95 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 95 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 95 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 95 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 95 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 95 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 95 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 95 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 95 (block_try_catch -> try_catch_simply .)


state 45

    (96) block_try_catch -> try_catch_finally .

    PRINT           reduce using rule 96 (block_try_catch -> try_catch_finally .)
    READ            reduce using rule 96 (block_try_catch -> try_catch_finally .)
    VARIABLE        reduce using rule 96 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 96 (block_try_catch -> try_catch_finally .)
    INTEGER         reduce using rule 96 (block_try_catch -> try_catch_finally .)
    FLOAT_NUMBER    reduce using rule 96 (block_try_catch -> try_catch_finally .)
    DECIMAL_NUMBER  reduce using rule 96 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 96 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 96 (block_try_catch -> try_catch_finally .)
    FOR             reduce using rule 96 (block_try_catch -> try_catch_finally .)
    FOREACH         reduce using rule 96 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 96 (block_try_catch -> try_catch_finally .)
    WHILE           reduce using rule 96 (block_try_catch -> try_catch_finally .)
    DO              reduce using rule 96 (block_try_catch -> try_catch_finally .)
    PUBLIC          reduce using rule 96 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 96 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 96 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 96 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 96 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 96 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 96 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 96 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 96 (block_try_catch -> try_catch_finally .)


state 46

    (99) block_while -> normal_while .

    PRINT           reduce using rule 99 (block_while -> normal_while .)
    READ            reduce using rule 99 (block_while -> normal_while .)
    VARIABLE        reduce using rule 99 (block_while -> normal_while .)
    CONST           reduce using rule 99 (block_while -> normal_while .)
    INTEGER         reduce using rule 99 (block_while -> normal_while .)
    FLOAT_NUMBER    reduce using rule 99 (block_while -> normal_while .)
    DECIMAL_NUMBER  reduce using rule 99 (block_while -> normal_while .)
    LIST            reduce using rule 99 (block_while -> normal_while .)
    DICTIONARY      reduce using rule 99 (block_while -> normal_while .)
    FOR             reduce using rule 99 (block_while -> normal_while .)
    FOREACH         reduce using rule 99 (block_while -> normal_while .)
    TRY             reduce using rule 99 (block_while -> normal_while .)
    WHILE           reduce using rule 99 (block_while -> normal_while .)
    DO              reduce using rule 99 (block_while -> normal_while .)
    PUBLIC          reduce using rule 99 (block_while -> normal_while .)
    PRIVATE         reduce using rule 99 (block_while -> normal_while .)
    CHARTYPE        reduce using rule 99 (block_while -> normal_while .)
    STRINGTYPE      reduce using rule 99 (block_while -> normal_while .)
    FLOATTYPE       reduce using rule 99 (block_while -> normal_while .)
    DECIMALTYPE     reduce using rule 99 (block_while -> normal_while .)
    INTTYPE         reduce using rule 99 (block_while -> normal_while .)
    BOOLTYPE        reduce using rule 99 (block_while -> normal_while .)
    RKEY            reduce using rule 99 (block_while -> normal_while .)


state 47

    (100) block_while -> do_while .

    PRINT           reduce using rule 100 (block_while -> do_while .)
    READ            reduce using rule 100 (block_while -> do_while .)
    VARIABLE        reduce using rule 100 (block_while -> do_while .)
    CONST           reduce using rule 100 (block_while -> do_while .)
    INTEGER         reduce using rule 100 (block_while -> do_while .)
    FLOAT_NUMBER    reduce using rule 100 (block_while -> do_while .)
    DECIMAL_NUMBER  reduce using rule 100 (block_while -> do_while .)
    LIST            reduce using rule 100 (block_while -> do_while .)
    DICTIONARY      reduce using rule 100 (block_while -> do_while .)
    FOR             reduce using rule 100 (block_while -> do_while .)
    FOREACH         reduce using rule 100 (block_while -> do_while .)
    TRY             reduce using rule 100 (block_while -> do_while .)
    WHILE           reduce using rule 100 (block_while -> do_while .)
    DO              reduce using rule 100 (block_while -> do_while .)
    PUBLIC          reduce using rule 100 (block_while -> do_while .)
    PRIVATE         reduce using rule 100 (block_while -> do_while .)
    CHARTYPE        reduce using rule 100 (block_while -> do_while .)
    STRINGTYPE      reduce using rule 100 (block_while -> do_while .)
    FLOATTYPE       reduce using rule 100 (block_while -> do_while .)
    DECIMALTYPE     reduce using rule 100 (block_while -> do_while .)
    INTTYPE         reduce using rule 100 (block_while -> do_while .)
    BOOLTYPE        reduce using rule 100 (block_while -> do_while .)
    RKEY            reduce using rule 100 (block_while -> do_while .)


state 48

    (64) constant_assignation -> access_modifiers . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> access_modifiers . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> access_modifiers . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> access_modifiers . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> access_modifiers . VARIABLE DOTANDCOMMA
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE

    CONST           shift and go to state 96
    VARIABLE        shift and go to state 98
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 97

state 49

    (65) constant_assignation -> CONST . data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 99

state 50

    (69) variable_assignation -> data_type . assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> data_type . assignation_key_value_multiple DOTANDCOMMA
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (77) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (78) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 102
    READ            shift and go to state 103

    assignation_key_value          shift and go to state 100
    assignation_key_value_multiple shift and go to state 101

state 51

    (74) late_initialization -> assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 104


state 52

    (32) value_numeric -> INTEGER .

    PRINT           reduce using rule 32 (value_numeric -> INTEGER .)
    READ            reduce using rule 32 (value_numeric -> INTEGER .)
    VARIABLE        reduce using rule 32 (value_numeric -> INTEGER .)
    CONST           reduce using rule 32 (value_numeric -> INTEGER .)
    INTEGER         reduce using rule 32 (value_numeric -> INTEGER .)
    FLOAT_NUMBER    reduce using rule 32 (value_numeric -> INTEGER .)
    DECIMAL_NUMBER  reduce using rule 32 (value_numeric -> INTEGER .)
    LIST            reduce using rule 32 (value_numeric -> INTEGER .)
    DICTIONARY      reduce using rule 32 (value_numeric -> INTEGER .)
    FOR             reduce using rule 32 (value_numeric -> INTEGER .)
    FOREACH         reduce using rule 32 (value_numeric -> INTEGER .)
    TRY             reduce using rule 32 (value_numeric -> INTEGER .)
    WHILE           reduce using rule 32 (value_numeric -> INTEGER .)
    DO              reduce using rule 32 (value_numeric -> INTEGER .)
    PUBLIC          reduce using rule 32 (value_numeric -> INTEGER .)
    PRIVATE         reduce using rule 32 (value_numeric -> INTEGER .)
    CHARTYPE        reduce using rule 32 (value_numeric -> INTEGER .)
    STRINGTYPE      reduce using rule 32 (value_numeric -> INTEGER .)
    FLOATTYPE       reduce using rule 32 (value_numeric -> INTEGER .)
    DECIMALTYPE     reduce using rule 32 (value_numeric -> INTEGER .)
    INTTYPE         reduce using rule 32 (value_numeric -> INTEGER .)
    BOOLTYPE        reduce using rule 32 (value_numeric -> INTEGER .)
    RKEY            reduce using rule 32 (value_numeric -> INTEGER .)
    PLUS            reduce using rule 32 (value_numeric -> INTEGER .)
    MINUS           reduce using rule 32 (value_numeric -> INTEGER .)
    TIMES           reduce using rule 32 (value_numeric -> INTEGER .)
    DIVIDE          reduce using rule 32 (value_numeric -> INTEGER .)
    PERCENT         reduce using rule 32 (value_numeric -> INTEGER .)
    GREATER_THAN    reduce using rule 32 (value_numeric -> INTEGER .)
    SMALLER_THAN    reduce using rule 32 (value_numeric -> INTEGER .)
    EQUAL_COMPARATION reduce using rule 32 (value_numeric -> INTEGER .)
    INEQUALITY      reduce using rule 32 (value_numeric -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 32 (value_numeric -> INTEGER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 32 (value_numeric -> INTEGER .)
    LOGICAND        reduce using rule 32 (value_numeric -> INTEGER .)
    LOGICOR         reduce using rule 32 (value_numeric -> INTEGER .)
    LOGICNOT        reduce using rule 32 (value_numeric -> INTEGER .)
    LOGICXOR        reduce using rule 32 (value_numeric -> INTEGER .)
    DOTANDCOMMA     reduce using rule 32 (value_numeric -> INTEGER .)
    RPARENT         reduce using rule 32 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 32 (value_numeric -> INTEGER .)


state 53

    (33) value_numeric -> FLOAT_NUMBER .

    PRINT           reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    READ            reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    VARIABLE        reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    CONST           reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    INTEGER         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    LIST            reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    DICTIONARY      reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    FOR             reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    FOREACH         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    TRY             reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    WHILE           reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    DO              reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    PUBLIC          reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    PRIVATE         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    CHARTYPE        reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    STRINGTYPE      reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    FLOATTYPE       reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    DECIMALTYPE     reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    INTTYPE         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    BOOLTYPE        reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    RKEY            reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    PLUS            reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    MINUS           reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    TIMES           reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    PERCENT         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN    reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    EQUAL_COMPARATION reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    INEQUALITY      reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    LOGICAND        reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    LOGICOR         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    LOGICNOT        reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    LOGICXOR        reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    DOTANDCOMMA     reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    RPARENT         reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 33 (value_numeric -> FLOAT_NUMBER .)


state 54

    (34) value_numeric -> DECIMAL_NUMBER .

    PRINT           reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    READ            reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    VARIABLE        reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    CONST           reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    INTEGER         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    FLOAT_NUMBER    reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    LIST            reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    DICTIONARY      reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    FOR             reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    FOREACH         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    TRY             reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    WHILE           reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    DO              reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    PUBLIC          reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    PRIVATE         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    CHARTYPE        reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    STRINGTYPE      reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    FLOATTYPE       reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    DECIMALTYPE     reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    INTTYPE         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    BOOLTYPE        reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    RKEY            reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    PLUS            reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    MINUS           reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    TIMES           reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    DIVIDE          reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    PERCENT         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN    reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN    reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    EQUAL_COMPARATION reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    INEQUALITY      reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    LOGICAND        reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    LOGICOR         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    LOGICNOT        reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    LOGICXOR        reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    DOTANDCOMMA     reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    RPARENT         reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 34 (value_numeric -> DECIMAL_NUMBER .)


state 55

    (125) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 105


state 56

    (82) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 82 (data_type -> STRINGTYPE .)
    READ            reduce using rule 82 (data_type -> STRINGTYPE .)


state 57

    (85) data_type -> INTTYPE .

    VARIABLE        reduce using rule 85 (data_type -> INTTYPE .)
    READ            reduce using rule 85 (data_type -> INTTYPE .)


state 58

    (110) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 106


state 59

    (91) for_anidado -> for_simple .

    PRINT           reduce using rule 91 (for_anidado -> for_simple .)
    READ            reduce using rule 91 (for_anidado -> for_simple .)
    VARIABLE        reduce using rule 91 (for_anidado -> for_simple .)
    CONST           reduce using rule 91 (for_anidado -> for_simple .)
    INTEGER         reduce using rule 91 (for_anidado -> for_simple .)
    FLOAT_NUMBER    reduce using rule 91 (for_anidado -> for_simple .)
    DECIMAL_NUMBER  reduce using rule 91 (for_anidado -> for_simple .)
    LIST            reduce using rule 91 (for_anidado -> for_simple .)
    DICTIONARY      reduce using rule 91 (for_anidado -> for_simple .)
    FOR             reduce using rule 91 (for_anidado -> for_simple .)
    FOREACH         reduce using rule 91 (for_anidado -> for_simple .)
    TRY             reduce using rule 91 (for_anidado -> for_simple .)
    WHILE           reduce using rule 91 (for_anidado -> for_simple .)
    DO              reduce using rule 91 (for_anidado -> for_simple .)
    PUBLIC          reduce using rule 91 (for_anidado -> for_simple .)
    PRIVATE         reduce using rule 91 (for_anidado -> for_simple .)
    CHARTYPE        reduce using rule 91 (for_anidado -> for_simple .)
    STRINGTYPE      reduce using rule 91 (for_anidado -> for_simple .)
    FLOATTYPE       reduce using rule 91 (for_anidado -> for_simple .)
    DECIMALTYPE     reduce using rule 91 (for_anidado -> for_simple .)
    INTTYPE         reduce using rule 91 (for_anidado -> for_simple .)
    BOOLTYPE        reduce using rule 91 (for_anidado -> for_simple .)
    RKEY            reduce using rule 91 (for_anidado -> for_simple .)


state 60

    (92) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> FOR . LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 107


state 61

    (94) for_each -> FOREACH . LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 108


state 62

    (97) try_catch_simply -> TRY . LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY . LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LKEY            shift and go to state 109


state 63

    (101) normal_while -> WHILE . LPARENT logic_operation RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 110


state 64

    (102) do_while -> DO . LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT

    LKEY            shift and go to state 111


state 65

    (60) access_modifiers -> PRIVATE .

    CONST           reduce using rule 60 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 60 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 60 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 60 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 60 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 60 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 60 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 60 (access_modifiers -> PRIVATE .)


state 66

    (81) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 81 (data_type -> CHARTYPE .)
    READ            reduce using rule 81 (data_type -> CHARTYPE .)


state 67

    (83) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 83 (data_type -> FLOATTYPE .)
    READ            reduce using rule 83 (data_type -> FLOATTYPE .)


state 68

    (84) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 84 (data_type -> DECIMALTYPE .)
    READ            reduce using rule 84 (data_type -> DECIMALTYPE .)


state 69

    (86) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 86 (data_type -> BOOLTYPE .)
    READ            reduce using rule 86 (data_type -> BOOLTYPE .)


state 70

    (39) arithmetic_operation -> VARIABLE arithmetic_operator . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 112
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    arithmetic_operation           shift and go to state 113
    value_numeric                  shift and go to state 114

state 71

    (43) logic_operation -> VARIABLE logic_operator . logic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 115
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    logic_operation                shift and go to state 116
    value_numeric                  shift and go to state 117
    arithmetic_operation           shift and go to state 118

state 72

    (73) late_initialization -> VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    LIST            reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    DICTIONARY      reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    FOR             reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    FOREACH         reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    TRY             reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    WHILE           reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    DO              reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 73 (late_initialization -> VARIABLE DOTANDCOMMA .)


state 73

    (137) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (121) dict_func_put -> VARIABLE DOT . PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> VARIABLE DOT . REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 119
    COUNT           shift and go to state 120
    ADD             shift and go to state 121
    REMOVEAT        shift and go to state 122
    PUT             shift and go to state 123
    REMOVE          shift and go to state 124


state 74

    (75) assignation_key_value -> VARIABLE ASSIGNATION . value
    (21) value -> . value_numeric
    (22) value -> . value_logic
    (23) value -> . value_string
    (24) value -> . read_data
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (29) value_logic -> . BOOLTRUE
    (30) value_logic -> . BOOLFALSE
    (31) value_logic -> . logic_operation
    (25) value_string -> . STRING
    (26) value_string -> . CHAR
    (27) value_string -> . VARIABLE
    (28) value_string -> . concatenation
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (19) concatenation -> . STRING
    (20) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    BOOLTRUE        shift and go to state 131
    BOOLFALSE       shift and go to state 132
    STRING          shift and go to state 134
    CHAR            shift and go to state 135
    VARIABLE        shift and go to state 125
    READ            shift and go to state 137

    value                          shift and go to state 126
    value_numeric                  shift and go to state 127
    value_logic                    shift and go to state 128
    value_string                   shift and go to state 129
    read_data                      shift and go to state 130
    arithmetic_operation           shift and go to state 118
    logic_operation                shift and go to state 133
    concatenation                  shift and go to state 136

state 75

    (54) arithmetic_operator -> PLUS .

    VARIABLE        reduce using rule 54 (arithmetic_operator -> PLUS .)
    INTEGER         reduce using rule 54 (arithmetic_operator -> PLUS .)
    FLOAT_NUMBER    reduce using rule 54 (arithmetic_operator -> PLUS .)
    DECIMAL_NUMBER  reduce using rule 54 (arithmetic_operator -> PLUS .)


state 76

    (55) arithmetic_operator -> MINUS .

    VARIABLE        reduce using rule 55 (arithmetic_operator -> MINUS .)
    INTEGER         reduce using rule 55 (arithmetic_operator -> MINUS .)
    FLOAT_NUMBER    reduce using rule 55 (arithmetic_operator -> MINUS .)
    DECIMAL_NUMBER  reduce using rule 55 (arithmetic_operator -> MINUS .)


state 77

    (56) arithmetic_operator -> TIMES .

    VARIABLE        reduce using rule 56 (arithmetic_operator -> TIMES .)
    INTEGER         reduce using rule 56 (arithmetic_operator -> TIMES .)
    FLOAT_NUMBER    reduce using rule 56 (arithmetic_operator -> TIMES .)
    DECIMAL_NUMBER  reduce using rule 56 (arithmetic_operator -> TIMES .)


state 78

    (57) arithmetic_operator -> DIVIDE .

    VARIABLE        reduce using rule 57 (arithmetic_operator -> DIVIDE .)
    INTEGER         reduce using rule 57 (arithmetic_operator -> DIVIDE .)
    FLOAT_NUMBER    reduce using rule 57 (arithmetic_operator -> DIVIDE .)
    DECIMAL_NUMBER  reduce using rule 57 (arithmetic_operator -> DIVIDE .)


state 79

    (58) arithmetic_operator -> PERCENT .

    VARIABLE        reduce using rule 58 (arithmetic_operator -> PERCENT .)
    INTEGER         reduce using rule 58 (arithmetic_operator -> PERCENT .)
    FLOAT_NUMBER    reduce using rule 58 (arithmetic_operator -> PERCENT .)
    DECIMAL_NUMBER  reduce using rule 58 (arithmetic_operator -> PERCENT .)


state 80

    (44) logic_operator -> GREATER_THAN .

    VARIABLE        reduce using rule 44 (logic_operator -> GREATER_THAN .)
    INTEGER         reduce using rule 44 (logic_operator -> GREATER_THAN .)
    FLOAT_NUMBER    reduce using rule 44 (logic_operator -> GREATER_THAN .)
    DECIMAL_NUMBER  reduce using rule 44 (logic_operator -> GREATER_THAN .)


state 81

    (45) logic_operator -> SMALLER_THAN .

    VARIABLE        reduce using rule 45 (logic_operator -> SMALLER_THAN .)
    INTEGER         reduce using rule 45 (logic_operator -> SMALLER_THAN .)
    FLOAT_NUMBER    reduce using rule 45 (logic_operator -> SMALLER_THAN .)
    DECIMAL_NUMBER  reduce using rule 45 (logic_operator -> SMALLER_THAN .)


state 82

    (46) logic_operator -> EQUAL_COMPARATION .

    VARIABLE        reduce using rule 46 (logic_operator -> EQUAL_COMPARATION .)
    INTEGER         reduce using rule 46 (logic_operator -> EQUAL_COMPARATION .)
    FLOAT_NUMBER    reduce using rule 46 (logic_operator -> EQUAL_COMPARATION .)
    DECIMAL_NUMBER  reduce using rule 46 (logic_operator -> EQUAL_COMPARATION .)


state 83

    (47) logic_operator -> INEQUALITY .

    VARIABLE        reduce using rule 47 (logic_operator -> INEQUALITY .)
    INTEGER         reduce using rule 47 (logic_operator -> INEQUALITY .)
    FLOAT_NUMBER    reduce using rule 47 (logic_operator -> INEQUALITY .)
    DECIMAL_NUMBER  reduce using rule 47 (logic_operator -> INEQUALITY .)


state 84

    (48) logic_operator -> GREATER_THAN_OR_EQUAL .

    VARIABLE        reduce using rule 48 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    INTEGER         reduce using rule 48 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    FLOAT_NUMBER    reduce using rule 48 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    DECIMAL_NUMBER  reduce using rule 48 (logic_operator -> GREATER_THAN_OR_EQUAL .)


state 85

    (49) logic_operator -> SMALLER_THAN_OR_EQUAL .

    VARIABLE        reduce using rule 49 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    INTEGER         reduce using rule 49 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    FLOAT_NUMBER    reduce using rule 49 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    DECIMAL_NUMBER  reduce using rule 49 (logic_operator -> SMALLER_THAN_OR_EQUAL .)


state 86

    (50) logic_operator -> LOGICAND .

    VARIABLE        reduce using rule 50 (logic_operator -> LOGICAND .)
    INTEGER         reduce using rule 50 (logic_operator -> LOGICAND .)
    FLOAT_NUMBER    reduce using rule 50 (logic_operator -> LOGICAND .)
    DECIMAL_NUMBER  reduce using rule 50 (logic_operator -> LOGICAND .)


state 87

    (51) logic_operator -> LOGICOR .

    VARIABLE        reduce using rule 51 (logic_operator -> LOGICOR .)
    INTEGER         reduce using rule 51 (logic_operator -> LOGICOR .)
    FLOAT_NUMBER    reduce using rule 51 (logic_operator -> LOGICOR .)
    DECIMAL_NUMBER  reduce using rule 51 (logic_operator -> LOGICOR .)


state 88

    (52) logic_operator -> LOGICNOT .

    VARIABLE        reduce using rule 52 (logic_operator -> LOGICNOT .)
    INTEGER         reduce using rule 52 (logic_operator -> LOGICNOT .)
    FLOAT_NUMBER    reduce using rule 52 (logic_operator -> LOGICNOT .)
    DECIMAL_NUMBER  reduce using rule 52 (logic_operator -> LOGICNOT .)


state 89

    (53) logic_operator -> LOGICXOR .

    VARIABLE        reduce using rule 53 (logic_operator -> LOGICXOR .)
    INTEGER         reduce using rule 53 (logic_operator -> LOGICXOR .)
    FLOAT_NUMBER    reduce using rule 53 (logic_operator -> LOGICXOR .)
    DECIMAL_NUMBER  reduce using rule 53 (logic_operator -> LOGICXOR .)


state 90

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 2 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)


state 91

    (16) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 16 (all_block_code -> block_code all_block_code .)


state 92

    (17) print_data -> PRINT LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 138


state 93

    (18) read_data -> READ LPARENT . RPARENT DOTANDCOMMA
    (76) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 139


state 94

    (38) arithmetic_operation -> value_numeric arithmetic_operator . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 112
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    value_numeric                  shift and go to state 114
    arithmetic_operation           shift and go to state 140

state 95

    (42) logic_operation -> value_numeric logic_operator . logic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 115
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    value_numeric                  shift and go to state 117
    logic_operation                shift and go to state 141
    arithmetic_operation           shift and go to state 118

state 96

    (64) constant_assignation -> access_modifiers CONST . data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> access_modifiers CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 142

state 97

    (68) variable_assignation -> access_modifiers data_type . assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> access_modifiers data_type . assignation_key_value_multiple DOTANDCOMMA
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (77) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (78) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 102
    READ            shift and go to state 103

    assignation_key_value          shift and go to state 143
    assignation_key_value_multiple shift and go to state 144

state 98

    (72) late_initialization -> access_modifiers VARIABLE . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 145


state 99

    (65) constant_assignation -> CONST data_type . assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (77) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (78) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 102
    READ            shift and go to state 103

    assignation_key_value          shift and go to state 146
    assignation_key_value_multiple shift and go to state 147

state 100

    (69) variable_assignation -> data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 148


state 101

    (71) variable_assignation -> data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 149


state 102

    (75) assignation_key_value -> VARIABLE . ASSIGNATION value
    (77) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value
    (78) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value COMMA assignation_key_value_multiple

    ASSIGNATION     shift and go to state 150


state 103

    (76) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 151


state 104

    (74) late_initialization -> assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 74 (late_initialization -> assignation_key_value DOTANDCOMMA .)


state 105

    (125) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 152
    INTTYPE         shift and go to state 153


state 106

    (110) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 154


state 107

    (92) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> FOR LPARENT . assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (79) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (80) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    assignation_with_datatype      shift and go to state 155
    data_type                      shift and go to state 156

state 108

    (94) for_each -> FOREACH LPARENT . data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 157

state 109

    (97) try_catch_simply -> TRY LKEY . all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY . all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    all_block_code                 shift and go to state 158
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 110

    (101) normal_while -> WHILE LPARENT . logic_operation RPARENT LKEY all_block_code RKEY
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 115
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    logic_operation                shift and go to state 159
    value_numeric                  shift and go to state 117
    arithmetic_operation           shift and go to state 118

state 111

    (102) do_while -> DO LKEY . all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    all_block_code                 shift and go to state 160
    logic_operation                shift and go to state 18
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 112

    (37) arithmetic_operation -> VARIABLE .
    (39) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN    reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN    reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    EQUAL_COMPARATION reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INEQUALITY      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN_OR_EQUAL reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LOGICAND        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LOGICOR         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LOGICNOT        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LOGICXOR        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    RPARENT         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    COMMA           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79

  ! PLUS            [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 70

state 113

    (39) arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .
    (35) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RPARENT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 35 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 35 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 35 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 35 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LIST            [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FOR             [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TRY             [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DO              [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RPARENT         [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 39 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]


state 114

    (36) arithmetic_operation -> value_numeric .
    (38) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 36 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    GREATER_THAN    reduce using rule 36 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN    reduce using rule 36 (arithmetic_operation -> value_numeric .)
    EQUAL_COMPARATION reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INEQUALITY      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    GREATER_THAN_OR_EQUAL reduce using rule 36 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN_OR_EQUAL reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LOGICAND        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LOGICOR         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LOGICNOT        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LOGICXOR        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DOTANDCOMMA     reduce using rule 36 (arithmetic_operation -> value_numeric .)
    RPARENT         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    COMMA           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79

  ! PLUS            [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 94

state 115

    (41) logic_operation -> VARIABLE .
    (43) logic_operation -> VARIABLE . logic_operator logic_operation
    (37) arithmetic_operation -> VARIABLE .
    (39) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (44) logic_operator -> . GREATER_THAN
    (45) logic_operator -> . SMALLER_THAN
    (46) logic_operator -> . EQUAL_COMPARATION
    (47) logic_operator -> . INEQUALITY
    (48) logic_operator -> . GREATER_THAN_OR_EQUAL
    (49) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (50) logic_operator -> . LOGICAND
    (51) logic_operator -> . LOGICOR
    (52) logic_operator -> . LOGICNOT
    (53) logic_operator -> . LOGICXOR
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT

  ! reduce/reduce conflict for PRINT resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for READ resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CONST resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTEGER resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for LIST resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FOR resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FOREACH resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for TRY resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 37 (arithmetic_operation -> VARIABLE .)
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    RPARENT         reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    COMMA           reduce using rule 37 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN    shift and go to state 80
    SMALLER_THAN    shift and go to state 81
    EQUAL_COMPARATION shift and go to state 82
    INEQUALITY      shift and go to state 83
    GREATER_THAN_OR_EQUAL shift and go to state 84
    SMALLER_THAN_OR_EQUAL shift and go to state 85
    LOGICAND        shift and go to state 86
    LOGICOR         shift and go to state 87
    LOGICNOT        shift and go to state 88
    LOGICXOR        shift and go to state 89
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79

  ! PRINT           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! READ            [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! CONST           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! INTEGER         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FLOAT_NUMBER    [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! LIST            [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DICTIONARY      [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FOR             [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FOREACH         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! TRY             [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! WHILE           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DO              [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! PUBLIC          [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! PRIVATE         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! CHARTYPE        [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! STRINGTYPE      [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! FLOATTYPE       [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DECIMALTYPE     [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! INTTYPE         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! BOOLTYPE        [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]

    logic_operator                 shift and go to state 71
    arithmetic_operator            shift and go to state 70

state 116

    (43) logic_operation -> VARIABLE logic_operator logic_operation .

    PRINT           reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    READ            reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    VARIABLE        reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    CONST           reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    INTEGER         reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    FLOAT_NUMBER    reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DECIMAL_NUMBER  reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    LIST            reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DICTIONARY      reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    FOR             reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    FOREACH         reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    TRY             reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    WHILE           reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DO              reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    PUBLIC          reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    PRIVATE         reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    CHARTYPE        reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    STRINGTYPE      reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    FLOATTYPE       reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DECIMALTYPE     reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    INTTYPE         reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    BOOLTYPE        reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    RKEY            reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    DOTANDCOMMA     reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    RPARENT         reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)
    COMMA           reduce using rule 43 (logic_operation -> VARIABLE logic_operator logic_operation .)


state 117

    (40) logic_operation -> value_numeric .
    (42) logic_operation -> value_numeric . logic_operator logic_operation
    (36) arithmetic_operation -> value_numeric .
    (38) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (44) logic_operator -> . GREATER_THAN
    (45) logic_operator -> . SMALLER_THAN
    (46) logic_operator -> . EQUAL_COMPARATION
    (47) logic_operator -> . INEQUALITY
    (48) logic_operator -> . GREATER_THAN_OR_EQUAL
    (49) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (50) logic_operator -> . LOGICAND
    (51) logic_operator -> . LOGICOR
    (52) logic_operator -> . LOGICNOT
    (53) logic_operator -> . LOGICXOR
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT

  ! reduce/reduce conflict for PRINT resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for READ resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CONST resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTEGER resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for LIST resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FOR resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FOREACH resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for TRY resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for WHILE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DO resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for RPARENT resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (arithmetic_operation -> value_numeric .)
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 36 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 36 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 36 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 36 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 36 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 36 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 36 (arithmetic_operation -> value_numeric .)
    DOTANDCOMMA     reduce using rule 36 (arithmetic_operation -> value_numeric .)
    RPARENT         reduce using rule 36 (arithmetic_operation -> value_numeric .)
    COMMA           reduce using rule 36 (arithmetic_operation -> value_numeric .)
    GREATER_THAN    shift and go to state 80
    SMALLER_THAN    shift and go to state 81
    EQUAL_COMPARATION shift and go to state 82
    INEQUALITY      shift and go to state 83
    GREATER_THAN_OR_EQUAL shift and go to state 84
    SMALLER_THAN_OR_EQUAL shift and go to state 85
    LOGICAND        shift and go to state 86
    LOGICOR         shift and go to state 87
    LOGICNOT        shift and go to state 88
    LOGICXOR        shift and go to state 89
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79

  ! PRINT           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! READ            [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! VARIABLE        [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! CONST           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! INTEGER         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FLOAT_NUMBER    [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! LIST            [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DICTIONARY      [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FOR             [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FOREACH         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! TRY             [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! WHILE           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DO              [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! PUBLIC          [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! PRIVATE         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! CHARTYPE        [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! STRINGTYPE      [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! FLOATTYPE       [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DECIMALTYPE     [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! INTTYPE         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! BOOLTYPE        [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! RPARENT         [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! PLUS            [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]

    logic_operator                 shift and go to state 95
    arithmetic_operator            shift and go to state 94

state 118

    (35) value_numeric -> arithmetic_operation .

    GREATER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 35 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 35 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 35 (value_numeric -> arithmetic_operation .)


state 119

    (137) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 161


state 120

    (138) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 162


state 121

    (139) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 163


state 122

    (140) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 164


state 123

    (121) dict_func_put -> VARIABLE DOT PUT . LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 165


state 124

    (122) dict_func_remove -> VARIABLE DOT REMOVE . LPARENT VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 166


state 125

    (27) value_string -> VARIABLE .
    (37) arithmetic_operation -> VARIABLE .
    (39) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (41) logic_operation -> VARIABLE .
    (43) logic_operation -> VARIABLE . logic_operator logic_operation
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT
    (44) logic_operator -> . GREATER_THAN
    (45) logic_operator -> . SMALLER_THAN
    (46) logic_operator -> . EQUAL_COMPARATION
    (47) logic_operator -> . INEQUALITY
    (48) logic_operator -> . GREATER_THAN_OR_EQUAL
    (49) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (50) logic_operator -> . LOGICAND
    (51) logic_operator -> . LOGICOR
    (52) logic_operator -> . LOGICNOT
    (53) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 27 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 27 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 27 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 27 (value_string -> VARIABLE .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 27 (value_string -> VARIABLE .)
    COMMA           reduce using rule 27 (value_string -> VARIABLE .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79
    GREATER_THAN    shift and go to state 80
    SMALLER_THAN    shift and go to state 81
    EQUAL_COMPARATION shift and go to state 82
    INEQUALITY      shift and go to state 83
    GREATER_THAN_OR_EQUAL shift and go to state 84
    SMALLER_THAN_OR_EQUAL shift and go to state 85
    LOGICAND        shift and go to state 86
    LOGICOR         shift and go to state 87
    LOGICNOT        shift and go to state 88
    LOGICXOR        shift and go to state 89

  ! PLUS            [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 37 (arithmetic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 41 (logic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 41 (logic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 70
    logic_operator                 shift and go to state 71

state 126

    (75) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 75 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 127

    (21) value -> value_numeric .
    (36) arithmetic_operation -> value_numeric .
    (38) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (40) logic_operation -> value_numeric .
    (42) logic_operation -> value_numeric . logic_operator logic_operation
    (54) arithmetic_operator -> . PLUS
    (55) arithmetic_operator -> . MINUS
    (56) arithmetic_operator -> . TIMES
    (57) arithmetic_operator -> . DIVIDE
    (58) arithmetic_operator -> . PERCENT
    (44) logic_operator -> . GREATER_THAN
    (45) logic_operator -> . SMALLER_THAN
    (46) logic_operator -> . EQUAL_COMPARATION
    (47) logic_operator -> . INEQUALITY
    (48) logic_operator -> . GREATER_THAN_OR_EQUAL
    (49) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (50) logic_operator -> . LOGICAND
    (51) logic_operator -> . LOGICOR
    (52) logic_operator -> . LOGICNOT
    (53) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 21 (value -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 21 (value -> value_numeric .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 21 (value -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 21 (value -> value_numeric .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 21 (value -> value_numeric .)
    COMMA           reduce using rule 21 (value -> value_numeric .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PERCENT         shift and go to state 79
    GREATER_THAN    shift and go to state 80
    SMALLER_THAN    shift and go to state 81
    EQUAL_COMPARATION shift and go to state 82
    INEQUALITY      shift and go to state 83
    GREATER_THAN_OR_EQUAL shift and go to state 84
    SMALLER_THAN_OR_EQUAL shift and go to state 85
    LOGICAND        shift and go to state 86
    LOGICOR         shift and go to state 87
    LOGICNOT        shift and go to state 88
    LOGICXOR        shift and go to state 89

  ! PLUS            [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 36 (arithmetic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 40 (logic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 40 (logic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 94
    logic_operator                 shift and go to state 95

state 128

    (22) value -> value_logic .

    DOTANDCOMMA     reduce using rule 22 (value -> value_logic .)
    COMMA           reduce using rule 22 (value -> value_logic .)


state 129

    (23) value -> value_string .

    DOTANDCOMMA     reduce using rule 23 (value -> value_string .)
    COMMA           reduce using rule 23 (value -> value_string .)


state 130

    (24) value -> read_data .

    DOTANDCOMMA     reduce using rule 24 (value -> read_data .)
    COMMA           reduce using rule 24 (value -> read_data .)


state 131

    (29) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 29 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 29 (value_logic -> BOOLTRUE .)


state 132

    (30) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 30 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 30 (value_logic -> BOOLFALSE .)


state 133

    (31) value_logic -> logic_operation .

    DOTANDCOMMA     reduce using rule 31 (value_logic -> logic_operation .)
    COMMA           reduce using rule 31 (value_logic -> logic_operation .)


state 134

    (25) value_string -> STRING .
    (19) concatenation -> STRING .
    (20) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 19 (concatenation -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 19 (concatenation -> STRING .)
    DOTANDCOMMA     reduce using rule 19 (concatenation -> STRING .)
    COMMA           reduce using rule 19 (concatenation -> STRING .)
    PLUS            shift and go to state 167

  ! DOTANDCOMMA     [ reduce using rule 25 (value_string -> STRING .) ]
  ! COMMA           [ reduce using rule 25 (value_string -> STRING .) ]


state 135

    (26) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 26 (value_string -> CHAR .)
    COMMA           reduce using rule 26 (value_string -> CHAR .)


state 136

    (28) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 28 (value_string -> concatenation .)
    COMMA           reduce using rule 28 (value_string -> concatenation .)


state 137

    (18) read_data -> READ . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 168


state 138

    (17) print_data -> PRINT LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 169


state 139

    (18) read_data -> READ LPARENT RPARENT . DOTANDCOMMA
    (76) assignation_key_value -> READ LPARENT RPARENT .

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 170

  ! DOTANDCOMMA     [ reduce using rule 76 (assignation_key_value -> READ LPARENT RPARENT .) ]


state 140

    (38) arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .
    (35) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RPARENT resolved using rule 35 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 35 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 35 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 35 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 35 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 35 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 35 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 35 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 35 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 35 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 35 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 35 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LIST            [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FOR             [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TRY             [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DO              [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RPARENT         [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 38 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]


state 141

    (42) logic_operation -> value_numeric logic_operator logic_operation .

    PRINT           reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    READ            reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    VARIABLE        reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    CONST           reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    INTEGER         reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    FLOAT_NUMBER    reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    DECIMAL_NUMBER  reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    LIST            reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    DICTIONARY      reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    FOR             reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    FOREACH         reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    TRY             reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    WHILE           reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    DO              reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    PUBLIC          reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    PRIVATE         reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    CHARTYPE        reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    STRINGTYPE      reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    FLOATTYPE       reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    DECIMALTYPE     reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    INTTYPE         reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    BOOLTYPE        reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    RKEY            reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    DOTANDCOMMA     reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    RPARENT         reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)
    COMMA           reduce using rule 42 (logic_operation -> value_numeric logic_operator logic_operation .)


state 142

    (64) constant_assignation -> access_modifiers CONST data_type . assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> access_modifiers CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (77) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (78) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 102
    READ            shift and go to state 103

    assignation_key_value          shift and go to state 171
    assignation_key_value_multiple shift and go to state 172

state 143

    (68) variable_assignation -> access_modifiers data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 173


state 144

    (70) variable_assignation -> access_modifiers data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 174


state 145

    (72) late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    LIST            reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    DICTIONARY      reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    FOR             reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    FOREACH         reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    TRY             reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    WHILE           reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    DO              reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 72 (late_initialization -> access_modifiers VARIABLE DOTANDCOMMA .)


state 146

    (65) constant_assignation -> CONST data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 175


state 147

    (67) constant_assignation -> CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 176


state 148

    (69) variable_assignation -> data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 69 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)


state 149

    (71) variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 71 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)


state 150

    (75) assignation_key_value -> VARIABLE ASSIGNATION . value
    (77) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value
    (78) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value COMMA assignation_key_value_multiple
    (21) value -> . value_numeric
    (22) value -> . value_logic
    (23) value -> . value_string
    (24) value -> . read_data
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (29) value_logic -> . BOOLTRUE
    (30) value_logic -> . BOOLFALSE
    (31) value_logic -> . logic_operation
    (25) value_string -> . STRING
    (26) value_string -> . CHAR
    (27) value_string -> . VARIABLE
    (28) value_string -> . concatenation
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (19) concatenation -> . STRING
    (20) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    BOOLTRUE        shift and go to state 131
    BOOLFALSE       shift and go to state 132
    STRING          shift and go to state 134
    CHAR            shift and go to state 135
    VARIABLE        shift and go to state 125
    READ            shift and go to state 137

    value                          shift and go to state 177
    value_numeric                  shift and go to state 127
    value_logic                    shift and go to state 128
    value_string                   shift and go to state 129
    read_data                      shift and go to state 130
    arithmetic_operation           shift and go to state 118
    logic_operation                shift and go to state 133
    concatenation                  shift and go to state 136

state 151

    (76) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 178


state 152

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 179


state 153

    (126) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 180


state 154

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 181


state 155

    (92) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype . logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 115
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    logic_operation                shift and go to state 182
    value_numeric                  shift and go to state 117
    arithmetic_operation           shift and go to state 118

state 156

    (79) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (80) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT

    VARIABLE        shift and go to state 184
    READ            shift and go to state 103

    assignation_key_value          shift and go to state 183

state 157

    (94) for_each -> FOREACH LPARENT data_type . VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 185


state 158

    (97) try_catch_simply -> TRY LKEY all_block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    RKEY            shift and go to state 186


state 159

    (101) normal_while -> WHILE LPARENT logic_operation . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 187


state 160

    (102) do_while -> DO LKEY all_block_code . RKEY WHILE LPARENT logic_operation RPARENT

    RKEY            shift and go to state 188


state 161

    (137) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 189


state 162

    (138) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 190


state 163

    (139) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 191


state 164

    (140) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 192


state 165

    (121) dict_func_put -> VARIABLE DOT PUT LPARENT . STRING COMMA VARIABLE RPARENT DOTANDCOMMA

    STRING          shift and go to state 193


state 166

    (122) dict_func_remove -> VARIABLE DOT REMOVE LPARENT . VARIABLE RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 194


state 167

    (20) concatenation -> STRING PLUS . concatenation
    (19) concatenation -> . STRING
    (20) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 195

    concatenation                  shift and go to state 196

state 168

    (18) read_data -> READ LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 197


state 169

    (17) print_data -> PRINT LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 198


state 170

    (18) read_data -> READ LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DOTANDCOMMA     reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    COMMA           reduce using rule 18 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)


state 171

    (64) constant_assignation -> access_modifiers CONST data_type assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 199


state 172

    (66) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 200


state 173

    (68) variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 68 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)


state 174

    (70) variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 70 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)


state 175

    (65) constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 65 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)


state 176

    (67) constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 67 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 177

    (75) assignation_key_value -> VARIABLE ASSIGNATION value .
    (77) assignation_key_value_multiple -> VARIABLE ASSIGNATION value .
    (78) assignation_key_value_multiple -> VARIABLE ASSIGNATION value . COMMA assignation_key_value_multiple

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 75 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    DOTANDCOMMA     reduce using rule 75 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           shift and go to state 201

  ! DOTANDCOMMA     [ reduce using rule 77 (assignation_key_value_multiple -> VARIABLE ASSIGNATION value .) ]


state 178

    (76) assignation_key_value -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 76 (assignation_key_value -> READ LPARENT RPARENT .)


state 179

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 202


state 180

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 203


state 181

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 204


state 182

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    DOTANDCOMMA     shift and go to state 205


state 183

    (79) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (80) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 206


state 184

    (75) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 74


state 185

    (94) for_each -> FOREACH LPARENT data_type VARIABLE . IN VARIABLE RPARENT LKEY all_block_code RKEY

    IN              shift and go to state 207


state 186

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    CATCH           shift and go to state 208


state 187

    (101) normal_while -> WHILE LPARENT logic_operation RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 209


state 188

    (102) do_while -> DO LKEY all_block_code RKEY . WHILE LPARENT logic_operation RPARENT

    WHILE           shift and go to state 210


state 189

    (137) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 211


state 190

    (138) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 212


state 191

    (139) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 213


state 192

    (140) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 214


state 193

    (121) dict_func_put -> VARIABLE DOT PUT LPARENT STRING . COMMA VARIABLE RPARENT DOTANDCOMMA

    COMMA           shift and go to state 215


state 194

    (122) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 216


state 195

    (19) concatenation -> STRING .
    (20) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 19 (concatenation -> STRING .)
    COMMA           reduce using rule 19 (concatenation -> STRING .)
    PLUS            shift and go to state 167


state 196

    (20) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 20 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 20 (concatenation -> STRING PLUS concatenation .)


state 197

    (18) read_data -> READ LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 170


state 198

    (17) print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 17 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)


state 199

    (64) constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 64 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)


state 200

    (66) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 66 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 201

    (78) assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA . assignation_key_value_multiple
    (77) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value
    (78) assignation_key_value_multiple -> . VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 217

    assignation_key_value_multiple shift and go to state 218

state 202

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 219


state 203

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 220


state 204

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 221


state 205

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 222


state 206

    (79) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .
    (80) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (79) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (80) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE

    VARIABLE        reduce using rule 79 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 79 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 79 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 79 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 156
    assignation_with_datatype      shift and go to state 223

state 207

    (94) for_each -> FOREACH LPARENT data_type VARIABLE IN . VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 224


state 208

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LPARENT         shift and go to state 225


state 209

    (101) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY . all_block_code RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    logic_operation                shift and go to state 18
    all_block_code                 shift and go to state 226
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 210

    (102) do_while -> DO LKEY all_block_code RKEY WHILE . LPARENT logic_operation RPARENT

    LPARENT         shift and go to state 227


state 211

    (137) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 137 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)


state 212

    (138) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 138 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)


state 213

    (139) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 228


state 214

    (140) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 229


state 215

    (121) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA . VARIABLE RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 230


state 216

    (122) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 231


state 217

    (77) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value
    (78) assignation_key_value_multiple -> VARIABLE . ASSIGNATION value COMMA assignation_key_value_multiple

    ASSIGNATION     shift and go to state 232


state 218

    (78) assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple .

    DOTANDCOMMA     reduce using rule 78 (assignation_key_value_multiple -> VARIABLE ASSIGNATION value COMMA assignation_key_value_multiple .)


state 219

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    NEW             shift and go to state 233


state 220

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    NEW             shift and go to state 234


state 221

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 235


state 222

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY all_block_code RKEY

    INCREMENT       shift and go to state 236
    DECREMENT       shift and go to state 237


state 223

    (80) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTEGER         reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOAT_NUMBER    reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMAL_NUMBER  reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 224

    (94) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 238


state 225

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    EXCEPTION       shift and go to state 239


state 226

    (101) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 240


state 227

    (102) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT . logic_operation RPARENT
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 115
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54

    logic_operation                shift and go to state 241
    value_numeric                  shift and go to state 117
    arithmetic_operation           shift and go to state 118

state 228

    (139) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 139 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 229

    (140) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    READ            reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DO              reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 140 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)


state 230

    (121) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 242


state 231

    (122) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 122 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)


state 232

    (77) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value
    (78) assignation_key_value_multiple -> VARIABLE ASSIGNATION . value COMMA assignation_key_value_multiple
    (21) value -> . value_numeric
    (22) value -> . value_logic
    (23) value -> . value_string
    (24) value -> . read_data
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (29) value_logic -> . BOOLTRUE
    (30) value_logic -> . BOOLFALSE
    (31) value_logic -> . logic_operation
    (25) value_string -> . STRING
    (26) value_string -> . CHAR
    (27) value_string -> . VARIABLE
    (28) value_string -> . concatenation
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (19) concatenation -> . STRING
    (20) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    BOOLTRUE        shift and go to state 131
    BOOLFALSE       shift and go to state 132
    STRING          shift and go to state 134
    CHAR            shift and go to state 135
    VARIABLE        shift and go to state 125
    READ            shift and go to state 137

    value                          shift and go to state 243
    value_numeric                  shift and go to state 127
    value_logic                    shift and go to state 128
    value_string                   shift and go to state 129
    read_data                      shift and go to state 130
    arithmetic_operation           shift and go to state 118
    logic_operation                shift and go to state 133
    concatenation                  shift and go to state 136

state 233

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    LIST            shift and go to state 244


state 234

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 245


state 235

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 246


state 236

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 247


state 237

    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY for_anidado RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 248


state 238

    (94) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 249


state 239

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    VARIABLE        shift and go to state 250


state 240

    (101) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 101 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)


state 241

    (102) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation . RPARENT

    RPARENT         shift and go to state 251


state 242

    (121) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 252


state 243

    (77) assignation_key_value_multiple -> VARIABLE ASSIGNATION value .
    (78) assignation_key_value_multiple -> VARIABLE ASSIGNATION value . COMMA assignation_key_value_multiple

    DOTANDCOMMA     reduce using rule 77 (assignation_key_value_multiple -> VARIABLE ASSIGNATION value .)
    COMMA           shift and go to state 201


state 244

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 253


state 245

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 254


state 246

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 255


state 247

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 256


state 248

    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY for_anidado RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 257


state 249

    (94) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY . all_block_code RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    data_type                      shift and go to state 50
    all_block_code                 shift and go to state 258
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 250

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    RPARENT         shift and go to state 259


state 251

    (102) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .

    PRINT           reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    READ            reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    VARIABLE        reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CONST           reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTEGER         reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOAT_NUMBER    reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMAL_NUMBER  reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    LIST            reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DICTIONARY      reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOR             reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOREACH         reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    TRY             reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    WHILE           reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DO              reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PUBLIC          reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRIVATE         reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CHARTYPE        reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRINGTYPE      reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOATTYPE       reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMALTYPE     reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTTYPE         reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    BOOLTYPE        reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RKEY            reduce using rule 102 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)


state 252

    (121) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 121 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)


state 253

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 260


state 254

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 261


state 255

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 262


state 256

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . for_anidado RKEY
    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . all_block_code RKEY
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT

    FOR             shift and go to state 60
    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    logic_operation                shift and go to state 18
    for_anidado                    shift and go to state 263
    all_block_code                 shift and go to state 264
    for_simple                     shift and go to state 59
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51

state 257

    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . for_anidado RKEY
    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . all_block_code RKEY
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT

    FOR             shift and go to state 60
    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    logic_operation                shift and go to state 18
    for_anidado                    shift and go to state 265
    all_block_code                 shift and go to state 266
    for_simple                     shift and go to state 59
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51

state 258

    (94) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 267


state 259

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LKEY            shift and go to state 268


state 260

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 269


state 261

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 270


state 262

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 271


state 263

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado . RKEY
    (87) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 272
    PRINT           reduce using rule 87 (block_for -> for_anidado .)
    READ            reduce using rule 87 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 87 (block_for -> for_anidado .)
    CONST           reduce using rule 87 (block_for -> for_anidado .)
    INTEGER         reduce using rule 87 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 87 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 87 (block_for -> for_anidado .)
    LIST            reduce using rule 87 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 87 (block_for -> for_anidado .)
    FOR             reduce using rule 87 (block_for -> for_anidado .)
    FOREACH         reduce using rule 87 (block_for -> for_anidado .)
    TRY             reduce using rule 87 (block_for -> for_anidado .)
    WHILE           reduce using rule 87 (block_for -> for_anidado .)
    DO              reduce using rule 87 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 87 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 87 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 87 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 87 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 87 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 87 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 87 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 87 (block_for -> for_anidado .)

  ! RKEY            [ reduce using rule 87 (block_for -> for_anidado .) ]


state 264

    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 273


state 265

    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado . RKEY
    (87) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 274
    PRINT           reduce using rule 87 (block_for -> for_anidado .)
    READ            reduce using rule 87 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 87 (block_for -> for_anidado .)
    CONST           reduce using rule 87 (block_for -> for_anidado .)
    INTEGER         reduce using rule 87 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 87 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 87 (block_for -> for_anidado .)
    LIST            reduce using rule 87 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 87 (block_for -> for_anidado .)
    FOR             reduce using rule 87 (block_for -> for_anidado .)
    FOREACH         reduce using rule 87 (block_for -> for_anidado .)
    TRY             reduce using rule 87 (block_for -> for_anidado .)
    WHILE           reduce using rule 87 (block_for -> for_anidado .)
    DO              reduce using rule 87 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 87 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 87 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 87 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 87 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 87 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 87 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 87 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 87 (block_for -> for_anidado .)

  ! RKEY            [ reduce using rule 87 (block_for -> for_anidado .) ]


state 266

    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 275


state 267

    (94) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 94 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)


state 268

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . all_block_code RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    all_block_code                 shift and go to state 276
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 269

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 277


state 270

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 278


state 271

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY dictionary_value RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 279
    LKEY            shift and go to state 280


state 272

    (92) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .

    PRINT           reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    READ            reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    VARIABLE        reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTEGER         reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOAT_NUMBER    reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMAL_NUMBER  reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 92 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)


state 273

    (89) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 89 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)


state 274

    (93) for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .

    PRINT           reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    READ            reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    VARIABLE        reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTEGER         reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOAT_NUMBER    reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMAL_NUMBER  reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 93 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)


state 275

    (90) for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 90 (for_simple -> FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)


state 276

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code . RKEY
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code . RKEY FINALLY LKEY all_block_code RKEY

    RKEY            shift and go to state 281


state 277

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY

    RPARENT         shift and go to state 282


state 278

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY

    RPARENT         shift and go to state 283


state 279

    (110) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 110 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 280

    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . dictionary_value RKEY DOTANDCOMMA
    (112) dictionary_value -> . LKEY key_value_pair RKEY

    LKEY            shift and go to state 284

    dictionary_value               shift and go to state 285

state 281

    (97) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .
    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY . FINALLY LKEY all_block_code RKEY

    PRINT           reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 97 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FINALLY         shift and go to state 286


state 282

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY

    DOTANDCOMMA     shift and go to state 287
    LKEY            shift and go to state 288


state 283

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY

    DOTANDCOMMA     shift and go to state 289
    LKEY            shift and go to state 290


state 284

    (112) dictionary_value -> LKEY . key_value_pair RKEY
    (115) key_value_pair -> . STRING DOUBLEPOINT valueHash

    STRING          shift and go to state 292

    key_value_pair                 shift and go to state 291

state 285

    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value . RKEY DOTANDCOMMA

    RKEY            shift and go to state 293


state 286

    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY . LKEY all_block_code RKEY

    LKEY            shift and go to state 294


state 287

    (125) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 125 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 288

    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY
    (129) strings_list -> . STRING
    (130) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 296

    strings_list                   shift and go to state 295

state 289

    (126) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 126 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 290

    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY
    (131) ints_list -> . INTEGER
    (132) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 298

    ints_list                      shift and go to state 297

state 291

    (112) dictionary_value -> LKEY key_value_pair . RKEY

    RKEY            shift and go to state 299


state 292

    (115) key_value_pair -> STRING . DOUBLEPOINT valueHash

    DOUBLEPOINT     shift and go to state 300


state 293

    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 301


state 294

    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY . all_block_code RKEY
    (15) all_block_code -> . block_code
    (16) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . block_for
    (13) block_code -> . block_try_catch
    (14) block_code -> . block_while
    (61) def_const_or_var -> . constant_assignation
    (62) def_const_or_var -> . variable_assignation
    (63) def_const_or_var -> . late_initialization
    (17) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (18) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (36) arithmetic_operation -> . value_numeric
    (37) arithmetic_operation -> . VARIABLE
    (38) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (39) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (40) logic_operation -> . value_numeric
    (41) logic_operation -> . VARIABLE
    (42) logic_operation -> . value_numeric logic_operator logic_operation
    (43) logic_operation -> . VARIABLE logic_operator logic_operation
    (123) lists -> . list_empty
    (124) lists -> . list_full
    (133) functions_list -> . list_func_clear
    (134) functions_list -> . list_func_count
    (135) functions_list -> . list_func_add
    (136) functions_list -> . list_func_removeat
    (108) dict_estruct -> . dict_empty
    (109) dict_estruct -> . dict_full
    (119) functions_dict -> . dict_func_put
    (120) functions_dict -> . dict_func_remove
    (87) block_for -> . for_anidado
    (88) block_for -> . for_each
    (95) block_try_catch -> . try_catch_simply
    (96) block_try_catch -> . try_catch_finally
    (99) block_while -> . normal_while
    (100) block_while -> . do_while
    (64) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (65) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (67) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (69) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (71) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (72) late_initialization -> . access_modifiers VARIABLE DOTANDCOMMA
    (73) late_initialization -> . VARIABLE DOTANDCOMMA
    (74) late_initialization -> . assignation_key_value DOTANDCOMMA
    (32) value_numeric -> . INTEGER
    (33) value_numeric -> . FLOAT_NUMBER
    (34) value_numeric -> . DECIMAL_NUMBER
    (35) value_numeric -> . arithmetic_operation
    (125) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (126) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (128) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (137) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (138) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (139) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (140) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (110) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (111) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (121) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (122) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (91) for_anidado -> . for_simple
    (92) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (93) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (94) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (97) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (98) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (101) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (102) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (59) access_modifiers -> . PUBLIC
    (60) access_modifiers -> . PRIVATE
    (81) data_type -> . CHARTYPE
    (82) data_type -> . STRINGTYPE
    (83) data_type -> . FLOATTYPE
    (84) data_type -> . DECIMALTYPE
    (85) data_type -> . INTTYPE
    (86) data_type -> . BOOLTYPE
    (75) assignation_key_value -> . VARIABLE ASSIGNATION value
    (76) assignation_key_value -> . READ LPARENT RPARENT
    (89) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (90) for_simple -> . FOR LPARENT assignation_with_datatype logic_operation DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 29
    READ            shift and go to state 30
    VARIABLE        shift and go to state 11
    CONST           shift and go to state 49
    INTEGER         shift and go to state 52
    FLOAT_NUMBER    shift and go to state 53
    DECIMAL_NUMBER  shift and go to state 54
    LIST            shift and go to state 55
    DICTIONARY      shift and go to state 58
    FOR             shift and go to state 60
    FOREACH         shift and go to state 61
    TRY             shift and go to state 62
    WHILE           shift and go to state 63
    DO              shift and go to state 64
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 65
    CHARTYPE        shift and go to state 66
    STRINGTYPE      shift and go to state 56
    FLOATTYPE       shift and go to state 67
    DECIMALTYPE     shift and go to state 68
    INTTYPE         shift and go to state 57
    BOOLTYPE        shift and go to state 69

    all_block_code                 shift and go to state 302
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    block_for                      shift and go to state 23
    block_try_catch                shift and go to state 24
    block_while                    shift and go to state 25
    constant_assignation           shift and go to state 26
    variable_assignation           shift and go to state 27
    late_initialization            shift and go to state 28
    value_numeric                  shift and go to state 31
    list_empty                     shift and go to state 32
    list_full                      shift and go to state 33
    list_func_clear                shift and go to state 34
    list_func_count                shift and go to state 35
    list_func_add                  shift and go to state 36
    list_func_removeat             shift and go to state 37
    dict_empty                     shift and go to state 38
    dict_full                      shift and go to state 39
    dict_func_put                  shift and go to state 40
    dict_func_remove               shift and go to state 41
    for_anidado                    shift and go to state 42
    for_each                       shift and go to state 43
    try_catch_simply               shift and go to state 44
    try_catch_finally              shift and go to state 45
    normal_while                   shift and go to state 46
    do_while                       shift and go to state 47
    access_modifiers               shift and go to state 48
    data_type                      shift and go to state 50
    assignation_key_value          shift and go to state 51
    for_simple                     shift and go to state 59

state 295

    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY

    RKEY            shift and go to state 303


state 296

    (129) strings_list -> STRING .
    (130) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 129 (strings_list -> STRING .)
    COMMA           shift and go to state 304


state 297

    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY

    RKEY            shift and go to state 305


state 298

    (131) ints_list -> INTEGER .
    (132) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 131 (ints_list -> INTEGER .)
    COMMA           shift and go to state 306


state 299

    (112) dictionary_value -> LKEY key_value_pair RKEY .

    RKEY            reduce using rule 112 (dictionary_value -> LKEY key_value_pair RKEY .)


state 300

    (115) key_value_pair -> STRING DOUBLEPOINT . valueHash
    (116) valueHash -> . INTTYPE

    INTTYPE         shift and go to state 308

    valueHash                      shift and go to state 307

state 301

    (111) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .

    PRINT           reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    READ            reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CONST           reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    LIST            reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FOR             reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    TRY             reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DO              reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 111 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)


state 302

    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code . RKEY

    RKEY            shift and go to state 309


state 303

    (127) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .

    PRINT           reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    READ            reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    VARIABLE        reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CONST           reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTEGER         reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOAT_NUMBER    reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMAL_NUMBER  reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    LIST            reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DICTIONARY      reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FOR             reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FOREACH         reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    TRY             reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    WHILE           reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DO              reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PUBLIC          reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRIVATE         reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CHARTYPE        reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRINGTYPE      reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOATTYPE       reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMALTYPE     reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTTYPE         reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    BOOLTYPE        reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    RKEY            reduce using rule 127 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)


state 304

    (130) strings_list -> STRING COMMA . strings_list
    (129) strings_list -> . STRING
    (130) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 296

    strings_list                   shift and go to state 310

state 305

    (128) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .

    PRINT           reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    READ            reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    VARIABLE        reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CONST           reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTEGER         reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOAT_NUMBER    reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMAL_NUMBER  reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    LIST            reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DICTIONARY      reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FOR             reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FOREACH         reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    TRY             reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    WHILE           reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DO              reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PUBLIC          reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRIVATE         reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CHARTYPE        reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRINGTYPE      reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOATTYPE       reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMALTYPE     reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTTYPE         reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    BOOLTYPE        reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    RKEY            reduce using rule 128 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)


state 306

    (132) ints_list -> INTEGER COMMA . ints_list
    (131) ints_list -> . INTEGER
    (132) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 298

    ints_list                      shift and go to state 311

state 307

    (115) key_value_pair -> STRING DOUBLEPOINT valueHash .

    RKEY            reduce using rule 115 (key_value_pair -> STRING DOUBLEPOINT valueHash .)


state 308

    (116) valueHash -> INTTYPE .

    RKEY            reduce using rule 116 (valueHash -> INTTYPE .)


state 309

    (98) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .

    PRINT           reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    READ            reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    CONST           reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    LIST            reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FOR             reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    TRY             reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    WHILE           reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DO              reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    RKEY            reduce using rule 98 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)


state 310

    (130) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 130 (strings_list -> STRING COMMA strings_list .)


state 311

    (132) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 132 (ints_list -> INTEGER COMMA ints_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 11 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 11 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 11 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 11 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 11 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 31 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 31 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 31 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 31 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 31 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 31 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 31 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 31 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 31 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 31 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 112 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 112 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 114 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 114 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 115 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 115 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 115 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 115 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 115 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 115 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 115 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 115 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 115 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 117 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 117 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 117 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 117 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 117 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 117 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 125 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 125 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 125 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 125 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 125 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 125 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 125 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 125 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 125 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 127 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 127 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 127 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 127 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 127 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 127 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 127 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 127 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 127 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 127 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 127 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 139 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 263 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 265 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (arithmetic_operation -> VARIABLE)
WARNING: rejected rule (logic_operation -> VARIABLE) in state 11
WARNING: reduce/reduce conflict in state 17 resolved using rule (block_code -> arithmetic_operation)
WARNING: rejected rule (value_numeric -> arithmetic_operation) in state 17
WARNING: reduce/reduce conflict in state 31 resolved using rule (arithmetic_operation -> value_numeric)
WARNING: rejected rule (logic_operation -> value_numeric) in state 31
WARNING: reduce/reduce conflict in state 113 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) in state 113
WARNING: reduce/reduce conflict in state 115 resolved using rule (arithmetic_operation -> VARIABLE)
WARNING: rejected rule (logic_operation -> VARIABLE) in state 115
WARNING: reduce/reduce conflict in state 117 resolved using rule (arithmetic_operation -> value_numeric)
WARNING: rejected rule (logic_operation -> value_numeric) in state 117
WARNING: reduce/reduce conflict in state 125 resolved using rule (value_string -> VARIABLE)
WARNING: rejected rule (arithmetic_operation -> VARIABLE) in state 125
WARNING: reduce/reduce conflict in state 125 resolved using rule (value_string -> VARIABLE)
WARNING: rejected rule (logic_operation -> VARIABLE) in state 125
WARNING: reduce/reduce conflict in state 127 resolved using rule (value -> value_numeric)
WARNING: rejected rule (arithmetic_operation -> value_numeric) in state 127
WARNING: reduce/reduce conflict in state 127 resolved using rule (value -> value_numeric)
WARNING: rejected rule (logic_operation -> value_numeric) in state 127
WARNING: reduce/reduce conflict in state 134 resolved using rule (concatenation -> STRING)
WARNING: rejected rule (value_string -> STRING) in state 134
WARNING: reduce/reduce conflict in state 140 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) in state 140
WARNING: reduce/reduce conflict in state 177 resolved using rule (assignation_key_value -> VARIABLE ASSIGNATION value)
WARNING: rejected rule (assignation_key_value_multiple -> VARIABLE ASSIGNATION value) in state 177
WARNING: Rule (logic_operation -> VARIABLE) is never reduced
WARNING: Rule (logic_operation -> value_numeric) is never reduced
WARNING: Rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) is never reduced
WARNING: Rule (value_string -> STRING) is never reduced
WARNING: Rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) is never reduced
