Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DECREMENT
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLE_QUOTATION_MARKS
    FOR
    ID
    INCREMENT
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    PRINT
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    STATIC
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> block_using block_publicClass
Rule 2     block_using -> USING SYSTEM DOTANDCOMMA
Rule 3     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 4     all_block_code -> block_code
Rule 5     all_block_code -> block_code all_block_code
Rule 6     block_code -> def_const_or_var
Rule 7     block_code -> estruct_of_data
Rule 8     block_code -> block_try_catch
Rule 9     block_code -> VARIABLE
Rule 10    block_code -> dict_estruct
Rule 11    block_code -> functions_list
Rule 12    block_code -> declaration_lambda
Rule 13    block_code -> block_if
Rule 14    def_const_or_var -> constant_assignation
Rule 15    def_const_or_var -> variable_assignation
Rule 16    variable_assignation -> access_modifiers all_asignations
Rule 17    variable_assignation -> all_asignations
Rule 18    constant_assignation -> access_modifiers CONST all_asignations
Rule 19    constant_assignation -> CONST all_asignations
Rule 20    constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant
Rule 21    all_asignations -> assignation_with_datatype
Rule 22    all_asignations -> assignation_without_datatype
Rule 23    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 24    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 25    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 26    assignation_without_datatype -> assignation_key_value DOTANDCOMMA
Rule 27    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 28    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 29    some_assignation_constant -> assignation_key_value DOTANDCOMMA
Rule 30    some_assignation_constant -> assignation_key_value COMMA some_assignation_constant
Rule 31    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 32    data_type -> CHARTYPE
Rule 33    data_type -> STRINGTYPE
Rule 34    data_type -> FLOATTYPE
Rule 35    data_type -> DECIMALTYPE
Rule 36    data_type -> INTTYPE
Rule 37    data_type -> BOOLTYPE
Rule 38    value -> value_numeric
Rule 39    value -> value_logic
Rule 40    value -> value_string
Rule 41    value_string -> STRING
Rule 42    value_string -> CHAR
Rule 43    value_string -> VARIABLE
Rule 44    value_string -> READ LPARENT RPARENT
Rule 45    value_string -> concatenation
Rule 46    value_logic -> BOOLTRUE
Rule 47    value_logic -> BOOLFALSE
Rule 48    value_numeric -> INTEGER
Rule 49    value_numeric -> FLOAT_NUMBER
Rule 50    value_numeric -> DECIMAL_NUMBER
Rule 51    block_try_catch -> try_catch_simply
Rule 52    block_try_catch -> try_catch_finally
Rule 53    try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
Rule 54    try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
Rule 55    access_modifiers -> PUBLIC
Rule 56    access_modifiers -> PRIVATE
Rule 57    block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 58    other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 59    other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 60    not_yes_nested_if -> block_if
Rule 61    not_yes_nested_if -> block_code
Rule 62    arithmetic_operation -> value_numeric
Rule 63    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 64    logic_operation -> value_logic
Rule 65    logic_operation -> value_logic logic_operator logic_operation
Rule 66    concatenation -> STRING
Rule 67    concatenation -> STRING PLUS concatenation
Rule 68    logic_operator -> GREATER_THAN
Rule 69    logic_operator -> SMALLER_THAN
Rule 70    logic_operator -> EQUAL_COMPARATION
Rule 71    logic_operator -> INEQUALITY
Rule 72    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 73    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 74    logic_operator -> LOGICAND
Rule 75    logic_operator -> LOGICOR
Rule 76    logic_operator -> LOGICNOT
Rule 77    logic_operator -> LOGICXOR
Rule 78    arithmetic_operator -> PLUS
Rule 79    arithmetic_operator -> MINUS
Rule 80    arithmetic_operator -> TIMES
Rule 81    arithmetic_operator -> DIVIDE
Rule 82    arithmetic_operator -> PERCENT
Rule 83    variable_assignation_multiline -> <empty>
Rule 84    dict_estruct -> dict_empty
Rule 85    dict_estruct -> dict_full
Rule 86    dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 87    dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 88    dictionary_value -> LKEY key_value_pair RKEY
Rule 89    key_value_pairs -> key_value_pair
Rule 90    key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 91    key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 92    valueHash -> INTTYPE
Rule 93    estruct_of_data -> list_empty
Rule 94    estruct_of_data -> list_full
Rule 95    list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 96    list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 97    list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 98    list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 99    strings_list -> STRING
Rule 100   strings_list -> STRING COMMA strings_list
Rule 101   ints_list -> INTEGER
Rule 102   ints_list -> INTEGER COMMA ints_list
Rule 103   functions_list -> list_func_clear
Rule 104   functions_list -> list_func_count
Rule 105   functions_list -> list_func_add
Rule 106   functions_list -> list_func_removeat
Rule 107   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 108   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 109   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 110   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 111   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

Terminals, with rules where they appear

ACTION               : 111
ADD                  : 109
ADDITION_ASSIGNMENT  : 
ARROW                : 111
ASSIGNATION          : 31 86 87 95 96 97 98 111
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 47
BOOLTRUE             : 46
BOOLTYPE             : 37
BREAK                : 
CATCH                : 53 54
CHAR                 : 42
CHARTYPE             : 32
CLASS                : 3
CLEAR                : 107
COMMA                : 20 30 90 100 102
CONST                : 18 19 20
COUNT                : 108
DECIMALTYPE          : 35
DECIMAL_NUMBER       : 50
DECREMENT            : 
DICTIONARY           : 86 86 87 87
DIVIDE               : 81
DIVISION_ASSIGNMENT  : 
DOLLARSIGN           : 
DOT                  : 107 108 109 110
DOTANDCOMMA          : 2 23 24 25 26 27 28 29 86 87 95 96 107 108 109 110
DOUBLEPOINT          : 91
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 58
ELSE_IF              : 59
EQUAL_COMPARATION    : 70
EXCEPTION            : 53 54
FINALLY              : 54
FLOATTYPE            : 34
FLOAT_NUMBER         : 49
FOR                  : 
GREATER_THAN         : 68 86 86 87 87 95 95 96 96 97 97 98 98 111
GREATER_THAN_OR_EQUAL : 72
ID                   : 
IF                   : 57
INCREMENT            : 
INEQUALITY           : 71
INTEGER              : 48 101 102 110
INTTYPE              : 36 92 96 96 98 98
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 95 95 96 96 97 97 98 98
LKEY                 : 3 53 53 54 54 54 57 58 59 87 88 97 98 111
LOGICAND             : 74
LOGICNOT             : 76
LOGICOR              : 75
LOGICXOR             : 77
LONG                 : 
LPARENT              : 44 53 54 57 59 86 87 95 96 97 98 107 108 109 110
MINUS                : 79
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 86 87 95 96 97 98
PERCENT              : 82
PIPE                 : 
PLUS                 : 67 78
PRINT                : 
PRIVATE              : 56
PUBLIC               : 3 55
RBRACKET             : 
READ                 : 44
REMOVEAT             : 110
RETURN               : 
RKEY                 : 3 53 53 54 54 54 57 58 59 87 88 97 98 111
RPARENT              : 44 53 54 57 59 86 87 95 96 97 98 107 108 109 110
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 69 86 86 87 87 95 95 96 96 97 97 98 98 111
SMALLER_THAN_OR_EQUAL : 73
STATIC               : 
STRING               : 41 66 67 91 99 100 109
STRINGTYPE           : 33 95 95 97 97 111
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 2
TABULATION           : 
TIMES                : 80
TRY                  : 53 54
USING                : 2
VARIABLE             : 3 9 31 43 53 54 57 59 86 87 95 96 97 98 107 108 109 110 111 111
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 16 18
all_asignations      : 16 17 18 19
all_block_code       : 3 5
arithmetic_operation : 63
arithmetic_operator  : 63
assignation_key_value : 20 23 24 25 26 27 28 29 30
assignation_with_datatype : 21 24 28
assignation_without_datatype : 22 25 27
block_code           : 4 5 53 53 54 54 54 61
block_if             : 13 60
block_publicClass    : 1
block_try_catch      : 8
block_using          : 1
concatenation        : 45 67
constant_assignation : 14
data_type            : 20 23 24 25
declaration_lambda   : 12
def_const_or_var     : 6
dict_empty           : 84
dict_estruct         : 10
dict_full            : 85
dictionary_value     : 87
estruct_of_data      : 7
functions_list       : 11
ints_list            : 98 102
key_value_pair       : 88 89 90
key_value_pairs      : 90
list_empty           : 93
list_full            : 94
list_func_add        : 105
list_func_clear      : 103
list_func_count      : 104
list_func_removeat   : 106
logic_operation      : 65
logic_operator       : 65
not_yes_nested_if    : 57 58 59
other_if             : 57 59
program              : 0
some_assignation_constant : 20 30
strings_list         : 97 100
try_catch_finally    : 52
try_catch_simply     : 51
value                : 31
valueHash            : 91
value_logic          : 39 64 65
value_numeric        : 38 62 63
value_string         : 40
variable_assignation : 15
variable_assignation_multiline : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_using block_publicClass
    (2) block_using -> . USING SYSTEM DOTANDCOMMA

    USING           shift and go to state 3

    program                        shift and go to state 1
    block_using                    shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_using . block_publicClass
    (3) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 5

    block_publicClass              shift and go to state 4

state 3

    (2) block_using -> USING . SYSTEM DOTANDCOMMA

    SYSTEM          shift and go to state 6


state 4

    (1) program -> block_using block_publicClass .

    $end            reduce using rule 1 (program -> block_using block_publicClass .)


state 5

    (3) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 6

    (2) block_using -> USING SYSTEM . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 8


state 7

    (3) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 9


state 8

    (2) block_using -> USING SYSTEM DOTANDCOMMA .

    PUBLIC          reduce using rule 2 (block_using -> USING SYSTEM DOTANDCOMMA .)


state 9

    (3) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 10


state 10

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    IF              shift and go to state 36
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    all_block_code                 shift and go to state 13
    block_code                     shift and go to state 14
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    block_if                       shift and go to state 21
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 11

    (55) access_modifiers -> PUBLIC .

    CONST           reduce using rule 55 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 55 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 55 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 55 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 55 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 55 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 55 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 55 (access_modifiers -> PUBLIC .)


state 12

    (9) block_code -> VARIABLE .
    (107) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (31) assignation_key_value -> VARIABLE . ASSIGNATION value

    VARIABLE        reduce using rule 9 (block_code -> VARIABLE .)
    ACTION          reduce using rule 9 (block_code -> VARIABLE .)
    IF              reduce using rule 9 (block_code -> VARIABLE .)
    CONST           reduce using rule 9 (block_code -> VARIABLE .)
    LIST            reduce using rule 9 (block_code -> VARIABLE .)
    TRY             reduce using rule 9 (block_code -> VARIABLE .)
    DICTIONARY      reduce using rule 9 (block_code -> VARIABLE .)
    PUBLIC          reduce using rule 9 (block_code -> VARIABLE .)
    PRIVATE         reduce using rule 9 (block_code -> VARIABLE .)
    CHARTYPE        reduce using rule 9 (block_code -> VARIABLE .)
    STRINGTYPE      reduce using rule 9 (block_code -> VARIABLE .)
    FLOATTYPE       reduce using rule 9 (block_code -> VARIABLE .)
    DECIMALTYPE     reduce using rule 9 (block_code -> VARIABLE .)
    INTTYPE         reduce using rule 9 (block_code -> VARIABLE .)
    BOOLTYPE        reduce using rule 9 (block_code -> VARIABLE .)
    RKEY            reduce using rule 9 (block_code -> VARIABLE .)
    DOT             shift and go to state 53
    ASSIGNATION     shift and go to state 54


state 13

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY

    RKEY            shift and go to state 55


state 14

    (4) all_block_code -> block_code .
    (5) all_block_code -> block_code . all_block_code
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    RKEY            reduce using rule 4 (all_block_code -> block_code .)
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    IF              shift and go to state 36
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    block_code                     shift and go to state 14
    all_block_code                 shift and go to state 56
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    block_if                       shift and go to state 21
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 15

    (6) block_code -> def_const_or_var .

    VARIABLE        reduce using rule 6 (block_code -> def_const_or_var .)
    ACTION          reduce using rule 6 (block_code -> def_const_or_var .)
    IF              reduce using rule 6 (block_code -> def_const_or_var .)
    CONST           reduce using rule 6 (block_code -> def_const_or_var .)
    LIST            reduce using rule 6 (block_code -> def_const_or_var .)
    TRY             reduce using rule 6 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 6 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 6 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 6 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 6 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 6 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 6 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 6 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 6 (block_code -> def_const_or_var .)


state 16

    (7) block_code -> estruct_of_data .

    VARIABLE        reduce using rule 7 (block_code -> estruct_of_data .)
    ACTION          reduce using rule 7 (block_code -> estruct_of_data .)
    IF              reduce using rule 7 (block_code -> estruct_of_data .)
    CONST           reduce using rule 7 (block_code -> estruct_of_data .)
    LIST            reduce using rule 7 (block_code -> estruct_of_data .)
    TRY             reduce using rule 7 (block_code -> estruct_of_data .)
    DICTIONARY      reduce using rule 7 (block_code -> estruct_of_data .)
    PUBLIC          reduce using rule 7 (block_code -> estruct_of_data .)
    PRIVATE         reduce using rule 7 (block_code -> estruct_of_data .)
    CHARTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    STRINGTYPE      reduce using rule 7 (block_code -> estruct_of_data .)
    FLOATTYPE       reduce using rule 7 (block_code -> estruct_of_data .)
    DECIMALTYPE     reduce using rule 7 (block_code -> estruct_of_data .)
    INTTYPE         reduce using rule 7 (block_code -> estruct_of_data .)
    BOOLTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    RKEY            reduce using rule 7 (block_code -> estruct_of_data .)


state 17

    (8) block_code -> block_try_catch .

    VARIABLE        reduce using rule 8 (block_code -> block_try_catch .)
    ACTION          reduce using rule 8 (block_code -> block_try_catch .)
    IF              reduce using rule 8 (block_code -> block_try_catch .)
    CONST           reduce using rule 8 (block_code -> block_try_catch .)
    LIST            reduce using rule 8 (block_code -> block_try_catch .)
    TRY             reduce using rule 8 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 8 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 8 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 8 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 8 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 8 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 8 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 8 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    RKEY            reduce using rule 8 (block_code -> block_try_catch .)


state 18

    (10) block_code -> dict_estruct .

    VARIABLE        reduce using rule 10 (block_code -> dict_estruct .)
    ACTION          reduce using rule 10 (block_code -> dict_estruct .)
    IF              reduce using rule 10 (block_code -> dict_estruct .)
    CONST           reduce using rule 10 (block_code -> dict_estruct .)
    LIST            reduce using rule 10 (block_code -> dict_estruct .)
    TRY             reduce using rule 10 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 10 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 10 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 10 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 10 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 10 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 10 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 10 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    RKEY            reduce using rule 10 (block_code -> dict_estruct .)


state 19

    (11) block_code -> functions_list .

    VARIABLE        reduce using rule 11 (block_code -> functions_list .)
    ACTION          reduce using rule 11 (block_code -> functions_list .)
    IF              reduce using rule 11 (block_code -> functions_list .)
    CONST           reduce using rule 11 (block_code -> functions_list .)
    LIST            reduce using rule 11 (block_code -> functions_list .)
    TRY             reduce using rule 11 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 11 (block_code -> functions_list .)
    PUBLIC          reduce using rule 11 (block_code -> functions_list .)
    PRIVATE         reduce using rule 11 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 11 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 11 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 11 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 11 (block_code -> functions_list .)
    INTTYPE         reduce using rule 11 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 11 (block_code -> functions_list .)
    RKEY            reduce using rule 11 (block_code -> functions_list .)


state 20

    (12) block_code -> declaration_lambda .

    VARIABLE        reduce using rule 12 (block_code -> declaration_lambda .)
    ACTION          reduce using rule 12 (block_code -> declaration_lambda .)
    IF              reduce using rule 12 (block_code -> declaration_lambda .)
    CONST           reduce using rule 12 (block_code -> declaration_lambda .)
    LIST            reduce using rule 12 (block_code -> declaration_lambda .)
    TRY             reduce using rule 12 (block_code -> declaration_lambda .)
    DICTIONARY      reduce using rule 12 (block_code -> declaration_lambda .)
    PUBLIC          reduce using rule 12 (block_code -> declaration_lambda .)
    PRIVATE         reduce using rule 12 (block_code -> declaration_lambda .)
    CHARTYPE        reduce using rule 12 (block_code -> declaration_lambda .)
    STRINGTYPE      reduce using rule 12 (block_code -> declaration_lambda .)
    FLOATTYPE       reduce using rule 12 (block_code -> declaration_lambda .)
    DECIMALTYPE     reduce using rule 12 (block_code -> declaration_lambda .)
    INTTYPE         reduce using rule 12 (block_code -> declaration_lambda .)
    BOOLTYPE        reduce using rule 12 (block_code -> declaration_lambda .)
    RKEY            reduce using rule 12 (block_code -> declaration_lambda .)


state 21

    (13) block_code -> block_if .

    VARIABLE        reduce using rule 13 (block_code -> block_if .)
    ACTION          reduce using rule 13 (block_code -> block_if .)
    IF              reduce using rule 13 (block_code -> block_if .)
    CONST           reduce using rule 13 (block_code -> block_if .)
    LIST            reduce using rule 13 (block_code -> block_if .)
    TRY             reduce using rule 13 (block_code -> block_if .)
    DICTIONARY      reduce using rule 13 (block_code -> block_if .)
    PUBLIC          reduce using rule 13 (block_code -> block_if .)
    PRIVATE         reduce using rule 13 (block_code -> block_if .)
    CHARTYPE        reduce using rule 13 (block_code -> block_if .)
    STRINGTYPE      reduce using rule 13 (block_code -> block_if .)
    FLOATTYPE       reduce using rule 13 (block_code -> block_if .)
    DECIMALTYPE     reduce using rule 13 (block_code -> block_if .)
    INTTYPE         reduce using rule 13 (block_code -> block_if .)
    BOOLTYPE        reduce using rule 13 (block_code -> block_if .)
    RKEY            reduce using rule 13 (block_code -> block_if .)


state 22

    (14) def_const_or_var -> constant_assignation .

    VARIABLE        reduce using rule 14 (def_const_or_var -> constant_assignation .)
    ACTION          reduce using rule 14 (def_const_or_var -> constant_assignation .)
    IF              reduce using rule 14 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 14 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 14 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 14 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 14 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 14 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 14 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 14 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 14 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 14 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 14 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 14 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 14 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 14 (def_const_or_var -> constant_assignation .)


state 23

    (15) def_const_or_var -> variable_assignation .

    VARIABLE        reduce using rule 15 (def_const_or_var -> variable_assignation .)
    ACTION          reduce using rule 15 (def_const_or_var -> variable_assignation .)
    IF              reduce using rule 15 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 15 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 15 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 15 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 15 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 15 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 15 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 15 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 15 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 15 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 15 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 15 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 15 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 15 (def_const_or_var -> variable_assignation .)


state 24

    (93) estruct_of_data -> list_empty .

    VARIABLE        reduce using rule 93 (estruct_of_data -> list_empty .)
    ACTION          reduce using rule 93 (estruct_of_data -> list_empty .)
    IF              reduce using rule 93 (estruct_of_data -> list_empty .)
    CONST           reduce using rule 93 (estruct_of_data -> list_empty .)
    LIST            reduce using rule 93 (estruct_of_data -> list_empty .)
    TRY             reduce using rule 93 (estruct_of_data -> list_empty .)
    DICTIONARY      reduce using rule 93 (estruct_of_data -> list_empty .)
    PUBLIC          reduce using rule 93 (estruct_of_data -> list_empty .)
    PRIVATE         reduce using rule 93 (estruct_of_data -> list_empty .)
    CHARTYPE        reduce using rule 93 (estruct_of_data -> list_empty .)
    STRINGTYPE      reduce using rule 93 (estruct_of_data -> list_empty .)
    FLOATTYPE       reduce using rule 93 (estruct_of_data -> list_empty .)
    DECIMALTYPE     reduce using rule 93 (estruct_of_data -> list_empty .)
    INTTYPE         reduce using rule 93 (estruct_of_data -> list_empty .)
    BOOLTYPE        reduce using rule 93 (estruct_of_data -> list_empty .)
    RKEY            reduce using rule 93 (estruct_of_data -> list_empty .)


state 25

    (94) estruct_of_data -> list_full .

    VARIABLE        reduce using rule 94 (estruct_of_data -> list_full .)
    ACTION          reduce using rule 94 (estruct_of_data -> list_full .)
    IF              reduce using rule 94 (estruct_of_data -> list_full .)
    CONST           reduce using rule 94 (estruct_of_data -> list_full .)
    LIST            reduce using rule 94 (estruct_of_data -> list_full .)
    TRY             reduce using rule 94 (estruct_of_data -> list_full .)
    DICTIONARY      reduce using rule 94 (estruct_of_data -> list_full .)
    PUBLIC          reduce using rule 94 (estruct_of_data -> list_full .)
    PRIVATE         reduce using rule 94 (estruct_of_data -> list_full .)
    CHARTYPE        reduce using rule 94 (estruct_of_data -> list_full .)
    STRINGTYPE      reduce using rule 94 (estruct_of_data -> list_full .)
    FLOATTYPE       reduce using rule 94 (estruct_of_data -> list_full .)
    DECIMALTYPE     reduce using rule 94 (estruct_of_data -> list_full .)
    INTTYPE         reduce using rule 94 (estruct_of_data -> list_full .)
    BOOLTYPE        reduce using rule 94 (estruct_of_data -> list_full .)
    RKEY            reduce using rule 94 (estruct_of_data -> list_full .)


state 26

    (51) block_try_catch -> try_catch_simply .

    VARIABLE        reduce using rule 51 (block_try_catch -> try_catch_simply .)
    ACTION          reduce using rule 51 (block_try_catch -> try_catch_simply .)
    IF              reduce using rule 51 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 51 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 51 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 51 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 51 (block_try_catch -> try_catch_simply .)
    PUBLIC          reduce using rule 51 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 51 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 51 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 51 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 51 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 51 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 51 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 51 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 51 (block_try_catch -> try_catch_simply .)


state 27

    (52) block_try_catch -> try_catch_finally .

    VARIABLE        reduce using rule 52 (block_try_catch -> try_catch_finally .)
    ACTION          reduce using rule 52 (block_try_catch -> try_catch_finally .)
    IF              reduce using rule 52 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 52 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 52 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 52 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 52 (block_try_catch -> try_catch_finally .)
    PUBLIC          reduce using rule 52 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 52 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 52 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 52 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 52 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 52 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 52 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 52 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 52 (block_try_catch -> try_catch_finally .)


state 28

    (84) dict_estruct -> dict_empty .

    VARIABLE        reduce using rule 84 (dict_estruct -> dict_empty .)
    ACTION          reduce using rule 84 (dict_estruct -> dict_empty .)
    IF              reduce using rule 84 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 84 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 84 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 84 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 84 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 84 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 84 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 84 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 84 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 84 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 84 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 84 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 84 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 84 (dict_estruct -> dict_empty .)


state 29

    (85) dict_estruct -> dict_full .

    VARIABLE        reduce using rule 85 (dict_estruct -> dict_full .)
    ACTION          reduce using rule 85 (dict_estruct -> dict_full .)
    IF              reduce using rule 85 (dict_estruct -> dict_full .)
    CONST           reduce using rule 85 (dict_estruct -> dict_full .)
    LIST            reduce using rule 85 (dict_estruct -> dict_full .)
    TRY             reduce using rule 85 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 85 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 85 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 85 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 85 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 85 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 85 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 85 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 85 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 85 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 85 (dict_estruct -> dict_full .)


state 30

    (103) functions_list -> list_func_clear .

    VARIABLE        reduce using rule 103 (functions_list -> list_func_clear .)
    ACTION          reduce using rule 103 (functions_list -> list_func_clear .)
    IF              reduce using rule 103 (functions_list -> list_func_clear .)
    CONST           reduce using rule 103 (functions_list -> list_func_clear .)
    LIST            reduce using rule 103 (functions_list -> list_func_clear .)
    TRY             reduce using rule 103 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 103 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 103 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 103 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 103 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 103 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 103 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 103 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 103 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 103 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 103 (functions_list -> list_func_clear .)


state 31

    (104) functions_list -> list_func_count .

    VARIABLE        reduce using rule 104 (functions_list -> list_func_count .)
    ACTION          reduce using rule 104 (functions_list -> list_func_count .)
    IF              reduce using rule 104 (functions_list -> list_func_count .)
    CONST           reduce using rule 104 (functions_list -> list_func_count .)
    LIST            reduce using rule 104 (functions_list -> list_func_count .)
    TRY             reduce using rule 104 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 104 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 104 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 104 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 104 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 104 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 104 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 104 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 104 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 104 (functions_list -> list_func_count .)
    RKEY            reduce using rule 104 (functions_list -> list_func_count .)


state 32

    (105) functions_list -> list_func_add .

    VARIABLE        reduce using rule 105 (functions_list -> list_func_add .)
    ACTION          reduce using rule 105 (functions_list -> list_func_add .)
    IF              reduce using rule 105 (functions_list -> list_func_add .)
    CONST           reduce using rule 105 (functions_list -> list_func_add .)
    LIST            reduce using rule 105 (functions_list -> list_func_add .)
    TRY             reduce using rule 105 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 105 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 105 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 105 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 105 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 105 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 105 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 105 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 105 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 105 (functions_list -> list_func_add .)
    RKEY            reduce using rule 105 (functions_list -> list_func_add .)


state 33

    (106) functions_list -> list_func_removeat .

    VARIABLE        reduce using rule 106 (functions_list -> list_func_removeat .)
    ACTION          reduce using rule 106 (functions_list -> list_func_removeat .)
    IF              reduce using rule 106 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 106 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 106 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 106 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 106 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 106 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 106 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 106 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 106 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 106 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 106 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 106 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 106 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 106 (functions_list -> list_func_removeat .)


state 34

    (111) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    SMALLER_THAN    shift and go to state 57


state 35

    (33) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 33 (data_type -> STRINGTYPE .)


state 36

    (57) block_if -> IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 58


state 37

    (18) constant_assignation -> access_modifiers . CONST all_asignations
    (16) variable_assignation -> access_modifiers . all_asignations
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 59
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52
    VARIABLE        shift and go to state 61

    all_asignations                shift and go to state 60
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41

state 38

    (19) constant_assignation -> CONST . all_asignations
    (20) constant_assignation -> CONST . data_type assignation_key_value COMMA some_assignation_constant
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52
    VARIABLE        shift and go to state 61

    all_asignations                shift and go to state 62
    data_type                      shift and go to state 63
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 39

    (17) variable_assignation -> all_asignations .

    VARIABLE        reduce using rule 17 (variable_assignation -> all_asignations .)
    ACTION          reduce using rule 17 (variable_assignation -> all_asignations .)
    IF              reduce using rule 17 (variable_assignation -> all_asignations .)
    CONST           reduce using rule 17 (variable_assignation -> all_asignations .)
    LIST            reduce using rule 17 (variable_assignation -> all_asignations .)
    TRY             reduce using rule 17 (variable_assignation -> all_asignations .)
    DICTIONARY      reduce using rule 17 (variable_assignation -> all_asignations .)
    PUBLIC          reduce using rule 17 (variable_assignation -> all_asignations .)
    PRIVATE         reduce using rule 17 (variable_assignation -> all_asignations .)
    CHARTYPE        reduce using rule 17 (variable_assignation -> all_asignations .)
    STRINGTYPE      reduce using rule 17 (variable_assignation -> all_asignations .)
    FLOATTYPE       reduce using rule 17 (variable_assignation -> all_asignations .)
    DECIMALTYPE     reduce using rule 17 (variable_assignation -> all_asignations .)
    INTTYPE         reduce using rule 17 (variable_assignation -> all_asignations .)
    BOOLTYPE        reduce using rule 17 (variable_assignation -> all_asignations .)
    RKEY            reduce using rule 17 (variable_assignation -> all_asignations .)


state 40

    (23) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 61

    assignation_key_value          shift and go to state 64

state 41

    (26) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (27) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 65


state 42

    (95) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 66


state 43

    (36) data_type -> INTTYPE .

    VARIABLE        reduce using rule 36 (data_type -> INTTYPE .)


state 44

    (53) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 67


state 45

    (86) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 68


state 46

    (56) access_modifiers -> PRIVATE .

    CONST           reduce using rule 56 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 56 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 56 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 56 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 56 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 56 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 56 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 56 (access_modifiers -> PRIVATE .)


state 47

    (21) all_asignations -> assignation_with_datatype .

    VARIABLE        reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    ACTION          reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    IF              reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    CONST           reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    LIST            reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    TRY             reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    DICTIONARY      reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    PUBLIC          reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    PRIVATE         reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    CHARTYPE        reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    STRINGTYPE      reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    FLOATTYPE       reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    INTTYPE         reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    BOOLTYPE        reduce using rule 21 (all_asignations -> assignation_with_datatype .)
    RKEY            reduce using rule 21 (all_asignations -> assignation_with_datatype .)


state 48

    (22) all_asignations -> assignation_without_datatype .

    VARIABLE        reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    ACTION          reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    IF              reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    CONST           reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    LIST            reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    TRY             reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    DICTIONARY      reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    PUBLIC          reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    PRIVATE         reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    CHARTYPE        reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    STRINGTYPE      reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    FLOATTYPE       reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    INTTYPE         reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    BOOLTYPE        reduce using rule 22 (all_asignations -> assignation_without_datatype .)
    RKEY            reduce using rule 22 (all_asignations -> assignation_without_datatype .)


state 49

    (32) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 32 (data_type -> CHARTYPE .)


state 50

    (34) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 34 (data_type -> FLOATTYPE .)


state 51

    (35) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 35 (data_type -> DECIMALTYPE .)


state 52

    (37) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 37 (data_type -> BOOLTYPE .)


state 53

    (107) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 69
    COUNT           shift and go to state 70
    ADD             shift and go to state 71
    REMOVEAT        shift and go to state 72


state 54

    (31) assignation_key_value -> VARIABLE ASSIGNATION . value
    (38) value -> . value_numeric
    (39) value -> . value_logic
    (40) value -> . value_string
    (48) value_numeric -> . INTEGER
    (49) value_numeric -> . FLOAT_NUMBER
    (50) value_numeric -> . DECIMAL_NUMBER
    (46) value_logic -> . BOOLTRUE
    (47) value_logic -> . BOOLFALSE
    (41) value_string -> . STRING
    (42) value_string -> . CHAR
    (43) value_string -> . VARIABLE
    (44) value_string -> . READ LPARENT RPARENT
    (45) value_string -> . concatenation
    (66) concatenation -> . STRING
    (67) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 78
    FLOAT_NUMBER    shift and go to state 79
    DECIMAL_NUMBER  shift and go to state 80
    BOOLTRUE        shift and go to state 81
    BOOLFALSE       shift and go to state 82
    STRING          shift and go to state 83
    CHAR            shift and go to state 84
    VARIABLE        shift and go to state 73
    READ            shift and go to state 85

    value                          shift and go to state 74
    value_numeric                  shift and go to state 75
    value_logic                    shift and go to state 76
    value_string                   shift and go to state 77
    concatenation                  shift and go to state 86

state 55

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 3 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)


state 56

    (5) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 5 (all_block_code -> block_code all_block_code .)


state 57

    (111) declaration_lambda -> ACTION SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    STRINGTYPE      shift and go to state 87


state 58

    (57) block_if -> IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    VARIABLE        shift and go to state 88


state 59

    (18) constant_assignation -> access_modifiers CONST . all_asignations
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52
    VARIABLE        shift and go to state 61

    all_asignations                shift and go to state 89
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41

state 60

    (16) variable_assignation -> access_modifiers all_asignations .

    VARIABLE        reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    ACTION          reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    IF              reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    CONST           reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    LIST            reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    TRY             reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    DICTIONARY      reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    PUBLIC          reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    PRIVATE         reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    CHARTYPE        reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    STRINGTYPE      reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    FLOATTYPE       reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    DECIMALTYPE     reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    INTTYPE         reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    BOOLTYPE        reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)
    RKEY            reduce using rule 16 (variable_assignation -> access_modifiers all_asignations .)


state 61

    (31) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 54


state 62

    (19) constant_assignation -> CONST all_asignations .

    VARIABLE        reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    ACTION          reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    IF              reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    CONST           reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    LIST            reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    TRY             reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    DICTIONARY      reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    PUBLIC          reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    PRIVATE         reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    CHARTYPE        reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    STRINGTYPE      reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    FLOATTYPE       reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    DECIMALTYPE     reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    INTTYPE         reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    BOOLTYPE        reduce using rule 19 (constant_assignation -> CONST all_asignations .)
    RKEY            reduce using rule 19 (constant_assignation -> CONST all_asignations .)


state 63

    (20) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (23) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 61

    assignation_key_value          shift and go to state 90

state 64

    (23) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (24) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 91


state 65

    (26) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (27) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
    ACTION          reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 61
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

  ! VARIABLE        [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 26 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]

    assignation_key_value          shift and go to state 41
    assignation_without_datatype   shift and go to state 92
    assignation_with_datatype      shift and go to state 93
    data_type                      shift and go to state 40

state 66

    (95) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 94
    INTTYPE         shift and go to state 95


state 67

    (53) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    IF              shift and go to state 36
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    block_code                     shift and go to state 96
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    block_if                       shift and go to state 21
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 68

    (86) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 97


state 69

    (107) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 98


state 70

    (108) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 99


state 71

    (109) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 100


state 72

    (110) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 101


state 73

    (43) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 43 (value_string -> VARIABLE .)
    COMMA           reduce using rule 43 (value_string -> VARIABLE .)


state 74

    (31) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 31 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 31 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 75

    (38) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 38 (value -> value_numeric .)
    COMMA           reduce using rule 38 (value -> value_numeric .)


state 76

    (39) value -> value_logic .

    DOTANDCOMMA     reduce using rule 39 (value -> value_logic .)
    COMMA           reduce using rule 39 (value -> value_logic .)


state 77

    (40) value -> value_string .

    DOTANDCOMMA     reduce using rule 40 (value -> value_string .)
    COMMA           reduce using rule 40 (value -> value_string .)


state 78

    (48) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 48 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 48 (value_numeric -> INTEGER .)


state 79

    (49) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 49 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 49 (value_numeric -> FLOAT_NUMBER .)


state 80

    (50) value_numeric -> DECIMAL_NUMBER .

    DOTANDCOMMA     reduce using rule 50 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 50 (value_numeric -> DECIMAL_NUMBER .)


state 81

    (46) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 46 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 46 (value_logic -> BOOLTRUE .)


state 82

    (47) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 47 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 47 (value_logic -> BOOLFALSE .)


state 83

    (41) value_string -> STRING .
    (66) concatenation -> STRING .
    (67) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 41 (value_string -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 41 (value_string -> STRING .)
    DOTANDCOMMA     reduce using rule 41 (value_string -> STRING .)
    COMMA           reduce using rule 41 (value_string -> STRING .)
    PLUS            shift and go to state 102

  ! DOTANDCOMMA     [ reduce using rule 66 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 66 (concatenation -> STRING .) ]


state 84

    (42) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 42 (value_string -> CHAR .)
    COMMA           reduce using rule 42 (value_string -> CHAR .)


state 85

    (44) value_string -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 103


state 86

    (45) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 45 (value_string -> concatenation .)
    COMMA           reduce using rule 45 (value_string -> concatenation .)


state 87

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    GREATER_THAN    shift and go to state 104


state 88

    (57) block_if -> IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 105


state 89

    (18) constant_assignation -> access_modifiers CONST all_asignations .

    VARIABLE        reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    ACTION          reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    IF              reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    CONST           reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    LIST            reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    TRY             reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    DICTIONARY      reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    PUBLIC          reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    PRIVATE         reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    CHARTYPE        reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRINGTYPE      reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    FLOATTYPE       reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    DECIMALTYPE     reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    INTTYPE         reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    BOOLTYPE        reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)
    RKEY            reduce using rule 18 (constant_assignation -> access_modifiers CONST all_asignations .)


state 90

    (20) constant_assignation -> CONST data_type assignation_key_value . COMMA some_assignation_constant
    (23) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (24) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    COMMA           shift and go to state 106
    DOTANDCOMMA     shift and go to state 91


state 91

    (23) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .
    (24) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ACTION          reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52
    VARIABLE        shift and go to state 61

  ! VARIABLE        [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 23 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]

    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 107
    assignation_without_datatype   shift and go to state 108

state 92

    (27) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 27 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 93

    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 94

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 109


state 95

    (96) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 110


state 96

    (53) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 111


state 97

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 112


state 98

    (107) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 113


state 99

    (108) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 114


state 100

    (109) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 115


state 101

    (110) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 116


state 102

    (67) concatenation -> STRING PLUS . concatenation
    (66) concatenation -> . STRING
    (67) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 117

    concatenation                  shift and go to state 118

state 103

    (44) value_string -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 119


state 104

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 120


state 105

    (57) block_if -> IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 121


state 106

    (20) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (29) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (30) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 61

    assignation_key_value          shift and go to state 122
    some_assignation_constant      shift and go to state 123

state 107

    (24) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 24 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 108

    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 109

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 124


state 110

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 125


state 111

    (53) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 126


state 112

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 127


state 113

    (107) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 128


state 114

    (108) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 129


state 115

    (109) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 130


state 116

    (110) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 131


state 117

    (66) concatenation -> STRING .
    (67) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 66 (concatenation -> STRING .)
    COMMA           reduce using rule 66 (concatenation -> STRING .)
    PLUS            shift and go to state 102


state 118

    (67) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 67 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 67 (concatenation -> STRING PLUS concatenation .)


state 119

    (44) value_string -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 44 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 44 (value_string -> READ LPARENT RPARENT .)


state 120

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY RKEY

    ASSIGNATION     shift and go to state 132


state 121

    (57) block_if -> IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (60) not_yes_nested_if -> . block_if
    (61) not_yes_nested_if -> . block_code
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 36
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    not_yes_nested_if              shift and go to state 133
    block_if                       shift and go to state 134
    block_code                     shift and go to state 135
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 122

    (29) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (30) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 136
    COMMA           shift and go to state 137


state 123

    (20) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 20 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)


state 124

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 138


state 125

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 139


state 126

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LPARENT         shift and go to state 140


state 127

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 141


state 128

    (107) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 107 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)


state 129

    (108) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 108 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)


state 130

    (109) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 142


state 131

    (110) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 143


state 132

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 144


state 133

    (57) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 145


state 134

    (60) not_yes_nested_if -> block_if .
    (13) block_code -> block_if .

  ! reduce/reduce conflict for RKEY resolved using rule 13 (block_code -> block_if .)
    RKEY            reduce using rule 13 (block_code -> block_if .)

  ! RKEY            [ reduce using rule 60 (not_yes_nested_if -> block_if .) ]


state 135

    (61) not_yes_nested_if -> block_code .

    RKEY            reduce using rule 61 (not_yes_nested_if -> block_code .)


state 136

    (29) some_assignation_constant -> assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    ACTION          reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 29 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)


state 137

    (30) some_assignation_constant -> assignation_key_value COMMA . some_assignation_constant
    (29) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (30) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 61

    assignation_key_value          shift and go to state 122
    some_assignation_constant      shift and go to state 146

state 138

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    NEW             shift and go to state 147


state 139

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    NEW             shift and go to state 148


state 140

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    EXCEPTION       shift and go to state 149


state 141

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 150


state 142

    (109) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 109 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 143

    (110) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    IF              reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 110 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)


state 144

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY RKEY

    ARROW           shift and go to state 151


state 145

    (57) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (58) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (59) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 153
    ELSE_IF         shift and go to state 154

    other_if                       shift and go to state 152

state 146

    (30) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 30 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)


state 147

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    LIST            shift and go to state 155


state 148

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 156


state 149

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 157


state 150

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 158


state 151

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY RKEY

    LKEY            shift and go to state 159


state 152

    (57) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 57 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 153

    (58) other_if -> ELSE . LKEY not_yes_nested_if RKEY

    LKEY            shift and go to state 160


state 154

    (59) other_if -> ELSE_IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 161


state 155

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 162


state 156

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 163


state 157

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 164


state 158

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 165


state 159

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . RKEY

    RKEY            shift and go to state 166


state 160

    (58) other_if -> ELSE LKEY . not_yes_nested_if RKEY
    (60) not_yes_nested_if -> . block_if
    (61) not_yes_nested_if -> . block_code
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 36
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    not_yes_nested_if              shift and go to state 167
    block_if                       shift and go to state 134
    block_code                     shift and go to state 135
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 161

    (59) other_if -> ELSE_IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    VARIABLE        shift and go to state 168


state 162

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 169


state 163

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 170


state 164

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 171


state 165

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 172


state 166

    (111) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .

    VARIABLE        reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    ACTION          reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    IF              reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CONST           reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    LIST            reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    TRY             reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DICTIONARY      reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PUBLIC          reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PRIVATE         reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CHARTYPE        reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    STRINGTYPE      reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    FLOATTYPE       reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DECIMALTYPE     reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    INTTYPE         reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    BOOLTYPE        reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    RKEY            reduce using rule 111 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)


state 167

    (58) other_if -> ELSE LKEY not_yes_nested_if . RKEY

    RKEY            shift and go to state 173


state 168

    (59) other_if -> ELSE_IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 174


state 169

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 175


state 170

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 176


state 171

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    IF              shift and go to state 36
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    block_code                     shift and go to state 177
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    block_if                       shift and go to state 21
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 172

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 178


state 173

    (58) other_if -> ELSE LKEY not_yes_nested_if RKEY .

    VARIABLE        reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    ACTION          reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    IF              reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CONST           reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    LIST            reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    TRY             reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DICTIONARY      reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PUBLIC          reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PRIVATE         reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CHARTYPE        reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRINGTYPE      reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FLOATTYPE       reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DECIMALTYPE     reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    INTTYPE         reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    BOOLTYPE        reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    RKEY            reduce using rule 58 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)


state 174

    (59) other_if -> ELSE_IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 179


state 175

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 180


state 176

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 181


state 177

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 182


state 178

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY dictionary_value RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 183
    LKEY            shift and go to state 184


state 179

    (59) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (60) not_yes_nested_if -> . block_if
    (61) not_yes_nested_if -> . block_code
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 36
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    not_yes_nested_if              shift and go to state 185
    block_if                       shift and go to state 134
    block_code                     shift and go to state 135
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 180

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY

    RPARENT         shift and go to state 186


state 181

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY

    RPARENT         shift and go to state 187


state 182

    (53) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .
    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY . FINALLY LKEY block_code RKEY

    VARIABLE        reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 53 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FINALLY         shift and go to state 188


state 183

    (86) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 86 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 184

    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . dictionary_value RKEY DOTANDCOMMA
    (88) dictionary_value -> . LKEY key_value_pair RKEY

    LKEY            shift and go to state 189

    dictionary_value               shift and go to state 190

state 185

    (59) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 191


state 186

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY

    DOTANDCOMMA     shift and go to state 192
    LKEY            shift and go to state 193


state 187

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY

    DOTANDCOMMA     shift and go to state 194
    LKEY            shift and go to state 195


state 188

    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY . LKEY block_code RKEY

    LKEY            shift and go to state 196


state 189

    (88) dictionary_value -> LKEY . key_value_pair RKEY
    (91) key_value_pair -> . STRING DOUBLEPOINT valueHash

    STRING          shift and go to state 198

    key_value_pair                 shift and go to state 197

state 190

    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value . RKEY DOTANDCOMMA

    RKEY            shift and go to state 199


state 191

    (59) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (58) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (59) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 153
    ELSE_IF         shift and go to state 154

    other_if                       shift and go to state 200

state 192

    (95) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 95 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 193

    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY
    (99) strings_list -> . STRING
    (100) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 202

    strings_list                   shift and go to state 201

state 194

    (96) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 96 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 195

    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY
    (101) ints_list -> . INTEGER
    (102) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 204

    ints_list                      shift and go to state 203

state 196

    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . VARIABLE
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_list
    (12) block_code -> . declaration_lambda
    (13) block_code -> . block_if
    (14) def_const_or_var -> . constant_assignation
    (15) def_const_or_var -> . variable_assignation
    (93) estruct_of_data -> . list_empty
    (94) estruct_of_data -> . list_full
    (51) block_try_catch -> . try_catch_simply
    (52) block_try_catch -> . try_catch_finally
    (84) dict_estruct -> . dict_empty
    (85) dict_estruct -> . dict_full
    (103) functions_list -> . list_func_clear
    (104) functions_list -> . list_func_count
    (105) functions_list -> . list_func_add
    (106) functions_list -> . list_func_removeat
    (111) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (57) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (18) constant_assignation -> . access_modifiers CONST all_asignations
    (19) constant_assignation -> . CONST all_asignations
    (20) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (16) variable_assignation -> . access_modifiers all_asignations
    (17) variable_assignation -> . all_asignations
    (95) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (96) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (97) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (98) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (53) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (54) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (86) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (87) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (107) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (108) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (109) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (110) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (55) access_modifiers -> . PUBLIC
    (56) access_modifiers -> . PRIVATE
    (21) all_asignations -> . assignation_with_datatype
    (22) all_asignations -> . assignation_without_datatype
    (23) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (24) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (27) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (32) data_type -> . CHARTYPE
    (33) data_type -> . STRINGTYPE
    (34) data_type -> . FLOATTYPE
    (35) data_type -> . DECIMALTYPE
    (36) data_type -> . INTTYPE
    (37) data_type -> . BOOLTYPE
    (31) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 34
    IF              shift and go to state 36
    CONST           shift and go to state 38
    LIST            shift and go to state 42
    TRY             shift and go to state 44
    DICTIONARY      shift and go to state 45
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 46
    CHARTYPE        shift and go to state 49
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 50
    DECIMALTYPE     shift and go to state 51
    INTTYPE         shift and go to state 43
    BOOLTYPE        shift and go to state 52

    block_code                     shift and go to state 205
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    dict_estruct                   shift and go to state 18
    functions_list                 shift and go to state 19
    declaration_lambda             shift and go to state 20
    block_if                       shift and go to state 21
    constant_assignation           shift and go to state 22
    variable_assignation           shift and go to state 23
    list_empty                     shift and go to state 24
    list_full                      shift and go to state 25
    try_catch_simply               shift and go to state 26
    try_catch_finally              shift and go to state 27
    dict_empty                     shift and go to state 28
    dict_full                      shift and go to state 29
    list_func_clear                shift and go to state 30
    list_func_count                shift and go to state 31
    list_func_add                  shift and go to state 32
    list_func_removeat             shift and go to state 33
    access_modifiers               shift and go to state 37
    all_asignations                shift and go to state 39
    data_type                      shift and go to state 40
    assignation_key_value          shift and go to state 41
    assignation_with_datatype      shift and go to state 47
    assignation_without_datatype   shift and go to state 48

state 197

    (88) dictionary_value -> LKEY key_value_pair . RKEY

    RKEY            shift and go to state 206


state 198

    (91) key_value_pair -> STRING . DOUBLEPOINT valueHash

    DOUBLEPOINT     shift and go to state 207


state 199

    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 208


state 200

    (59) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 59 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 201

    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY

    RKEY            shift and go to state 209


state 202

    (99) strings_list -> STRING .
    (100) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 99 (strings_list -> STRING .)
    COMMA           shift and go to state 210


state 203

    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY

    RKEY            shift and go to state 211


state 204

    (101) ints_list -> INTEGER .
    (102) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 101 (ints_list -> INTEGER .)
    COMMA           shift and go to state 212


state 205

    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code . RKEY

    RKEY            shift and go to state 213


state 206

    (88) dictionary_value -> LKEY key_value_pair RKEY .

    RKEY            reduce using rule 88 (dictionary_value -> LKEY key_value_pair RKEY .)


state 207

    (91) key_value_pair -> STRING DOUBLEPOINT . valueHash
    (92) valueHash -> . INTTYPE

    INTTYPE         shift and go to state 215

    valueHash                      shift and go to state 214

state 208

    (87) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .

    VARIABLE        reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    ACTION          reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    IF              reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CONST           reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    LIST            reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    TRY             reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 87 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)


state 209

    (97) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .

    VARIABLE        reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    ACTION          reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    IF              reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CONST           reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    LIST            reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    TRY             reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DICTIONARY      reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PUBLIC          reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRIVATE         reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CHARTYPE        reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRINGTYPE      reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOATTYPE       reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMALTYPE     reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTTYPE         reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    BOOLTYPE        reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    RKEY            reduce using rule 97 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)


state 210

    (100) strings_list -> STRING COMMA . strings_list
    (99) strings_list -> . STRING
    (100) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 202

    strings_list                   shift and go to state 216

state 211

    (98) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .

    VARIABLE        reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    ACTION          reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    IF              reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CONST           reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    LIST            reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    TRY             reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DICTIONARY      reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PUBLIC          reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRIVATE         reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CHARTYPE        reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRINGTYPE      reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOATTYPE       reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMALTYPE     reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTTYPE         reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    BOOLTYPE        reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    RKEY            reduce using rule 98 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)


state 212

    (102) ints_list -> INTEGER COMMA . ints_list
    (101) ints_list -> . INTEGER
    (102) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 204

    ints_list                      shift and go to state 217

state 213

    (54) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .

    VARIABLE        reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    ACTION          reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    IF              reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CONST           reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    LIST            reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    TRY             reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PUBLIC          reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PRIVATE         reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    INTTYPE         reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    RKEY            reduce using rule 54 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)


state 214

    (91) key_value_pair -> STRING DOUBLEPOINT valueHash .

    RKEY            reduce using rule 91 (key_value_pair -> STRING DOUBLEPOINT valueHash .)


state 215

    (92) valueHash -> INTTYPE .

    RKEY            reduce using rule 92 (valueHash -> INTTYPE .)


state 216

    (100) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 100 (strings_list -> STRING COMMA strings_list .)


state 217

    (102) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 102 (ints_list -> INTEGER COMMA ints_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 65 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 65 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 65 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 65 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 65 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 65 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 65 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 91 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 91 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 91 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 91 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 91 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 91 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 91 resolved as shift
WARNING: reduce/reduce conflict in state 83 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 83
WARNING: reduce/reduce conflict in state 134 resolved using rule (block_code -> block_if)
WARNING: rejected rule (not_yes_nested_if -> block_if) in state 134
WARNING: Rule (not_yes_nested_if -> block_if) is never reduced
