Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DECREMENT
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOT
    DOUBLE_QUOTATION_MARKS
    ELSE
    FOR
    ID
    IF
    INCREMENT
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    PRINT
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    STATIC
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> block_using block_publicClass
Rule 2     block_using -> USING SYSTEM DOTANDCOMMA
Rule 3     block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_code RKEY
Rule 4     block_code -> def_const_or_var
Rule 5     block_code -> estruct_of_data
Rule 6     block_code -> block_try_catch
Rule 7     block_code -> VARIABLE
<<<<<<< HEAD
Rule 8     def_const_or_var -> constant_assignation
Rule 9     def_const_or_var -> variable_assignation
Rule 10    variable_assignation -> access_modifiers all_asignations
Rule 11    variable_assignation -> all_asignations
Rule 12    constant_assignation -> access_modifiers CONST all_asignations
Rule 13    constant_assignation -> CONST all_asignations
Rule 14    constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant
Rule 15    all_asignations -> assignation_with_datatype
Rule 16    all_asignations -> assignation_without_datatype
Rule 17    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 18    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 19    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 20    assignation_without_datatype -> assignation_key_value DOTANDCOMMA
Rule 21    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 22    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 23    some_assignation_constant -> assignation_key_value DOTANDCOMMA
Rule 24    some_assignation_constant -> assignation_key_value COMMA some_assignation_constant
Rule 25    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 26    data_type -> CHARTYPE
Rule 27    data_type -> STRINGTYPE
Rule 28    data_type -> FLOATTYPE
Rule 29    data_type -> DECIMALTYPE
Rule 30    data_type -> INTTYPE
Rule 31    data_type -> BOOLTYPE
Rule 32    value -> value_numeric
Rule 33    value -> value_logic
Rule 34    value -> value_string
Rule 35    value_string -> STRING
Rule 36    value_string -> CHAR
Rule 37    value_string -> VARIABLE
Rule 38    value_string -> READ LPARENT RPARENT
Rule 39    value_string -> concatenation
Rule 40    value_logic -> BOOLTRUE
Rule 41    value_logic -> BOOLFALSE
Rule 42    value_numeric -> INTEGER
Rule 43    value_numeric -> FLOAT_NUMBER
Rule 44    value_numeric -> DECIMAL_NUMBER
Rule 45    block_try_catch -> try_catch_simply
Rule 46    block_try_catch -> try_catch_finally
Rule 47    try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
Rule 48    try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
Rule 49    access_modifiers -> PUBLIC
Rule 50    access_modifiers -> PRIVATE
Rule 51    arithmetic_operation -> value_numeric
Rule 52    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 53    logic_operation -> value_logic
Rule 54    logic_operation -> value_logic logic_operator logic_operation
Rule 55    concatenation -> STRING
Rule 56    concatenation -> STRING PLUS concatenation
Rule 57    logic_operator -> GREATER_THAN
Rule 58    logic_operator -> SMALLER_THAN
Rule 59    logic_operator -> EQUAL_COMPARATION
Rule 60    logic_operator -> INEQUALITY
Rule 61    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 62    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 63    logic_operator -> LOGICAND
Rule 64    logic_operator -> LOGICOR
Rule 65    logic_operator -> LOGICNOT
Rule 66    logic_operator -> LOGICXOR
Rule 67    arithmetic_operator -> PLUS
Rule 68    arithmetic_operator -> MINUS
Rule 69    arithmetic_operator -> TIMES
Rule 70    arithmetic_operator -> DIVIDE
Rule 71    arithmetic_operator -> PERCENT
Rule 72    variable_assignation_multiline -> <empty>
Rule 73    estruct_of_data -> list_empty
Rule 74    estruct_of_data -> list_full
Rule 75    list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 76    list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 77    list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
Rule 78    list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
=======
Rule 8     block_code -> declaration_dict
Rule 9     def_const_or_var -> constant_assignation
Rule 10    def_const_or_var -> variable_assignation
Rule 11    variable_assignation -> access_modifiers all_asignations
Rule 12    variable_assignation -> all_asignations
Rule 13    constant_assignation -> access_modifiers CONST all_asignations
Rule 14    constant_assignation -> CONST all_asignations
Rule 15    constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant
Rule 16    all_asignations -> assignation_with_datatype
Rule 17    all_asignations -> assignation_without_datatype
Rule 18    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 19    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 20    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 21    assignation_without_datatype -> assignation_key_value DOTANDCOMMA
Rule 22    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 23    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 24    some_assignation_constant -> assignation_key_value DOTANDCOMMA
Rule 25    some_assignation_constant -> assignation_key_value COMMA some_assignation_constant
Rule 26    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 27    data_type -> CHARTYPE
Rule 28    data_type -> STRINGTYPE
Rule 29    data_type -> FLOATTYPE
Rule 30    data_type -> DECIMALTYPE
Rule 31    data_type -> INTTYPE
Rule 32    data_type -> BOOLTYPE
Rule 33    value -> value_numeric
Rule 34    value -> value_logic
Rule 35    value -> value_string
Rule 36    value_string -> STRING
Rule 37    value_string -> CHAR
Rule 38    value_string -> VARIABLE
Rule 39    value_string -> READ LPARENT RPARENT
Rule 40    value_string -> concatenation
Rule 41    value_logic -> BOOLTRUE
Rule 42    value_logic -> BOOLFALSE
Rule 43    value_numeric -> INTEGER
Rule 44    value_numeric -> FLOAT_NUMBER
Rule 45    value_numeric -> DECIMAL_NUMBER
Rule 46    block_try_catch -> try_catch_simply
Rule 47    block_try_catch -> try_catch_finally
Rule 48    try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
Rule 49    try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
Rule 50    access_modifiers -> PUBLIC
Rule 51    access_modifiers -> PRIVATE
Rule 52    arithmetic_operation -> value_numeric
Rule 53    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 54    logic_operation -> value_logic
Rule 55    logic_operation -> value_logic logic_operator logic_operation
Rule 56    concatenation -> STRING
Rule 57    concatenation -> STRING PLUS concatenation
Rule 58    logic_operator -> GREATER_THAN
Rule 59    logic_operator -> SMALLER_THAN
Rule 60    logic_operator -> EQUAL_COMPARATION
Rule 61    logic_operator -> INEQUALITY
Rule 62    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 63    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 64    logic_operator -> LOGICAND
Rule 65    logic_operator -> LOGICOR
Rule 66    logic_operator -> LOGICNOT
Rule 67    logic_operator -> LOGICXOR
Rule 68    arithmetic_operator -> PLUS
Rule 69    arithmetic_operator -> MINUS
Rule 70    arithmetic_operator -> TIMES
Rule 71    arithmetic_operator -> DIVIDE
Rule 72    arithmetic_operator -> PERCENT
Rule 73    variable_assignation_multiline -> <empty>
Rule 74    declaration_dict -> DICTIONARY VARIABLE ASSIGNATION dictionary_value
Rule 75    dictionary_value -> LKEY key_value_pairs RKEY
Rule 76    key_value_pairs -> key_value_pair
Rule 77    key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 78    key_value_pair -> STRING DOUBLEPOINT value
Rule 79    valueHash -> INTTYPE
Rule 80    valueHash -> STRING
Rule 81    estruct_of_data -> list
Rule 82    list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

Terminals, with rules where they appear

ADDITION_ASSIGNMENT  : 
<<<<<<< HEAD
ASSIGNATION          : 25 75 76 77 78
=======
ASSIGNATION          : 26 74 82
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 42
BOOLTRUE             : 41
BOOLTYPE             : 32
BREAK                : 
CATCH                : 48 49
CHAR                 : 37
CHARTYPE             : 27
CLASS                : 3
COMMA                : 15 25 77
CONST                : 13 14 15
DECIMALTYPE          : 30
DECIMAL_NUMBER       : 45
DECREMENT            : 
DICTIONARY           : 74
DIVIDE               : 71
DIVISION_ASSIGNMENT  : 
DOLLARSIGN           : 
DOT                  : 
<<<<<<< HEAD
DOTANDCOMMA          : 2 17 18 19 20 21 22 23 75 76
DOUBLEPOINT          : 
=======
DOTANDCOMMA          : 2 18 19 20 21 22 23 24 82
DOUBLEPOINT          : 78
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 
EQUAL_COMPARATION    : 60
EXCEPTION            : 48 49
FINALLY              : 49
FLOATTYPE            : 29
FLOAT_NUMBER         : 44
FOR                  : 
<<<<<<< HEAD
GREATER_THAN         : 57 75 75 76 76 77 77 78 78
GREATER_THAN_OR_EQUAL : 61
IF                   : 
INCREMENT            : 
INEQUALITY           : 60
INTEGER              : 42
INTTYPE              : 30 76 76 78 78
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 75 75 76 76 77 77 78 78
LKEY                 : 3 47 47 48 48 48 77 78
LOGICAND             : 63
LOGICNOT             : 65
LOGICOR              : 64
LOGICXOR             : 66
LONG                 : 
LPARENT              : 38 47 48 75 76 77 78
MINUS                : 68
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 75 76 77 78
PERCENT              : 71
=======
GREATER_THAN         : 58 82 82
GREATER_THAN_OR_EQUAL : 62
ID                   : 
IF                   : 
INCREMENT            : 
INEQUALITY           : 61
INTEGER              : 43
INTTYPE              : 31 79
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 82 82
LKEY                 : 3 48 48 49 49 49 75
LOGICAND             : 64
LOGICNOT             : 66
LOGICOR              : 65
LOGICXOR             : 67
LONG                 : 
LPARENT              : 39 48 49 82
MINUS                : 69
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 82
PERCENT              : 72
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
PIPE                 : 
PLUS                 : 57 68
PRINT                : 
PRIVATE              : 51
PUBLIC               : 3 50
RBRACKET             : 
READ                 : 39
RETURN               : 
<<<<<<< HEAD
RKEY                 : 3 47 47 48 48 48 77 78
RPARENT              : 38 47 48 75 76 77 78
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 58 75 75 76 76 77 77 78 78
SMALLER_THAN_OR_EQUAL : 62
STATIC               : 
STRING               : 35 55 56
STRINGTYPE           : 27 75 75 77 77
=======
RKEY                 : 3 48 48 49 49 49 75
RPARENT              : 39 48 49 82
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 59 82 82
SMALLER_THAN_OR_EQUAL : 63
STATIC               : 
STRING               : 36 56 57 78 80
STRINGTYPE           : 28
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 2
TABULATION           : 
TIMES                : 70
TRY                  : 48 49
USING                : 2
<<<<<<< HEAD
VARIABLE             : 3 7 25 37 47 48 75 76 77 77 78 78
=======
VARIABLE             : 3 7 26 38 48 49 74 82
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
VOID                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 11 13
all_asignations      : 11 12 13 14
arithmetic_operation : 53
arithmetic_operator  : 53
assignation_key_value : 15 18 19 20 21 22 23 24 25
assignation_with_datatype : 16 19 23
assignation_without_datatype : 17 20 22
block_code           : 3 48 48 49 49 49
block_publicClass    : 1
block_try_catch      : 6
block_using          : 1
<<<<<<< HEAD
concatenation        : 39 56
constant_assignation : 8
data_type            : 14 17 18 19
=======
concatenation        : 40 57
constant_assignation : 9
data_type            : 15 18 19 20 82 82
declaration_dict     : 8
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
def_const_or_var     : 4
dictionary_value     : 74
estruct_of_data      : 5
<<<<<<< HEAD
list_empty           : 73
list_full            : 74
logic_operation      : 54
logic_operator       : 54
=======
key_value_pair       : 76 77
key_value_pairs      : 75 77
list                 : 81
logic_operation      : 55
logic_operator       : 55
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
program              : 0
some_assignation_constant : 15 25
try_catch_finally    : 47
try_catch_simply     : 46
value                : 26 78
valueHash            : 
value_logic          : 34 54 55
value_numeric        : 33 52 53
value_string         : 35
variable_assignation : 10
variable_assignation_multiline : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_using block_publicClass
    (2) block_using -> . USING SYSTEM DOTANDCOMMA

    USING           shift and go to state 3

    program                        shift and go to state 1
    block_using                    shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_using . block_publicClass
    (3) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY block_code RKEY

    PUBLIC          shift and go to state 5

    block_publicClass              shift and go to state 4

state 3

    (2) block_using -> USING . SYSTEM DOTANDCOMMA

    SYSTEM          shift and go to state 6


state 4

    (1) program -> block_using block_publicClass .

    $end            reduce using rule 1 (program -> block_using block_publicClass .)


state 5

    (3) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY block_code RKEY

    CLASS           shift and go to state 7


state 6

    (2) block_using -> USING SYSTEM . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 8


state 7

    (3) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY block_code RKEY

    VARIABLE        shift and go to state 9


state 8

    (2) block_using -> USING SYSTEM DOTANDCOMMA .

    PUBLIC          reduce using rule 2 (block_using -> USING SYSTEM DOTANDCOMMA .)


state 9

    (3) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY block_code RKEY

    LKEY            shift and go to state 10


state 10

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . block_code RKEY
    (4) block_code -> . def_const_or_var
    (5) block_code -> . estruct_of_data
    (6) block_code -> . block_try_catch
    (7) block_code -> . VARIABLE
<<<<<<< HEAD
    (8) def_const_or_var -> . constant_assignation
    (9) def_const_or_var -> . variable_assignation
    (73) estruct_of_data -> . list_empty
    (74) estruct_of_data -> . list_full
    (45) block_try_catch -> . try_catch_simply
    (46) block_try_catch -> . try_catch_finally
    (12) constant_assignation -> . access_modifiers CONST all_asignations
    (13) constant_assignation -> . CONST all_asignations
    (14) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (10) variable_assignation -> . access_modifiers all_asignations
    (11) variable_assignation -> . all_asignations
    (75) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (76) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (78) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (47) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (49) access_modifiers -> . PUBLIC
    (50) access_modifiers -> . PRIVATE
    (15) all_asignations -> . assignation_with_datatype
    (16) all_asignations -> . assignation_without_datatype
    (17) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (20) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) data_type -> . CHARTYPE
    (27) data_type -> . STRINGTYPE
    (28) data_type -> . FLOATTYPE
    (29) data_type -> . DECIMALTYPE
    (30) data_type -> . INTTYPE
    (31) data_type -> . BOOLTYPE
    (25) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    CONST           shift and go to state 24
    LIST            shift and go to state 28
    TRY             shift and go to state 31
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 32
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38
=======
    (8) block_code -> . declaration_dict
    (9) def_const_or_var -> . constant_assignation
    (10) def_const_or_var -> . variable_assignation
    (81) estruct_of_data -> . list
    (46) block_try_catch -> . try_catch_simply
    (47) block_try_catch -> . try_catch_finally
    (74) declaration_dict -> . DICTIONARY VARIABLE ASSIGNATION dictionary_value
    (13) constant_assignation -> . access_modifiers CONST all_asignations
    (14) constant_assignation -> . CONST all_asignations
    (15) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (11) variable_assignation -> . access_modifiers all_asignations
    (12) variable_assignation -> . all_asignations
    (82) list -> . LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (48) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (50) access_modifiers -> . PUBLIC
    (51) access_modifiers -> . PRIVATE
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    DICTIONARY      shift and go to state 23
    CONST           shift and go to state 25
    LIST            shift and go to state 29
    TRY             shift and go to state 30
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 31
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
<<<<<<< HEAD
    constant_assignation           shift and go to state 17
    variable_assignation           shift and go to state 18
    list_empty                     shift and go to state 19
    list_full                      shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 23
    all_asignations                shift and go to state 25
    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34
=======
    declaration_dict               shift and go to state 17
    constant_assignation           shift and go to state 18
    variable_assignation           shift and go to state 19
    list                           shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 24
    all_asignations                shift and go to state 26
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 11

    (50) access_modifiers -> PUBLIC .

    CONST           reduce using rule 50 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 50 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 50 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 50 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 50 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 50 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 50 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 50 (access_modifiers -> PUBLIC .)


state 12

    (7) block_code -> VARIABLE .
    (26) assignation_key_value -> VARIABLE . ASSIGNATION value

    RKEY            reduce using rule 7 (block_code -> VARIABLE .)
<<<<<<< HEAD
    ASSIGNATION     shift and go to state 39
=======
    ASSIGNATION     shift and go to state 40
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 13

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_code . RKEY

<<<<<<< HEAD
    RKEY            shift and go to state 40
=======
    RKEY            shift and go to state 41
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 14

    (4) block_code -> def_const_or_var .

    RKEY            reduce using rule 4 (block_code -> def_const_or_var .)


state 15

    (5) block_code -> estruct_of_data .

    RKEY            reduce using rule 5 (block_code -> estruct_of_data .)


state 16

    (6) block_code -> block_try_catch .

    RKEY            reduce using rule 6 (block_code -> block_try_catch .)


state 17

    (8) block_code -> declaration_dict .

    RKEY            reduce using rule 8 (block_code -> declaration_dict .)


state 18

    (9) def_const_or_var -> constant_assignation .

    RKEY            reduce using rule 9 (def_const_or_var -> constant_assignation .)


state 19

<<<<<<< HEAD
    (73) estruct_of_data -> list_empty .

    RKEY            reduce using rule 73 (estruct_of_data -> list_empty .)
=======
    (10) def_const_or_var -> variable_assignation .

    RKEY            reduce using rule 10 (def_const_or_var -> variable_assignation .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 20

<<<<<<< HEAD
    (74) estruct_of_data -> list_full .

    RKEY            reduce using rule 74 (estruct_of_data -> list_full .)


state 21

    (45) block_try_catch -> try_catch_simply .
=======
    (81) estruct_of_data -> list .
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    RKEY            reduce using rule 81 (estruct_of_data -> list .)


state 22

    (46) block_try_catch -> try_catch_simply .

    RKEY            reduce using rule 46 (block_try_catch -> try_catch_simply .)


state 23

    (47) block_try_catch -> try_catch_finally .

<<<<<<< HEAD
    CONST           shift and go to state 41
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38
    VARIABLE        shift and go to state 43

    all_asignations                shift and go to state 42
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34
    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27
=======
    RKEY            reduce using rule 47 (block_try_catch -> try_catch_finally .)

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 24

    (74) declaration_dict -> DICTIONARY . VARIABLE ASSIGNATION dictionary_value

<<<<<<< HEAD
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38
    VARIABLE        shift and go to state 43

    all_asignations                shift and go to state 44
    data_type                      shift and go to state 45
    assignation_key_value          shift and go to state 27
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34
=======
    VARIABLE        shift and go to state 42

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 25

    (13) constant_assignation -> access_modifiers . CONST all_asignations
    (11) variable_assignation -> access_modifiers . all_asignations
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 43
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39
    VARIABLE        shift and go to state 45

    all_asignations                shift and go to state 44
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28

state 26

    (14) constant_assignation -> CONST . all_asignations
    (15) constant_assignation -> CONST . data_type assignation_key_value COMMA some_assignation_constant
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

<<<<<<< HEAD
    VARIABLE        shift and go to state 43

    assignation_key_value          shift and go to state 46
=======
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39
    VARIABLE        shift and go to state 45

    all_asignations                shift and go to state 46
    data_type                      shift and go to state 47
    assignation_key_value          shift and go to state 28
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 27

    (12) variable_assignation -> all_asignations .

<<<<<<< HEAD
    DOTANDCOMMA     shift and go to state 47
=======
    RKEY            reduce using rule 12 (variable_assignation -> all_asignations .)


state 27

    (18) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 45
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    assignation_key_value          shift and go to state 48

state 28

<<<<<<< HEAD
    (75) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (76) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (78) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    SMALLER_THAN    shift and go to state 48
=======
    (21) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (22) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 49
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 29

<<<<<<< HEAD
    (27) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 27 (data_type -> STRINGTYPE .)


state 30

    (30) data_type -> INTTYPE .

    VARIABLE        reduce using rule 30 (data_type -> INTTYPE .)


state 31

    (47) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 49


state 32

    (50) access_modifiers -> PRIVATE .
=======
    (82) list -> LIST . SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    SMALLER_THAN    shift and go to state 50


state 33

    (48) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 51


state 34

    (51) access_modifiers -> PRIVATE .

    CONST           reduce using rule 51 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 51 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 51 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 51 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 51 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 51 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 51 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 51 (access_modifiers -> PRIVATE .)


state 35

    (16) all_asignations -> assignation_with_datatype .

<<<<<<< HEAD
    VARIABLE        reduce using rule 26 (data_type -> CHARTYPE .)
=======
    RKEY            reduce using rule 16 (all_asignations -> assignation_with_datatype .)


state 33

    (17) all_asignations -> assignation_without_datatype .

    RKEY            reduce using rule 17 (all_asignations -> assignation_without_datatype .)


state 34

    (27) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 27 (data_type -> CHARTYPE .)
    GREATER_THAN    reduce using rule 27 (data_type -> CHARTYPE .)


state 35

    (28) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 28 (data_type -> STRINGTYPE .)
    GREATER_THAN    reduce using rule 28 (data_type -> STRINGTYPE .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 36

<<<<<<< HEAD
    (28) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 28 (data_type -> FLOATTYPE .)
=======
    (29) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 29 (data_type -> FLOATTYPE .)
    GREATER_THAN    reduce using rule 29 (data_type -> FLOATTYPE .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 37

<<<<<<< HEAD
    (29) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 29 (data_type -> DECIMALTYPE .)
=======
    (30) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 30 (data_type -> DECIMALTYPE .)
    GREATER_THAN    reduce using rule 30 (data_type -> DECIMALTYPE .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 38

<<<<<<< HEAD
    (31) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 31 (data_type -> BOOLTYPE .)


state 39

    (25) assignation_key_value -> VARIABLE ASSIGNATION . value
    (32) value -> . value_numeric
    (33) value -> . value_logic
    (34) value -> . value_string
    (42) value_numeric -> . INTEGER
    (43) value_numeric -> . FLOAT_NUMBER
    (44) value_numeric -> . DECIMAL_NUMBER
    (40) value_logic -> . BOOLTRUE
    (41) value_logic -> . BOOLFALSE
    (35) value_string -> . STRING
    (36) value_string -> . CHAR
    (37) value_string -> . VARIABLE
    (38) value_string -> . READ LPARENT RPARENT
    (39) value_string -> . concatenation
    (55) concatenation -> . STRING
    (56) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 55
    FLOAT_NUMBER    shift and go to state 56
    DECIMAL_NUMBER  shift and go to state 57
    BOOLTRUE        shift and go to state 58
    BOOLFALSE       shift and go to state 59
    STRING          shift and go to state 60
    CHAR            shift and go to state 61
    VARIABLE        shift and go to state 50
    READ            shift and go to state 62

    value                          shift and go to state 51
    value_numeric                  shift and go to state 52
    value_logic                    shift and go to state 53
    value_string                   shift and go to state 54
    concatenation                  shift and go to state 63
=======
    (31) data_type -> INTTYPE .

    VARIABLE        reduce using rule 31 (data_type -> INTTYPE .)
    GREATER_THAN    reduce using rule 31 (data_type -> INTTYPE .)

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 40

    (32) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 32 (data_type -> BOOLTYPE .)
    GREATER_THAN    reduce using rule 32 (data_type -> BOOLTYPE .)


state 40

    (26) assignation_key_value -> VARIABLE ASSIGNATION . value
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (43) value_numeric -> . INTEGER
    (44) value_numeric -> . FLOAT_NUMBER
    (45) value_numeric -> . DECIMAL_NUMBER
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (36) value_string -> . STRING
    (37) value_string -> . CHAR
    (38) value_string -> . VARIABLE
    (39) value_string -> . READ LPARENT RPARENT
    (40) value_string -> . concatenation
    (56) concatenation -> . STRING
    (57) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 57
    FLOAT_NUMBER    shift and go to state 58
    DECIMAL_NUMBER  shift and go to state 59
    BOOLTRUE        shift and go to state 60
    BOOLFALSE       shift and go to state 61
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 52
    READ            shift and go to state 64

    value                          shift and go to state 53
    value_numeric                  shift and go to state 54
    value_logic                    shift and go to state 55
    value_string                   shift and go to state 56
    concatenation                  shift and go to state 65

state 41

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_code RKEY .

    $end            reduce using rule 3 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY block_code RKEY .)


<<<<<<< HEAD
state 41

    (12) constant_assignation -> access_modifiers CONST . all_asignations
    (15) all_asignations -> . assignation_with_datatype
    (16) all_asignations -> . assignation_without_datatype
    (17) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (20) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) data_type -> . CHARTYPE
    (27) data_type -> . STRINGTYPE
    (28) data_type -> . FLOATTYPE
    (29) data_type -> . DECIMALTYPE
    (30) data_type -> . INTTYPE
    (31) data_type -> . BOOLTYPE
    (25) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38
    VARIABLE        shift and go to state 43

    all_asignations                shift and go to state 64
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34
    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27

state 42

    (10) variable_assignation -> access_modifiers all_asignations .

    RKEY            reduce using rule 10 (variable_assignation -> access_modifiers all_asignations .)


state 43
=======
state 42
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    (74) declaration_dict -> DICTIONARY VARIABLE . ASSIGNATION dictionary_value

<<<<<<< HEAD
    ASSIGNATION     shift and go to state 39
=======
    ASSIGNATION     shift and go to state 66
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 44

    (13) constant_assignation -> access_modifiers CONST . all_asignations
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39
    VARIABLE        shift and go to state 45

    all_asignations                shift and go to state 67
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28

state 45

    (11) variable_assignation -> access_modifiers all_asignations .

<<<<<<< HEAD
    VARIABLE        shift and go to state 43

    assignation_key_value          shift and go to state 65
=======
    RKEY            reduce using rule 11 (variable_assignation -> access_modifiers all_asignations .)

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 46

    (26) assignation_key_value -> VARIABLE . ASSIGNATION value

<<<<<<< HEAD
    DOTANDCOMMA     shift and go to state 66
=======
    ASSIGNATION     shift and go to state 40
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 47

    (14) constant_assignation -> CONST all_asignations .

<<<<<<< HEAD
    RKEY            reduce using rule 20 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 43
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38

    assignation_key_value          shift and go to state 27
    assignation_without_datatype   shift and go to state 67
    assignation_with_datatype      shift and go to state 68
    data_type                      shift and go to state 26

state 48

    (75) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (76) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (78) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    STRINGTYPE      shift and go to state 69
    INTTYPE         shift and go to state 70
=======
    RKEY            reduce using rule 14 (constant_assignation -> CONST all_asignations .)


state 47

    (15) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (18) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 45

    assignation_key_value          shift and go to state 68

state 48

    (18) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (19) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 69
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 49

<<<<<<< HEAD
    (47) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
=======
    (21) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (22) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (23) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE

    RKEY            reduce using rule 21 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 45
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39

    assignation_key_value          shift and go to state 28
    assignation_without_datatype   shift and go to state 70
    assignation_with_datatype      shift and go to state 71
    data_type                      shift and go to state 27

state 50

    (82) list -> LIST SMALLER_THAN . data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39

    data_type                      shift and go to state 72

state 51

    (48) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
    (4) block_code -> . def_const_or_var
    (5) block_code -> . estruct_of_data
    (6) block_code -> . block_try_catch
    (7) block_code -> . VARIABLE
<<<<<<< HEAD
    (8) def_const_or_var -> . constant_assignation
    (9) def_const_or_var -> . variable_assignation
    (73) estruct_of_data -> . list_empty
    (74) estruct_of_data -> . list_full
    (45) block_try_catch -> . try_catch_simply
    (46) block_try_catch -> . try_catch_finally
    (12) constant_assignation -> . access_modifiers CONST all_asignations
    (13) constant_assignation -> . CONST all_asignations
    (14) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (10) variable_assignation -> . access_modifiers all_asignations
    (11) variable_assignation -> . all_asignations
    (75) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (76) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (78) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (47) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (49) access_modifiers -> . PUBLIC
    (50) access_modifiers -> . PRIVATE
    (15) all_asignations -> . assignation_with_datatype
    (16) all_asignations -> . assignation_without_datatype
    (17) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (20) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) data_type -> . CHARTYPE
    (27) data_type -> . STRINGTYPE
    (28) data_type -> . FLOATTYPE
    (29) data_type -> . DECIMALTYPE
    (30) data_type -> . INTTYPE
    (31) data_type -> . BOOLTYPE
    (25) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    CONST           shift and go to state 24
    LIST            shift and go to state 28
    TRY             shift and go to state 31
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 32
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38

    block_code                     shift and go to state 71
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
    constant_assignation           shift and go to state 17
    variable_assignation           shift and go to state 18
    list_empty                     shift and go to state 19
    list_full                      shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 23
    all_asignations                shift and go to state 25
    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34

state 50

    (37) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 37 (value_string -> VARIABLE .)
    COMMA           reduce using rule 37 (value_string -> VARIABLE .)


state 51

    (25) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 25 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 25 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 52

    (32) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 32 (value -> value_numeric .)
    COMMA           reduce using rule 32 (value -> value_numeric .)

=======
    (8) block_code -> . declaration_dict
    (9) def_const_or_var -> . constant_assignation
    (10) def_const_or_var -> . variable_assignation
    (81) estruct_of_data -> . list
    (46) block_try_catch -> . try_catch_simply
    (47) block_try_catch -> . try_catch_finally
    (74) declaration_dict -> . DICTIONARY VARIABLE ASSIGNATION dictionary_value
    (13) constant_assignation -> . access_modifiers CONST all_asignations
    (14) constant_assignation -> . CONST all_asignations
    (15) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (11) variable_assignation -> . access_modifiers all_asignations
    (12) variable_assignation -> . all_asignations
    (82) list -> . LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (48) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (50) access_modifiers -> . PUBLIC
    (51) access_modifiers -> . PRIVATE
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    DICTIONARY      shift and go to state 23
    CONST           shift and go to state 25
    LIST            shift and go to state 29
    TRY             shift and go to state 30
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 31
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39

    block_code                     shift and go to state 73
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
    declaration_dict               shift and go to state 17
    constant_assignation           shift and go to state 18
    variable_assignation           shift and go to state 19
    list                           shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 24
    all_asignations                shift and go to state 26
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 53

    (38) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 38 (value_string -> VARIABLE .)
    COMMA           reduce using rule 38 (value_string -> VARIABLE .)
    RKEY            reduce using rule 38 (value_string -> VARIABLE .)


state 54

    (26) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 26 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 26 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 55

    (33) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 33 (value -> value_numeric .)
    COMMA           reduce using rule 33 (value -> value_numeric .)
    RKEY            reduce using rule 33 (value -> value_numeric .)


state 56

    (34) value -> value_logic .

    DOTANDCOMMA     reduce using rule 34 (value -> value_logic .)
    COMMA           reduce using rule 34 (value -> value_logic .)
    RKEY            reduce using rule 34 (value -> value_logic .)


state 57

    (35) value -> value_string .

    DOTANDCOMMA     reduce using rule 35 (value -> value_string .)
    COMMA           reduce using rule 35 (value -> value_string .)
    RKEY            reduce using rule 35 (value -> value_string .)


state 58

    (43) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 43 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 43 (value_numeric -> INTEGER .)
    RKEY            reduce using rule 43 (value_numeric -> INTEGER .)


state 59

    (44) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 44 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 44 (value_numeric -> FLOAT_NUMBER .)
    RKEY            reduce using rule 44 (value_numeric -> FLOAT_NUMBER .)


state 60

    (45) value_numeric -> DECIMAL_NUMBER .

<<<<<<< HEAD
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 35 (value_string -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 35 (value_string -> STRING .)
    DOTANDCOMMA     reduce using rule 35 (value_string -> STRING .)
    COMMA           reduce using rule 35 (value_string -> STRING .)
    PLUS            shift and go to state 72

  ! DOTANDCOMMA     [ reduce using rule 55 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 55 (concatenation -> STRING .) ]
=======
    DOTANDCOMMA     reduce using rule 45 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 45 (value_numeric -> DECIMAL_NUMBER .)
    RKEY            reduce using rule 45 (value_numeric -> DECIMAL_NUMBER .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 61

    (41) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 41 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 41 (value_logic -> BOOLTRUE .)
    RKEY            reduce using rule 41 (value_logic -> BOOLTRUE .)


state 62

    (42) value_logic -> BOOLFALSE .

<<<<<<< HEAD
    LPARENT         shift and go to state 73
=======
    DOTANDCOMMA     reduce using rule 42 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 42 (value_logic -> BOOLFALSE .)
    RKEY            reduce using rule 42 (value_logic -> BOOLFALSE .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 63

    (36) value_string -> STRING .
    (56) concatenation -> STRING .
    (57) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 36 (value_string -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (value_string -> STRING .)
  ! reduce/reduce conflict for RKEY resolved using rule 36 (value_string -> STRING .)
    DOTANDCOMMA     reduce using rule 36 (value_string -> STRING .)
    COMMA           reduce using rule 36 (value_string -> STRING .)
    RKEY            reduce using rule 36 (value_string -> STRING .)
    PLUS            shift and go to state 74

  ! DOTANDCOMMA     [ reduce using rule 56 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 56 (concatenation -> STRING .) ]
  ! RKEY            [ reduce using rule 56 (concatenation -> STRING .) ]


state 64

    (37) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 37 (value_string -> CHAR .)
    COMMA           reduce using rule 37 (value_string -> CHAR .)
    RKEY            reduce using rule 37 (value_string -> CHAR .)


state 65

    (39) value_string -> READ . LPARENT RPARENT

<<<<<<< HEAD
    COMMA           shift and go to state 74
    DOTANDCOMMA     shift and go to state 66
=======
    LPARENT         shift and go to state 75
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 66

    (40) value_string -> concatenation .

<<<<<<< HEAD
    RKEY            reduce using rule 17 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38
    VARIABLE        shift and go to state 43

    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27
    assignation_with_datatype      shift and go to state 75
    assignation_without_datatype   shift and go to state 76
=======
    DOTANDCOMMA     reduce using rule 40 (value_string -> concatenation .)
    COMMA           reduce using rule 40 (value_string -> concatenation .)
    RKEY            reduce using rule 40 (value_string -> concatenation .)

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 67

    (74) declaration_dict -> DICTIONARY VARIABLE ASSIGNATION . dictionary_value
    (75) dictionary_value -> . LKEY key_value_pairs RKEY

    LKEY            shift and go to state 77

    dictionary_value               shift and go to state 76

state 68

    (13) constant_assignation -> access_modifiers CONST all_asignations .

    RKEY            reduce using rule 13 (constant_assignation -> access_modifiers CONST all_asignations .)


<<<<<<< HEAD
state 69

    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    GREATER_THAN    shift and go to state 77


state 70

    (76) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    GREATER_THAN    shift and go to state 78


state 71

    (47) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 79
=======
state 68

    (15) constant_assignation -> CONST data_type assignation_key_value . COMMA some_assignation_constant
    (18) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (19) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    COMMA           shift and go to state 78
    DOTANDCOMMA     shift and go to state 69


state 69

    (18) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .
    (19) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (20) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    RKEY            reduce using rule 18 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39
    VARIABLE        shift and go to state 45
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28
    assignation_with_datatype      shift and go to state 79
    assignation_without_datatype   shift and go to state 80

state 72

    (22) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .

<<<<<<< HEAD
    STRING          shift and go to state 80

    concatenation                  shift and go to state 81
=======
    RKEY            reduce using rule 22 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 73

    (23) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .

<<<<<<< HEAD
    RPARENT         shift and go to state 82
=======
    RKEY            reduce using rule 23 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 74

    (82) list -> LIST SMALLER_THAN data_type . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

<<<<<<< HEAD
    VARIABLE        shift and go to state 43

    assignation_key_value          shift and go to state 83
    some_assignation_constant      shift and go to state 84
=======
    GREATER_THAN    shift and go to state 81

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 75

    (48) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 82


state 76

    (57) concatenation -> STRING PLUS . concatenation
    (56) concatenation -> . STRING
    (57) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 83

    concatenation                  shift and go to state 84

state 77

<<<<<<< HEAD
    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    VARIABLE        shift and go to state 85
=======
    (39) value_string -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 85
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 78

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    VARIABLE        shift and go to state 86


state 79

    (74) declaration_dict -> DICTIONARY VARIABLE ASSIGNATION dictionary_value .

<<<<<<< HEAD
    CATCH           shift and go to state 87
=======
    RKEY            reduce using rule 74 (declaration_dict -> DICTIONARY VARIABLE ASSIGNATION dictionary_value .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 80

    (75) dictionary_value -> LKEY . key_value_pairs RKEY
    (76) key_value_pairs -> . key_value_pair
    (77) key_value_pairs -> . key_value_pair COMMA key_value_pairs
    (78) key_value_pair -> . STRING DOUBLEPOINT value

<<<<<<< HEAD
    DOTANDCOMMA     reduce using rule 55 (concatenation -> STRING .)
    COMMA           reduce using rule 55 (concatenation -> STRING .)
    PLUS            shift and go to state 72
=======
    STRING          shift and go to state 88
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    key_value_pairs                shift and go to state 86
    key_value_pair                 shift and go to state 87

state 81

    (15) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (24) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (25) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 45

    assignation_key_value          shift and go to state 89
    some_assignation_constant      shift and go to state 90

state 82

    (19) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .

    RKEY            reduce using rule 19 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 83

    (20) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

<<<<<<< HEAD
    DOTANDCOMMA     shift and go to state 88
    COMMA           shift and go to state 89
=======
    RKEY            reduce using rule 20 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 84

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 91


state 85

<<<<<<< HEAD
    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    ASSIGNATION     shift and go to state 90
=======
    (48) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 92
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 86

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    ASSIGNATION     shift and go to state 91


state 87

    (56) concatenation -> STRING .
    (57) concatenation -> STRING . PLUS concatenation

<<<<<<< HEAD
    LPARENT         shift and go to state 92
=======
    DOTANDCOMMA     reduce using rule 56 (concatenation -> STRING .)
    COMMA           reduce using rule 56 (concatenation -> STRING .)
    RKEY            reduce using rule 56 (concatenation -> STRING .)
    PLUS            shift and go to state 74
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 88

    (57) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 57 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 57 (concatenation -> STRING PLUS concatenation .)
    RKEY            reduce using rule 57 (concatenation -> STRING PLUS concatenation .)


state 89

    (39) value_string -> READ LPARENT RPARENT .

<<<<<<< HEAD
    VARIABLE        shift and go to state 43

    assignation_key_value          shift and go to state 83
    some_assignation_constant      shift and go to state 93
=======
    DOTANDCOMMA     reduce using rule 39 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 39 (value_string -> READ LPARENT RPARENT .)
    RKEY            reduce using rule 39 (value_string -> READ LPARENT RPARENT .)

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 90

<<<<<<< HEAD
    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    NEW             shift and go to state 94
=======
    (75) dictionary_value -> LKEY key_value_pairs . RKEY

    RKEY            shift and go to state 93
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 91

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    NEW             shift and go to state 95


state 92

    (76) key_value_pairs -> key_value_pair .
    (77) key_value_pairs -> key_value_pair . COMMA key_value_pairs

<<<<<<< HEAD
    EXCEPTION       shift and go to state 96
=======
    RKEY            reduce using rule 76 (key_value_pairs -> key_value_pair .)
    COMMA           shift and go to state 94
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 93

    (78) key_value_pair -> STRING . DOUBLEPOINT value

    DOUBLEPOINT     shift and go to state 95


<<<<<<< HEAD
state 94

    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    LIST            shift and go to state 97


state 95

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    LIST            shift and go to state 98


state 96

    (47) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 99


state 97

    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    SMALLER_THAN    shift and go to state 100


state 98

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    SMALLER_THAN    shift and go to state 101


state 99

    (47) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 102


state 100

    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    STRINGTYPE      shift and go to state 103


state 101

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    INTTYPE         shift and go to state 104


state 102

    (47) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (48) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 105


state 103

    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    GREATER_THAN    shift and go to state 106


state 104

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY

    GREATER_THAN    shift and go to state 107


state 105

    (47) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (48) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (4) block_code -> . def_const_or_var
    (5) block_code -> . estruct_of_data
    (6) block_code -> . block_try_catch
    (7) block_code -> . VARIABLE
    (8) def_const_or_var -> . constant_assignation
    (9) def_const_or_var -> . variable_assignation
    (73) estruct_of_data -> . list_empty
    (74) estruct_of_data -> . list_full
    (45) block_try_catch -> . try_catch_simply
    (46) block_try_catch -> . try_catch_finally
    (12) constant_assignation -> . access_modifiers CONST all_asignations
    (13) constant_assignation -> . CONST all_asignations
    (14) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (10) variable_assignation -> . access_modifiers all_asignations
    (11) variable_assignation -> . all_asignations
    (75) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (76) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (78) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (47) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (49) access_modifiers -> . PUBLIC
    (50) access_modifiers -> . PRIVATE
    (15) all_asignations -> . assignation_with_datatype
    (16) all_asignations -> . assignation_without_datatype
    (17) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (20) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) data_type -> . CHARTYPE
    (27) data_type -> . STRINGTYPE
    (28) data_type -> . FLOATTYPE
    (29) data_type -> . DECIMALTYPE
    (30) data_type -> . INTTYPE
    (31) data_type -> . BOOLTYPE
    (25) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    CONST           shift and go to state 24
    LIST            shift and go to state 28
    TRY             shift and go to state 31
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 32
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38

    block_code                     shift and go to state 108
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
    constant_assignation           shift and go to state 17
    variable_assignation           shift and go to state 18
    list_empty                     shift and go to state 19
    list_full                      shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 23
    all_asignations                shift and go to state 25
    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34

state 106

    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY VARIABLE RKEY
=======
state 89

    (24) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (25) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 96
    COMMA           shift and go to state 97


state 90

    (15) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .

    RKEY            reduce using rule 15 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)


state 91

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    ASSIGNATION     shift and go to state 98


state 92

    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    LPARENT         shift and go to state 109


<<<<<<< HEAD
state 107

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY VARIABLE RKEY

    LPARENT         shift and go to state 110


state 108
=======
state 93

    (75) dictionary_value -> LKEY key_value_pairs RKEY .

    RKEY            reduce using rule 75 (dictionary_value -> LKEY key_value_pairs RKEY .)


state 94

    (77) key_value_pairs -> key_value_pair COMMA . key_value_pairs
    (76) key_value_pairs -> . key_value_pair
    (77) key_value_pairs -> . key_value_pair COMMA key_value_pairs
    (78) key_value_pair -> . STRING DOUBLEPOINT value

    STRING          shift and go to state 88

    key_value_pair                 shift and go to state 87
    key_value_pairs                shift and go to state 100

state 95

    (78) key_value_pair -> STRING DOUBLEPOINT . value
    (33) value -> . value_numeric
    (34) value -> . value_logic
    (35) value -> . value_string
    (43) value_numeric -> . INTEGER
    (44) value_numeric -> . FLOAT_NUMBER
    (45) value_numeric -> . DECIMAL_NUMBER
    (41) value_logic -> . BOOLTRUE
    (42) value_logic -> . BOOLFALSE
    (36) value_string -> . STRING
    (37) value_string -> . CHAR
    (38) value_string -> . VARIABLE
    (39) value_string -> . READ LPARENT RPARENT
    (40) value_string -> . concatenation
    (56) concatenation -> . STRING
    (57) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 57
    FLOAT_NUMBER    shift and go to state 58
    DECIMAL_NUMBER  shift and go to state 59
    BOOLTRUE        shift and go to state 60
    BOOLFALSE       shift and go to state 61
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 52
    READ            shift and go to state 64

    value                          shift and go to state 101
    value_numeric                  shift and go to state 54
    value_logic                    shift and go to state 55
    value_string                   shift and go to state 56
    concatenation                  shift and go to state 65

state 96

    (24) some_assignation_constant -> assignation_key_value DOTANDCOMMA .

    RKEY            reduce using rule 24 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)


state 97

    (25) some_assignation_constant -> assignation_key_value COMMA . some_assignation_constant
    (24) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (25) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 45

    assignation_key_value          shift and go to state 89
    some_assignation_constant      shift and go to state 102

state 98
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

<<<<<<< HEAD
    RKEY            shift and go to state 111
=======
    NEW             shift and go to state 103
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 109

<<<<<<< HEAD
    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY VARIABLE RKEY

    RPARENT         shift and go to state 112
=======
    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    EXCEPTION       shift and go to state 104
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 110

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY VARIABLE RKEY

    RPARENT         shift and go to state 113


state 111

    (77) key_value_pairs -> key_value_pair COMMA key_value_pairs .

<<<<<<< HEAD
    RKEY            reduce using rule 47 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FINALLY         shift and go to state 114
=======
    RKEY            reduce using rule 77 (key_value_pairs -> key_value_pair COMMA key_value_pairs .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 112

<<<<<<< HEAD
    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY VARIABLE RKEY

    DOTANDCOMMA     shift and go to state 115
    LKEY            shift and go to state 116
=======
    (78) key_value_pair -> STRING DOUBLEPOINT value .

    COMMA           reduce using rule 78 (key_value_pair -> STRING DOUBLEPOINT value .)
    RKEY            reduce using rule 78 (key_value_pair -> STRING DOUBLEPOINT value .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 113

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY VARIABLE RKEY

    DOTANDCOMMA     shift and go to state 117
    LKEY            shift and go to state 118


state 114

    (25) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .

<<<<<<< HEAD
    LKEY            shift and go to state 119
=======
    RKEY            reduce using rule 25 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 115

<<<<<<< HEAD
    (75) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    RKEY            reduce using rule 75 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
=======
    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    LIST            shift and go to state 105
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 116

    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . VARIABLE RKEY

    VARIABLE        shift and go to state 120


state 117

    (76) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    RKEY            reduce using rule 76 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 118

    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . VARIABLE RKEY

    VARIABLE        shift and go to state 121


state 119

<<<<<<< HEAD
    (48) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY . block_code RKEY
    (4) block_code -> . def_const_or_var
    (5) block_code -> . estruct_of_data
    (6) block_code -> . block_try_catch
    (7) block_code -> . VARIABLE
    (8) def_const_or_var -> . constant_assignation
    (9) def_const_or_var -> . variable_assignation
    (73) estruct_of_data -> . list_empty
    (74) estruct_of_data -> . list_full
    (45) block_try_catch -> . try_catch_simply
    (46) block_try_catch -> . try_catch_finally
    (12) constant_assignation -> . access_modifiers CONST all_asignations
    (13) constant_assignation -> . CONST all_asignations
    (14) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (10) variable_assignation -> . access_modifiers all_asignations
    (11) variable_assignation -> . all_asignations
    (75) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (76) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (77) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (78) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY
    (47) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (48) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (49) access_modifiers -> . PUBLIC
    (50) access_modifiers -> . PRIVATE
    (15) all_asignations -> . assignation_with_datatype
    (16) all_asignations -> . assignation_without_datatype
    (17) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (20) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (26) data_type -> . CHARTYPE
    (27) data_type -> . STRINGTYPE
    (28) data_type -> . FLOATTYPE
    (29) data_type -> . DECIMALTYPE
    (30) data_type -> . INTTYPE
    (31) data_type -> . BOOLTYPE
    (25) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    CONST           shift and go to state 24
    LIST            shift and go to state 28
    TRY             shift and go to state 31
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 32
    CHARTYPE        shift and go to state 35
    STRINGTYPE      shift and go to state 29
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 30
    BOOLTYPE        shift and go to state 38

    block_code                     shift and go to state 122
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
    constant_assignation           shift and go to state 17
    variable_assignation           shift and go to state 18
    list_empty                     shift and go to state 19
    list_full                      shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 23
    all_asignations                shift and go to state 25
    data_type                      shift and go to state 26
    assignation_key_value          shift and go to state 27
    assignation_with_datatype      shift and go to state 33
    assignation_without_datatype   shift and go to state 34
=======
    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 106

>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e

state 120

    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE . RKEY

    RKEY            shift and go to state 123


state 121

    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE . RKEY

    RKEY            shift and go to state 124


state 122

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

<<<<<<< HEAD
    RKEY            shift and go to state 125
=======
    SMALLER_THAN    shift and go to state 107
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e


state 123

    (77) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY .

    RKEY            reduce using rule 77 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY .)


state 124

    (78) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY .

    RKEY            reduce using rule 78 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY VARIABLE RKEY .)


state 125

    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 108


state 107

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39

    data_type                      shift and go to state 109

state 108

    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 110


state 109

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type . GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    GREATER_THAN    shift and go to state 111


state 110

    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (4) block_code -> . def_const_or_var
    (5) block_code -> . estruct_of_data
    (6) block_code -> . block_try_catch
    (7) block_code -> . VARIABLE
    (8) block_code -> . declaration_dict
    (9) def_const_or_var -> . constant_assignation
    (10) def_const_or_var -> . variable_assignation
    (81) estruct_of_data -> . list
    (46) block_try_catch -> . try_catch_simply
    (47) block_try_catch -> . try_catch_finally
    (74) declaration_dict -> . DICTIONARY VARIABLE ASSIGNATION dictionary_value
    (13) constant_assignation -> . access_modifiers CONST all_asignations
    (14) constant_assignation -> . CONST all_asignations
    (15) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (11) variable_assignation -> . access_modifiers all_asignations
    (12) variable_assignation -> . all_asignations
    (82) list -> . LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (48) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (50) access_modifiers -> . PUBLIC
    (51) access_modifiers -> . PRIVATE
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    DICTIONARY      shift and go to state 23
    CONST           shift and go to state 25
    LIST            shift and go to state 29
    TRY             shift and go to state 30
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 31
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39

    block_code                     shift and go to state 112
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
    declaration_dict               shift and go to state 17
    constant_assignation           shift and go to state 18
    variable_assignation           shift and go to state 19
    list                           shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 24
    all_asignations                shift and go to state 26
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33

state 111

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 113


state 112

    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 114


state 113

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 115


state 114

    (48) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .
    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY . FINALLY LKEY block_code RKEY

    RKEY            reduce using rule 48 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FINALLY         shift and go to state 116


state 115

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 117


state 116

    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY . LKEY block_code RKEY

    LKEY            shift and go to state 118


state 117

    (82) list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    RKEY            reduce using rule 82 (list -> LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 118

    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY . block_code RKEY
    (4) block_code -> . def_const_or_var
    (5) block_code -> . estruct_of_data
    (6) block_code -> . block_try_catch
    (7) block_code -> . VARIABLE
    (8) block_code -> . declaration_dict
    (9) def_const_or_var -> . constant_assignation
    (10) def_const_or_var -> . variable_assignation
    (81) estruct_of_data -> . list
    (46) block_try_catch -> . try_catch_simply
    (47) block_try_catch -> . try_catch_finally
    (74) declaration_dict -> . DICTIONARY VARIABLE ASSIGNATION dictionary_value
    (13) constant_assignation -> . access_modifiers CONST all_asignations
    (14) constant_assignation -> . CONST all_asignations
    (15) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (11) variable_assignation -> . access_modifiers all_asignations
    (12) variable_assignation -> . all_asignations
    (82) list -> . LIST SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (48) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (49) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (50) access_modifiers -> . PUBLIC
    (51) access_modifiers -> . PRIVATE
    (16) all_asignations -> . assignation_with_datatype
    (17) all_asignations -> . assignation_without_datatype
    (18) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (19) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (20) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (21) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (22) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (23) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) data_type -> . CHARTYPE
    (28) data_type -> . STRINGTYPE
    (29) data_type -> . FLOATTYPE
    (30) data_type -> . DECIMALTYPE
    (31) data_type -> . INTTYPE
    (32) data_type -> . BOOLTYPE
    (26) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    DICTIONARY      shift and go to state 23
    CONST           shift and go to state 25
    LIST            shift and go to state 29
    TRY             shift and go to state 30
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 31
    CHARTYPE        shift and go to state 34
    STRINGTYPE      shift and go to state 35
    FLOATTYPE       shift and go to state 36
    DECIMALTYPE     shift and go to state 37
    INTTYPE         shift and go to state 38
    BOOLTYPE        shift and go to state 39

    block_code                     shift and go to state 119
    def_const_or_var               shift and go to state 14
    estruct_of_data                shift and go to state 15
    block_try_catch                shift and go to state 16
    declaration_dict               shift and go to state 17
    constant_assignation           shift and go to state 18
    variable_assignation           shift and go to state 19
    list                           shift and go to state 20
    try_catch_simply               shift and go to state 21
    try_catch_finally              shift and go to state 22
    access_modifiers               shift and go to state 24
    all_asignations                shift and go to state 26
    data_type                      shift and go to state 27
    assignation_key_value          shift and go to state 28
    assignation_with_datatype      shift and go to state 32
    assignation_without_datatype   shift and go to state 33

state 119

    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code . RKEY

    RKEY            shift and go to state 120


state 120

    (49) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .

    RKEY            reduce using rule 49 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
<<<<<<< HEAD
WARNING: reduce/reduce conflict in state 60 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 60
=======
WARNING: reduce/reduce conflict in state 62 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 62
>>>>>>> 984be247bacd1844619b65181fc89d21f65ffd6e
