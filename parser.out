Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLEPOINT
    DOUBLE_QUOTATION_MARKS
    ID
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> USING SYSTEM DOTANDCOMMA block_publicClass
Rule 2     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 3     block_code -> def_const_or_var
Rule 4     block_code -> print_data
Rule 5     block_code -> read_data
Rule 6     block_code -> arithmetic_operation
Rule 7     block_code -> logic_operation
Rule 8     block_code -> lists
Rule 9     block_code -> functions_list
Rule 10    block_code -> dict_estruct
Rule 11    block_code -> functions_dict
Rule 12    block_code -> queue_struct
Rule 13    block_code -> functions_queue
Rule 14    block_code -> block_for
Rule 15    block_code -> block_try_catch
Rule 16    block_code -> block_while
Rule 17    all_block_code -> block_code
Rule 18    all_block_code -> block_code all_block_code
Rule 19    print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA
Rule 20    print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
Rule 21    read_data -> READ LPARENT RPARENT DOTANDCOMMA
Rule 22    concatenation -> STRING
Rule 23    concatenation -> STRING PLUS concatenation
Rule 24    value -> value_numeric
Rule 25    value -> value_logic
Rule 26    value -> value_string
Rule 27    value -> read_data
Rule 28    value_string -> STRING
Rule 29    value_string -> CHAR
Rule 30    value_string -> VARIABLE
Rule 31    value_string -> concatenation
Rule 32    value_logic -> BOOLTRUE
Rule 33    value_logic -> BOOLFALSE
Rule 34    value_logic -> logic_operation
Rule 35    value_numeric -> INTEGER
Rule 36    value_numeric -> FLOAT_NUMBER
Rule 37    value_numeric -> DECIMAL_NUMBER
Rule 38    value_numeric -> arithmetic_operation
Rule 39    arithmetic_operation -> value_numeric
Rule 40    arithmetic_operation -> VARIABLE
Rule 41    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 42    arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation
Rule 43    logic_operation -> value_numeric logic_operator INTEGER
Rule 44    logic_operation -> VARIABLE logic_operator INTEGER
Rule 45    logic_operator -> GREATER_THAN
Rule 46    logic_operator -> SMALLER_THAN
Rule 47    logic_operator -> EQUAL_COMPARATION
Rule 48    logic_operator -> INEQUALITY
Rule 49    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 50    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 51    logic_operator -> LOGICAND
Rule 52    logic_operator -> LOGICOR
Rule 53    logic_operator -> LOGICNOT
Rule 54    logic_operator -> LOGICXOR
Rule 55    arithmetic_operator -> PLUS
Rule 56    arithmetic_operator -> MINUS
Rule 57    arithmetic_operator -> TIMES
Rule 58    arithmetic_operator -> DIVIDE
Rule 59    arithmetic_operator -> PERCENT
Rule 60    access_modifiers -> PUBLIC
Rule 61    access_modifiers -> PRIVATE
Rule 62    def_const_or_var -> constant_assignation
Rule 63    def_const_or_var -> variable_assignation
Rule 64    def_const_or_var -> late_initialization
Rule 65    constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
Rule 66    constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA
Rule 67    constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 68    constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA
Rule 69    variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA
Rule 70    variable_assignation -> data_type assignation_key_value DOTANDCOMMA
Rule 71    variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
Rule 72    variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA
Rule 73    late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA
Rule 74    late_initialization -> data_type VARIABLE DOTANDCOMMA
Rule 75    late_initialization -> assignation_key_value DOTANDCOMMA
Rule 76    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 77    assignation_key_value -> READ LPARENT RPARENT
Rule 78    assignation_key_value_multiple -> assignation_key_value
Rule 79    assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple
Rule 80    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 81    assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype
Rule 82    data_type -> CHARTYPE
Rule 83    data_type -> STRINGTYPE
Rule 84    data_type -> FLOATTYPE
Rule 85    data_type -> DECIMALTYPE
Rule 86    data_type -> INTTYPE
Rule 87    data_type -> BOOLTYPE
Rule 88    logic_operations -> logic_operation DOTANDCOMMA
Rule 89    logic_operations -> logic_operation COMMA logic_operations
Rule 90    block_for -> for_anidado
Rule 91    block_for -> for_each
Rule 92    for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
Rule 93    for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
Rule 94    for_anidado -> for_simple
Rule 95    for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
Rule 96    for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
Rule 97    for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
Rule 98    block_try_catch -> try_catch_simply
Rule 99    block_try_catch -> try_catch_finally
Rule 100   try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
Rule 101   try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
Rule 102   block_while -> normal_while
Rule 103   block_while -> do_while
Rule 104   normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
Rule 105   do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 106   block_if -> IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 107   other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 108   other_if -> ELSE_IF LPARENT logic_operation RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 109   not_yes_nested_if -> block_if
Rule 110   not_yes_nested_if -> block_code
Rule 111   dict_estruct -> dict_empty
Rule 112   dict_estruct -> dict_full
Rule 113   dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 114   dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
Rule 115   key_value_pairs -> key_value_pair
Rule 116   key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 117   key_value_pair -> LKEY VARIABLE COMMA value RKEY
Rule 118   estruct_of_data -> list_empty
Rule 119   estruct_of_data -> list_full
Rule 120   functions_dict -> dict_func_put
Rule 121   functions_dict -> dict_func_remove
Rule 122   dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
Rule 123   dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
Rule 124   lists -> list_empty
Rule 125   lists -> list_full
Rule 126   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 127   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 128   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
Rule 129   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
Rule 130   strings_list -> STRING
Rule 131   strings_list -> STRING COMMA strings_list
Rule 132   ints_list -> INTEGER
Rule 133   ints_list -> INTEGER COMMA ints_list
Rule 134   functions_list -> list_func_clear
Rule 135   functions_list -> list_func_count
Rule 136   functions_list -> list_func_add
Rule 137   functions_list -> list_func_removeat
Rule 138   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 139   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 140   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 141   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 142   stack_assignation -> STACK VARIABLE ASSIGNATION NEW STACK LPARENT RPARENT DOTANDCOMMA
Rule 143   stack_push -> VARIABLE DOT PUSH LPARENT value RPARENT DOTANDCOMMA
Rule 144   stack_pop -> VARIABLE DOT POP LPARENT RPARENT DOTANDCOMMA
Rule 145   queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 146   functions_queue -> queue_enqueue
Rule 147   functions_queue -> queue_dequeue
Rule 148   functions_queue -> queue_clear
Rule 149   functions_queue -> queue_isEmpty
Rule 150   queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
Rule 151   queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
Rule 152   queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 153   queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
Rule 154   queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
Rule 155   declaration_async -> PUBLIC STATIC ASYNC TASK METHOD LPARENT RPARENT LKEY AWAIT TASK DOT METHOD LPARENT LPARENT RPARENT ARROW LKEY block_code RKEY RPARENT DOTANDCOMMA RKEY
Rule 156   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY block_code RKEY

Terminals, with rules where they appear

ACTION               : 156
ADD                  : 140
ADDITION_ASSIGNMENT  : 
ARROW                : 155 156
ASSIGNATION          : 76 113 114 126 127 128 129 142 145 156
ASYNC                : 155
AWAIT                : 155
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 33
BOOLTRUE             : 32
BOOLTYPE             : 87
BREAK                : 
CATCH                : 100 101
CHAR                 : 29
CHARTYPE             : 82
CLASS                : 2
CLEAR                : 138 152
COMMA                : 79 81 89 116 117 122 131 133
CONST                : 65 66 67 68
COUNT                : 139
DECIMALTYPE          : 85
DECIMAL_NUMBER       : 37
DECREMENT            : 93 96
DEQUEUE              : 151
DICTIONARY           : 113 113 114 114
DIVIDE               : 58
DIVISION_ASSIGNMENT  : 
DO                   : 105
DOLLARSIGN           : 
DOT                  : 122 123 138 139 140 141 143 144 150 151 152 153 154 155
DOTANDCOMMA          : 1 19 20 21 65 66 67 68 69 70 71 72 73 74 75 80 88 92 93 95 96 113 114 122 123 126 127 128 129 138 139 140 141 142 143 144 145 150 151 152 153 154 155
DOUBLEPOINT          : 
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 107
ELSE_IF              : 108
ENQUEUE              : 150
EQUAL_COMPARATION    : 47
EXCEPTION            : 100 101
FINALLY              : 101
FLOATTYPE            : 84
FLOAT_NUMBER         : 36
FOR                  : 92 93 95 96
FOREACH              : 97
GREATER_THAN         : 45 113 113 114 114 126 126 127 127 128 128 129 129 145 145 156
GREATER_THAN_OR_EQUAL : 49
ID                   : 
IF                   : 106
IN                   : 97
INCREMENT            : 92 95
INEQUALITY           : 48
INTEGER              : 35 43 44 132 133 141
INTTYPE              : 86 127 127 129 129
ISEMPTY              : 154
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 126 126 127 127 128 128 129 129
LKEY                 : 2 92 93 95 96 97 100 100 101 101 101 104 105 106 107 108 114 117 128 129 155 155 156
LOGICAND             : 51
LOGICNOT             : 53
LOGICOR              : 52
LOGICXOR             : 54
LONG                 : 
LPARENT              : 19 20 21 77 92 93 95 96 97 100 101 104 105 106 108 113 114 122 123 126 127 128 129 138 139 140 141 142 143 144 145 150 151 152 153 154 155 155 155
METHOD               : 155 155
MINUS                : 56
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 113 114 126 127 128 129 142 145
PEEK                 : 153
PERCENT              : 59
PIPE                 : 
PLUS                 : 23 55
POP                  : 144
PRINT                : 19 20
PRIVATE              : 61
PUBLIC               : 2 60 155
PUSH                 : 143
PUT                  : 122
QUEUE                : 145 145
RBRACKET             : 
READ                 : 21 77
REMOVE               : 123
REMOVEAT             : 141
RETURN               : 
RKEY                 : 2 92 93 95 96 97 100 100 101 101 101 104 105 106 107 108 114 117 128 129 155 155 156
RPARENT              : 19 20 21 77 92 93 95 96 97 100 101 104 105 106 108 113 114 122 123 126 127 128 129 138 139 140 141 142 143 144 145 150 151 152 153 154 155 155 155
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 46 113 113 114 114 126 126 127 127 128 128 129 129 145 145 156
SMALLER_THAN_OR_EQUAL : 50
STACK                : 142 142
STATIC               : 155
STRING               : 19 22 23 28 122 130 131 140
STRINGTYPE           : 83 126 126 128 128 156
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 1
TABULATION           : 
TASK                 : 155 155
TIMES                : 57
TRY                  : 100 101
USING                : 1
VARIABLE             : 2 20 30 40 42 44 73 74 76 92 93 95 96 97 97 100 101 113 114 117 122 122 123 123 126 127 128 129 138 139 140 141 142 143 144 145 150 151 152 153 154 156 156
VOID                 : 
WHILE                : 104 105
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 65 67 69 71 73
all_block_code       : 2 18 92 93 97 100 100 101 101 101 104 105
arithmetic_operation : 6 38 41 42
arithmetic_operator  : 41 42
assignation_key_value : 65 66 69 70 75 78 79 80 81
assignation_key_value_multiple : 67 68 71 72 79
assignation_with_datatype : 81 92 93 95 96
block_code           : 17 18 110 155 156
block_for            : 14
block_if             : 109
block_publicClass    : 1
block_try_catch      : 15
block_while          : 16
concatenation        : 23 31
constant_assignation : 62
data_type            : 65 66 67 68 69 70 71 72 73 74 80 81 97 145 145
declaration_async    : 
declaration_lambda   : 
def_const_or_var     : 3
dict_empty           : 111
dict_estruct         : 10
dict_full            : 112
dict_func_put        : 120
dict_func_remove     : 121
do_while             : 103
estruct_of_data      : 
for_anidado          : 90 95 96
for_each             : 91
for_simple           : 94
functions_dict       : 11
functions_list       : 9
functions_queue      : 13
ints_list            : 129 133
key_value_pair       : 115 116
key_value_pairs      : 114 116
late_initialization  : 64
list_empty           : 118 124
list_full            : 119 125
list_func_add        : 136
list_func_clear      : 134
list_func_count      : 135
list_func_removeat   : 137
lists                : 8
logic_operation      : 7 34 88 89 104 105 106 108
logic_operations     : 89 92 93 95 96
logic_operator       : 43 44
normal_while         : 102
not_yes_nested_if    : 106 107 108
other_if             : 106 108
print_data           : 4
program              : 0
queue_clear          : 148
queue_dequeue        : 147
queue_enqueue        : 146
queue_isEmpty        : 149
queue_struct         : 12
read_data            : 5 27
stack_assignation    : 
stack_pop            : 
stack_push           : 
strings_list         : 128 131
try_catch_finally    : 99
try_catch_simply     : 98
value                : 76 117 143 150
value_logic          : 25
value_numeric        : 24 39 41 43
value_string         : 26
variable_assignation : 63

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . USING SYSTEM DOTANDCOMMA block_publicClass

    USING           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> USING . SYSTEM DOTANDCOMMA block_publicClass

    SYSTEM          shift and go to state 3


state 3

    (1) program -> USING SYSTEM . DOTANDCOMMA block_publicClass

    DOTANDCOMMA     shift and go to state 4


state 4

    (1) program -> USING SYSTEM DOTANDCOMMA . block_publicClass
    (2) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 6

    block_publicClass              shift and go to state 5

state 5

    (1) program -> USING SYSTEM DOTANDCOMMA block_publicClass .

    $end            reduce using rule 1 (program -> USING SYSTEM DOTANDCOMMA block_publicClass .)


state 6

    (2) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 7

    (2) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 8


state 8

    (2) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 9


state 9

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    all_block_code                 shift and go to state 12
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 10

    (60) access_modifiers -> PUBLIC .

    CONST           reduce using rule 60 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 60 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 60 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 60 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 60 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 60 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 60 (access_modifiers -> PUBLIC .)


state 11

    (40) arithmetic_operation -> VARIABLE .
    (42) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (44) logic_operation -> VARIABLE . logic_operator INTEGER
    (138) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_func_put -> VARIABLE . DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> VARIABLE . DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> VARIABLE . DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> VARIABLE . DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> VARIABLE . DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> VARIABLE . DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (76) assignation_key_value -> VARIABLE . ASSIGNATION value
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT
    (45) logic_operator -> . GREATER_THAN
    (46) logic_operator -> . SMALLER_THAN
    (47) logic_operator -> . EQUAL_COMPARATION
    (48) logic_operator -> . INEQUALITY
    (49) logic_operator -> . GREATER_THAN_OR_EQUAL
    (50) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (51) logic_operator -> . LOGICAND
    (52) logic_operator -> . LOGICOR
    (53) logic_operator -> . LOGICNOT
    (54) logic_operator -> . LOGICXOR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    QUEUE           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DOT             shift and go to state 79
    ASSIGNATION     shift and go to state 80
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85
    GREATER_THAN    shift and go to state 86
    SMALLER_THAN    shift and go to state 87
    EQUAL_COMPARATION shift and go to state 88
    INEQUALITY      shift and go to state 89
    GREATER_THAN_OR_EQUAL shift and go to state 90
    SMALLER_THAN_OR_EQUAL shift and go to state 91
    LOGICAND        shift and go to state 92
    LOGICOR         shift and go to state 93
    LOGICNOT        shift and go to state 94
    LOGICXOR        shift and go to state 95

  ! PLUS            [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 77
    logic_operator                 shift and go to state 78

state 12

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY

    RKEY            shift and go to state 96


state 13

    (17) all_block_code -> block_code .
    (18) all_block_code -> block_code . all_block_code
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    RKEY            reduce using rule 17 (all_block_code -> block_code .)
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    block_code                     shift and go to state 13
    all_block_code                 shift and go to state 97
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 14

    (3) block_code -> def_const_or_var .

    PRINT           reduce using rule 3 (block_code -> def_const_or_var .)
    READ            reduce using rule 3 (block_code -> def_const_or_var .)
    VARIABLE        reduce using rule 3 (block_code -> def_const_or_var .)
    QUEUE           reduce using rule 3 (block_code -> def_const_or_var .)
    CONST           reduce using rule 3 (block_code -> def_const_or_var .)
    INTEGER         reduce using rule 3 (block_code -> def_const_or_var .)
    FLOAT_NUMBER    reduce using rule 3 (block_code -> def_const_or_var .)
    DECIMAL_NUMBER  reduce using rule 3 (block_code -> def_const_or_var .)
    LIST            reduce using rule 3 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 3 (block_code -> def_const_or_var .)
    FOR             reduce using rule 3 (block_code -> def_const_or_var .)
    FOREACH         reduce using rule 3 (block_code -> def_const_or_var .)
    TRY             reduce using rule 3 (block_code -> def_const_or_var .)
    WHILE           reduce using rule 3 (block_code -> def_const_or_var .)
    DO              reduce using rule 3 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 3 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 3 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 3 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 3 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 3 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 3 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 3 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 3 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 3 (block_code -> def_const_or_var .)


state 15

    (4) block_code -> print_data .

    PRINT           reduce using rule 4 (block_code -> print_data .)
    READ            reduce using rule 4 (block_code -> print_data .)
    VARIABLE        reduce using rule 4 (block_code -> print_data .)
    QUEUE           reduce using rule 4 (block_code -> print_data .)
    CONST           reduce using rule 4 (block_code -> print_data .)
    INTEGER         reduce using rule 4 (block_code -> print_data .)
    FLOAT_NUMBER    reduce using rule 4 (block_code -> print_data .)
    DECIMAL_NUMBER  reduce using rule 4 (block_code -> print_data .)
    LIST            reduce using rule 4 (block_code -> print_data .)
    DICTIONARY      reduce using rule 4 (block_code -> print_data .)
    FOR             reduce using rule 4 (block_code -> print_data .)
    FOREACH         reduce using rule 4 (block_code -> print_data .)
    TRY             reduce using rule 4 (block_code -> print_data .)
    WHILE           reduce using rule 4 (block_code -> print_data .)
    DO              reduce using rule 4 (block_code -> print_data .)
    PUBLIC          reduce using rule 4 (block_code -> print_data .)
    PRIVATE         reduce using rule 4 (block_code -> print_data .)
    CHARTYPE        reduce using rule 4 (block_code -> print_data .)
    STRINGTYPE      reduce using rule 4 (block_code -> print_data .)
    FLOATTYPE       reduce using rule 4 (block_code -> print_data .)
    DECIMALTYPE     reduce using rule 4 (block_code -> print_data .)
    INTTYPE         reduce using rule 4 (block_code -> print_data .)
    BOOLTYPE        reduce using rule 4 (block_code -> print_data .)
    RKEY            reduce using rule 4 (block_code -> print_data .)


state 16

    (5) block_code -> read_data .

    PRINT           reduce using rule 5 (block_code -> read_data .)
    READ            reduce using rule 5 (block_code -> read_data .)
    VARIABLE        reduce using rule 5 (block_code -> read_data .)
    QUEUE           reduce using rule 5 (block_code -> read_data .)
    CONST           reduce using rule 5 (block_code -> read_data .)
    INTEGER         reduce using rule 5 (block_code -> read_data .)
    FLOAT_NUMBER    reduce using rule 5 (block_code -> read_data .)
    DECIMAL_NUMBER  reduce using rule 5 (block_code -> read_data .)
    LIST            reduce using rule 5 (block_code -> read_data .)
    DICTIONARY      reduce using rule 5 (block_code -> read_data .)
    FOR             reduce using rule 5 (block_code -> read_data .)
    FOREACH         reduce using rule 5 (block_code -> read_data .)
    TRY             reduce using rule 5 (block_code -> read_data .)
    WHILE           reduce using rule 5 (block_code -> read_data .)
    DO              reduce using rule 5 (block_code -> read_data .)
    PUBLIC          reduce using rule 5 (block_code -> read_data .)
    PRIVATE         reduce using rule 5 (block_code -> read_data .)
    CHARTYPE        reduce using rule 5 (block_code -> read_data .)
    STRINGTYPE      reduce using rule 5 (block_code -> read_data .)
    FLOATTYPE       reduce using rule 5 (block_code -> read_data .)
    DECIMALTYPE     reduce using rule 5 (block_code -> read_data .)
    INTTYPE         reduce using rule 5 (block_code -> read_data .)
    BOOLTYPE        reduce using rule 5 (block_code -> read_data .)
    RKEY            reduce using rule 5 (block_code -> read_data .)


state 17

    (6) block_code -> arithmetic_operation .
    (38) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for QUEUE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 6 (block_code -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 6 (block_code -> arithmetic_operation .)
    PRINT           reduce using rule 6 (block_code -> arithmetic_operation .)
    READ            reduce using rule 6 (block_code -> arithmetic_operation .)
    VARIABLE        reduce using rule 6 (block_code -> arithmetic_operation .)
    QUEUE           reduce using rule 6 (block_code -> arithmetic_operation .)
    CONST           reduce using rule 6 (block_code -> arithmetic_operation .)
    INTEGER         reduce using rule 6 (block_code -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 6 (block_code -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 6 (block_code -> arithmetic_operation .)
    LIST            reduce using rule 6 (block_code -> arithmetic_operation .)
    DICTIONARY      reduce using rule 6 (block_code -> arithmetic_operation .)
    FOR             reduce using rule 6 (block_code -> arithmetic_operation .)
    FOREACH         reduce using rule 6 (block_code -> arithmetic_operation .)
    TRY             reduce using rule 6 (block_code -> arithmetic_operation .)
    WHILE           reduce using rule 6 (block_code -> arithmetic_operation .)
    DO              reduce using rule 6 (block_code -> arithmetic_operation .)
    PUBLIC          reduce using rule 6 (block_code -> arithmetic_operation .)
    PRIVATE         reduce using rule 6 (block_code -> arithmetic_operation .)
    CHARTYPE        reduce using rule 6 (block_code -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 6 (block_code -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 6 (block_code -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 6 (block_code -> arithmetic_operation .)
    INTTYPE         reduce using rule 6 (block_code -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 6 (block_code -> arithmetic_operation .)
    RKEY            reduce using rule 6 (block_code -> arithmetic_operation .)
    PLUS            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 38 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! READ            [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! QUEUE           [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! CONST           [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! LIST            [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! FOR             [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! TRY             [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! DO              [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 38 (value_numeric -> arithmetic_operation .) ]


state 18

    (7) block_code -> logic_operation .

    PRINT           reduce using rule 7 (block_code -> logic_operation .)
    READ            reduce using rule 7 (block_code -> logic_operation .)
    VARIABLE        reduce using rule 7 (block_code -> logic_operation .)
    QUEUE           reduce using rule 7 (block_code -> logic_operation .)
    CONST           reduce using rule 7 (block_code -> logic_operation .)
    INTEGER         reduce using rule 7 (block_code -> logic_operation .)
    FLOAT_NUMBER    reduce using rule 7 (block_code -> logic_operation .)
    DECIMAL_NUMBER  reduce using rule 7 (block_code -> logic_operation .)
    LIST            reduce using rule 7 (block_code -> logic_operation .)
    DICTIONARY      reduce using rule 7 (block_code -> logic_operation .)
    FOR             reduce using rule 7 (block_code -> logic_operation .)
    FOREACH         reduce using rule 7 (block_code -> logic_operation .)
    TRY             reduce using rule 7 (block_code -> logic_operation .)
    WHILE           reduce using rule 7 (block_code -> logic_operation .)
    DO              reduce using rule 7 (block_code -> logic_operation .)
    PUBLIC          reduce using rule 7 (block_code -> logic_operation .)
    PRIVATE         reduce using rule 7 (block_code -> logic_operation .)
    CHARTYPE        reduce using rule 7 (block_code -> logic_operation .)
    STRINGTYPE      reduce using rule 7 (block_code -> logic_operation .)
    FLOATTYPE       reduce using rule 7 (block_code -> logic_operation .)
    DECIMALTYPE     reduce using rule 7 (block_code -> logic_operation .)
    INTTYPE         reduce using rule 7 (block_code -> logic_operation .)
    BOOLTYPE        reduce using rule 7 (block_code -> logic_operation .)
    RKEY            reduce using rule 7 (block_code -> logic_operation .)


state 19

    (8) block_code -> lists .

    PRINT           reduce using rule 8 (block_code -> lists .)
    READ            reduce using rule 8 (block_code -> lists .)
    VARIABLE        reduce using rule 8 (block_code -> lists .)
    QUEUE           reduce using rule 8 (block_code -> lists .)
    CONST           reduce using rule 8 (block_code -> lists .)
    INTEGER         reduce using rule 8 (block_code -> lists .)
    FLOAT_NUMBER    reduce using rule 8 (block_code -> lists .)
    DECIMAL_NUMBER  reduce using rule 8 (block_code -> lists .)
    LIST            reduce using rule 8 (block_code -> lists .)
    DICTIONARY      reduce using rule 8 (block_code -> lists .)
    FOR             reduce using rule 8 (block_code -> lists .)
    FOREACH         reduce using rule 8 (block_code -> lists .)
    TRY             reduce using rule 8 (block_code -> lists .)
    WHILE           reduce using rule 8 (block_code -> lists .)
    DO              reduce using rule 8 (block_code -> lists .)
    PUBLIC          reduce using rule 8 (block_code -> lists .)
    PRIVATE         reduce using rule 8 (block_code -> lists .)
    CHARTYPE        reduce using rule 8 (block_code -> lists .)
    STRINGTYPE      reduce using rule 8 (block_code -> lists .)
    FLOATTYPE       reduce using rule 8 (block_code -> lists .)
    DECIMALTYPE     reduce using rule 8 (block_code -> lists .)
    INTTYPE         reduce using rule 8 (block_code -> lists .)
    BOOLTYPE        reduce using rule 8 (block_code -> lists .)
    RKEY            reduce using rule 8 (block_code -> lists .)


state 20

    (9) block_code -> functions_list .

    PRINT           reduce using rule 9 (block_code -> functions_list .)
    READ            reduce using rule 9 (block_code -> functions_list .)
    VARIABLE        reduce using rule 9 (block_code -> functions_list .)
    QUEUE           reduce using rule 9 (block_code -> functions_list .)
    CONST           reduce using rule 9 (block_code -> functions_list .)
    INTEGER         reduce using rule 9 (block_code -> functions_list .)
    FLOAT_NUMBER    reduce using rule 9 (block_code -> functions_list .)
    DECIMAL_NUMBER  reduce using rule 9 (block_code -> functions_list .)
    LIST            reduce using rule 9 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 9 (block_code -> functions_list .)
    FOR             reduce using rule 9 (block_code -> functions_list .)
    FOREACH         reduce using rule 9 (block_code -> functions_list .)
    TRY             reduce using rule 9 (block_code -> functions_list .)
    WHILE           reduce using rule 9 (block_code -> functions_list .)
    DO              reduce using rule 9 (block_code -> functions_list .)
    PUBLIC          reduce using rule 9 (block_code -> functions_list .)
    PRIVATE         reduce using rule 9 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 9 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 9 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 9 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 9 (block_code -> functions_list .)
    INTTYPE         reduce using rule 9 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 9 (block_code -> functions_list .)
    RKEY            reduce using rule 9 (block_code -> functions_list .)


state 21

    (10) block_code -> dict_estruct .

    PRINT           reduce using rule 10 (block_code -> dict_estruct .)
    READ            reduce using rule 10 (block_code -> dict_estruct .)
    VARIABLE        reduce using rule 10 (block_code -> dict_estruct .)
    QUEUE           reduce using rule 10 (block_code -> dict_estruct .)
    CONST           reduce using rule 10 (block_code -> dict_estruct .)
    INTEGER         reduce using rule 10 (block_code -> dict_estruct .)
    FLOAT_NUMBER    reduce using rule 10 (block_code -> dict_estruct .)
    DECIMAL_NUMBER  reduce using rule 10 (block_code -> dict_estruct .)
    LIST            reduce using rule 10 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 10 (block_code -> dict_estruct .)
    FOR             reduce using rule 10 (block_code -> dict_estruct .)
    FOREACH         reduce using rule 10 (block_code -> dict_estruct .)
    TRY             reduce using rule 10 (block_code -> dict_estruct .)
    WHILE           reduce using rule 10 (block_code -> dict_estruct .)
    DO              reduce using rule 10 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 10 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 10 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 10 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 10 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 10 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 10 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 10 (block_code -> dict_estruct .)
    RKEY            reduce using rule 10 (block_code -> dict_estruct .)


state 22

    (11) block_code -> functions_dict .

    PRINT           reduce using rule 11 (block_code -> functions_dict .)
    READ            reduce using rule 11 (block_code -> functions_dict .)
    VARIABLE        reduce using rule 11 (block_code -> functions_dict .)
    QUEUE           reduce using rule 11 (block_code -> functions_dict .)
    CONST           reduce using rule 11 (block_code -> functions_dict .)
    INTEGER         reduce using rule 11 (block_code -> functions_dict .)
    FLOAT_NUMBER    reduce using rule 11 (block_code -> functions_dict .)
    DECIMAL_NUMBER  reduce using rule 11 (block_code -> functions_dict .)
    LIST            reduce using rule 11 (block_code -> functions_dict .)
    DICTIONARY      reduce using rule 11 (block_code -> functions_dict .)
    FOR             reduce using rule 11 (block_code -> functions_dict .)
    FOREACH         reduce using rule 11 (block_code -> functions_dict .)
    TRY             reduce using rule 11 (block_code -> functions_dict .)
    WHILE           reduce using rule 11 (block_code -> functions_dict .)
    DO              reduce using rule 11 (block_code -> functions_dict .)
    PUBLIC          reduce using rule 11 (block_code -> functions_dict .)
    PRIVATE         reduce using rule 11 (block_code -> functions_dict .)
    CHARTYPE        reduce using rule 11 (block_code -> functions_dict .)
    STRINGTYPE      reduce using rule 11 (block_code -> functions_dict .)
    FLOATTYPE       reduce using rule 11 (block_code -> functions_dict .)
    DECIMALTYPE     reduce using rule 11 (block_code -> functions_dict .)
    INTTYPE         reduce using rule 11 (block_code -> functions_dict .)
    BOOLTYPE        reduce using rule 11 (block_code -> functions_dict .)
    RKEY            reduce using rule 11 (block_code -> functions_dict .)


state 23

    (12) block_code -> queue_struct .

    PRINT           reduce using rule 12 (block_code -> queue_struct .)
    READ            reduce using rule 12 (block_code -> queue_struct .)
    VARIABLE        reduce using rule 12 (block_code -> queue_struct .)
    QUEUE           reduce using rule 12 (block_code -> queue_struct .)
    CONST           reduce using rule 12 (block_code -> queue_struct .)
    INTEGER         reduce using rule 12 (block_code -> queue_struct .)
    FLOAT_NUMBER    reduce using rule 12 (block_code -> queue_struct .)
    DECIMAL_NUMBER  reduce using rule 12 (block_code -> queue_struct .)
    LIST            reduce using rule 12 (block_code -> queue_struct .)
    DICTIONARY      reduce using rule 12 (block_code -> queue_struct .)
    FOR             reduce using rule 12 (block_code -> queue_struct .)
    FOREACH         reduce using rule 12 (block_code -> queue_struct .)
    TRY             reduce using rule 12 (block_code -> queue_struct .)
    WHILE           reduce using rule 12 (block_code -> queue_struct .)
    DO              reduce using rule 12 (block_code -> queue_struct .)
    PUBLIC          reduce using rule 12 (block_code -> queue_struct .)
    PRIVATE         reduce using rule 12 (block_code -> queue_struct .)
    CHARTYPE        reduce using rule 12 (block_code -> queue_struct .)
    STRINGTYPE      reduce using rule 12 (block_code -> queue_struct .)
    FLOATTYPE       reduce using rule 12 (block_code -> queue_struct .)
    DECIMALTYPE     reduce using rule 12 (block_code -> queue_struct .)
    INTTYPE         reduce using rule 12 (block_code -> queue_struct .)
    BOOLTYPE        reduce using rule 12 (block_code -> queue_struct .)
    RKEY            reduce using rule 12 (block_code -> queue_struct .)


state 24

    (13) block_code -> functions_queue .

    PRINT           reduce using rule 13 (block_code -> functions_queue .)
    READ            reduce using rule 13 (block_code -> functions_queue .)
    VARIABLE        reduce using rule 13 (block_code -> functions_queue .)
    QUEUE           reduce using rule 13 (block_code -> functions_queue .)
    CONST           reduce using rule 13 (block_code -> functions_queue .)
    INTEGER         reduce using rule 13 (block_code -> functions_queue .)
    FLOAT_NUMBER    reduce using rule 13 (block_code -> functions_queue .)
    DECIMAL_NUMBER  reduce using rule 13 (block_code -> functions_queue .)
    LIST            reduce using rule 13 (block_code -> functions_queue .)
    DICTIONARY      reduce using rule 13 (block_code -> functions_queue .)
    FOR             reduce using rule 13 (block_code -> functions_queue .)
    FOREACH         reduce using rule 13 (block_code -> functions_queue .)
    TRY             reduce using rule 13 (block_code -> functions_queue .)
    WHILE           reduce using rule 13 (block_code -> functions_queue .)
    DO              reduce using rule 13 (block_code -> functions_queue .)
    PUBLIC          reduce using rule 13 (block_code -> functions_queue .)
    PRIVATE         reduce using rule 13 (block_code -> functions_queue .)
    CHARTYPE        reduce using rule 13 (block_code -> functions_queue .)
    STRINGTYPE      reduce using rule 13 (block_code -> functions_queue .)
    FLOATTYPE       reduce using rule 13 (block_code -> functions_queue .)
    DECIMALTYPE     reduce using rule 13 (block_code -> functions_queue .)
    INTTYPE         reduce using rule 13 (block_code -> functions_queue .)
    BOOLTYPE        reduce using rule 13 (block_code -> functions_queue .)
    RKEY            reduce using rule 13 (block_code -> functions_queue .)


state 25

    (14) block_code -> block_for .

    PRINT           reduce using rule 14 (block_code -> block_for .)
    READ            reduce using rule 14 (block_code -> block_for .)
    VARIABLE        reduce using rule 14 (block_code -> block_for .)
    QUEUE           reduce using rule 14 (block_code -> block_for .)
    CONST           reduce using rule 14 (block_code -> block_for .)
    INTEGER         reduce using rule 14 (block_code -> block_for .)
    FLOAT_NUMBER    reduce using rule 14 (block_code -> block_for .)
    DECIMAL_NUMBER  reduce using rule 14 (block_code -> block_for .)
    LIST            reduce using rule 14 (block_code -> block_for .)
    DICTIONARY      reduce using rule 14 (block_code -> block_for .)
    FOR             reduce using rule 14 (block_code -> block_for .)
    FOREACH         reduce using rule 14 (block_code -> block_for .)
    TRY             reduce using rule 14 (block_code -> block_for .)
    WHILE           reduce using rule 14 (block_code -> block_for .)
    DO              reduce using rule 14 (block_code -> block_for .)
    PUBLIC          reduce using rule 14 (block_code -> block_for .)
    PRIVATE         reduce using rule 14 (block_code -> block_for .)
    CHARTYPE        reduce using rule 14 (block_code -> block_for .)
    STRINGTYPE      reduce using rule 14 (block_code -> block_for .)
    FLOATTYPE       reduce using rule 14 (block_code -> block_for .)
    DECIMALTYPE     reduce using rule 14 (block_code -> block_for .)
    INTTYPE         reduce using rule 14 (block_code -> block_for .)
    BOOLTYPE        reduce using rule 14 (block_code -> block_for .)
    RKEY            reduce using rule 14 (block_code -> block_for .)


state 26

    (15) block_code -> block_try_catch .

    PRINT           reduce using rule 15 (block_code -> block_try_catch .)
    READ            reduce using rule 15 (block_code -> block_try_catch .)
    VARIABLE        reduce using rule 15 (block_code -> block_try_catch .)
    QUEUE           reduce using rule 15 (block_code -> block_try_catch .)
    CONST           reduce using rule 15 (block_code -> block_try_catch .)
    INTEGER         reduce using rule 15 (block_code -> block_try_catch .)
    FLOAT_NUMBER    reduce using rule 15 (block_code -> block_try_catch .)
    DECIMAL_NUMBER  reduce using rule 15 (block_code -> block_try_catch .)
    LIST            reduce using rule 15 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 15 (block_code -> block_try_catch .)
    FOR             reduce using rule 15 (block_code -> block_try_catch .)
    FOREACH         reduce using rule 15 (block_code -> block_try_catch .)
    TRY             reduce using rule 15 (block_code -> block_try_catch .)
    WHILE           reduce using rule 15 (block_code -> block_try_catch .)
    DO              reduce using rule 15 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 15 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 15 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 15 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 15 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 15 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 15 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 15 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 15 (block_code -> block_try_catch .)
    RKEY            reduce using rule 15 (block_code -> block_try_catch .)


state 27

    (16) block_code -> block_while .

    PRINT           reduce using rule 16 (block_code -> block_while .)
    READ            reduce using rule 16 (block_code -> block_while .)
    VARIABLE        reduce using rule 16 (block_code -> block_while .)
    QUEUE           reduce using rule 16 (block_code -> block_while .)
    CONST           reduce using rule 16 (block_code -> block_while .)
    INTEGER         reduce using rule 16 (block_code -> block_while .)
    FLOAT_NUMBER    reduce using rule 16 (block_code -> block_while .)
    DECIMAL_NUMBER  reduce using rule 16 (block_code -> block_while .)
    LIST            reduce using rule 16 (block_code -> block_while .)
    DICTIONARY      reduce using rule 16 (block_code -> block_while .)
    FOR             reduce using rule 16 (block_code -> block_while .)
    FOREACH         reduce using rule 16 (block_code -> block_while .)
    TRY             reduce using rule 16 (block_code -> block_while .)
    WHILE           reduce using rule 16 (block_code -> block_while .)
    DO              reduce using rule 16 (block_code -> block_while .)
    PUBLIC          reduce using rule 16 (block_code -> block_while .)
    PRIVATE         reduce using rule 16 (block_code -> block_while .)
    CHARTYPE        reduce using rule 16 (block_code -> block_while .)
    STRINGTYPE      reduce using rule 16 (block_code -> block_while .)
    FLOATTYPE       reduce using rule 16 (block_code -> block_while .)
    DECIMALTYPE     reduce using rule 16 (block_code -> block_while .)
    INTTYPE         reduce using rule 16 (block_code -> block_while .)
    BOOLTYPE        reduce using rule 16 (block_code -> block_while .)
    RKEY            reduce using rule 16 (block_code -> block_while .)


state 28

    (62) def_const_or_var -> constant_assignation .

    PRINT           reduce using rule 62 (def_const_or_var -> constant_assignation .)
    READ            reduce using rule 62 (def_const_or_var -> constant_assignation .)
    VARIABLE        reduce using rule 62 (def_const_or_var -> constant_assignation .)
    QUEUE           reduce using rule 62 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 62 (def_const_or_var -> constant_assignation .)
    INTEGER         reduce using rule 62 (def_const_or_var -> constant_assignation .)
    FLOAT_NUMBER    reduce using rule 62 (def_const_or_var -> constant_assignation .)
    DECIMAL_NUMBER  reduce using rule 62 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 62 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 62 (def_const_or_var -> constant_assignation .)
    FOR             reduce using rule 62 (def_const_or_var -> constant_assignation .)
    FOREACH         reduce using rule 62 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 62 (def_const_or_var -> constant_assignation .)
    WHILE           reduce using rule 62 (def_const_or_var -> constant_assignation .)
    DO              reduce using rule 62 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 62 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 62 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 62 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 62 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 62 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 62 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 62 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 62 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 62 (def_const_or_var -> constant_assignation .)


state 29

    (63) def_const_or_var -> variable_assignation .

    PRINT           reduce using rule 63 (def_const_or_var -> variable_assignation .)
    READ            reduce using rule 63 (def_const_or_var -> variable_assignation .)
    VARIABLE        reduce using rule 63 (def_const_or_var -> variable_assignation .)
    QUEUE           reduce using rule 63 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 63 (def_const_or_var -> variable_assignation .)
    INTEGER         reduce using rule 63 (def_const_or_var -> variable_assignation .)
    FLOAT_NUMBER    reduce using rule 63 (def_const_or_var -> variable_assignation .)
    DECIMAL_NUMBER  reduce using rule 63 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 63 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 63 (def_const_or_var -> variable_assignation .)
    FOR             reduce using rule 63 (def_const_or_var -> variable_assignation .)
    FOREACH         reduce using rule 63 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 63 (def_const_or_var -> variable_assignation .)
    WHILE           reduce using rule 63 (def_const_or_var -> variable_assignation .)
    DO              reduce using rule 63 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 63 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 63 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 63 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 63 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 63 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 63 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 63 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 63 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 63 (def_const_or_var -> variable_assignation .)


state 30

    (64) def_const_or_var -> late_initialization .

    PRINT           reduce using rule 64 (def_const_or_var -> late_initialization .)
    READ            reduce using rule 64 (def_const_or_var -> late_initialization .)
    VARIABLE        reduce using rule 64 (def_const_or_var -> late_initialization .)
    QUEUE           reduce using rule 64 (def_const_or_var -> late_initialization .)
    CONST           reduce using rule 64 (def_const_or_var -> late_initialization .)
    INTEGER         reduce using rule 64 (def_const_or_var -> late_initialization .)
    FLOAT_NUMBER    reduce using rule 64 (def_const_or_var -> late_initialization .)
    DECIMAL_NUMBER  reduce using rule 64 (def_const_or_var -> late_initialization .)
    LIST            reduce using rule 64 (def_const_or_var -> late_initialization .)
    DICTIONARY      reduce using rule 64 (def_const_or_var -> late_initialization .)
    FOR             reduce using rule 64 (def_const_or_var -> late_initialization .)
    FOREACH         reduce using rule 64 (def_const_or_var -> late_initialization .)
    TRY             reduce using rule 64 (def_const_or_var -> late_initialization .)
    WHILE           reduce using rule 64 (def_const_or_var -> late_initialization .)
    DO              reduce using rule 64 (def_const_or_var -> late_initialization .)
    PUBLIC          reduce using rule 64 (def_const_or_var -> late_initialization .)
    PRIVATE         reduce using rule 64 (def_const_or_var -> late_initialization .)
    CHARTYPE        reduce using rule 64 (def_const_or_var -> late_initialization .)
    STRINGTYPE      reduce using rule 64 (def_const_or_var -> late_initialization .)
    FLOATTYPE       reduce using rule 64 (def_const_or_var -> late_initialization .)
    DECIMALTYPE     reduce using rule 64 (def_const_or_var -> late_initialization .)
    INTTYPE         reduce using rule 64 (def_const_or_var -> late_initialization .)
    BOOLTYPE        reduce using rule 64 (def_const_or_var -> late_initialization .)
    RKEY            reduce using rule 64 (def_const_or_var -> late_initialization .)


state 31

    (19) print_data -> PRINT . LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> PRINT . LPARENT VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 98


state 32

    (21) read_data -> READ . LPARENT RPARENT DOTANDCOMMA
    (77) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 99


state 33

    (39) arithmetic_operation -> value_numeric .
    (41) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (43) logic_operation -> value_numeric . logic_operator INTEGER
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT
    (45) logic_operator -> . GREATER_THAN
    (46) logic_operator -> . SMALLER_THAN
    (47) logic_operator -> . EQUAL_COMPARATION
    (48) logic_operator -> . INEQUALITY
    (49) logic_operator -> . GREATER_THAN_OR_EQUAL
    (50) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (51) logic_operator -> . LOGICAND
    (52) logic_operator -> . LOGICOR
    (53) logic_operator -> . LOGICNOT
    (54) logic_operator -> . LOGICXOR

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    PRINT           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 39 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    QUEUE           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 39 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 39 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 39 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 39 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 39 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 39 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85
    GREATER_THAN    shift and go to state 86
    SMALLER_THAN    shift and go to state 87
    EQUAL_COMPARATION shift and go to state 88
    INEQUALITY      shift and go to state 89
    GREATER_THAN_OR_EQUAL shift and go to state 90
    SMALLER_THAN_OR_EQUAL shift and go to state 91
    LOGICAND        shift and go to state 92
    LOGICOR         shift and go to state 93
    LOGICNOT        shift and go to state 94
    LOGICXOR        shift and go to state 95

  ! PLUS            [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 100
    logic_operator                 shift and go to state 101

state 34

    (35) value_numeric -> INTEGER .

    PRINT           reduce using rule 35 (value_numeric -> INTEGER .)
    READ            reduce using rule 35 (value_numeric -> INTEGER .)
    VARIABLE        reduce using rule 35 (value_numeric -> INTEGER .)
    QUEUE           reduce using rule 35 (value_numeric -> INTEGER .)
    CONST           reduce using rule 35 (value_numeric -> INTEGER .)
    INTEGER         reduce using rule 35 (value_numeric -> INTEGER .)
    FLOAT_NUMBER    reduce using rule 35 (value_numeric -> INTEGER .)
    DECIMAL_NUMBER  reduce using rule 35 (value_numeric -> INTEGER .)
    LIST            reduce using rule 35 (value_numeric -> INTEGER .)
    DICTIONARY      reduce using rule 35 (value_numeric -> INTEGER .)
    FOR             reduce using rule 35 (value_numeric -> INTEGER .)
    FOREACH         reduce using rule 35 (value_numeric -> INTEGER .)
    TRY             reduce using rule 35 (value_numeric -> INTEGER .)
    WHILE           reduce using rule 35 (value_numeric -> INTEGER .)
    DO              reduce using rule 35 (value_numeric -> INTEGER .)
    PUBLIC          reduce using rule 35 (value_numeric -> INTEGER .)
    PRIVATE         reduce using rule 35 (value_numeric -> INTEGER .)
    CHARTYPE        reduce using rule 35 (value_numeric -> INTEGER .)
    STRINGTYPE      reduce using rule 35 (value_numeric -> INTEGER .)
    FLOATTYPE       reduce using rule 35 (value_numeric -> INTEGER .)
    DECIMALTYPE     reduce using rule 35 (value_numeric -> INTEGER .)
    INTTYPE         reduce using rule 35 (value_numeric -> INTEGER .)
    BOOLTYPE        reduce using rule 35 (value_numeric -> INTEGER .)
    RKEY            reduce using rule 35 (value_numeric -> INTEGER .)
    PLUS            reduce using rule 35 (value_numeric -> INTEGER .)
    MINUS           reduce using rule 35 (value_numeric -> INTEGER .)
    TIMES           reduce using rule 35 (value_numeric -> INTEGER .)
    DIVIDE          reduce using rule 35 (value_numeric -> INTEGER .)
    PERCENT         reduce using rule 35 (value_numeric -> INTEGER .)
    GREATER_THAN    reduce using rule 35 (value_numeric -> INTEGER .)
    SMALLER_THAN    reduce using rule 35 (value_numeric -> INTEGER .)
    EQUAL_COMPARATION reduce using rule 35 (value_numeric -> INTEGER .)
    INEQUALITY      reduce using rule 35 (value_numeric -> INTEGER .)
    GREATER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> INTEGER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 35 (value_numeric -> INTEGER .)
    LOGICAND        reduce using rule 35 (value_numeric -> INTEGER .)
    LOGICOR         reduce using rule 35 (value_numeric -> INTEGER .)
    LOGICNOT        reduce using rule 35 (value_numeric -> INTEGER .)
    LOGICXOR        reduce using rule 35 (value_numeric -> INTEGER .)
    DOTANDCOMMA     reduce using rule 35 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 35 (value_numeric -> INTEGER .)
    RPARENT         reduce using rule 35 (value_numeric -> INTEGER .)


state 35

    (124) lists -> list_empty .

    PRINT           reduce using rule 124 (lists -> list_empty .)
    READ            reduce using rule 124 (lists -> list_empty .)
    VARIABLE        reduce using rule 124 (lists -> list_empty .)
    QUEUE           reduce using rule 124 (lists -> list_empty .)
    CONST           reduce using rule 124 (lists -> list_empty .)
    INTEGER         reduce using rule 124 (lists -> list_empty .)
    FLOAT_NUMBER    reduce using rule 124 (lists -> list_empty .)
    DECIMAL_NUMBER  reduce using rule 124 (lists -> list_empty .)
    LIST            reduce using rule 124 (lists -> list_empty .)
    DICTIONARY      reduce using rule 124 (lists -> list_empty .)
    FOR             reduce using rule 124 (lists -> list_empty .)
    FOREACH         reduce using rule 124 (lists -> list_empty .)
    TRY             reduce using rule 124 (lists -> list_empty .)
    WHILE           reduce using rule 124 (lists -> list_empty .)
    DO              reduce using rule 124 (lists -> list_empty .)
    PUBLIC          reduce using rule 124 (lists -> list_empty .)
    PRIVATE         reduce using rule 124 (lists -> list_empty .)
    CHARTYPE        reduce using rule 124 (lists -> list_empty .)
    STRINGTYPE      reduce using rule 124 (lists -> list_empty .)
    FLOATTYPE       reduce using rule 124 (lists -> list_empty .)
    DECIMALTYPE     reduce using rule 124 (lists -> list_empty .)
    INTTYPE         reduce using rule 124 (lists -> list_empty .)
    BOOLTYPE        reduce using rule 124 (lists -> list_empty .)
    RKEY            reduce using rule 124 (lists -> list_empty .)


state 36

    (125) lists -> list_full .

    PRINT           reduce using rule 125 (lists -> list_full .)
    READ            reduce using rule 125 (lists -> list_full .)
    VARIABLE        reduce using rule 125 (lists -> list_full .)
    QUEUE           reduce using rule 125 (lists -> list_full .)
    CONST           reduce using rule 125 (lists -> list_full .)
    INTEGER         reduce using rule 125 (lists -> list_full .)
    FLOAT_NUMBER    reduce using rule 125 (lists -> list_full .)
    DECIMAL_NUMBER  reduce using rule 125 (lists -> list_full .)
    LIST            reduce using rule 125 (lists -> list_full .)
    DICTIONARY      reduce using rule 125 (lists -> list_full .)
    FOR             reduce using rule 125 (lists -> list_full .)
    FOREACH         reduce using rule 125 (lists -> list_full .)
    TRY             reduce using rule 125 (lists -> list_full .)
    WHILE           reduce using rule 125 (lists -> list_full .)
    DO              reduce using rule 125 (lists -> list_full .)
    PUBLIC          reduce using rule 125 (lists -> list_full .)
    PRIVATE         reduce using rule 125 (lists -> list_full .)
    CHARTYPE        reduce using rule 125 (lists -> list_full .)
    STRINGTYPE      reduce using rule 125 (lists -> list_full .)
    FLOATTYPE       reduce using rule 125 (lists -> list_full .)
    DECIMALTYPE     reduce using rule 125 (lists -> list_full .)
    INTTYPE         reduce using rule 125 (lists -> list_full .)
    BOOLTYPE        reduce using rule 125 (lists -> list_full .)
    RKEY            reduce using rule 125 (lists -> list_full .)


state 37

    (134) functions_list -> list_func_clear .

    PRINT           reduce using rule 134 (functions_list -> list_func_clear .)
    READ            reduce using rule 134 (functions_list -> list_func_clear .)
    VARIABLE        reduce using rule 134 (functions_list -> list_func_clear .)
    QUEUE           reduce using rule 134 (functions_list -> list_func_clear .)
    CONST           reduce using rule 134 (functions_list -> list_func_clear .)
    INTEGER         reduce using rule 134 (functions_list -> list_func_clear .)
    FLOAT_NUMBER    reduce using rule 134 (functions_list -> list_func_clear .)
    DECIMAL_NUMBER  reduce using rule 134 (functions_list -> list_func_clear .)
    LIST            reduce using rule 134 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 134 (functions_list -> list_func_clear .)
    FOR             reduce using rule 134 (functions_list -> list_func_clear .)
    FOREACH         reduce using rule 134 (functions_list -> list_func_clear .)
    TRY             reduce using rule 134 (functions_list -> list_func_clear .)
    WHILE           reduce using rule 134 (functions_list -> list_func_clear .)
    DO              reduce using rule 134 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 134 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 134 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 134 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 134 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 134 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 134 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 134 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 134 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 134 (functions_list -> list_func_clear .)


state 38

    (135) functions_list -> list_func_count .

    PRINT           reduce using rule 135 (functions_list -> list_func_count .)
    READ            reduce using rule 135 (functions_list -> list_func_count .)
    VARIABLE        reduce using rule 135 (functions_list -> list_func_count .)
    QUEUE           reduce using rule 135 (functions_list -> list_func_count .)
    CONST           reduce using rule 135 (functions_list -> list_func_count .)
    INTEGER         reduce using rule 135 (functions_list -> list_func_count .)
    FLOAT_NUMBER    reduce using rule 135 (functions_list -> list_func_count .)
    DECIMAL_NUMBER  reduce using rule 135 (functions_list -> list_func_count .)
    LIST            reduce using rule 135 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 135 (functions_list -> list_func_count .)
    FOR             reduce using rule 135 (functions_list -> list_func_count .)
    FOREACH         reduce using rule 135 (functions_list -> list_func_count .)
    TRY             reduce using rule 135 (functions_list -> list_func_count .)
    WHILE           reduce using rule 135 (functions_list -> list_func_count .)
    DO              reduce using rule 135 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 135 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 135 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 135 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 135 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 135 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 135 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 135 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 135 (functions_list -> list_func_count .)
    RKEY            reduce using rule 135 (functions_list -> list_func_count .)


state 39

    (136) functions_list -> list_func_add .

    PRINT           reduce using rule 136 (functions_list -> list_func_add .)
    READ            reduce using rule 136 (functions_list -> list_func_add .)
    VARIABLE        reduce using rule 136 (functions_list -> list_func_add .)
    QUEUE           reduce using rule 136 (functions_list -> list_func_add .)
    CONST           reduce using rule 136 (functions_list -> list_func_add .)
    INTEGER         reduce using rule 136 (functions_list -> list_func_add .)
    FLOAT_NUMBER    reduce using rule 136 (functions_list -> list_func_add .)
    DECIMAL_NUMBER  reduce using rule 136 (functions_list -> list_func_add .)
    LIST            reduce using rule 136 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 136 (functions_list -> list_func_add .)
    FOR             reduce using rule 136 (functions_list -> list_func_add .)
    FOREACH         reduce using rule 136 (functions_list -> list_func_add .)
    TRY             reduce using rule 136 (functions_list -> list_func_add .)
    WHILE           reduce using rule 136 (functions_list -> list_func_add .)
    DO              reduce using rule 136 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 136 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 136 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 136 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 136 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 136 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 136 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 136 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 136 (functions_list -> list_func_add .)
    RKEY            reduce using rule 136 (functions_list -> list_func_add .)


state 40

    (137) functions_list -> list_func_removeat .

    PRINT           reduce using rule 137 (functions_list -> list_func_removeat .)
    READ            reduce using rule 137 (functions_list -> list_func_removeat .)
    VARIABLE        reduce using rule 137 (functions_list -> list_func_removeat .)
    QUEUE           reduce using rule 137 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 137 (functions_list -> list_func_removeat .)
    INTEGER         reduce using rule 137 (functions_list -> list_func_removeat .)
    FLOAT_NUMBER    reduce using rule 137 (functions_list -> list_func_removeat .)
    DECIMAL_NUMBER  reduce using rule 137 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 137 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 137 (functions_list -> list_func_removeat .)
    FOR             reduce using rule 137 (functions_list -> list_func_removeat .)
    FOREACH         reduce using rule 137 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 137 (functions_list -> list_func_removeat .)
    WHILE           reduce using rule 137 (functions_list -> list_func_removeat .)
    DO              reduce using rule 137 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 137 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 137 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 137 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 137 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 137 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 137 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 137 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 137 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 137 (functions_list -> list_func_removeat .)


state 41

    (111) dict_estruct -> dict_empty .

    PRINT           reduce using rule 111 (dict_estruct -> dict_empty .)
    READ            reduce using rule 111 (dict_estruct -> dict_empty .)
    VARIABLE        reduce using rule 111 (dict_estruct -> dict_empty .)
    QUEUE           reduce using rule 111 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 111 (dict_estruct -> dict_empty .)
    INTEGER         reduce using rule 111 (dict_estruct -> dict_empty .)
    FLOAT_NUMBER    reduce using rule 111 (dict_estruct -> dict_empty .)
    DECIMAL_NUMBER  reduce using rule 111 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 111 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 111 (dict_estruct -> dict_empty .)
    FOR             reduce using rule 111 (dict_estruct -> dict_empty .)
    FOREACH         reduce using rule 111 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 111 (dict_estruct -> dict_empty .)
    WHILE           reduce using rule 111 (dict_estruct -> dict_empty .)
    DO              reduce using rule 111 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 111 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 111 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 111 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 111 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 111 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 111 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 111 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 111 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 111 (dict_estruct -> dict_empty .)


state 42

    (112) dict_estruct -> dict_full .

    PRINT           reduce using rule 112 (dict_estruct -> dict_full .)
    READ            reduce using rule 112 (dict_estruct -> dict_full .)
    VARIABLE        reduce using rule 112 (dict_estruct -> dict_full .)
    QUEUE           reduce using rule 112 (dict_estruct -> dict_full .)
    CONST           reduce using rule 112 (dict_estruct -> dict_full .)
    INTEGER         reduce using rule 112 (dict_estruct -> dict_full .)
    FLOAT_NUMBER    reduce using rule 112 (dict_estruct -> dict_full .)
    DECIMAL_NUMBER  reduce using rule 112 (dict_estruct -> dict_full .)
    LIST            reduce using rule 112 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 112 (dict_estruct -> dict_full .)
    FOR             reduce using rule 112 (dict_estruct -> dict_full .)
    FOREACH         reduce using rule 112 (dict_estruct -> dict_full .)
    TRY             reduce using rule 112 (dict_estruct -> dict_full .)
    WHILE           reduce using rule 112 (dict_estruct -> dict_full .)
    DO              reduce using rule 112 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 112 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 112 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 112 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 112 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 112 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 112 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 112 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 112 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 112 (dict_estruct -> dict_full .)


state 43

    (120) functions_dict -> dict_func_put .

    PRINT           reduce using rule 120 (functions_dict -> dict_func_put .)
    READ            reduce using rule 120 (functions_dict -> dict_func_put .)
    VARIABLE        reduce using rule 120 (functions_dict -> dict_func_put .)
    QUEUE           reduce using rule 120 (functions_dict -> dict_func_put .)
    CONST           reduce using rule 120 (functions_dict -> dict_func_put .)
    INTEGER         reduce using rule 120 (functions_dict -> dict_func_put .)
    FLOAT_NUMBER    reduce using rule 120 (functions_dict -> dict_func_put .)
    DECIMAL_NUMBER  reduce using rule 120 (functions_dict -> dict_func_put .)
    LIST            reduce using rule 120 (functions_dict -> dict_func_put .)
    DICTIONARY      reduce using rule 120 (functions_dict -> dict_func_put .)
    FOR             reduce using rule 120 (functions_dict -> dict_func_put .)
    FOREACH         reduce using rule 120 (functions_dict -> dict_func_put .)
    TRY             reduce using rule 120 (functions_dict -> dict_func_put .)
    WHILE           reduce using rule 120 (functions_dict -> dict_func_put .)
    DO              reduce using rule 120 (functions_dict -> dict_func_put .)
    PUBLIC          reduce using rule 120 (functions_dict -> dict_func_put .)
    PRIVATE         reduce using rule 120 (functions_dict -> dict_func_put .)
    CHARTYPE        reduce using rule 120 (functions_dict -> dict_func_put .)
    STRINGTYPE      reduce using rule 120 (functions_dict -> dict_func_put .)
    FLOATTYPE       reduce using rule 120 (functions_dict -> dict_func_put .)
    DECIMALTYPE     reduce using rule 120 (functions_dict -> dict_func_put .)
    INTTYPE         reduce using rule 120 (functions_dict -> dict_func_put .)
    BOOLTYPE        reduce using rule 120 (functions_dict -> dict_func_put .)
    RKEY            reduce using rule 120 (functions_dict -> dict_func_put .)


state 44

    (121) functions_dict -> dict_func_remove .

    PRINT           reduce using rule 121 (functions_dict -> dict_func_remove .)
    READ            reduce using rule 121 (functions_dict -> dict_func_remove .)
    VARIABLE        reduce using rule 121 (functions_dict -> dict_func_remove .)
    QUEUE           reduce using rule 121 (functions_dict -> dict_func_remove .)
    CONST           reduce using rule 121 (functions_dict -> dict_func_remove .)
    INTEGER         reduce using rule 121 (functions_dict -> dict_func_remove .)
    FLOAT_NUMBER    reduce using rule 121 (functions_dict -> dict_func_remove .)
    DECIMAL_NUMBER  reduce using rule 121 (functions_dict -> dict_func_remove .)
    LIST            reduce using rule 121 (functions_dict -> dict_func_remove .)
    DICTIONARY      reduce using rule 121 (functions_dict -> dict_func_remove .)
    FOR             reduce using rule 121 (functions_dict -> dict_func_remove .)
    FOREACH         reduce using rule 121 (functions_dict -> dict_func_remove .)
    TRY             reduce using rule 121 (functions_dict -> dict_func_remove .)
    WHILE           reduce using rule 121 (functions_dict -> dict_func_remove .)
    DO              reduce using rule 121 (functions_dict -> dict_func_remove .)
    PUBLIC          reduce using rule 121 (functions_dict -> dict_func_remove .)
    PRIVATE         reduce using rule 121 (functions_dict -> dict_func_remove .)
    CHARTYPE        reduce using rule 121 (functions_dict -> dict_func_remove .)
    STRINGTYPE      reduce using rule 121 (functions_dict -> dict_func_remove .)
    FLOATTYPE       reduce using rule 121 (functions_dict -> dict_func_remove .)
    DECIMALTYPE     reduce using rule 121 (functions_dict -> dict_func_remove .)
    INTTYPE         reduce using rule 121 (functions_dict -> dict_func_remove .)
    BOOLTYPE        reduce using rule 121 (functions_dict -> dict_func_remove .)
    RKEY            reduce using rule 121 (functions_dict -> dict_func_remove .)


state 45

    (145) queue_struct -> QUEUE . SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    SMALLER_THAN    shift and go to state 102


state 46

    (70) variable_assignation -> data_type . assignation_key_value DOTANDCOMMA
    (72) variable_assignation -> data_type . assignation_key_value_multiple DOTANDCOMMA
    (74) late_initialization -> data_type . VARIABLE DOTANDCOMMA
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (78) assignation_key_value_multiple -> . assignation_key_value
    (79) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 105
    READ            shift and go to state 106

    assignation_key_value          shift and go to state 103
    assignation_key_value_multiple shift and go to state 104

state 47

    (146) functions_queue -> queue_enqueue .

    PRINT           reduce using rule 146 (functions_queue -> queue_enqueue .)
    READ            reduce using rule 146 (functions_queue -> queue_enqueue .)
    VARIABLE        reduce using rule 146 (functions_queue -> queue_enqueue .)
    QUEUE           reduce using rule 146 (functions_queue -> queue_enqueue .)
    CONST           reduce using rule 146 (functions_queue -> queue_enqueue .)
    INTEGER         reduce using rule 146 (functions_queue -> queue_enqueue .)
    FLOAT_NUMBER    reduce using rule 146 (functions_queue -> queue_enqueue .)
    DECIMAL_NUMBER  reduce using rule 146 (functions_queue -> queue_enqueue .)
    LIST            reduce using rule 146 (functions_queue -> queue_enqueue .)
    DICTIONARY      reduce using rule 146 (functions_queue -> queue_enqueue .)
    FOR             reduce using rule 146 (functions_queue -> queue_enqueue .)
    FOREACH         reduce using rule 146 (functions_queue -> queue_enqueue .)
    TRY             reduce using rule 146 (functions_queue -> queue_enqueue .)
    WHILE           reduce using rule 146 (functions_queue -> queue_enqueue .)
    DO              reduce using rule 146 (functions_queue -> queue_enqueue .)
    PUBLIC          reduce using rule 146 (functions_queue -> queue_enqueue .)
    PRIVATE         reduce using rule 146 (functions_queue -> queue_enqueue .)
    CHARTYPE        reduce using rule 146 (functions_queue -> queue_enqueue .)
    STRINGTYPE      reduce using rule 146 (functions_queue -> queue_enqueue .)
    FLOATTYPE       reduce using rule 146 (functions_queue -> queue_enqueue .)
    DECIMALTYPE     reduce using rule 146 (functions_queue -> queue_enqueue .)
    INTTYPE         reduce using rule 146 (functions_queue -> queue_enqueue .)
    BOOLTYPE        reduce using rule 146 (functions_queue -> queue_enqueue .)
    RKEY            reduce using rule 146 (functions_queue -> queue_enqueue .)


state 48

    (147) functions_queue -> queue_dequeue .

    PRINT           reduce using rule 147 (functions_queue -> queue_dequeue .)
    READ            reduce using rule 147 (functions_queue -> queue_dequeue .)
    VARIABLE        reduce using rule 147 (functions_queue -> queue_dequeue .)
    QUEUE           reduce using rule 147 (functions_queue -> queue_dequeue .)
    CONST           reduce using rule 147 (functions_queue -> queue_dequeue .)
    INTEGER         reduce using rule 147 (functions_queue -> queue_dequeue .)
    FLOAT_NUMBER    reduce using rule 147 (functions_queue -> queue_dequeue .)
    DECIMAL_NUMBER  reduce using rule 147 (functions_queue -> queue_dequeue .)
    LIST            reduce using rule 147 (functions_queue -> queue_dequeue .)
    DICTIONARY      reduce using rule 147 (functions_queue -> queue_dequeue .)
    FOR             reduce using rule 147 (functions_queue -> queue_dequeue .)
    FOREACH         reduce using rule 147 (functions_queue -> queue_dequeue .)
    TRY             reduce using rule 147 (functions_queue -> queue_dequeue .)
    WHILE           reduce using rule 147 (functions_queue -> queue_dequeue .)
    DO              reduce using rule 147 (functions_queue -> queue_dequeue .)
    PUBLIC          reduce using rule 147 (functions_queue -> queue_dequeue .)
    PRIVATE         reduce using rule 147 (functions_queue -> queue_dequeue .)
    CHARTYPE        reduce using rule 147 (functions_queue -> queue_dequeue .)
    STRINGTYPE      reduce using rule 147 (functions_queue -> queue_dequeue .)
    FLOATTYPE       reduce using rule 147 (functions_queue -> queue_dequeue .)
    DECIMALTYPE     reduce using rule 147 (functions_queue -> queue_dequeue .)
    INTTYPE         reduce using rule 147 (functions_queue -> queue_dequeue .)
    BOOLTYPE        reduce using rule 147 (functions_queue -> queue_dequeue .)
    RKEY            reduce using rule 147 (functions_queue -> queue_dequeue .)


state 49

    (148) functions_queue -> queue_clear .

    PRINT           reduce using rule 148 (functions_queue -> queue_clear .)
    READ            reduce using rule 148 (functions_queue -> queue_clear .)
    VARIABLE        reduce using rule 148 (functions_queue -> queue_clear .)
    QUEUE           reduce using rule 148 (functions_queue -> queue_clear .)
    CONST           reduce using rule 148 (functions_queue -> queue_clear .)
    INTEGER         reduce using rule 148 (functions_queue -> queue_clear .)
    FLOAT_NUMBER    reduce using rule 148 (functions_queue -> queue_clear .)
    DECIMAL_NUMBER  reduce using rule 148 (functions_queue -> queue_clear .)
    LIST            reduce using rule 148 (functions_queue -> queue_clear .)
    DICTIONARY      reduce using rule 148 (functions_queue -> queue_clear .)
    FOR             reduce using rule 148 (functions_queue -> queue_clear .)
    FOREACH         reduce using rule 148 (functions_queue -> queue_clear .)
    TRY             reduce using rule 148 (functions_queue -> queue_clear .)
    WHILE           reduce using rule 148 (functions_queue -> queue_clear .)
    DO              reduce using rule 148 (functions_queue -> queue_clear .)
    PUBLIC          reduce using rule 148 (functions_queue -> queue_clear .)
    PRIVATE         reduce using rule 148 (functions_queue -> queue_clear .)
    CHARTYPE        reduce using rule 148 (functions_queue -> queue_clear .)
    STRINGTYPE      reduce using rule 148 (functions_queue -> queue_clear .)
    FLOATTYPE       reduce using rule 148 (functions_queue -> queue_clear .)
    DECIMALTYPE     reduce using rule 148 (functions_queue -> queue_clear .)
    INTTYPE         reduce using rule 148 (functions_queue -> queue_clear .)
    BOOLTYPE        reduce using rule 148 (functions_queue -> queue_clear .)
    RKEY            reduce using rule 148 (functions_queue -> queue_clear .)


state 50

    (149) functions_queue -> queue_isEmpty .

    PRINT           reduce using rule 149 (functions_queue -> queue_isEmpty .)
    READ            reduce using rule 149 (functions_queue -> queue_isEmpty .)
    VARIABLE        reduce using rule 149 (functions_queue -> queue_isEmpty .)
    QUEUE           reduce using rule 149 (functions_queue -> queue_isEmpty .)
    CONST           reduce using rule 149 (functions_queue -> queue_isEmpty .)
    INTEGER         reduce using rule 149 (functions_queue -> queue_isEmpty .)
    FLOAT_NUMBER    reduce using rule 149 (functions_queue -> queue_isEmpty .)
    DECIMAL_NUMBER  reduce using rule 149 (functions_queue -> queue_isEmpty .)
    LIST            reduce using rule 149 (functions_queue -> queue_isEmpty .)
    DICTIONARY      reduce using rule 149 (functions_queue -> queue_isEmpty .)
    FOR             reduce using rule 149 (functions_queue -> queue_isEmpty .)
    FOREACH         reduce using rule 149 (functions_queue -> queue_isEmpty .)
    TRY             reduce using rule 149 (functions_queue -> queue_isEmpty .)
    WHILE           reduce using rule 149 (functions_queue -> queue_isEmpty .)
    DO              reduce using rule 149 (functions_queue -> queue_isEmpty .)
    PUBLIC          reduce using rule 149 (functions_queue -> queue_isEmpty .)
    PRIVATE         reduce using rule 149 (functions_queue -> queue_isEmpty .)
    CHARTYPE        reduce using rule 149 (functions_queue -> queue_isEmpty .)
    STRINGTYPE      reduce using rule 149 (functions_queue -> queue_isEmpty .)
    FLOATTYPE       reduce using rule 149 (functions_queue -> queue_isEmpty .)
    DECIMALTYPE     reduce using rule 149 (functions_queue -> queue_isEmpty .)
    INTTYPE         reduce using rule 149 (functions_queue -> queue_isEmpty .)
    BOOLTYPE        reduce using rule 149 (functions_queue -> queue_isEmpty .)
    RKEY            reduce using rule 149 (functions_queue -> queue_isEmpty .)


state 51

    (90) block_for -> for_anidado .

    PRINT           reduce using rule 90 (block_for -> for_anidado .)
    READ            reduce using rule 90 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 90 (block_for -> for_anidado .)
    QUEUE           reduce using rule 90 (block_for -> for_anidado .)
    CONST           reduce using rule 90 (block_for -> for_anidado .)
    INTEGER         reduce using rule 90 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 90 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 90 (block_for -> for_anidado .)
    LIST            reduce using rule 90 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 90 (block_for -> for_anidado .)
    FOR             reduce using rule 90 (block_for -> for_anidado .)
    FOREACH         reduce using rule 90 (block_for -> for_anidado .)
    TRY             reduce using rule 90 (block_for -> for_anidado .)
    WHILE           reduce using rule 90 (block_for -> for_anidado .)
    DO              reduce using rule 90 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 90 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 90 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 90 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 90 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 90 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 90 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 90 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 90 (block_for -> for_anidado .)
    RKEY            reduce using rule 90 (block_for -> for_anidado .)


state 52

    (91) block_for -> for_each .

    PRINT           reduce using rule 91 (block_for -> for_each .)
    READ            reduce using rule 91 (block_for -> for_each .)
    VARIABLE        reduce using rule 91 (block_for -> for_each .)
    QUEUE           reduce using rule 91 (block_for -> for_each .)
    CONST           reduce using rule 91 (block_for -> for_each .)
    INTEGER         reduce using rule 91 (block_for -> for_each .)
    FLOAT_NUMBER    reduce using rule 91 (block_for -> for_each .)
    DECIMAL_NUMBER  reduce using rule 91 (block_for -> for_each .)
    LIST            reduce using rule 91 (block_for -> for_each .)
    DICTIONARY      reduce using rule 91 (block_for -> for_each .)
    FOR             reduce using rule 91 (block_for -> for_each .)
    FOREACH         reduce using rule 91 (block_for -> for_each .)
    TRY             reduce using rule 91 (block_for -> for_each .)
    WHILE           reduce using rule 91 (block_for -> for_each .)
    DO              reduce using rule 91 (block_for -> for_each .)
    PUBLIC          reduce using rule 91 (block_for -> for_each .)
    PRIVATE         reduce using rule 91 (block_for -> for_each .)
    CHARTYPE        reduce using rule 91 (block_for -> for_each .)
    STRINGTYPE      reduce using rule 91 (block_for -> for_each .)
    FLOATTYPE       reduce using rule 91 (block_for -> for_each .)
    DECIMALTYPE     reduce using rule 91 (block_for -> for_each .)
    INTTYPE         reduce using rule 91 (block_for -> for_each .)
    BOOLTYPE        reduce using rule 91 (block_for -> for_each .)
    RKEY            reduce using rule 91 (block_for -> for_each .)


state 53

    (98) block_try_catch -> try_catch_simply .

    PRINT           reduce using rule 98 (block_try_catch -> try_catch_simply .)
    READ            reduce using rule 98 (block_try_catch -> try_catch_simply .)
    VARIABLE        reduce using rule 98 (block_try_catch -> try_catch_simply .)
    QUEUE           reduce using rule 98 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 98 (block_try_catch -> try_catch_simply .)
    INTEGER         reduce using rule 98 (block_try_catch -> try_catch_simply .)
    FLOAT_NUMBER    reduce using rule 98 (block_try_catch -> try_catch_simply .)
    DECIMAL_NUMBER  reduce using rule 98 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 98 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 98 (block_try_catch -> try_catch_simply .)
    FOR             reduce using rule 98 (block_try_catch -> try_catch_simply .)
    FOREACH         reduce using rule 98 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 98 (block_try_catch -> try_catch_simply .)
    WHILE           reduce using rule 98 (block_try_catch -> try_catch_simply .)
    DO              reduce using rule 98 (block_try_catch -> try_catch_simply .)
    PUBLIC          reduce using rule 98 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 98 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 98 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 98 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 98 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 98 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 98 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 98 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 98 (block_try_catch -> try_catch_simply .)


state 54

    (99) block_try_catch -> try_catch_finally .

    PRINT           reduce using rule 99 (block_try_catch -> try_catch_finally .)
    READ            reduce using rule 99 (block_try_catch -> try_catch_finally .)
    VARIABLE        reduce using rule 99 (block_try_catch -> try_catch_finally .)
    QUEUE           reduce using rule 99 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 99 (block_try_catch -> try_catch_finally .)
    INTEGER         reduce using rule 99 (block_try_catch -> try_catch_finally .)
    FLOAT_NUMBER    reduce using rule 99 (block_try_catch -> try_catch_finally .)
    DECIMAL_NUMBER  reduce using rule 99 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 99 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 99 (block_try_catch -> try_catch_finally .)
    FOR             reduce using rule 99 (block_try_catch -> try_catch_finally .)
    FOREACH         reduce using rule 99 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 99 (block_try_catch -> try_catch_finally .)
    WHILE           reduce using rule 99 (block_try_catch -> try_catch_finally .)
    DO              reduce using rule 99 (block_try_catch -> try_catch_finally .)
    PUBLIC          reduce using rule 99 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 99 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 99 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 99 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 99 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 99 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 99 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 99 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 99 (block_try_catch -> try_catch_finally .)


state 55

    (102) block_while -> normal_while .

    PRINT           reduce using rule 102 (block_while -> normal_while .)
    READ            reduce using rule 102 (block_while -> normal_while .)
    VARIABLE        reduce using rule 102 (block_while -> normal_while .)
    QUEUE           reduce using rule 102 (block_while -> normal_while .)
    CONST           reduce using rule 102 (block_while -> normal_while .)
    INTEGER         reduce using rule 102 (block_while -> normal_while .)
    FLOAT_NUMBER    reduce using rule 102 (block_while -> normal_while .)
    DECIMAL_NUMBER  reduce using rule 102 (block_while -> normal_while .)
    LIST            reduce using rule 102 (block_while -> normal_while .)
    DICTIONARY      reduce using rule 102 (block_while -> normal_while .)
    FOR             reduce using rule 102 (block_while -> normal_while .)
    FOREACH         reduce using rule 102 (block_while -> normal_while .)
    TRY             reduce using rule 102 (block_while -> normal_while .)
    WHILE           reduce using rule 102 (block_while -> normal_while .)
    DO              reduce using rule 102 (block_while -> normal_while .)
    PUBLIC          reduce using rule 102 (block_while -> normal_while .)
    PRIVATE         reduce using rule 102 (block_while -> normal_while .)
    CHARTYPE        reduce using rule 102 (block_while -> normal_while .)
    STRINGTYPE      reduce using rule 102 (block_while -> normal_while .)
    FLOATTYPE       reduce using rule 102 (block_while -> normal_while .)
    DECIMALTYPE     reduce using rule 102 (block_while -> normal_while .)
    INTTYPE         reduce using rule 102 (block_while -> normal_while .)
    BOOLTYPE        reduce using rule 102 (block_while -> normal_while .)
    RKEY            reduce using rule 102 (block_while -> normal_while .)


state 56

    (103) block_while -> do_while .

    PRINT           reduce using rule 103 (block_while -> do_while .)
    READ            reduce using rule 103 (block_while -> do_while .)
    VARIABLE        reduce using rule 103 (block_while -> do_while .)
    QUEUE           reduce using rule 103 (block_while -> do_while .)
    CONST           reduce using rule 103 (block_while -> do_while .)
    INTEGER         reduce using rule 103 (block_while -> do_while .)
    FLOAT_NUMBER    reduce using rule 103 (block_while -> do_while .)
    DECIMAL_NUMBER  reduce using rule 103 (block_while -> do_while .)
    LIST            reduce using rule 103 (block_while -> do_while .)
    DICTIONARY      reduce using rule 103 (block_while -> do_while .)
    FOR             reduce using rule 103 (block_while -> do_while .)
    FOREACH         reduce using rule 103 (block_while -> do_while .)
    TRY             reduce using rule 103 (block_while -> do_while .)
    WHILE           reduce using rule 103 (block_while -> do_while .)
    DO              reduce using rule 103 (block_while -> do_while .)
    PUBLIC          reduce using rule 103 (block_while -> do_while .)
    PRIVATE         reduce using rule 103 (block_while -> do_while .)
    CHARTYPE        reduce using rule 103 (block_while -> do_while .)
    STRINGTYPE      reduce using rule 103 (block_while -> do_while .)
    FLOATTYPE       reduce using rule 103 (block_while -> do_while .)
    DECIMALTYPE     reduce using rule 103 (block_while -> do_while .)
    INTTYPE         reduce using rule 103 (block_while -> do_while .)
    BOOLTYPE        reduce using rule 103 (block_while -> do_while .)
    RKEY            reduce using rule 103 (block_while -> do_while .)


state 57

    (65) constant_assignation -> access_modifiers . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> access_modifiers . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> access_modifiers . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> access_modifiers . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> access_modifiers . data_type VARIABLE DOTANDCOMMA
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CONST           shift and go to state 107
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 108

state 58

    (66) constant_assignation -> CONST . data_type assignation_key_value DOTANDCOMMA
    (68) constant_assignation -> CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 109

state 59

    (75) late_initialization -> assignation_key_value . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 110


state 60

    (36) value_numeric -> FLOAT_NUMBER .

    PRINT           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    READ            reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    VARIABLE        reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    QUEUE           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    CONST           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    INTEGER         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    FLOAT_NUMBER    reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    LIST            reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    DICTIONARY      reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    FOR             reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    FOREACH         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    TRY             reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    WHILE           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    DO              reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    PUBLIC          reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    PRIVATE         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    CHARTYPE        reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    STRINGTYPE      reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    FLOATTYPE       reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    DECIMALTYPE     reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    INTTYPE         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    BOOLTYPE        reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    RKEY            reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    PLUS            reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    MINUS           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    TIMES           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    DIVIDE          reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    PERCENT         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN    reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    EQUAL_COMPARATION reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    INEQUALITY      reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    LOGICAND        reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    LOGICOR         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    LOGICNOT        reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    LOGICXOR        reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    DOTANDCOMMA     reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)
    RPARENT         reduce using rule 36 (value_numeric -> FLOAT_NUMBER .)


state 61

    (37) value_numeric -> DECIMAL_NUMBER .

    PRINT           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    READ            reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    VARIABLE        reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    QUEUE           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    CONST           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    INTEGER         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    FLOAT_NUMBER    reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    DECIMAL_NUMBER  reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    LIST            reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    DICTIONARY      reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    FOR             reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    FOREACH         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    TRY             reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    WHILE           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    DO              reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    PUBLIC          reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    PRIVATE         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    CHARTYPE        reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    STRINGTYPE      reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    FLOATTYPE       reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    DECIMALTYPE     reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    INTTYPE         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    BOOLTYPE        reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    RKEY            reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    PLUS            reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    MINUS           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    TIMES           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    DIVIDE          reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    PERCENT         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN    reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN    reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    EQUAL_COMPARATION reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    INEQUALITY      reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    GREATER_THAN_OR_EQUAL reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    SMALLER_THAN_OR_EQUAL reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    LOGICAND        reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    LOGICOR         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    LOGICNOT        reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    LOGICXOR        reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    DOTANDCOMMA     reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)
    RPARENT         reduce using rule 37 (value_numeric -> DECIMAL_NUMBER .)


state 62

    (126) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 111


state 63

    (83) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 83 (data_type -> STRINGTYPE .)
    READ            reduce using rule 83 (data_type -> STRINGTYPE .)
    GREATER_THAN    reduce using rule 83 (data_type -> STRINGTYPE .)


state 64

    (86) data_type -> INTTYPE .

    VARIABLE        reduce using rule 86 (data_type -> INTTYPE .)
    READ            reduce using rule 86 (data_type -> INTTYPE .)
    GREATER_THAN    reduce using rule 86 (data_type -> INTTYPE .)


state 65

    (113) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 112


state 66

    (94) for_anidado -> for_simple .

    PRINT           reduce using rule 94 (for_anidado -> for_simple .)
    READ            reduce using rule 94 (for_anidado -> for_simple .)
    VARIABLE        reduce using rule 94 (for_anidado -> for_simple .)
    QUEUE           reduce using rule 94 (for_anidado -> for_simple .)
    CONST           reduce using rule 94 (for_anidado -> for_simple .)
    INTEGER         reduce using rule 94 (for_anidado -> for_simple .)
    FLOAT_NUMBER    reduce using rule 94 (for_anidado -> for_simple .)
    DECIMAL_NUMBER  reduce using rule 94 (for_anidado -> for_simple .)
    LIST            reduce using rule 94 (for_anidado -> for_simple .)
    DICTIONARY      reduce using rule 94 (for_anidado -> for_simple .)
    FOR             reduce using rule 94 (for_anidado -> for_simple .)
    FOREACH         reduce using rule 94 (for_anidado -> for_simple .)
    TRY             reduce using rule 94 (for_anidado -> for_simple .)
    WHILE           reduce using rule 94 (for_anidado -> for_simple .)
    DO              reduce using rule 94 (for_anidado -> for_simple .)
    PUBLIC          reduce using rule 94 (for_anidado -> for_simple .)
    PRIVATE         reduce using rule 94 (for_anidado -> for_simple .)
    CHARTYPE        reduce using rule 94 (for_anidado -> for_simple .)
    STRINGTYPE      reduce using rule 94 (for_anidado -> for_simple .)
    FLOATTYPE       reduce using rule 94 (for_anidado -> for_simple .)
    DECIMALTYPE     reduce using rule 94 (for_anidado -> for_simple .)
    INTTYPE         reduce using rule 94 (for_anidado -> for_simple .)
    BOOLTYPE        reduce using rule 94 (for_anidado -> for_simple .)
    RKEY            reduce using rule 94 (for_anidado -> for_simple .)


state 67

    (95) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> FOR . LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 113


state 68

    (97) for_each -> FOREACH . LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 114


state 69

    (100) try_catch_simply -> TRY . LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY . LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LKEY            shift and go to state 115


state 70

    (104) normal_while -> WHILE . LPARENT logic_operation RPARENT LKEY all_block_code RKEY

    LPARENT         shift and go to state 116


state 71

    (105) do_while -> DO . LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT

    LKEY            shift and go to state 117


state 72

    (61) access_modifiers -> PRIVATE .

    CONST           reduce using rule 61 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 61 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 61 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 61 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 61 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 61 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 61 (access_modifiers -> PRIVATE .)


state 73

    (82) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 82 (data_type -> CHARTYPE .)
    READ            reduce using rule 82 (data_type -> CHARTYPE .)
    GREATER_THAN    reduce using rule 82 (data_type -> CHARTYPE .)


state 74

    (84) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 84 (data_type -> FLOATTYPE .)
    READ            reduce using rule 84 (data_type -> FLOATTYPE .)
    GREATER_THAN    reduce using rule 84 (data_type -> FLOATTYPE .)


state 75

    (85) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 85 (data_type -> DECIMALTYPE .)
    READ            reduce using rule 85 (data_type -> DECIMALTYPE .)
    GREATER_THAN    reduce using rule 85 (data_type -> DECIMALTYPE .)


state 76

    (87) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 87 (data_type -> BOOLTYPE .)
    READ            reduce using rule 87 (data_type -> BOOLTYPE .)
    GREATER_THAN    reduce using rule 87 (data_type -> BOOLTYPE .)


state 77

    (42) arithmetic_operation -> VARIABLE arithmetic_operator . arithmetic_operation
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 118
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61

    arithmetic_operation           shift and go to state 119
    value_numeric                  shift and go to state 120

state 78

    (44) logic_operation -> VARIABLE logic_operator . INTEGER

    INTEGER         shift and go to state 121


state 79

    (138) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (122) dict_func_put -> VARIABLE DOT . PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> VARIABLE DOT . REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> VARIABLE DOT . ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> VARIABLE DOT . DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> VARIABLE DOT . PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> VARIABLE DOT . ISEMPTY LPARENT RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 122
    COUNT           shift and go to state 123
    ADD             shift and go to state 124
    REMOVEAT        shift and go to state 125
    PUT             shift and go to state 126
    REMOVE          shift and go to state 127
    ENQUEUE         shift and go to state 128
    DEQUEUE         shift and go to state 129
    PEEK            shift and go to state 130
    ISEMPTY         shift and go to state 131


state 80

    (76) assignation_key_value -> VARIABLE ASSIGNATION . value
    (24) value -> . value_numeric
    (25) value -> . value_logic
    (26) value -> . value_string
    (27) value -> . read_data
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (32) value_logic -> . BOOLTRUE
    (33) value_logic -> . BOOLFALSE
    (34) value_logic -> . logic_operation
    (28) value_string -> . STRING
    (29) value_string -> . CHAR
    (30) value_string -> . VARIABLE
    (31) value_string -> . concatenation
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (22) concatenation -> . STRING
    (23) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    BOOLTRUE        shift and go to state 139
    BOOLFALSE       shift and go to state 140
    STRING          shift and go to state 142
    CHAR            shift and go to state 143
    VARIABLE        shift and go to state 132
    READ            shift and go to state 145

    value                          shift and go to state 133
    value_numeric                  shift and go to state 134
    value_logic                    shift and go to state 135
    value_string                   shift and go to state 136
    read_data                      shift and go to state 137
    arithmetic_operation           shift and go to state 138
    logic_operation                shift and go to state 141
    concatenation                  shift and go to state 144

state 81

    (55) arithmetic_operator -> PLUS .

    VARIABLE        reduce using rule 55 (arithmetic_operator -> PLUS .)
    INTEGER         reduce using rule 55 (arithmetic_operator -> PLUS .)
    FLOAT_NUMBER    reduce using rule 55 (arithmetic_operator -> PLUS .)
    DECIMAL_NUMBER  reduce using rule 55 (arithmetic_operator -> PLUS .)


state 82

    (56) arithmetic_operator -> MINUS .

    VARIABLE        reduce using rule 56 (arithmetic_operator -> MINUS .)
    INTEGER         reduce using rule 56 (arithmetic_operator -> MINUS .)
    FLOAT_NUMBER    reduce using rule 56 (arithmetic_operator -> MINUS .)
    DECIMAL_NUMBER  reduce using rule 56 (arithmetic_operator -> MINUS .)


state 83

    (57) arithmetic_operator -> TIMES .

    VARIABLE        reduce using rule 57 (arithmetic_operator -> TIMES .)
    INTEGER         reduce using rule 57 (arithmetic_operator -> TIMES .)
    FLOAT_NUMBER    reduce using rule 57 (arithmetic_operator -> TIMES .)
    DECIMAL_NUMBER  reduce using rule 57 (arithmetic_operator -> TIMES .)


state 84

    (58) arithmetic_operator -> DIVIDE .

    VARIABLE        reduce using rule 58 (arithmetic_operator -> DIVIDE .)
    INTEGER         reduce using rule 58 (arithmetic_operator -> DIVIDE .)
    FLOAT_NUMBER    reduce using rule 58 (arithmetic_operator -> DIVIDE .)
    DECIMAL_NUMBER  reduce using rule 58 (arithmetic_operator -> DIVIDE .)


state 85

    (59) arithmetic_operator -> PERCENT .

    VARIABLE        reduce using rule 59 (arithmetic_operator -> PERCENT .)
    INTEGER         reduce using rule 59 (arithmetic_operator -> PERCENT .)
    FLOAT_NUMBER    reduce using rule 59 (arithmetic_operator -> PERCENT .)
    DECIMAL_NUMBER  reduce using rule 59 (arithmetic_operator -> PERCENT .)


state 86

    (45) logic_operator -> GREATER_THAN .

    INTEGER         reduce using rule 45 (logic_operator -> GREATER_THAN .)


state 87

    (46) logic_operator -> SMALLER_THAN .

    INTEGER         reduce using rule 46 (logic_operator -> SMALLER_THAN .)


state 88

    (47) logic_operator -> EQUAL_COMPARATION .

    INTEGER         reduce using rule 47 (logic_operator -> EQUAL_COMPARATION .)


state 89

    (48) logic_operator -> INEQUALITY .

    INTEGER         reduce using rule 48 (logic_operator -> INEQUALITY .)


state 90

    (49) logic_operator -> GREATER_THAN_OR_EQUAL .

    INTEGER         reduce using rule 49 (logic_operator -> GREATER_THAN_OR_EQUAL .)


state 91

    (50) logic_operator -> SMALLER_THAN_OR_EQUAL .

    INTEGER         reduce using rule 50 (logic_operator -> SMALLER_THAN_OR_EQUAL .)


state 92

    (51) logic_operator -> LOGICAND .

    INTEGER         reduce using rule 51 (logic_operator -> LOGICAND .)


state 93

    (52) logic_operator -> LOGICOR .

    INTEGER         reduce using rule 52 (logic_operator -> LOGICOR .)


state 94

    (53) logic_operator -> LOGICNOT .

    INTEGER         reduce using rule 53 (logic_operator -> LOGICNOT .)


state 95

    (54) logic_operator -> LOGICXOR .

    INTEGER         reduce using rule 54 (logic_operator -> LOGICXOR .)


state 96

    (2) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 2 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)


state 97

    (18) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 18 (all_block_code -> block_code all_block_code .)


state 98

    (19) print_data -> PRINT LPARENT . STRING RPARENT DOTANDCOMMA
    (20) print_data -> PRINT LPARENT . VARIABLE RPARENT DOTANDCOMMA

    STRING          shift and go to state 146
    VARIABLE        shift and go to state 147


state 99

    (21) read_data -> READ LPARENT . RPARENT DOTANDCOMMA
    (77) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 148


state 100

    (41) arithmetic_operation -> value_numeric arithmetic_operator . arithmetic_operation
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation

    VARIABLE        shift and go to state 118
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61

    value_numeric                  shift and go to state 120
    arithmetic_operation           shift and go to state 149

state 101

    (43) logic_operation -> value_numeric logic_operator . INTEGER

    INTEGER         shift and go to state 150


state 102

    (145) queue_struct -> QUEUE SMALLER_THAN . data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 151

state 103

    (70) variable_assignation -> data_type assignation_key_value . DOTANDCOMMA
    (78) assignation_key_value_multiple -> assignation_key_value .
    (79) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 152
    COMMA           shift and go to state 153

  ! DOTANDCOMMA     [ reduce using rule 78 (assignation_key_value_multiple -> assignation_key_value .) ]


state 104

    (72) variable_assignation -> data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 154


state 105

    (74) late_initialization -> data_type VARIABLE . DOTANDCOMMA
    (76) assignation_key_value -> VARIABLE . ASSIGNATION value

    DOTANDCOMMA     shift and go to state 155
    ASSIGNATION     shift and go to state 80


state 106

    (77) assignation_key_value -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 156


state 107

    (65) constant_assignation -> access_modifiers CONST . data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> access_modifiers CONST . data_type assignation_key_value_multiple DOTANDCOMMA
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 157

state 108

    (69) variable_assignation -> access_modifiers data_type . assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> access_modifiers data_type . assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> access_modifiers data_type . VARIABLE DOTANDCOMMA
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (78) assignation_key_value_multiple -> . assignation_key_value
    (79) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 160
    READ            shift and go to state 106

    assignation_key_value          shift and go to state 158
    assignation_key_value_multiple shift and go to state 159

state 109

    (66) constant_assignation -> CONST data_type . assignation_key_value DOTANDCOMMA
    (68) constant_assignation -> CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (78) assignation_key_value_multiple -> . assignation_key_value
    (79) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 163
    READ            shift and go to state 106

    assignation_key_value          shift and go to state 161
    assignation_key_value_multiple shift and go to state 162

state 110

    (75) late_initialization -> assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 75 (late_initialization -> assignation_key_value DOTANDCOMMA .)


state 111

    (126) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    STRINGTYPE      shift and go to state 164
    INTTYPE         shift and go to state 165


state 112

    (113) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 166


state 113

    (95) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> FOR LPARENT . assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (80) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (81) assignation_with_datatype -> . data_type assignation_key_value COMMA assignation_with_datatype
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    assignation_with_datatype      shift and go to state 167
    data_type                      shift and go to state 168

state 114

    (97) for_each -> FOREACH LPARENT . data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 169

state 115

    (100) try_catch_simply -> TRY LKEY . all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY . all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    all_block_code                 shift and go to state 170
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 116

    (104) normal_while -> WHILE LPARENT . logic_operation RPARENT LKEY all_block_code RKEY
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 173
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61

    logic_operation                shift and go to state 171
    value_numeric                  shift and go to state 172
    arithmetic_operation           shift and go to state 138

state 117

    (105) do_while -> DO LKEY . all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    all_block_code                 shift and go to state 174
    logic_operation                shift and go to state 18
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 118

    (40) arithmetic_operation -> VARIABLE .
    (42) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    READ            reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    VARIABLE        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    QUEUE           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    CONST           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    INTEGER         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FLOAT_NUMBER    reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DECIMAL_NUMBER  reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    LIST            reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DICTIONARY      reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FOR             reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FOREACH         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    TRY             reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    WHILE           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DO              reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    PUBLIC          reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    PRIVATE         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    CHARTYPE        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    STRINGTYPE      reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    FLOATTYPE       reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DECIMALTYPE     reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    INTTYPE         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    BOOLTYPE        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    RKEY            reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN    reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN    reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    EQUAL_COMPARATION reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    INEQUALITY      reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    GREATER_THAN_OR_EQUAL reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    LOGICAND        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    LOGICOR         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    LOGICNOT        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    LOGICXOR        reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    DOTANDCOMMA     reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    COMMA           reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    RPARENT         reduce using rule 40 (arithmetic_operation -> VARIABLE .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85

  ! PLUS            [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 77

state 119

    (42) arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .
    (38) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for QUEUE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RPARENT resolved using rule 38 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    QUEUE           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 38 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 38 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! QUEUE           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LIST            [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FOR             [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TRY             [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DO              [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]
  ! RPARENT         [ reduce using rule 42 (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation .) ]


state 120

    (39) arithmetic_operation -> value_numeric .
    (41) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    PRINT           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    READ            reduce using rule 39 (arithmetic_operation -> value_numeric .)
    VARIABLE        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    QUEUE           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    CONST           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    INTEGER         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FLOAT_NUMBER    reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DECIMAL_NUMBER  reduce using rule 39 (arithmetic_operation -> value_numeric .)
    LIST            reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DICTIONARY      reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FOR             reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FOREACH         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    TRY             reduce using rule 39 (arithmetic_operation -> value_numeric .)
    WHILE           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DO              reduce using rule 39 (arithmetic_operation -> value_numeric .)
    PUBLIC          reduce using rule 39 (arithmetic_operation -> value_numeric .)
    PRIVATE         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    CHARTYPE        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    STRINGTYPE      reduce using rule 39 (arithmetic_operation -> value_numeric .)
    FLOATTYPE       reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DECIMALTYPE     reduce using rule 39 (arithmetic_operation -> value_numeric .)
    INTTYPE         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    BOOLTYPE        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    RKEY            reduce using rule 39 (arithmetic_operation -> value_numeric .)
    GREATER_THAN    reduce using rule 39 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN    reduce using rule 39 (arithmetic_operation -> value_numeric .)
    EQUAL_COMPARATION reduce using rule 39 (arithmetic_operation -> value_numeric .)
    INEQUALITY      reduce using rule 39 (arithmetic_operation -> value_numeric .)
    GREATER_THAN_OR_EQUAL reduce using rule 39 (arithmetic_operation -> value_numeric .)
    SMALLER_THAN_OR_EQUAL reduce using rule 39 (arithmetic_operation -> value_numeric .)
    LOGICAND        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    LOGICOR         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    LOGICNOT        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    LOGICXOR        reduce using rule 39 (arithmetic_operation -> value_numeric .)
    DOTANDCOMMA     reduce using rule 39 (arithmetic_operation -> value_numeric .)
    COMMA           reduce using rule 39 (arithmetic_operation -> value_numeric .)
    RPARENT         reduce using rule 39 (arithmetic_operation -> value_numeric .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85

  ! PLUS            [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 100

state 121

    (44) logic_operation -> VARIABLE logic_operator INTEGER .

    PRINT           reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    READ            reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    VARIABLE        reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    QUEUE           reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    CONST           reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    INTEGER         reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FLOAT_NUMBER    reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DECIMAL_NUMBER  reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    LIST            reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DICTIONARY      reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FOR             reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FOREACH         reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    TRY             reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    WHILE           reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DO              reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    PUBLIC          reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    PRIVATE         reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    CHARTYPE        reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    STRINGTYPE      reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    FLOATTYPE       reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DECIMALTYPE     reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    INTTYPE         reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    BOOLTYPE        reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    RKEY            reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    DOTANDCOMMA     reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    COMMA           reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)
    RPARENT         reduce using rule 44 (logic_operation -> VARIABLE logic_operator INTEGER .)


state 122

    (138) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 175


state 123

    (139) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 176


state 124

    (140) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 177


state 125

    (141) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 178


state 126

    (122) dict_func_put -> VARIABLE DOT PUT . LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 179


state 127

    (123) dict_func_remove -> VARIABLE DOT REMOVE . LPARENT VARIABLE RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 180


state 128

    (150) queue_enqueue -> VARIABLE DOT ENQUEUE . LPARENT value RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 181


state 129

    (151) queue_dequeue -> VARIABLE DOT DEQUEUE . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 182


state 130

    (153) queue_clear -> VARIABLE DOT PEEK . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 183


state 131

    (154) queue_isEmpty -> VARIABLE DOT ISEMPTY . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 184


state 132

    (30) value_string -> VARIABLE .
    (40) arithmetic_operation -> VARIABLE .
    (42) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (44) logic_operation -> VARIABLE . logic_operator INTEGER
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT
    (45) logic_operator -> . GREATER_THAN
    (46) logic_operator -> . SMALLER_THAN
    (47) logic_operator -> . EQUAL_COMPARATION
    (48) logic_operator -> . INEQUALITY
    (49) logic_operator -> . GREATER_THAN_OR_EQUAL
    (50) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (51) logic_operator -> . LOGICAND
    (52) logic_operator -> . LOGICOR
    (53) logic_operator -> . LOGICNOT
    (54) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 30 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for COMMA resolved using rule 30 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 30 (value_string -> VARIABLE .)
  ! reduce/reduce conflict for RKEY resolved using rule 30 (value_string -> VARIABLE .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 30 (value_string -> VARIABLE .)
    COMMA           reduce using rule 30 (value_string -> VARIABLE .)
    RPARENT         reduce using rule 30 (value_string -> VARIABLE .)
    RKEY            reduce using rule 30 (value_string -> VARIABLE .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85
    GREATER_THAN    shift and go to state 86
    SMALLER_THAN    shift and go to state 87
    EQUAL_COMPARATION shift and go to state 88
    INEQUALITY      shift and go to state 89
    GREATER_THAN_OR_EQUAL shift and go to state 90
    SMALLER_THAN_OR_EQUAL shift and go to state 91
    LOGICAND        shift and go to state 92
    LOGICOR         shift and go to state 93
    LOGICNOT        shift and go to state 94
    LOGICXOR        shift and go to state 95

  ! PLUS            [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN    [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! DOTANDCOMMA     [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! RKEY            [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]

    arithmetic_operator            shift and go to state 77
    logic_operator                 shift and go to state 78

state 133

    (76) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 76 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 76 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 134

    (24) value -> value_numeric .
    (39) arithmetic_operation -> value_numeric .
    (41) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (43) logic_operation -> value_numeric . logic_operator INTEGER
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT
    (45) logic_operator -> . GREATER_THAN
    (46) logic_operator -> . SMALLER_THAN
    (47) logic_operator -> . EQUAL_COMPARATION
    (48) logic_operator -> . INEQUALITY
    (49) logic_operator -> . GREATER_THAN_OR_EQUAL
    (50) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (51) logic_operator -> . LOGICAND
    (52) logic_operator -> . LOGICOR
    (53) logic_operator -> . LOGICNOT
    (54) logic_operator -> . LOGICXOR

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 24 (value -> value_numeric .)
  ! reduce/reduce conflict for COMMA resolved using rule 24 (value -> value_numeric .)
  ! reduce/reduce conflict for RPARENT resolved using rule 24 (value -> value_numeric .)
  ! reduce/reduce conflict for RKEY resolved using rule 24 (value -> value_numeric .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
    DOTANDCOMMA     reduce using rule 24 (value -> value_numeric .)
    COMMA           reduce using rule 24 (value -> value_numeric .)
    RPARENT         reduce using rule 24 (value -> value_numeric .)
    RKEY            reduce using rule 24 (value -> value_numeric .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85
    GREATER_THAN    shift and go to state 86
    SMALLER_THAN    shift and go to state 87
    EQUAL_COMPARATION shift and go to state 88
    INEQUALITY      shift and go to state 89
    GREATER_THAN_OR_EQUAL shift and go to state 90
    SMALLER_THAN_OR_EQUAL shift and go to state 91
    LOGICAND        shift and go to state 92
    LOGICOR         shift and go to state 93
    LOGICNOT        shift and go to state 94
    LOGICXOR        shift and go to state 95

  ! PLUS            [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN    [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! DOTANDCOMMA     [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! COMMA           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! RPARENT         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! RKEY            [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]

    arithmetic_operator            shift and go to state 100
    logic_operator                 shift and go to state 101

state 135

    (25) value -> value_logic .

    DOTANDCOMMA     reduce using rule 25 (value -> value_logic .)
    COMMA           reduce using rule 25 (value -> value_logic .)
    RPARENT         reduce using rule 25 (value -> value_logic .)
    RKEY            reduce using rule 25 (value -> value_logic .)


state 136

    (26) value -> value_string .

    DOTANDCOMMA     reduce using rule 26 (value -> value_string .)
    COMMA           reduce using rule 26 (value -> value_string .)
    RPARENT         reduce using rule 26 (value -> value_string .)
    RKEY            reduce using rule 26 (value -> value_string .)


state 137

    (27) value -> read_data .

    DOTANDCOMMA     reduce using rule 27 (value -> read_data .)
    COMMA           reduce using rule 27 (value -> read_data .)
    RPARENT         reduce using rule 27 (value -> read_data .)
    RKEY            reduce using rule 27 (value -> read_data .)


state 138

    (38) value_numeric -> arithmetic_operation .

    PLUS            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 38 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 38 (value_numeric -> arithmetic_operation .)


state 139

    (32) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 32 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 32 (value_logic -> BOOLTRUE .)
    RPARENT         reduce using rule 32 (value_logic -> BOOLTRUE .)
    RKEY            reduce using rule 32 (value_logic -> BOOLTRUE .)


state 140

    (33) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 33 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 33 (value_logic -> BOOLFALSE .)
    RPARENT         reduce using rule 33 (value_logic -> BOOLFALSE .)
    RKEY            reduce using rule 33 (value_logic -> BOOLFALSE .)


state 141

    (34) value_logic -> logic_operation .

    DOTANDCOMMA     reduce using rule 34 (value_logic -> logic_operation .)
    COMMA           reduce using rule 34 (value_logic -> logic_operation .)
    RPARENT         reduce using rule 34 (value_logic -> logic_operation .)
    RKEY            reduce using rule 34 (value_logic -> logic_operation .)


state 142

    (28) value_string -> STRING .
    (22) concatenation -> STRING .
    (23) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 22 (concatenation -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 22 (concatenation -> STRING .)
  ! reduce/reduce conflict for RPARENT resolved using rule 22 (concatenation -> STRING .)
  ! reduce/reduce conflict for RKEY resolved using rule 22 (concatenation -> STRING .)
    DOTANDCOMMA     reduce using rule 22 (concatenation -> STRING .)
    COMMA           reduce using rule 22 (concatenation -> STRING .)
    RPARENT         reduce using rule 22 (concatenation -> STRING .)
    RKEY            reduce using rule 22 (concatenation -> STRING .)
    PLUS            shift and go to state 185

  ! DOTANDCOMMA     [ reduce using rule 28 (value_string -> STRING .) ]
  ! COMMA           [ reduce using rule 28 (value_string -> STRING .) ]
  ! RPARENT         [ reduce using rule 28 (value_string -> STRING .) ]
  ! RKEY            [ reduce using rule 28 (value_string -> STRING .) ]


state 143

    (29) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 29 (value_string -> CHAR .)
    COMMA           reduce using rule 29 (value_string -> CHAR .)
    RPARENT         reduce using rule 29 (value_string -> CHAR .)
    RKEY            reduce using rule 29 (value_string -> CHAR .)


state 144

    (31) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 31 (value_string -> concatenation .)
    COMMA           reduce using rule 31 (value_string -> concatenation .)
    RPARENT         reduce using rule 31 (value_string -> concatenation .)
    RKEY            reduce using rule 31 (value_string -> concatenation .)


state 145

    (21) read_data -> READ . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 186


state 146

    (19) print_data -> PRINT LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 187


state 147

    (20) print_data -> PRINT LPARENT VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 188


state 148

    (21) read_data -> READ LPARENT RPARENT . DOTANDCOMMA
    (77) assignation_key_value -> READ LPARENT RPARENT .

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 189

  ! DOTANDCOMMA     [ reduce using rule 77 (assignation_key_value -> READ LPARENT RPARENT .) ]


state 149

    (41) arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .
    (38) value_numeric -> arithmetic_operation .

  ! reduce/reduce conflict for PRINT resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for READ resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for QUEUE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CONST resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTEGER resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LIST resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOR resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FOREACH resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TRY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DO resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RKEY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PLUS resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for MINUS resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for TIMES resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for PERCENT resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for EQUAL_COMPARATION resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for INEQUALITY resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for GREATER_THAN_OR_EQUAL resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for SMALLER_THAN_OR_EQUAL resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICAND resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICOR resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICNOT resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for LOGICXOR resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for COMMA resolved using rule 38 (value_numeric -> arithmetic_operation .)
  ! reduce/reduce conflict for RPARENT resolved using rule 38 (value_numeric -> arithmetic_operation .)
    PRINT           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    READ            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    VARIABLE        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    QUEUE           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    CONST           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INTEGER         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FLOAT_NUMBER    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DECIMAL_NUMBER  reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LIST            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DICTIONARY      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FOR             reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FOREACH         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    TRY             reduce using rule 38 (value_numeric -> arithmetic_operation .)
    WHILE           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DO              reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PUBLIC          reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PRIVATE         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    CHARTYPE        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    STRINGTYPE      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    FLOATTYPE       reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DECIMALTYPE     reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INTTYPE         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    BOOLTYPE        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    RKEY            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PLUS            reduce using rule 38 (value_numeric -> arithmetic_operation .)
    MINUS           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    TIMES           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DIVIDE          reduce using rule 38 (value_numeric -> arithmetic_operation .)
    PERCENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN    reduce using rule 38 (value_numeric -> arithmetic_operation .)
    EQUAL_COMPARATION reduce using rule 38 (value_numeric -> arithmetic_operation .)
    INEQUALITY      reduce using rule 38 (value_numeric -> arithmetic_operation .)
    GREATER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    SMALLER_THAN_OR_EQUAL reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICAND        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICOR         reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICNOT        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    LOGICXOR        reduce using rule 38 (value_numeric -> arithmetic_operation .)
    DOTANDCOMMA     reduce using rule 38 (value_numeric -> arithmetic_operation .)
    COMMA           reduce using rule 38 (value_numeric -> arithmetic_operation .)
    RPARENT         reduce using rule 38 (value_numeric -> arithmetic_operation .)

  ! PRINT           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! READ            [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! VARIABLE        [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! QUEUE           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CONST           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTEGER         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOAT_NUMBER    [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LIST            [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DICTIONARY      [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FOR             [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FOREACH         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TRY             [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! WHILE           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DO              [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PUBLIC          [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PRIVATE         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! CHARTYPE        [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! STRINGTYPE      [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! FLOATTYPE       [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DECIMALTYPE     [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INTTYPE         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! BOOLTYPE        [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RKEY            [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PLUS            [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! MINUS           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! TIMES           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DIVIDE          [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! PERCENT         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN    [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN    [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! EQUAL_COMPARATION [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! INEQUALITY      [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICAND        [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICOR         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICNOT        [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! LOGICXOR        [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! DOTANDCOMMA     [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! COMMA           [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]
  ! RPARENT         [ reduce using rule 41 (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation .) ]


state 150

    (43) logic_operation -> value_numeric logic_operator INTEGER .

    PRINT           reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    READ            reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    VARIABLE        reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    QUEUE           reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    CONST           reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    INTEGER         reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    FLOAT_NUMBER    reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    DECIMAL_NUMBER  reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    LIST            reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    DICTIONARY      reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    FOR             reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    FOREACH         reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    TRY             reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    WHILE           reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    DO              reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    PUBLIC          reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    PRIVATE         reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    CHARTYPE        reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    STRINGTYPE      reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    FLOATTYPE       reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    DECIMALTYPE     reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    INTTYPE         reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    BOOLTYPE        reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    RKEY            reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    DOTANDCOMMA     reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    COMMA           reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)
    RPARENT         reduce using rule 43 (logic_operation -> value_numeric logic_operator INTEGER .)


state 151

    (145) queue_struct -> QUEUE SMALLER_THAN data_type . GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    GREATER_THAN    shift and go to state 190


state 152

    (70) variable_assignation -> data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 70 (variable_assignation -> data_type assignation_key_value DOTANDCOMMA .)


state 153

    (79) assignation_key_value_multiple -> assignation_key_value COMMA . assignation_key_value_multiple
    (78) assignation_key_value_multiple -> . assignation_key_value
    (79) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT

    VARIABLE        shift and go to state 163
    READ            shift and go to state 106

    assignation_key_value          shift and go to state 191
    assignation_key_value_multiple shift and go to state 192

state 154

    (72) variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 72 (variable_assignation -> data_type assignation_key_value_multiple DOTANDCOMMA .)


state 155

    (74) late_initialization -> data_type VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    QUEUE           reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    LIST            reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DICTIONARY      reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FOR             reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FOREACH         reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    TRY             reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    WHILE           reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DO              reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 74 (late_initialization -> data_type VARIABLE DOTANDCOMMA .)


state 156

    (77) assignation_key_value -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 193


state 157

    (65) constant_assignation -> access_modifiers CONST data_type . assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> access_modifiers CONST data_type . assignation_key_value_multiple DOTANDCOMMA
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (78) assignation_key_value_multiple -> . assignation_key_value
    (79) assignation_key_value_multiple -> . assignation_key_value COMMA assignation_key_value_multiple

    VARIABLE        shift and go to state 163
    READ            shift and go to state 106

    assignation_key_value          shift and go to state 194
    assignation_key_value_multiple shift and go to state 195

state 158

    (69) variable_assignation -> access_modifiers data_type assignation_key_value . DOTANDCOMMA
    (78) assignation_key_value_multiple -> assignation_key_value .
    (79) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 196
    COMMA           shift and go to state 153

  ! DOTANDCOMMA     [ reduce using rule 78 (assignation_key_value_multiple -> assignation_key_value .) ]


state 159

    (71) variable_assignation -> access_modifiers data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 197


state 160

    (73) late_initialization -> access_modifiers data_type VARIABLE . DOTANDCOMMA
    (76) assignation_key_value -> VARIABLE . ASSIGNATION value

    DOTANDCOMMA     shift and go to state 198
    ASSIGNATION     shift and go to state 80


state 161

    (66) constant_assignation -> CONST data_type assignation_key_value . DOTANDCOMMA
    (78) assignation_key_value_multiple -> assignation_key_value .
    (79) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 199
    COMMA           shift and go to state 153

  ! DOTANDCOMMA     [ reduce using rule 78 (assignation_key_value_multiple -> assignation_key_value .) ]


state 162

    (68) constant_assignation -> CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 200


state 163

    (76) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 80


state 164

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 201


state 165

    (127) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 202


state 166

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 203


state 167

    (95) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype . logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (88) logic_operations -> . logic_operation DOTANDCOMMA
    (89) logic_operations -> . logic_operation COMMA logic_operations
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 173
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61

    logic_operations               shift and go to state 204
    logic_operation                shift and go to state 205
    value_numeric                  shift and go to state 172
    arithmetic_operation           shift and go to state 138

state 168

    (80) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (81) assignation_with_datatype -> data_type . assignation_key_value COMMA assignation_with_datatype
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT

    VARIABLE        shift and go to state 163
    READ            shift and go to state 106

    assignation_key_value          shift and go to state 206

state 169

    (97) for_each -> FOREACH LPARENT data_type . VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 207


state 170

    (100) try_catch_simply -> TRY LKEY all_block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    RKEY            shift and go to state 208


state 171

    (104) normal_while -> WHILE LPARENT logic_operation . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 209


state 172

    (43) logic_operation -> value_numeric . logic_operator INTEGER
    (39) arithmetic_operation -> value_numeric .
    (41) arithmetic_operation -> value_numeric . arithmetic_operator arithmetic_operation
    (45) logic_operator -> . GREATER_THAN
    (46) logic_operator -> . SMALLER_THAN
    (47) logic_operator -> . EQUAL_COMPARATION
    (48) logic_operator -> . INEQUALITY
    (49) logic_operator -> . GREATER_THAN_OR_EQUAL
    (50) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (51) logic_operator -> . LOGICAND
    (52) logic_operator -> . LOGICOR
    (53) logic_operator -> . LOGICNOT
    (54) logic_operator -> . LOGICXOR
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    GREATER_THAN    shift and go to state 86
    SMALLER_THAN    shift and go to state 87
    EQUAL_COMPARATION shift and go to state 88
    INEQUALITY      shift and go to state 89
    GREATER_THAN_OR_EQUAL shift and go to state 90
    SMALLER_THAN_OR_EQUAL shift and go to state 91
    LOGICAND        shift and go to state 92
    LOGICOR         shift and go to state 93
    LOGICNOT        shift and go to state 94
    LOGICXOR        shift and go to state 95
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85

  ! GREATER_THAN    [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN    [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! EQUAL_COMPARATION [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! INEQUALITY      [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICAND        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICOR         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICNOT        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! LOGICXOR        [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! PLUS            [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! MINUS           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! TIMES           [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! DIVIDE          [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]
  ! PERCENT         [ reduce using rule 39 (arithmetic_operation -> value_numeric .) ]

    logic_operator                 shift and go to state 101
    arithmetic_operator            shift and go to state 100

state 173

    (44) logic_operation -> VARIABLE . logic_operator INTEGER
    (40) arithmetic_operation -> VARIABLE .
    (42) arithmetic_operation -> VARIABLE . arithmetic_operator arithmetic_operation
    (45) logic_operator -> . GREATER_THAN
    (46) logic_operator -> . SMALLER_THAN
    (47) logic_operator -> . EQUAL_COMPARATION
    (48) logic_operator -> . INEQUALITY
    (49) logic_operator -> . GREATER_THAN_OR_EQUAL
    (50) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (51) logic_operator -> . LOGICAND
    (52) logic_operator -> . LOGICOR
    (53) logic_operator -> . LOGICNOT
    (54) logic_operator -> . LOGICXOR
    (55) arithmetic_operator -> . PLUS
    (56) arithmetic_operator -> . MINUS
    (57) arithmetic_operator -> . TIMES
    (58) arithmetic_operator -> . DIVIDE
    (59) arithmetic_operator -> . PERCENT

  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for SMALLER_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_COMPARATION resolved as shift
  ! shift/reduce conflict for INEQUALITY resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for SMALLER_THAN_OR_EQUAL resolved as shift
  ! shift/reduce conflict for LOGICAND resolved as shift
  ! shift/reduce conflict for LOGICOR resolved as shift
  ! shift/reduce conflict for LOGICNOT resolved as shift
  ! shift/reduce conflict for LOGICXOR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    GREATER_THAN    shift and go to state 86
    SMALLER_THAN    shift and go to state 87
    EQUAL_COMPARATION shift and go to state 88
    INEQUALITY      shift and go to state 89
    GREATER_THAN_OR_EQUAL shift and go to state 90
    SMALLER_THAN_OR_EQUAL shift and go to state 91
    LOGICAND        shift and go to state 92
    LOGICOR         shift and go to state 93
    LOGICNOT        shift and go to state 94
    LOGICXOR        shift and go to state 95
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    TIMES           shift and go to state 83
    DIVIDE          shift and go to state 84
    PERCENT         shift and go to state 85

  ! GREATER_THAN    [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN    [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! EQUAL_COMPARATION [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! INEQUALITY      [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! GREATER_THAN_OR_EQUAL [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! SMALLER_THAN_OR_EQUAL [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICAND        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICOR         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICNOT        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! LOGICXOR        [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! PLUS            [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! TIMES           [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! DIVIDE          [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]
  ! PERCENT         [ reduce using rule 40 (arithmetic_operation -> VARIABLE .) ]

    logic_operator                 shift and go to state 78
    arithmetic_operator            shift and go to state 77

state 174

    (105) do_while -> DO LKEY all_block_code . RKEY WHILE LPARENT logic_operation RPARENT

    RKEY            shift and go to state 210


state 175

    (138) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA
    (152) queue_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 211


state 176

    (139) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 212


state 177

    (140) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 213


state 178

    (141) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 214


state 179

    (122) dict_func_put -> VARIABLE DOT PUT LPARENT . STRING COMMA VARIABLE RPARENT DOTANDCOMMA

    STRING          shift and go to state 215


state 180

    (123) dict_func_remove -> VARIABLE DOT REMOVE LPARENT . VARIABLE RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 216


state 181

    (150) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT . value RPARENT DOTANDCOMMA
    (24) value -> . value_numeric
    (25) value -> . value_logic
    (26) value -> . value_string
    (27) value -> . read_data
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (32) value_logic -> . BOOLTRUE
    (33) value_logic -> . BOOLFALSE
    (34) value_logic -> . logic_operation
    (28) value_string -> . STRING
    (29) value_string -> . CHAR
    (30) value_string -> . VARIABLE
    (31) value_string -> . concatenation
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (22) concatenation -> . STRING
    (23) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    BOOLTRUE        shift and go to state 139
    BOOLFALSE       shift and go to state 140
    STRING          shift and go to state 142
    CHAR            shift and go to state 143
    VARIABLE        shift and go to state 132
    READ            shift and go to state 145

    value                          shift and go to state 217
    value_numeric                  shift and go to state 134
    value_logic                    shift and go to state 135
    value_string                   shift and go to state 136
    read_data                      shift and go to state 137
    arithmetic_operation           shift and go to state 138
    logic_operation                shift and go to state 141
    concatenation                  shift and go to state 144

state 182

    (151) queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 218


state 183

    (153) queue_clear -> VARIABLE DOT PEEK LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 219


state 184

    (154) queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 220


state 185

    (23) concatenation -> STRING PLUS . concatenation
    (22) concatenation -> . STRING
    (23) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 221

    concatenation                  shift and go to state 222

state 186

    (21) read_data -> READ LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 223


state 187

    (19) print_data -> PRINT LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 224


state 188

    (20) print_data -> PRINT LPARENT VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 225


state 189

    (21) read_data -> READ LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    DOTANDCOMMA     reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    COMMA           reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)
    RPARENT         reduce using rule 21 (read_data -> READ LPARENT RPARENT DOTANDCOMMA .)


state 190

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN . VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 226


state 191

    (78) assignation_key_value_multiple -> assignation_key_value .
    (79) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

    DOTANDCOMMA     reduce using rule 78 (assignation_key_value_multiple -> assignation_key_value .)
    COMMA           shift and go to state 153


state 192

    (79) assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple .

    DOTANDCOMMA     reduce using rule 79 (assignation_key_value_multiple -> assignation_key_value COMMA assignation_key_value_multiple .)


state 193

    (77) assignation_key_value -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 77 (assignation_key_value -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 77 (assignation_key_value -> READ LPARENT RPARENT .)


state 194

    (65) constant_assignation -> access_modifiers CONST data_type assignation_key_value . DOTANDCOMMA
    (78) assignation_key_value_multiple -> assignation_key_value .
    (79) assignation_key_value_multiple -> assignation_key_value . COMMA assignation_key_value_multiple

  ! shift/reduce conflict for DOTANDCOMMA resolved as shift
    DOTANDCOMMA     shift and go to state 227
    COMMA           shift and go to state 153

  ! DOTANDCOMMA     [ reduce using rule 78 (assignation_key_value_multiple -> assignation_key_value .) ]


state 195

    (67) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 228


state 196

    (69) variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 69 (variable_assignation -> access_modifiers data_type assignation_key_value DOTANDCOMMA .)


state 197

    (71) variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 71 (variable_assignation -> access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA .)


state 198

    (73) late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .

    PRINT           reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    READ            reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    VARIABLE        reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    QUEUE           reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    CONST           reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    INTEGER         reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    LIST            reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DICTIONARY      reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FOR             reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FOREACH         reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    TRY             reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    WHILE           reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DO              reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    PUBLIC          reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    PRIVATE         reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    CHARTYPE        reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    INTTYPE         reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)
    RKEY            reduce using rule 73 (late_initialization -> access_modifiers data_type VARIABLE DOTANDCOMMA .)


state 199

    (66) constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 66 (constant_assignation -> CONST data_type assignation_key_value DOTANDCOMMA .)


state 200

    (68) constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 68 (constant_assignation -> CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 201

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 229


state 202

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 230


state 203

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 231


state 204

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations . DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    DOTANDCOMMA     shift and go to state 232


state 205

    (88) logic_operations -> logic_operation . DOTANDCOMMA
    (89) logic_operations -> logic_operation . COMMA logic_operations

    DOTANDCOMMA     shift and go to state 233
    COMMA           shift and go to state 234


state 206

    (80) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (81) assignation_with_datatype -> data_type assignation_key_value . COMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 235
    COMMA           shift and go to state 236


state 207

    (97) for_each -> FOREACH LPARENT data_type VARIABLE . IN VARIABLE RPARENT LKEY all_block_code RKEY

    IN              shift and go to state 237


state 208

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    CATCH           shift and go to state 238


state 209

    (104) normal_while -> WHILE LPARENT logic_operation RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 239


state 210

    (105) do_while -> DO LKEY all_block_code RKEY . WHILE LPARENT logic_operation RPARENT

    WHILE           shift and go to state 240


state 211

    (138) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA
    (152) queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 241


state 212

    (139) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 242


state 213

    (140) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 243


state 214

    (141) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 244


state 215

    (122) dict_func_put -> VARIABLE DOT PUT LPARENT STRING . COMMA VARIABLE RPARENT DOTANDCOMMA

    COMMA           shift and go to state 245


state 216

    (123) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 246


state 217

    (150) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 247


state 218

    (151) queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 248


state 219

    (153) queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 249


state 220

    (154) queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 250


state 221

    (22) concatenation -> STRING .
    (23) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 22 (concatenation -> STRING .)
    COMMA           reduce using rule 22 (concatenation -> STRING .)
    RPARENT         reduce using rule 22 (concatenation -> STRING .)
    RKEY            reduce using rule 22 (concatenation -> STRING .)
    PLUS            shift and go to state 185


state 222

    (23) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 23 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 23 (concatenation -> STRING PLUS concatenation .)
    RPARENT         reduce using rule 23 (concatenation -> STRING PLUS concatenation .)
    RKEY            reduce using rule 23 (concatenation -> STRING PLUS concatenation .)


state 223

    (21) read_data -> READ LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 189


state 224

    (19) print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 19 (print_data -> PRINT LPARENT STRING RPARENT DOTANDCOMMA .)


state 225

    (20) print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 20 (print_data -> PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA .)


state 226

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE . ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    ASSIGNATION     shift and go to state 251


state 227

    (65) constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .

    PRINT           reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    READ            reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    VARIABLE        reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    QUEUE           reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FOR             reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FOREACH         reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 65 (constant_assignation -> access_modifiers CONST data_type assignation_key_value DOTANDCOMMA .)


state 228

    (67) constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .

    PRINT           reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    READ            reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    VARIABLE        reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    QUEUE           reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CONST           reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTEGER         reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    LIST            reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DICTIONARY      reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOR             reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FOREACH         reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    TRY             reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    WHILE           reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DO              reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PUBLIC          reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    PRIVATE         reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    CHARTYPE        reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    INTTYPE         reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)
    RKEY            reduce using rule 67 (constant_assignation -> access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA .)


state 229

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 252


state 230

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 253


state 231

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    NEW             shift and go to state 254


state 232

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA . VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 255


state 233

    (88) logic_operations -> logic_operation DOTANDCOMMA .

    DOTANDCOMMA     reduce using rule 88 (logic_operations -> logic_operation DOTANDCOMMA .)


state 234

    (89) logic_operations -> logic_operation COMMA . logic_operations
    (88) logic_operations -> . logic_operation DOTANDCOMMA
    (89) logic_operations -> . logic_operation COMMA logic_operations
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 173
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61

    logic_operation                shift and go to state 205
    logic_operations               shift and go to state 256
    value_numeric                  shift and go to state 172
    arithmetic_operation           shift and go to state 138

state 235

    (80) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    INTEGER         reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 80 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)


state 236

    (81) assignation_with_datatype -> data_type assignation_key_value COMMA . assignation_with_datatype
    (80) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (81) assignation_with_datatype -> . data_type assignation_key_value COMMA assignation_with_datatype
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 168
    assignation_with_datatype      shift and go to state 257

state 237

    (97) for_each -> FOREACH LPARENT data_type VARIABLE IN . VARIABLE RPARENT LKEY all_block_code RKEY

    VARIABLE        shift and go to state 258


state 238

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LPARENT         shift and go to state 259


state 239

    (104) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY . all_block_code RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    logic_operation                shift and go to state 18
    all_block_code                 shift and go to state 260
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 240

    (105) do_while -> DO LKEY all_block_code RKEY WHILE . LPARENT logic_operation RPARENT

    LPARENT         shift and go to state 261


state 241

    (138) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .
    (152) queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

  ! reduce/reduce conflict for PRINT resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for READ resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for QUEUE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CONST resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTEGER resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOAT_NUMBER resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMAL_NUMBER resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for LIST resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DICTIONARY resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOR resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for TRY resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DO resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for CHARTYPE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for STRINGTYPE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for DECIMALTYPE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for INTTYPE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for BOOLTYPE resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
  ! reduce/reduce conflict for RKEY resolved using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRINT           reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 138 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)

  ! PRINT           [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! READ            [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! VARIABLE        [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! QUEUE           [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! CONST           [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTEGER         [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOAT_NUMBER    [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMAL_NUMBER  [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! LIST            [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DICTIONARY      [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOR             [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FOREACH         [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! TRY             [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! WHILE           [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DO              [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PUBLIC          [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! PRIVATE         [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]
  ! RKEY            [ reduce using rule 152 (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .) ]


state 242

    (139) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 139 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)


state 243

    (140) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 262


state 244

    (141) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 263


state 245

    (122) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA . VARIABLE RPARENT DOTANDCOMMA

    VARIABLE        shift and go to state 264


state 246

    (123) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 265


state 247

    (150) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 266


state 248

    (151) queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 151 (queue_dequeue -> VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA .)


state 249

    (153) queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 153 (queue_clear -> VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA .)


state 250

    (154) queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 154 (queue_isEmpty -> VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA .)


state 251

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION . NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    NEW             shift and go to state 267


state 252

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    NEW             shift and go to state 268


state 253

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    NEW             shift and go to state 269


state 254

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 270


state 255

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE . DECREMENT RPARENT LKEY all_block_code RKEY

    INCREMENT       shift and go to state 271
    DECREMENT       shift and go to state 272


state 256

    (89) logic_operations -> logic_operation COMMA logic_operations .

    DOTANDCOMMA     reduce using rule 89 (logic_operations -> logic_operation COMMA logic_operations .)


state 257

    (81) assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .

    VARIABLE        reduce using rule 81 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)
    INTEGER         reduce using rule 81 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)
    FLOAT_NUMBER    reduce using rule 81 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)
    DECIMAL_NUMBER  reduce using rule 81 (assignation_with_datatype -> data_type assignation_key_value COMMA assignation_with_datatype .)


state 258

    (97) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 273


state 259

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    EXCEPTION       shift and go to state 274


state 260

    (104) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 275


state 261

    (105) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT . logic_operation RPARENT
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation

    VARIABLE        shift and go to state 173
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61

    logic_operation                shift and go to state 276
    value_numeric                  shift and go to state 172
    arithmetic_operation           shift and go to state 138

state 262

    (140) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    READ            reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 140 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 263

    (141) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    READ            reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DO              reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 141 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)


state 264

    (122) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 277


state 265

    (123) dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 123 (dict_func_remove -> VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA .)


state 266

    (150) queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    READ            reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DO              reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 150 (queue_enqueue -> VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA .)


state 267

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW . QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    QUEUE           shift and go to state 278


state 268

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    LIST            shift and go to state 279


state 269

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    LIST            shift and go to state 280


state 270

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 281


state 271

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 282


state 272

    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY for_anidado RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT . RPARENT LKEY all_block_code RKEY

    RPARENT         shift and go to state 283


state 273

    (97) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 284


state 274

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    VARIABLE        shift and go to state 285


state 275

    (104) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 104 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY .)


state 276

    (105) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation . RPARENT

    RPARENT         shift and go to state 286


state 277

    (122) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 287


state 278

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE . SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    SMALLER_THAN    shift and go to state 288


state 279

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 289


state 280

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 290


state 281

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 291


state 282

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 292


state 283

    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY for_anidado RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT . LKEY all_block_code RKEY

    LKEY            shift and go to state 293


state 284

    (97) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY . all_block_code RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 46
    all_block_code                 shift and go to state 294
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 285

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    RPARENT         shift and go to state 295


state 286

    (105) do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .

    PRINT           reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    READ            reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    VARIABLE        reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    QUEUE           reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CONST           reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTEGER         reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOAT_NUMBER    reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMAL_NUMBER  reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    LIST            reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DICTIONARY      reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOR             reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FOREACH         reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    TRY             reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    WHILE           reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DO              reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PUBLIC          reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRIVATE         reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CHARTYPE        reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRINGTYPE      reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOATTYPE       reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMALTYPE     reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTTYPE         reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    BOOLTYPE        reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RKEY            reduce using rule 105 (do_while -> DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT .)


state 287

    (122) dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    READ            reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DO              reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 122 (dict_func_put -> VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA .)


state 288

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN . data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE

    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    data_type                      shift and go to state 296

state 289

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    STRINGTYPE      shift and go to state 297


state 290

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    INTTYPE         shift and go to state 298


state 291

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    LPARENT         shift and go to state 299


state 292

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . for_anidado RKEY
    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY . all_block_code RKEY
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT

    FOR             shift and go to state 67
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    for_anidado                    shift and go to state 300
    all_block_code                 shift and go to state 301
    for_simple                     shift and go to state 66
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59

state 293

    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . for_anidado RKEY
    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY . all_block_code RKEY
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT

    FOR             shift and go to state 67
    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    for_anidado                    shift and go to state 302
    all_block_code                 shift and go to state 303
    for_simple                     shift and go to state 66
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59

state 294

    (97) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 304


state 295

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY

    LKEY            shift and go to state 305


state 296

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type . GREATER_THAN LPARENT RPARENT DOTANDCOMMA

    GREATER_THAN    shift and go to state 306


state 297

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 307


state 298

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 308


state 299

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA

    RPARENT         shift and go to state 309


state 300

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado . RKEY
    (90) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 310
    PRINT           reduce using rule 90 (block_for -> for_anidado .)
    READ            reduce using rule 90 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 90 (block_for -> for_anidado .)
    QUEUE           reduce using rule 90 (block_for -> for_anidado .)
    CONST           reduce using rule 90 (block_for -> for_anidado .)
    INTEGER         reduce using rule 90 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 90 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 90 (block_for -> for_anidado .)
    LIST            reduce using rule 90 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 90 (block_for -> for_anidado .)
    FOR             reduce using rule 90 (block_for -> for_anidado .)
    FOREACH         reduce using rule 90 (block_for -> for_anidado .)
    TRY             reduce using rule 90 (block_for -> for_anidado .)
    WHILE           reduce using rule 90 (block_for -> for_anidado .)
    DO              reduce using rule 90 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 90 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 90 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 90 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 90 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 90 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 90 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 90 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 90 (block_for -> for_anidado .)

  ! RKEY            [ reduce using rule 90 (block_for -> for_anidado .) ]


state 301

    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 311


state 302

    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado . RKEY
    (90) block_for -> for_anidado .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 312
    PRINT           reduce using rule 90 (block_for -> for_anidado .)
    READ            reduce using rule 90 (block_for -> for_anidado .)
    VARIABLE        reduce using rule 90 (block_for -> for_anidado .)
    QUEUE           reduce using rule 90 (block_for -> for_anidado .)
    CONST           reduce using rule 90 (block_for -> for_anidado .)
    INTEGER         reduce using rule 90 (block_for -> for_anidado .)
    FLOAT_NUMBER    reduce using rule 90 (block_for -> for_anidado .)
    DECIMAL_NUMBER  reduce using rule 90 (block_for -> for_anidado .)
    LIST            reduce using rule 90 (block_for -> for_anidado .)
    DICTIONARY      reduce using rule 90 (block_for -> for_anidado .)
    FOR             reduce using rule 90 (block_for -> for_anidado .)
    FOREACH         reduce using rule 90 (block_for -> for_anidado .)
    TRY             reduce using rule 90 (block_for -> for_anidado .)
    WHILE           reduce using rule 90 (block_for -> for_anidado .)
    DO              reduce using rule 90 (block_for -> for_anidado .)
    PUBLIC          reduce using rule 90 (block_for -> for_anidado .)
    PRIVATE         reduce using rule 90 (block_for -> for_anidado .)
    CHARTYPE        reduce using rule 90 (block_for -> for_anidado .)
    STRINGTYPE      reduce using rule 90 (block_for -> for_anidado .)
    FLOATTYPE       reduce using rule 90 (block_for -> for_anidado .)
    DECIMALTYPE     reduce using rule 90 (block_for -> for_anidado .)
    INTTYPE         reduce using rule 90 (block_for -> for_anidado .)
    BOOLTYPE        reduce using rule 90 (block_for -> for_anidado .)

  ! RKEY            [ reduce using rule 90 (block_for -> for_anidado .) ]


state 303

    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code . RKEY

    RKEY            shift and go to state 313


state 304

    (97) for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 97 (for_each -> FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY .)


state 305

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . all_block_code RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    all_block_code                 shift and go to state 314
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 306

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 315


state 307

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA

    LPARENT         shift and go to state 316


state 308

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA

    LPARENT         shift and go to state 317


state 309

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY key_value_pairs RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 318
    LKEY            shift and go to state 319


state 310

    (95) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .

    PRINT           reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    READ            reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    VARIABLE        reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    QUEUE           reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTEGER         reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOAT_NUMBER    reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMAL_NUMBER  reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 95 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY .)


state 311

    (92) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 92 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY .)


state 312

    (96) for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .

    PRINT           reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    READ            reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    VARIABLE        reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    QUEUE           reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CONST           reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTEGER         reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOAT_NUMBER    reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMAL_NUMBER  reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    LIST            reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DICTIONARY      reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOR             reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FOREACH         reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    TRY             reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    WHILE           reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DO              reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PUBLIC          reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    PRIVATE         reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    CHARTYPE        reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    STRINGTYPE      reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    FLOATTYPE       reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    DECIMALTYPE     reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    INTTYPE         reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    BOOLTYPE        reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)
    RKEY            reduce using rule 96 (for_anidado -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY .)


state 313

    (93) for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .

    PRINT           reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 93 (for_simple -> FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY .)


state 314

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code . RKEY
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code . RKEY FINALLY LKEY all_block_code RKEY

    RKEY            shift and go to state 320


state 315

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 321


state 316

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY DOTANDCOMMA

    RPARENT         shift and go to state 322


state 317

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY DOTANDCOMMA

    RPARENT         shift and go to state 323


state 318

    (113) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 113 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 319

    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . key_value_pairs RKEY DOTANDCOMMA
    (115) key_value_pairs -> . key_value_pair
    (116) key_value_pairs -> . key_value_pair COMMA key_value_pairs
    (117) key_value_pair -> . LKEY VARIABLE COMMA value RKEY

    LKEY            shift and go to state 324

    key_value_pairs                shift and go to state 325
    key_value_pair                 shift and go to state 326

state 320

    (100) try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .
    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY . FINALLY LKEY all_block_code RKEY

    PRINT           reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    READ            reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    CONST           reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    LIST            reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOR             reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    TRY             reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    WHILE           reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DO              reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    RKEY            reduce using rule 100 (try_catch_simply -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY .)
    FINALLY         shift and go to state 327


state 321

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 328


state 322

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 329
    LKEY            shift and go to state 330


state 323

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 331
    LKEY            shift and go to state 332


state 324

    (117) key_value_pair -> LKEY . VARIABLE COMMA value RKEY

    VARIABLE        shift and go to state 333


state 325

    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs . RKEY DOTANDCOMMA

    RKEY            shift and go to state 334


state 326

    (115) key_value_pairs -> key_value_pair .
    (116) key_value_pairs -> key_value_pair . COMMA key_value_pairs

    RKEY            reduce using rule 115 (key_value_pairs -> key_value_pair .)
    COMMA           shift and go to state 335


state 327

    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY . LKEY all_block_code RKEY

    LKEY            shift and go to state 336


state 328

    (145) queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 145 (queue_struct -> QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 329

    (126) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 126 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 330

    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY DOTANDCOMMA
    (130) strings_list -> . STRING
    (131) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 338

    strings_list                   shift and go to state 337

state 331

    (127) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    PRINT           reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    READ            reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    VARIABLE        reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    QUEUE           reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTEGER         reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOR             reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FOREACH         reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 127 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 332

    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY DOTANDCOMMA
    (132) ints_list -> . INTEGER
    (133) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 340

    ints_list                      shift and go to state 339

state 333

    (117) key_value_pair -> LKEY VARIABLE . COMMA value RKEY

    COMMA           shift and go to state 341


state 334

    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 342


state 335

    (116) key_value_pairs -> key_value_pair COMMA . key_value_pairs
    (115) key_value_pairs -> . key_value_pair
    (116) key_value_pairs -> . key_value_pair COMMA key_value_pairs
    (117) key_value_pair -> . LKEY VARIABLE COMMA value RKEY

    LKEY            shift and go to state 324

    key_value_pair                 shift and go to state 326
    key_value_pairs                shift and go to state 343

state 336

    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY . all_block_code RKEY
    (17) all_block_code -> . block_code
    (18) all_block_code -> . block_code all_block_code
    (3) block_code -> . def_const_or_var
    (4) block_code -> . print_data
    (5) block_code -> . read_data
    (6) block_code -> . arithmetic_operation
    (7) block_code -> . logic_operation
    (8) block_code -> . lists
    (9) block_code -> . functions_list
    (10) block_code -> . dict_estruct
    (11) block_code -> . functions_dict
    (12) block_code -> . queue_struct
    (13) block_code -> . functions_queue
    (14) block_code -> . block_for
    (15) block_code -> . block_try_catch
    (16) block_code -> . block_while
    (62) def_const_or_var -> . constant_assignation
    (63) def_const_or_var -> . variable_assignation
    (64) def_const_or_var -> . late_initialization
    (19) print_data -> . PRINT LPARENT STRING RPARENT DOTANDCOMMA
    (20) print_data -> . PRINT LPARENT VARIABLE RPARENT DOTANDCOMMA
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (124) lists -> . list_empty
    (125) lists -> . list_full
    (134) functions_list -> . list_func_clear
    (135) functions_list -> . list_func_count
    (136) functions_list -> . list_func_add
    (137) functions_list -> . list_func_removeat
    (111) dict_estruct -> . dict_empty
    (112) dict_estruct -> . dict_full
    (120) functions_dict -> . dict_func_put
    (121) functions_dict -> . dict_func_remove
    (145) queue_struct -> . QUEUE SMALLER_THAN data_type GREATER_THAN VARIABLE ASSIGNATION NEW QUEUE SMALLER_THAN data_type GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (146) functions_queue -> . queue_enqueue
    (147) functions_queue -> . queue_dequeue
    (148) functions_queue -> . queue_clear
    (149) functions_queue -> . queue_isEmpty
    (90) block_for -> . for_anidado
    (91) block_for -> . for_each
    (98) block_try_catch -> . try_catch_simply
    (99) block_try_catch -> . try_catch_finally
    (102) block_while -> . normal_while
    (103) block_while -> . do_while
    (65) constant_assignation -> . access_modifiers CONST data_type assignation_key_value DOTANDCOMMA
    (66) constant_assignation -> . CONST data_type assignation_key_value DOTANDCOMMA
    (67) constant_assignation -> . access_modifiers CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (68) constant_assignation -> . CONST data_type assignation_key_value_multiple DOTANDCOMMA
    (69) variable_assignation -> . access_modifiers data_type assignation_key_value DOTANDCOMMA
    (70) variable_assignation -> . data_type assignation_key_value DOTANDCOMMA
    (71) variable_assignation -> . access_modifiers data_type assignation_key_value_multiple DOTANDCOMMA
    (72) variable_assignation -> . data_type assignation_key_value_multiple DOTANDCOMMA
    (73) late_initialization -> . access_modifiers data_type VARIABLE DOTANDCOMMA
    (74) late_initialization -> . data_type VARIABLE DOTANDCOMMA
    (75) late_initialization -> . assignation_key_value DOTANDCOMMA
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (126) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (127) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (128) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA
    (129) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA
    (138) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (139) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (140) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (141) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (113) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (114) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA
    (122) dict_func_put -> . VARIABLE DOT PUT LPARENT STRING COMMA VARIABLE RPARENT DOTANDCOMMA
    (123) dict_func_remove -> . VARIABLE DOT REMOVE LPARENT VARIABLE RPARENT DOTANDCOMMA
    (150) queue_enqueue -> . VARIABLE DOT ENQUEUE LPARENT value RPARENT DOTANDCOMMA
    (151) queue_dequeue -> . VARIABLE DOT DEQUEUE LPARENT RPARENT DOTANDCOMMA
    (152) queue_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (153) queue_clear -> . VARIABLE DOT PEEK LPARENT RPARENT DOTANDCOMMA
    (154) queue_isEmpty -> . VARIABLE DOT ISEMPTY LPARENT RPARENT DOTANDCOMMA
    (94) for_anidado -> . for_simple
    (95) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY for_anidado RKEY
    (96) for_anidado -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY for_anidado RKEY
    (97) for_each -> . FOREACH LPARENT data_type VARIABLE IN VARIABLE RPARENT LKEY all_block_code RKEY
    (100) try_catch_simply -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY
    (101) try_catch_finally -> . TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY
    (104) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY all_block_code RKEY
    (105) do_while -> . DO LKEY all_block_code RKEY WHILE LPARENT logic_operation RPARENT
    (60) access_modifiers -> . PUBLIC
    (61) access_modifiers -> . PRIVATE
    (82) data_type -> . CHARTYPE
    (83) data_type -> . STRINGTYPE
    (84) data_type -> . FLOATTYPE
    (85) data_type -> . DECIMALTYPE
    (86) data_type -> . INTTYPE
    (87) data_type -> . BOOLTYPE
    (76) assignation_key_value -> . VARIABLE ASSIGNATION value
    (77) assignation_key_value -> . READ LPARENT RPARENT
    (92) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE INCREMENT RPARENT LKEY all_block_code RKEY
    (93) for_simple -> . FOR LPARENT assignation_with_datatype logic_operations DOTANDCOMMA VARIABLE DECREMENT RPARENT LKEY all_block_code RKEY

    PRINT           shift and go to state 31
    READ            shift and go to state 32
    VARIABLE        shift and go to state 11
    QUEUE           shift and go to state 45
    CONST           shift and go to state 58
    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    LIST            shift and go to state 62
    DICTIONARY      shift and go to state 65
    FOR             shift and go to state 67
    FOREACH         shift and go to state 68
    TRY             shift and go to state 69
    WHILE           shift and go to state 70
    DO              shift and go to state 71
    PUBLIC          shift and go to state 10
    PRIVATE         shift and go to state 72
    CHARTYPE        shift and go to state 73
    STRINGTYPE      shift and go to state 63
    FLOATTYPE       shift and go to state 74
    DECIMALTYPE     shift and go to state 75
    INTTYPE         shift and go to state 64
    BOOLTYPE        shift and go to state 76

    all_block_code                 shift and go to state 344
    block_code                     shift and go to state 13
    def_const_or_var               shift and go to state 14
    print_data                     shift and go to state 15
    read_data                      shift and go to state 16
    arithmetic_operation           shift and go to state 17
    logic_operation                shift and go to state 18
    lists                          shift and go to state 19
    functions_list                 shift and go to state 20
    dict_estruct                   shift and go to state 21
    functions_dict                 shift and go to state 22
    queue_struct                   shift and go to state 23
    functions_queue                shift and go to state 24
    block_for                      shift and go to state 25
    block_try_catch                shift and go to state 26
    block_while                    shift and go to state 27
    constant_assignation           shift and go to state 28
    variable_assignation           shift and go to state 29
    late_initialization            shift and go to state 30
    value_numeric                  shift and go to state 33
    list_empty                     shift and go to state 35
    list_full                      shift and go to state 36
    list_func_clear                shift and go to state 37
    list_func_count                shift and go to state 38
    list_func_add                  shift and go to state 39
    list_func_removeat             shift and go to state 40
    dict_empty                     shift and go to state 41
    dict_full                      shift and go to state 42
    dict_func_put                  shift and go to state 43
    dict_func_remove               shift and go to state 44
    data_type                      shift and go to state 46
    queue_enqueue                  shift and go to state 47
    queue_dequeue                  shift and go to state 48
    queue_clear                    shift and go to state 49
    queue_isEmpty                  shift and go to state 50
    for_anidado                    shift and go to state 51
    for_each                       shift and go to state 52
    try_catch_simply               shift and go to state 53
    try_catch_finally              shift and go to state 54
    normal_while                   shift and go to state 55
    do_while                       shift and go to state 56
    access_modifiers               shift and go to state 57
    assignation_key_value          shift and go to state 59
    for_simple                     shift and go to state 66

state 337

    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY DOTANDCOMMA

    RKEY            shift and go to state 345


state 338

    (130) strings_list -> STRING .
    (131) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 130 (strings_list -> STRING .)
    COMMA           shift and go to state 346


state 339

    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY DOTANDCOMMA

    RKEY            shift and go to state 347


state 340

    (132) ints_list -> INTEGER .
    (133) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 132 (ints_list -> INTEGER .)
    COMMA           shift and go to state 348


state 341

    (117) key_value_pair -> LKEY VARIABLE COMMA . value RKEY
    (24) value -> . value_numeric
    (25) value -> . value_logic
    (26) value -> . value_string
    (27) value -> . read_data
    (35) value_numeric -> . INTEGER
    (36) value_numeric -> . FLOAT_NUMBER
    (37) value_numeric -> . DECIMAL_NUMBER
    (38) value_numeric -> . arithmetic_operation
    (32) value_logic -> . BOOLTRUE
    (33) value_logic -> . BOOLFALSE
    (34) value_logic -> . logic_operation
    (28) value_string -> . STRING
    (29) value_string -> . CHAR
    (30) value_string -> . VARIABLE
    (31) value_string -> . concatenation
    (21) read_data -> . READ LPARENT RPARENT DOTANDCOMMA
    (39) arithmetic_operation -> . value_numeric
    (40) arithmetic_operation -> . VARIABLE
    (41) arithmetic_operation -> . value_numeric arithmetic_operator arithmetic_operation
    (42) arithmetic_operation -> . VARIABLE arithmetic_operator arithmetic_operation
    (43) logic_operation -> . value_numeric logic_operator INTEGER
    (44) logic_operation -> . VARIABLE logic_operator INTEGER
    (22) concatenation -> . STRING
    (23) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 34
    FLOAT_NUMBER    shift and go to state 60
    DECIMAL_NUMBER  shift and go to state 61
    BOOLTRUE        shift and go to state 139
    BOOLFALSE       shift and go to state 140
    STRING          shift and go to state 142
    CHAR            shift and go to state 143
    VARIABLE        shift and go to state 132
    READ            shift and go to state 145

    value                          shift and go to state 349
    value_numeric                  shift and go to state 134
    value_logic                    shift and go to state 135
    value_string                   shift and go to state 136
    read_data                      shift and go to state 137
    arithmetic_operation           shift and go to state 138
    logic_operation                shift and go to state 141
    concatenation                  shift and go to state 144

state 342

    (114) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .

    PRINT           reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    READ            reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    QUEUE           reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    CONST           reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    LIST            reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FOR             reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    TRY             reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DO              reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 114 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY key_value_pairs RKEY DOTANDCOMMA .)


state 343

    (116) key_value_pairs -> key_value_pair COMMA key_value_pairs .

    RKEY            reduce using rule 116 (key_value_pairs -> key_value_pair COMMA key_value_pairs .)


state 344

    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code . RKEY

    RKEY            shift and go to state 350


state 345

    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 351


state 346

    (131) strings_list -> STRING COMMA . strings_list
    (130) strings_list -> . STRING
    (131) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 338

    strings_list                   shift and go to state 352

state 347

    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 353


state 348

    (133) ints_list -> INTEGER COMMA . ints_list
    (132) ints_list -> . INTEGER
    (133) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 340

    ints_list                      shift and go to state 354

state 349

    (117) key_value_pair -> LKEY VARIABLE COMMA value . RKEY

    RKEY            shift and go to state 355


state 350

    (101) try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .

    PRINT           reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    READ            reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    VARIABLE        reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    QUEUE           reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    CONST           reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    INTEGER         reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FLOAT_NUMBER    reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DECIMAL_NUMBER  reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    LIST            reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DICTIONARY      reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FOR             reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FOREACH         reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    TRY             reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    WHILE           reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DO              reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    PUBLIC          reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    PRIVATE         reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    CHARTYPE        reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    STRINGTYPE      reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    FLOATTYPE       reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    DECIMALTYPE     reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    INTTYPE         reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    BOOLTYPE        reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)
    RKEY            reduce using rule 101 (try_catch_finally -> TRY LKEY all_block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY all_block_code RKEY FINALLY LKEY all_block_code RKEY .)


state 351

    (128) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .

    PRINT           reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    READ            reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    QUEUE           reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    CONST           reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    LIST            reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FOR             reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    TRY             reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DO              reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 128 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY DOTANDCOMMA .)


state 352

    (131) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 131 (strings_list -> STRING COMMA strings_list .)


state 353

    (129) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .

    PRINT           reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    READ            reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    VARIABLE        reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    QUEUE           reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    CONST           reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    INTEGER         reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FLOAT_NUMBER    reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DECIMAL_NUMBER  reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    LIST            reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FOR             reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FOREACH         reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    TRY             reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DO              reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 129 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY DOTANDCOMMA .)


state 354

    (133) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 133 (ints_list -> INTEGER COMMA ints_list .)


state 355

    (117) key_value_pair -> LKEY VARIABLE COMMA value RKEY .

    COMMA           reduce using rule 117 (key_value_pair -> LKEY VARIABLE COMMA value RKEY .)
    RKEY            reduce using rule 117 (key_value_pair -> LKEY VARIABLE COMMA value RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 11 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 11 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 11 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 11 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 11 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 11 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 11 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 33 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 33 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 33 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 33 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 33 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 33 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 33 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 33 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 33 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 33 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 33 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 118 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 120 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 120 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 132 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 132 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 132 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 132 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 132 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 132 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 132 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 134 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 134 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 134 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 134 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 134 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 134 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 134 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 134 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 134 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 134 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 134 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 148 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 158 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 161 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 172 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 172 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 172 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 172 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 172 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 172 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 172 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 172 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 172 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 172 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 172 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 172 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 172 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 173 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN in state 173 resolved as shift
WARNING: shift/reduce conflict for EQUAL_COMPARATION in state 173 resolved as shift
WARNING: shift/reduce conflict for INEQUALITY in state 173 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for SMALLER_THAN_OR_EQUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for LOGICAND in state 173 resolved as shift
WARNING: shift/reduce conflict for LOGICOR in state 173 resolved as shift
WARNING: shift/reduce conflict for LOGICNOT in state 173 resolved as shift
WARNING: shift/reduce conflict for LOGICXOR in state 173 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 173 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 173 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 173 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 173 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 173 resolved as shift
WARNING: shift/reduce conflict for DOTANDCOMMA in state 194 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 300 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 302 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (block_code -> arithmetic_operation)
WARNING: rejected rule (value_numeric -> arithmetic_operation) in state 17
WARNING: reduce/reduce conflict in state 119 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) in state 119
WARNING: reduce/reduce conflict in state 132 resolved using rule (value_string -> VARIABLE)
WARNING: rejected rule (arithmetic_operation -> VARIABLE) in state 132
WARNING: reduce/reduce conflict in state 134 resolved using rule (value -> value_numeric)
WARNING: rejected rule (arithmetic_operation -> value_numeric) in state 134
WARNING: reduce/reduce conflict in state 142 resolved using rule (concatenation -> STRING)
WARNING: rejected rule (value_string -> STRING) in state 142
WARNING: reduce/reduce conflict in state 149 resolved using rule (value_numeric -> arithmetic_operation)
WARNING: rejected rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) in state 149
WARNING: reduce/reduce conflict in state 241 resolved using rule (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA)
WARNING: rejected rule (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA) in state 241
WARNING: Rule (arithmetic_operation -> VARIABLE arithmetic_operator arithmetic_operation) is never reduced
WARNING: Rule (value_string -> STRING) is never reduced
WARNING: Rule (arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation) is never reduced
WARNING: Rule (queue_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA) is never reduced
