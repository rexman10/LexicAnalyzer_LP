Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDITION_ASSIGNMENT
    BACK_SLASH
    BOOL
    BREAK
    DECREMENT
    DIVISION_ASSIGNMENT
    DOLLARSIGN
    DOUBLE_QUOTATION_MARKS
    FOR
    ID
    INCREMENT
    JUMP_LINE
    LBRACKET
    LONG
    MODULE_ASSIGNMENT
    MULTIPLICATION_ASSIGNMENT
    NAMESPACE
    PIPE
    PRINT
    RBRACKET
    RETURN
    SIPLE_QUOTATION_MARKS
    STATIC
    SUBTRACTION_ASSIGNMENT
    SWITCH
    TABULATION
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> block_using block_publicClass
Rule 2     block_using -> USING SYSTEM DOTANDCOMMA
Rule 3     block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY
Rule 4     all_block_code -> block_code
Rule 5     all_block_code -> block_code all_block_code
Rule 6     block_code -> def_const_or_var
Rule 7     block_code -> estruct_of_data
Rule 8     block_code -> block_try_catch
Rule 9     block_code -> block_while
Rule 10    block_code -> VARIABLE
Rule 11    block_code -> dict_estruct
Rule 12    block_code -> functions_dict
Rule 13    block_code -> functions_list
Rule 14    block_code -> declaration_lambda
Rule 15    block_code -> block_if
Rule 16    def_const_or_var -> constant_assignation
Rule 17    def_const_or_var -> variable_assignation
Rule 18    variable_assignation -> access_modifiers all_asignations
Rule 19    variable_assignation -> all_asignations
Rule 20    constant_assignation -> access_modifiers CONST all_asignations
Rule 21    constant_assignation -> CONST all_asignations
Rule 22    constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant
Rule 23    all_asignations -> assignation_with_datatype
Rule 24    all_asignations -> assignation_without_datatype
Rule 25    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA
Rule 26    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 27    assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 28    assignation_without_datatype -> assignation_key_value DOTANDCOMMA
Rule 29    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype
Rule 30    assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype
Rule 31    some_assignation_constant -> assignation_key_value DOTANDCOMMA
Rule 32    some_assignation_constant -> assignation_key_value COMMA some_assignation_constant
Rule 33    assignation_key_value -> VARIABLE ASSIGNATION value
Rule 34    data_type -> CHARTYPE
Rule 35    data_type -> STRINGTYPE
Rule 36    data_type -> FLOATTYPE
Rule 37    data_type -> DECIMALTYPE
Rule 38    data_type -> INTTYPE
Rule 39    data_type -> BOOLTYPE
Rule 40    value -> value_numeric
Rule 41    value -> value_logic
Rule 42    value -> value_string
Rule 43    value_string -> STRING
Rule 44    value_string -> CHAR
Rule 45    value_string -> VARIABLE
Rule 46    value_string -> READ LPARENT RPARENT
Rule 47    value_string -> concatenation
Rule 48    value_logic -> BOOLTRUE
Rule 49    value_logic -> BOOLFALSE
Rule 50    value_numeric -> INTEGER
Rule 51    value_numeric -> FLOAT_NUMBER
Rule 52    value_numeric -> DECIMAL_NUMBER
Rule 53    block_try_catch -> try_catch_simply
Rule 54    block_try_catch -> try_catch_finally
Rule 55    try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
Rule 56    try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
Rule 57    access_modifiers -> PUBLIC
Rule 58    access_modifiers -> PRIVATE
Rule 59    block_while -> normal_while
Rule 60    block_while -> do_while
Rule 61    normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
Rule 62    do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
Rule 63    block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 64    other_if -> ELSE LKEY not_yes_nested_if RKEY
Rule 65    other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
Rule 66    not_yes_nested_if -> block_if
Rule 67    not_yes_nested_if -> block_code
Rule 68    arithmetic_operation -> value_numeric
Rule 69    arithmetic_operation -> value_numeric arithmetic_operator arithmetic_operation
Rule 70    logic_operation -> value_logic
Rule 71    logic_operation -> value_logic logic_operator logic_operation
Rule 72    concatenation -> STRING
Rule 73    concatenation -> STRING PLUS concatenation
Rule 74    logic_operator -> GREATER_THAN
Rule 75    logic_operator -> SMALLER_THAN
Rule 76    logic_operator -> EQUAL_COMPARATION
Rule 77    logic_operator -> INEQUALITY
Rule 78    logic_operator -> GREATER_THAN_OR_EQUAL
Rule 79    logic_operator -> SMALLER_THAN_OR_EQUAL
Rule 80    logic_operator -> LOGICAND
Rule 81    logic_operator -> LOGICOR
Rule 82    logic_operator -> LOGICNOT
Rule 83    logic_operator -> LOGICXOR
Rule 84    arithmetic_operator -> PLUS
Rule 85    arithmetic_operator -> MINUS
Rule 86    arithmetic_operator -> TIMES
Rule 87    arithmetic_operator -> DIVIDE
Rule 88    arithmetic_operator -> PERCENT
Rule 89    variable_assignation_multiline -> <empty>
Rule 90    dict_estruct -> dict_empty
Rule 91    dict_estruct -> dict_full
Rule 92    dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 93    dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
Rule 94    dictionary_value -> LKEY key_value_pair RKEY
Rule 95    key_value_pairs -> key_value_pair
Rule 96    key_value_pairs -> key_value_pair COMMA key_value_pairs
Rule 97    key_value_pair -> STRING DOUBLEPOINT valueHash
Rule 98    valueHash -> INTTYPE
Rule 99    estruct_of_data -> list_empty
Rule 100   estruct_of_data -> list_full
Rule 101   functions_dict -> dict_func_put
Rule 102   functions_dict -> dict_func_remove
Rule 103   dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
Rule 104   dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
Rule 105   list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 106   list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
Rule 107   list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
Rule 108   list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
Rule 109   strings_list -> STRING
Rule 110   strings_list -> STRING COMMA strings_list
Rule 111   ints_list -> INTEGER
Rule 112   ints_list -> INTEGER COMMA ints_list
Rule 113   functions_list -> list_func_clear
Rule 114   functions_list -> list_func_count
Rule 115   functions_list -> list_func_add
Rule 116   functions_list -> list_func_removeat
Rule 117   list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
Rule 118   list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
Rule 119   list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
Rule 120   list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
Rule 121   declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

Terminals, with rules where they appear

ACTION               : 121
ADD                  : 119
ADDITION_ASSIGNMENT  : 
ARROW                : 121
ASSIGNATION          : 33 92 93 105 106 107 108 121
BACK_SLASH           : 
BOOL                 : 
BOOLFALSE            : 49
BOOLTRUE             : 48
BOOLTYPE             : 39
BREAK                : 
CATCH                : 55 56
CHAR                 : 44
CHARTYPE             : 34
CLASS                : 3
CLEAR                : 117
COMMA                : 22 32 96 103 110 112
CONST                : 20 21 22
COUNT                : 118
DECIMALTYPE          : 37
DECIMAL_NUMBER       : 52
DECREMENT            : 
DICTIONARY           : 92 92 93 93
DIVIDE               : 87
DIVISION_ASSIGNMENT  : 
DO                   : 62
DOLLARSIGN           : 
DOT                  : 103 104 117 118 119 120
DOTANDCOMMA          : 2 25 26 27 28 29 30 31 92 93 103 104 105 106 117 118 119 120
DOUBLEPOINT          : 97
DOUBLE_QUOTATION_MARKS : 
ELSE                 : 64
ELSE_IF              : 65
EQUAL_COMPARATION    : 76
EXCEPTION            : 55 56
FINALLY              : 56
FLOATTYPE            : 36
FLOAT_NUMBER         : 51
FOR                  : 
GREATER_THAN         : 74 92 92 93 93 105 105 106 106 107 107 108 108 121
GREATER_THAN_OR_EQUAL : 78
ID                   : 
IF                   : 63
INCREMENT            : 
INEQUALITY           : 77
INTEGER              : 50 111 112 120
INTTYPE              : 38 98 106 106 108 108
JUMP_LINE            : 
LBRACKET             : 
LIST                 : 105 105 106 106 107 107 108 108
LKEY                 : 3 55 55 56 56 56 61 62 63 64 65 93 94 107 108 121
LOGICAND             : 80
LOGICNOT             : 82
LOGICOR              : 81
LOGICXOR             : 83
LONG                 : 
LPARENT              : 46 55 56 61 62 63 65 92 93 103 104 105 106 107 108 117 118 119 120
MINUS                : 85
MODULE_ASSIGNMENT    : 
MULTIPLICATION_ASSIGNMENT : 
NAMESPACE            : 
NEW                  : 92 93 105 106 107 108
PERCENT              : 88
PIPE                 : 
PLUS                 : 73 84
PRINT                : 
PRIVATE              : 58
PUBLIC               : 3 57
PUT                  : 103
RBRACKET             : 
READ                 : 46
REMOVE               : 104
REMOVEAT             : 120
RETURN               : 
RKEY                 : 3 55 55 56 56 56 61 62 63 64 65 93 94 107 108 121
RPARENT              : 46 55 56 61 62 63 65 92 93 103 104 105 106 107 108 117 118 119 120
SIPLE_QUOTATION_MARKS : 
SMALLER_THAN         : 75 92 92 93 93 105 105 106 106 107 107 108 108 121
SMALLER_THAN_OR_EQUAL : 79
STATIC               : 
STRING               : 43 72 73 97 103 103 103 104 104 109 110 119
STRINGTYPE           : 35 105 105 107 107 121
SUBTRACTION_ASSIGNMENT : 
SWITCH               : 
SYSTEM               : 2
TABULATION           : 
TIMES                : 86
TRY                  : 55 56
USING                : 2
VARIABLE             : 3 10 33 45 55 56 63 65 92 93 105 106 107 108 117 118 119 120 121 121
VOID                 : 
WHILE                : 61 62
error                : 

Nonterminals, with rules where they appear

access_modifiers     : 18 20
all_asignations      : 18 19 20 21
all_block_code       : 3 5
arithmetic_operation : 69
arithmetic_operator  : 69
assignation_key_value : 22 25 26 27 28 29 30 31 32
assignation_with_datatype : 23 26 30
assignation_without_datatype : 24 27 29
block_code           : 4 5 55 55 56 56 56 61 62 67
block_if             : 15 66
block_publicClass    : 1
block_try_catch      : 8
block_using          : 1
block_while          : 9
concatenation        : 47 73
constant_assignation : 16
data_type            : 22 25 26 27
declaration_lambda   : 14
def_const_or_var     : 6
dict_empty           : 90
dict_estruct         : 11
dict_full            : 91
dict_func_put        : 101
dict_func_remove     : 102
dictionary_value     : 93
do_while             : 60
estruct_of_data      : 7
functions_dict       : 12
functions_list       : 13
ints_list            : 108 112
key_value_pair       : 94 95 96
key_value_pairs      : 96
list_empty           : 99
list_full            : 100
list_func_add        : 115
list_func_clear      : 113
list_func_count      : 114
list_func_removeat   : 116
logic_operation      : 61 62 71
logic_operator       : 71
normal_while         : 59
not_yes_nested_if    : 63 64 65
other_if             : 63 65
program              : 0
some_assignation_constant : 22 32
strings_list         : 107 110
try_catch_finally    : 54
try_catch_simply     : 53
value                : 33
valueHash            : 97
value_logic          : 41 70 71
value_numeric        : 40 68 69
value_string         : 42
variable_assignation : 17
variable_assignation_multiline : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_using block_publicClass
    (2) block_using -> . USING SYSTEM DOTANDCOMMA

    USING           shift and go to state 3

    program                        shift and go to state 1
    block_using                    shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_using . block_publicClass
    (3) block_publicClass -> . PUBLIC CLASS VARIABLE LKEY all_block_code RKEY

    PUBLIC          shift and go to state 5

    block_publicClass              shift and go to state 4

state 3

    (2) block_using -> USING . SYSTEM DOTANDCOMMA

    SYSTEM          shift and go to state 6


state 4

    (1) program -> block_using block_publicClass .

    $end            reduce using rule 1 (program -> block_using block_publicClass .)


state 5

    (3) block_publicClass -> PUBLIC . CLASS VARIABLE LKEY all_block_code RKEY

    CLASS           shift and go to state 7


state 6

    (2) block_using -> USING SYSTEM . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 8


state 7

    (3) block_publicClass -> PUBLIC CLASS . VARIABLE LKEY all_block_code RKEY

    VARIABLE        shift and go to state 9


state 8

    (2) block_using -> USING SYSTEM DOTANDCOMMA .

    PUBLIC          reduce using rule 2 (block_using -> USING SYSTEM DOTANDCOMMA .)


state 9

    (3) block_publicClass -> PUBLIC CLASS VARIABLE . LKEY all_block_code RKEY

    LKEY            shift and go to state 10


state 10

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY . all_block_code RKEY
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    all_block_code                 shift and go to state 13
    block_code                     shift and go to state 14
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 11

    (57) access_modifiers -> PUBLIC .

    CONST           reduce using rule 57 (access_modifiers -> PUBLIC .)
    CHARTYPE        reduce using rule 57 (access_modifiers -> PUBLIC .)
    STRINGTYPE      reduce using rule 57 (access_modifiers -> PUBLIC .)
    FLOATTYPE       reduce using rule 57 (access_modifiers -> PUBLIC .)
    DECIMALTYPE     reduce using rule 57 (access_modifiers -> PUBLIC .)
    INTTYPE         reduce using rule 57 (access_modifiers -> PUBLIC .)
    BOOLTYPE        reduce using rule 57 (access_modifiers -> PUBLIC .)
    VARIABLE        reduce using rule 57 (access_modifiers -> PUBLIC .)


state 12

    (10) block_code -> VARIABLE .
    (117) list_func_clear -> VARIABLE . DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> VARIABLE . DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> VARIABLE . DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> VARIABLE . DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (33) assignation_key_value -> VARIABLE . ASSIGNATION value

    VARIABLE        reduce using rule 10 (block_code -> VARIABLE .)
    ACTION          reduce using rule 10 (block_code -> VARIABLE .)
    IF              reduce using rule 10 (block_code -> VARIABLE .)
    CONST           reduce using rule 10 (block_code -> VARIABLE .)
    LIST            reduce using rule 10 (block_code -> VARIABLE .)
    TRY             reduce using rule 10 (block_code -> VARIABLE .)
    WHILE           reduce using rule 10 (block_code -> VARIABLE .)
    DO              reduce using rule 10 (block_code -> VARIABLE .)
    DICTIONARY      reduce using rule 10 (block_code -> VARIABLE .)
    STRING          reduce using rule 10 (block_code -> VARIABLE .)
    PUBLIC          reduce using rule 10 (block_code -> VARIABLE .)
    PRIVATE         reduce using rule 10 (block_code -> VARIABLE .)
    CHARTYPE        reduce using rule 10 (block_code -> VARIABLE .)
    STRINGTYPE      reduce using rule 10 (block_code -> VARIABLE .)
    FLOATTYPE       reduce using rule 10 (block_code -> VARIABLE .)
    DECIMALTYPE     reduce using rule 10 (block_code -> VARIABLE .)
    INTTYPE         reduce using rule 10 (block_code -> VARIABLE .)
    BOOLTYPE        reduce using rule 10 (block_code -> VARIABLE .)
    RKEY            reduce using rule 10 (block_code -> VARIABLE .)
    DOT             shift and go to state 62
    ASSIGNATION     shift and go to state 63


state 13

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code . RKEY

    RKEY            shift and go to state 64


state 14

    (4) all_block_code -> block_code .
    (5) all_block_code -> block_code . all_block_code
    (4) all_block_code -> . block_code
    (5) all_block_code -> . block_code all_block_code
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    RKEY            reduce using rule 4 (all_block_code -> block_code .)
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    block_code                     shift and go to state 14
    all_block_code                 shift and go to state 65
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 15

    (6) block_code -> def_const_or_var .

    VARIABLE        reduce using rule 6 (block_code -> def_const_or_var .)
    ACTION          reduce using rule 6 (block_code -> def_const_or_var .)
    IF              reduce using rule 6 (block_code -> def_const_or_var .)
    CONST           reduce using rule 6 (block_code -> def_const_or_var .)
    LIST            reduce using rule 6 (block_code -> def_const_or_var .)
    TRY             reduce using rule 6 (block_code -> def_const_or_var .)
    WHILE           reduce using rule 6 (block_code -> def_const_or_var .)
    DO              reduce using rule 6 (block_code -> def_const_or_var .)
    DICTIONARY      reduce using rule 6 (block_code -> def_const_or_var .)
    STRING          reduce using rule 6 (block_code -> def_const_or_var .)
    PUBLIC          reduce using rule 6 (block_code -> def_const_or_var .)
    PRIVATE         reduce using rule 6 (block_code -> def_const_or_var .)
    CHARTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    STRINGTYPE      reduce using rule 6 (block_code -> def_const_or_var .)
    FLOATTYPE       reduce using rule 6 (block_code -> def_const_or_var .)
    DECIMALTYPE     reduce using rule 6 (block_code -> def_const_or_var .)
    INTTYPE         reduce using rule 6 (block_code -> def_const_or_var .)
    BOOLTYPE        reduce using rule 6 (block_code -> def_const_or_var .)
    RKEY            reduce using rule 6 (block_code -> def_const_or_var .)


state 16

    (7) block_code -> estruct_of_data .

    VARIABLE        reduce using rule 7 (block_code -> estruct_of_data .)
    ACTION          reduce using rule 7 (block_code -> estruct_of_data .)
    IF              reduce using rule 7 (block_code -> estruct_of_data .)
    CONST           reduce using rule 7 (block_code -> estruct_of_data .)
    LIST            reduce using rule 7 (block_code -> estruct_of_data .)
    TRY             reduce using rule 7 (block_code -> estruct_of_data .)
    WHILE           reduce using rule 7 (block_code -> estruct_of_data .)
    DO              reduce using rule 7 (block_code -> estruct_of_data .)
    DICTIONARY      reduce using rule 7 (block_code -> estruct_of_data .)
    STRING          reduce using rule 7 (block_code -> estruct_of_data .)
    PUBLIC          reduce using rule 7 (block_code -> estruct_of_data .)
    PRIVATE         reduce using rule 7 (block_code -> estruct_of_data .)
    CHARTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    STRINGTYPE      reduce using rule 7 (block_code -> estruct_of_data .)
    FLOATTYPE       reduce using rule 7 (block_code -> estruct_of_data .)
    DECIMALTYPE     reduce using rule 7 (block_code -> estruct_of_data .)
    INTTYPE         reduce using rule 7 (block_code -> estruct_of_data .)
    BOOLTYPE        reduce using rule 7 (block_code -> estruct_of_data .)
    RKEY            reduce using rule 7 (block_code -> estruct_of_data .)


state 17

    (8) block_code -> block_try_catch .

    VARIABLE        reduce using rule 8 (block_code -> block_try_catch .)
    ACTION          reduce using rule 8 (block_code -> block_try_catch .)
    IF              reduce using rule 8 (block_code -> block_try_catch .)
    CONST           reduce using rule 8 (block_code -> block_try_catch .)
    LIST            reduce using rule 8 (block_code -> block_try_catch .)
    TRY             reduce using rule 8 (block_code -> block_try_catch .)
    WHILE           reduce using rule 8 (block_code -> block_try_catch .)
    DO              reduce using rule 8 (block_code -> block_try_catch .)
    DICTIONARY      reduce using rule 8 (block_code -> block_try_catch .)
    STRING          reduce using rule 8 (block_code -> block_try_catch .)
    PUBLIC          reduce using rule 8 (block_code -> block_try_catch .)
    PRIVATE         reduce using rule 8 (block_code -> block_try_catch .)
    CHARTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    STRINGTYPE      reduce using rule 8 (block_code -> block_try_catch .)
    FLOATTYPE       reduce using rule 8 (block_code -> block_try_catch .)
    DECIMALTYPE     reduce using rule 8 (block_code -> block_try_catch .)
    INTTYPE         reduce using rule 8 (block_code -> block_try_catch .)
    BOOLTYPE        reduce using rule 8 (block_code -> block_try_catch .)
    RKEY            reduce using rule 8 (block_code -> block_try_catch .)


state 18

    (9) block_code -> block_while .

    VARIABLE        reduce using rule 9 (block_code -> block_while .)
    ACTION          reduce using rule 9 (block_code -> block_while .)
    IF              reduce using rule 9 (block_code -> block_while .)
    CONST           reduce using rule 9 (block_code -> block_while .)
    LIST            reduce using rule 9 (block_code -> block_while .)
    TRY             reduce using rule 9 (block_code -> block_while .)
    WHILE           reduce using rule 9 (block_code -> block_while .)
    DO              reduce using rule 9 (block_code -> block_while .)
    DICTIONARY      reduce using rule 9 (block_code -> block_while .)
    STRING          reduce using rule 9 (block_code -> block_while .)
    PUBLIC          reduce using rule 9 (block_code -> block_while .)
    PRIVATE         reduce using rule 9 (block_code -> block_while .)
    CHARTYPE        reduce using rule 9 (block_code -> block_while .)
    STRINGTYPE      reduce using rule 9 (block_code -> block_while .)
    FLOATTYPE       reduce using rule 9 (block_code -> block_while .)
    DECIMALTYPE     reduce using rule 9 (block_code -> block_while .)
    INTTYPE         reduce using rule 9 (block_code -> block_while .)
    BOOLTYPE        reduce using rule 9 (block_code -> block_while .)
    RKEY            reduce using rule 9 (block_code -> block_while .)


state 19

    (11) block_code -> dict_estruct .

    VARIABLE        reduce using rule 11 (block_code -> dict_estruct .)
    ACTION          reduce using rule 11 (block_code -> dict_estruct .)
    IF              reduce using rule 11 (block_code -> dict_estruct .)
    CONST           reduce using rule 11 (block_code -> dict_estruct .)
    LIST            reduce using rule 11 (block_code -> dict_estruct .)
    TRY             reduce using rule 11 (block_code -> dict_estruct .)
    WHILE           reduce using rule 11 (block_code -> dict_estruct .)
    DO              reduce using rule 11 (block_code -> dict_estruct .)
    DICTIONARY      reduce using rule 11 (block_code -> dict_estruct .)
    STRING          reduce using rule 11 (block_code -> dict_estruct .)
    PUBLIC          reduce using rule 11 (block_code -> dict_estruct .)
    PRIVATE         reduce using rule 11 (block_code -> dict_estruct .)
    CHARTYPE        reduce using rule 11 (block_code -> dict_estruct .)
    STRINGTYPE      reduce using rule 11 (block_code -> dict_estruct .)
    FLOATTYPE       reduce using rule 11 (block_code -> dict_estruct .)
    DECIMALTYPE     reduce using rule 11 (block_code -> dict_estruct .)
    INTTYPE         reduce using rule 11 (block_code -> dict_estruct .)
    BOOLTYPE        reduce using rule 11 (block_code -> dict_estruct .)
    RKEY            reduce using rule 11 (block_code -> dict_estruct .)


state 20

    (12) block_code -> functions_dict .

    VARIABLE        reduce using rule 12 (block_code -> functions_dict .)
    ACTION          reduce using rule 12 (block_code -> functions_dict .)
    IF              reduce using rule 12 (block_code -> functions_dict .)
    CONST           reduce using rule 12 (block_code -> functions_dict .)
    LIST            reduce using rule 12 (block_code -> functions_dict .)
    TRY             reduce using rule 12 (block_code -> functions_dict .)
    WHILE           reduce using rule 12 (block_code -> functions_dict .)
    DO              reduce using rule 12 (block_code -> functions_dict .)
    DICTIONARY      reduce using rule 12 (block_code -> functions_dict .)
    STRING          reduce using rule 12 (block_code -> functions_dict .)
    PUBLIC          reduce using rule 12 (block_code -> functions_dict .)
    PRIVATE         reduce using rule 12 (block_code -> functions_dict .)
    CHARTYPE        reduce using rule 12 (block_code -> functions_dict .)
    STRINGTYPE      reduce using rule 12 (block_code -> functions_dict .)
    FLOATTYPE       reduce using rule 12 (block_code -> functions_dict .)
    DECIMALTYPE     reduce using rule 12 (block_code -> functions_dict .)
    INTTYPE         reduce using rule 12 (block_code -> functions_dict .)
    BOOLTYPE        reduce using rule 12 (block_code -> functions_dict .)
    RKEY            reduce using rule 12 (block_code -> functions_dict .)


state 21

    (13) block_code -> functions_list .

    VARIABLE        reduce using rule 13 (block_code -> functions_list .)
    ACTION          reduce using rule 13 (block_code -> functions_list .)
    IF              reduce using rule 13 (block_code -> functions_list .)
    CONST           reduce using rule 13 (block_code -> functions_list .)
    LIST            reduce using rule 13 (block_code -> functions_list .)
    TRY             reduce using rule 13 (block_code -> functions_list .)
    WHILE           reduce using rule 13 (block_code -> functions_list .)
    DO              reduce using rule 13 (block_code -> functions_list .)
    DICTIONARY      reduce using rule 13 (block_code -> functions_list .)
    STRING          reduce using rule 13 (block_code -> functions_list .)
    PUBLIC          reduce using rule 13 (block_code -> functions_list .)
    PRIVATE         reduce using rule 13 (block_code -> functions_list .)
    CHARTYPE        reduce using rule 13 (block_code -> functions_list .)
    STRINGTYPE      reduce using rule 13 (block_code -> functions_list .)
    FLOATTYPE       reduce using rule 13 (block_code -> functions_list .)
    DECIMALTYPE     reduce using rule 13 (block_code -> functions_list .)
    INTTYPE         reduce using rule 13 (block_code -> functions_list .)
    BOOLTYPE        reduce using rule 13 (block_code -> functions_list .)
    RKEY            reduce using rule 13 (block_code -> functions_list .)


state 22

    (14) block_code -> declaration_lambda .

    VARIABLE        reduce using rule 14 (block_code -> declaration_lambda .)
    ACTION          reduce using rule 14 (block_code -> declaration_lambda .)
    IF              reduce using rule 14 (block_code -> declaration_lambda .)
    CONST           reduce using rule 14 (block_code -> declaration_lambda .)
    LIST            reduce using rule 14 (block_code -> declaration_lambda .)
    TRY             reduce using rule 14 (block_code -> declaration_lambda .)
    WHILE           reduce using rule 14 (block_code -> declaration_lambda .)
    DO              reduce using rule 14 (block_code -> declaration_lambda .)
    DICTIONARY      reduce using rule 14 (block_code -> declaration_lambda .)
    STRING          reduce using rule 14 (block_code -> declaration_lambda .)
    PUBLIC          reduce using rule 14 (block_code -> declaration_lambda .)
    PRIVATE         reduce using rule 14 (block_code -> declaration_lambda .)
    CHARTYPE        reduce using rule 14 (block_code -> declaration_lambda .)
    STRINGTYPE      reduce using rule 14 (block_code -> declaration_lambda .)
    FLOATTYPE       reduce using rule 14 (block_code -> declaration_lambda .)
    DECIMALTYPE     reduce using rule 14 (block_code -> declaration_lambda .)
    INTTYPE         reduce using rule 14 (block_code -> declaration_lambda .)
    BOOLTYPE        reduce using rule 14 (block_code -> declaration_lambda .)
    RKEY            reduce using rule 14 (block_code -> declaration_lambda .)


state 23

    (15) block_code -> block_if .

    VARIABLE        reduce using rule 15 (block_code -> block_if .)
    ACTION          reduce using rule 15 (block_code -> block_if .)
    IF              reduce using rule 15 (block_code -> block_if .)
    CONST           reduce using rule 15 (block_code -> block_if .)
    LIST            reduce using rule 15 (block_code -> block_if .)
    TRY             reduce using rule 15 (block_code -> block_if .)
    WHILE           reduce using rule 15 (block_code -> block_if .)
    DO              reduce using rule 15 (block_code -> block_if .)
    DICTIONARY      reduce using rule 15 (block_code -> block_if .)
    STRING          reduce using rule 15 (block_code -> block_if .)
    PUBLIC          reduce using rule 15 (block_code -> block_if .)
    PRIVATE         reduce using rule 15 (block_code -> block_if .)
    CHARTYPE        reduce using rule 15 (block_code -> block_if .)
    STRINGTYPE      reduce using rule 15 (block_code -> block_if .)
    FLOATTYPE       reduce using rule 15 (block_code -> block_if .)
    DECIMALTYPE     reduce using rule 15 (block_code -> block_if .)
    INTTYPE         reduce using rule 15 (block_code -> block_if .)
    BOOLTYPE        reduce using rule 15 (block_code -> block_if .)
    RKEY            reduce using rule 15 (block_code -> block_if .)


state 24

    (16) def_const_or_var -> constant_assignation .

    VARIABLE        reduce using rule 16 (def_const_or_var -> constant_assignation .)
    ACTION          reduce using rule 16 (def_const_or_var -> constant_assignation .)
    IF              reduce using rule 16 (def_const_or_var -> constant_assignation .)
    CONST           reduce using rule 16 (def_const_or_var -> constant_assignation .)
    LIST            reduce using rule 16 (def_const_or_var -> constant_assignation .)
    TRY             reduce using rule 16 (def_const_or_var -> constant_assignation .)
    WHILE           reduce using rule 16 (def_const_or_var -> constant_assignation .)
    DO              reduce using rule 16 (def_const_or_var -> constant_assignation .)
    DICTIONARY      reduce using rule 16 (def_const_or_var -> constant_assignation .)
    STRING          reduce using rule 16 (def_const_or_var -> constant_assignation .)
    PUBLIC          reduce using rule 16 (def_const_or_var -> constant_assignation .)
    PRIVATE         reduce using rule 16 (def_const_or_var -> constant_assignation .)
    CHARTYPE        reduce using rule 16 (def_const_or_var -> constant_assignation .)
    STRINGTYPE      reduce using rule 16 (def_const_or_var -> constant_assignation .)
    FLOATTYPE       reduce using rule 16 (def_const_or_var -> constant_assignation .)
    DECIMALTYPE     reduce using rule 16 (def_const_or_var -> constant_assignation .)
    INTTYPE         reduce using rule 16 (def_const_or_var -> constant_assignation .)
    BOOLTYPE        reduce using rule 16 (def_const_or_var -> constant_assignation .)
    RKEY            reduce using rule 16 (def_const_or_var -> constant_assignation .)


state 25

    (17) def_const_or_var -> variable_assignation .

    VARIABLE        reduce using rule 17 (def_const_or_var -> variable_assignation .)
    ACTION          reduce using rule 17 (def_const_or_var -> variable_assignation .)
    IF              reduce using rule 17 (def_const_or_var -> variable_assignation .)
    CONST           reduce using rule 17 (def_const_or_var -> variable_assignation .)
    LIST            reduce using rule 17 (def_const_or_var -> variable_assignation .)
    TRY             reduce using rule 17 (def_const_or_var -> variable_assignation .)
    WHILE           reduce using rule 17 (def_const_or_var -> variable_assignation .)
    DO              reduce using rule 17 (def_const_or_var -> variable_assignation .)
    DICTIONARY      reduce using rule 17 (def_const_or_var -> variable_assignation .)
    STRING          reduce using rule 17 (def_const_or_var -> variable_assignation .)
    PUBLIC          reduce using rule 17 (def_const_or_var -> variable_assignation .)
    PRIVATE         reduce using rule 17 (def_const_or_var -> variable_assignation .)
    CHARTYPE        reduce using rule 17 (def_const_or_var -> variable_assignation .)
    STRINGTYPE      reduce using rule 17 (def_const_or_var -> variable_assignation .)
    FLOATTYPE       reduce using rule 17 (def_const_or_var -> variable_assignation .)
    DECIMALTYPE     reduce using rule 17 (def_const_or_var -> variable_assignation .)
    INTTYPE         reduce using rule 17 (def_const_or_var -> variable_assignation .)
    BOOLTYPE        reduce using rule 17 (def_const_or_var -> variable_assignation .)
    RKEY            reduce using rule 17 (def_const_or_var -> variable_assignation .)


state 26

    (99) estruct_of_data -> list_empty .

    VARIABLE        reduce using rule 99 (estruct_of_data -> list_empty .)
    ACTION          reduce using rule 99 (estruct_of_data -> list_empty .)
    IF              reduce using rule 99 (estruct_of_data -> list_empty .)
    CONST           reduce using rule 99 (estruct_of_data -> list_empty .)
    LIST            reduce using rule 99 (estruct_of_data -> list_empty .)
    TRY             reduce using rule 99 (estruct_of_data -> list_empty .)
    WHILE           reduce using rule 99 (estruct_of_data -> list_empty .)
    DO              reduce using rule 99 (estruct_of_data -> list_empty .)
    DICTIONARY      reduce using rule 99 (estruct_of_data -> list_empty .)
    STRING          reduce using rule 99 (estruct_of_data -> list_empty .)
    PUBLIC          reduce using rule 99 (estruct_of_data -> list_empty .)
    PRIVATE         reduce using rule 99 (estruct_of_data -> list_empty .)
    CHARTYPE        reduce using rule 99 (estruct_of_data -> list_empty .)
    STRINGTYPE      reduce using rule 99 (estruct_of_data -> list_empty .)
    FLOATTYPE       reduce using rule 99 (estruct_of_data -> list_empty .)
    DECIMALTYPE     reduce using rule 99 (estruct_of_data -> list_empty .)
    INTTYPE         reduce using rule 99 (estruct_of_data -> list_empty .)
    BOOLTYPE        reduce using rule 99 (estruct_of_data -> list_empty .)
    RKEY            reduce using rule 99 (estruct_of_data -> list_empty .)


state 27

    (100) estruct_of_data -> list_full .

    VARIABLE        reduce using rule 100 (estruct_of_data -> list_full .)
    ACTION          reduce using rule 100 (estruct_of_data -> list_full .)
    IF              reduce using rule 100 (estruct_of_data -> list_full .)
    CONST           reduce using rule 100 (estruct_of_data -> list_full .)
    LIST            reduce using rule 100 (estruct_of_data -> list_full .)
    TRY             reduce using rule 100 (estruct_of_data -> list_full .)
    WHILE           reduce using rule 100 (estruct_of_data -> list_full .)
    DO              reduce using rule 100 (estruct_of_data -> list_full .)
    DICTIONARY      reduce using rule 100 (estruct_of_data -> list_full .)
    STRING          reduce using rule 100 (estruct_of_data -> list_full .)
    PUBLIC          reduce using rule 100 (estruct_of_data -> list_full .)
    PRIVATE         reduce using rule 100 (estruct_of_data -> list_full .)
    CHARTYPE        reduce using rule 100 (estruct_of_data -> list_full .)
    STRINGTYPE      reduce using rule 100 (estruct_of_data -> list_full .)
    FLOATTYPE       reduce using rule 100 (estruct_of_data -> list_full .)
    DECIMALTYPE     reduce using rule 100 (estruct_of_data -> list_full .)
    INTTYPE         reduce using rule 100 (estruct_of_data -> list_full .)
    BOOLTYPE        reduce using rule 100 (estruct_of_data -> list_full .)
    RKEY            reduce using rule 100 (estruct_of_data -> list_full .)


state 28

    (53) block_try_catch -> try_catch_simply .

    VARIABLE        reduce using rule 53 (block_try_catch -> try_catch_simply .)
    ACTION          reduce using rule 53 (block_try_catch -> try_catch_simply .)
    IF              reduce using rule 53 (block_try_catch -> try_catch_simply .)
    CONST           reduce using rule 53 (block_try_catch -> try_catch_simply .)
    LIST            reduce using rule 53 (block_try_catch -> try_catch_simply .)
    TRY             reduce using rule 53 (block_try_catch -> try_catch_simply .)
    WHILE           reduce using rule 53 (block_try_catch -> try_catch_simply .)
    DO              reduce using rule 53 (block_try_catch -> try_catch_simply .)
    DICTIONARY      reduce using rule 53 (block_try_catch -> try_catch_simply .)
    STRING          reduce using rule 53 (block_try_catch -> try_catch_simply .)
    PUBLIC          reduce using rule 53 (block_try_catch -> try_catch_simply .)
    PRIVATE         reduce using rule 53 (block_try_catch -> try_catch_simply .)
    CHARTYPE        reduce using rule 53 (block_try_catch -> try_catch_simply .)
    STRINGTYPE      reduce using rule 53 (block_try_catch -> try_catch_simply .)
    FLOATTYPE       reduce using rule 53 (block_try_catch -> try_catch_simply .)
    DECIMALTYPE     reduce using rule 53 (block_try_catch -> try_catch_simply .)
    INTTYPE         reduce using rule 53 (block_try_catch -> try_catch_simply .)
    BOOLTYPE        reduce using rule 53 (block_try_catch -> try_catch_simply .)
    RKEY            reduce using rule 53 (block_try_catch -> try_catch_simply .)


state 29

    (54) block_try_catch -> try_catch_finally .

    VARIABLE        reduce using rule 54 (block_try_catch -> try_catch_finally .)
    ACTION          reduce using rule 54 (block_try_catch -> try_catch_finally .)
    IF              reduce using rule 54 (block_try_catch -> try_catch_finally .)
    CONST           reduce using rule 54 (block_try_catch -> try_catch_finally .)
    LIST            reduce using rule 54 (block_try_catch -> try_catch_finally .)
    TRY             reduce using rule 54 (block_try_catch -> try_catch_finally .)
    WHILE           reduce using rule 54 (block_try_catch -> try_catch_finally .)
    DO              reduce using rule 54 (block_try_catch -> try_catch_finally .)
    DICTIONARY      reduce using rule 54 (block_try_catch -> try_catch_finally .)
    STRING          reduce using rule 54 (block_try_catch -> try_catch_finally .)
    PUBLIC          reduce using rule 54 (block_try_catch -> try_catch_finally .)
    PRIVATE         reduce using rule 54 (block_try_catch -> try_catch_finally .)
    CHARTYPE        reduce using rule 54 (block_try_catch -> try_catch_finally .)
    STRINGTYPE      reduce using rule 54 (block_try_catch -> try_catch_finally .)
    FLOATTYPE       reduce using rule 54 (block_try_catch -> try_catch_finally .)
    DECIMALTYPE     reduce using rule 54 (block_try_catch -> try_catch_finally .)
    INTTYPE         reduce using rule 54 (block_try_catch -> try_catch_finally .)
    BOOLTYPE        reduce using rule 54 (block_try_catch -> try_catch_finally .)
    RKEY            reduce using rule 54 (block_try_catch -> try_catch_finally .)


state 30

    (59) block_while -> normal_while .

    VARIABLE        reduce using rule 59 (block_while -> normal_while .)
    ACTION          reduce using rule 59 (block_while -> normal_while .)
    IF              reduce using rule 59 (block_while -> normal_while .)
    CONST           reduce using rule 59 (block_while -> normal_while .)
    LIST            reduce using rule 59 (block_while -> normal_while .)
    TRY             reduce using rule 59 (block_while -> normal_while .)
    WHILE           reduce using rule 59 (block_while -> normal_while .)
    DO              reduce using rule 59 (block_while -> normal_while .)
    DICTIONARY      reduce using rule 59 (block_while -> normal_while .)
    STRING          reduce using rule 59 (block_while -> normal_while .)
    PUBLIC          reduce using rule 59 (block_while -> normal_while .)
    PRIVATE         reduce using rule 59 (block_while -> normal_while .)
    CHARTYPE        reduce using rule 59 (block_while -> normal_while .)
    STRINGTYPE      reduce using rule 59 (block_while -> normal_while .)
    FLOATTYPE       reduce using rule 59 (block_while -> normal_while .)
    DECIMALTYPE     reduce using rule 59 (block_while -> normal_while .)
    INTTYPE         reduce using rule 59 (block_while -> normal_while .)
    BOOLTYPE        reduce using rule 59 (block_while -> normal_while .)
    RKEY            reduce using rule 59 (block_while -> normal_while .)


state 31

    (60) block_while -> do_while .

    VARIABLE        reduce using rule 60 (block_while -> do_while .)
    ACTION          reduce using rule 60 (block_while -> do_while .)
    IF              reduce using rule 60 (block_while -> do_while .)
    CONST           reduce using rule 60 (block_while -> do_while .)
    LIST            reduce using rule 60 (block_while -> do_while .)
    TRY             reduce using rule 60 (block_while -> do_while .)
    WHILE           reduce using rule 60 (block_while -> do_while .)
    DO              reduce using rule 60 (block_while -> do_while .)
    DICTIONARY      reduce using rule 60 (block_while -> do_while .)
    STRING          reduce using rule 60 (block_while -> do_while .)
    PUBLIC          reduce using rule 60 (block_while -> do_while .)
    PRIVATE         reduce using rule 60 (block_while -> do_while .)
    CHARTYPE        reduce using rule 60 (block_while -> do_while .)
    STRINGTYPE      reduce using rule 60 (block_while -> do_while .)
    FLOATTYPE       reduce using rule 60 (block_while -> do_while .)
    DECIMALTYPE     reduce using rule 60 (block_while -> do_while .)
    INTTYPE         reduce using rule 60 (block_while -> do_while .)
    BOOLTYPE        reduce using rule 60 (block_while -> do_while .)
    RKEY            reduce using rule 60 (block_while -> do_while .)


state 32

    (90) dict_estruct -> dict_empty .

    VARIABLE        reduce using rule 90 (dict_estruct -> dict_empty .)
    ACTION          reduce using rule 90 (dict_estruct -> dict_empty .)
    IF              reduce using rule 90 (dict_estruct -> dict_empty .)
    CONST           reduce using rule 90 (dict_estruct -> dict_empty .)
    LIST            reduce using rule 90 (dict_estruct -> dict_empty .)
    TRY             reduce using rule 90 (dict_estruct -> dict_empty .)
    WHILE           reduce using rule 90 (dict_estruct -> dict_empty .)
    DO              reduce using rule 90 (dict_estruct -> dict_empty .)
    DICTIONARY      reduce using rule 90 (dict_estruct -> dict_empty .)
    STRING          reduce using rule 90 (dict_estruct -> dict_empty .)
    PUBLIC          reduce using rule 90 (dict_estruct -> dict_empty .)
    PRIVATE         reduce using rule 90 (dict_estruct -> dict_empty .)
    CHARTYPE        reduce using rule 90 (dict_estruct -> dict_empty .)
    STRINGTYPE      reduce using rule 90 (dict_estruct -> dict_empty .)
    FLOATTYPE       reduce using rule 90 (dict_estruct -> dict_empty .)
    DECIMALTYPE     reduce using rule 90 (dict_estruct -> dict_empty .)
    INTTYPE         reduce using rule 90 (dict_estruct -> dict_empty .)
    BOOLTYPE        reduce using rule 90 (dict_estruct -> dict_empty .)
    RKEY            reduce using rule 90 (dict_estruct -> dict_empty .)


state 33

    (91) dict_estruct -> dict_full .

    VARIABLE        reduce using rule 91 (dict_estruct -> dict_full .)
    ACTION          reduce using rule 91 (dict_estruct -> dict_full .)
    IF              reduce using rule 91 (dict_estruct -> dict_full .)
    CONST           reduce using rule 91 (dict_estruct -> dict_full .)
    LIST            reduce using rule 91 (dict_estruct -> dict_full .)
    TRY             reduce using rule 91 (dict_estruct -> dict_full .)
    WHILE           reduce using rule 91 (dict_estruct -> dict_full .)
    DO              reduce using rule 91 (dict_estruct -> dict_full .)
    DICTIONARY      reduce using rule 91 (dict_estruct -> dict_full .)
    STRING          reduce using rule 91 (dict_estruct -> dict_full .)
    PUBLIC          reduce using rule 91 (dict_estruct -> dict_full .)
    PRIVATE         reduce using rule 91 (dict_estruct -> dict_full .)
    CHARTYPE        reduce using rule 91 (dict_estruct -> dict_full .)
    STRINGTYPE      reduce using rule 91 (dict_estruct -> dict_full .)
    FLOATTYPE       reduce using rule 91 (dict_estruct -> dict_full .)
    DECIMALTYPE     reduce using rule 91 (dict_estruct -> dict_full .)
    INTTYPE         reduce using rule 91 (dict_estruct -> dict_full .)
    BOOLTYPE        reduce using rule 91 (dict_estruct -> dict_full .)
    RKEY            reduce using rule 91 (dict_estruct -> dict_full .)


state 34

    (101) functions_dict -> dict_func_put .

    VARIABLE        reduce using rule 101 (functions_dict -> dict_func_put .)
    ACTION          reduce using rule 101 (functions_dict -> dict_func_put .)
    IF              reduce using rule 101 (functions_dict -> dict_func_put .)
    CONST           reduce using rule 101 (functions_dict -> dict_func_put .)
    LIST            reduce using rule 101 (functions_dict -> dict_func_put .)
    TRY             reduce using rule 101 (functions_dict -> dict_func_put .)
    WHILE           reduce using rule 101 (functions_dict -> dict_func_put .)
    DO              reduce using rule 101 (functions_dict -> dict_func_put .)
    DICTIONARY      reduce using rule 101 (functions_dict -> dict_func_put .)
    STRING          reduce using rule 101 (functions_dict -> dict_func_put .)
    PUBLIC          reduce using rule 101 (functions_dict -> dict_func_put .)
    PRIVATE         reduce using rule 101 (functions_dict -> dict_func_put .)
    CHARTYPE        reduce using rule 101 (functions_dict -> dict_func_put .)
    STRINGTYPE      reduce using rule 101 (functions_dict -> dict_func_put .)
    FLOATTYPE       reduce using rule 101 (functions_dict -> dict_func_put .)
    DECIMALTYPE     reduce using rule 101 (functions_dict -> dict_func_put .)
    INTTYPE         reduce using rule 101 (functions_dict -> dict_func_put .)
    BOOLTYPE        reduce using rule 101 (functions_dict -> dict_func_put .)
    RKEY            reduce using rule 101 (functions_dict -> dict_func_put .)


state 35

    (102) functions_dict -> dict_func_remove .

    VARIABLE        reduce using rule 102 (functions_dict -> dict_func_remove .)
    ACTION          reduce using rule 102 (functions_dict -> dict_func_remove .)
    IF              reduce using rule 102 (functions_dict -> dict_func_remove .)
    CONST           reduce using rule 102 (functions_dict -> dict_func_remove .)
    LIST            reduce using rule 102 (functions_dict -> dict_func_remove .)
    TRY             reduce using rule 102 (functions_dict -> dict_func_remove .)
    WHILE           reduce using rule 102 (functions_dict -> dict_func_remove .)
    DO              reduce using rule 102 (functions_dict -> dict_func_remove .)
    DICTIONARY      reduce using rule 102 (functions_dict -> dict_func_remove .)
    STRING          reduce using rule 102 (functions_dict -> dict_func_remove .)
    PUBLIC          reduce using rule 102 (functions_dict -> dict_func_remove .)
    PRIVATE         reduce using rule 102 (functions_dict -> dict_func_remove .)
    CHARTYPE        reduce using rule 102 (functions_dict -> dict_func_remove .)
    STRINGTYPE      reduce using rule 102 (functions_dict -> dict_func_remove .)
    FLOATTYPE       reduce using rule 102 (functions_dict -> dict_func_remove .)
    DECIMALTYPE     reduce using rule 102 (functions_dict -> dict_func_remove .)
    INTTYPE         reduce using rule 102 (functions_dict -> dict_func_remove .)
    BOOLTYPE        reduce using rule 102 (functions_dict -> dict_func_remove .)
    RKEY            reduce using rule 102 (functions_dict -> dict_func_remove .)


state 36

    (113) functions_list -> list_func_clear .

    VARIABLE        reduce using rule 113 (functions_list -> list_func_clear .)
    ACTION          reduce using rule 113 (functions_list -> list_func_clear .)
    IF              reduce using rule 113 (functions_list -> list_func_clear .)
    CONST           reduce using rule 113 (functions_list -> list_func_clear .)
    LIST            reduce using rule 113 (functions_list -> list_func_clear .)
    TRY             reduce using rule 113 (functions_list -> list_func_clear .)
    WHILE           reduce using rule 113 (functions_list -> list_func_clear .)
    DO              reduce using rule 113 (functions_list -> list_func_clear .)
    DICTIONARY      reduce using rule 113 (functions_list -> list_func_clear .)
    STRING          reduce using rule 113 (functions_list -> list_func_clear .)
    PUBLIC          reduce using rule 113 (functions_list -> list_func_clear .)
    PRIVATE         reduce using rule 113 (functions_list -> list_func_clear .)
    CHARTYPE        reduce using rule 113 (functions_list -> list_func_clear .)
    STRINGTYPE      reduce using rule 113 (functions_list -> list_func_clear .)
    FLOATTYPE       reduce using rule 113 (functions_list -> list_func_clear .)
    DECIMALTYPE     reduce using rule 113 (functions_list -> list_func_clear .)
    INTTYPE         reduce using rule 113 (functions_list -> list_func_clear .)
    BOOLTYPE        reduce using rule 113 (functions_list -> list_func_clear .)
    RKEY            reduce using rule 113 (functions_list -> list_func_clear .)


state 37

    (114) functions_list -> list_func_count .

    VARIABLE        reduce using rule 114 (functions_list -> list_func_count .)
    ACTION          reduce using rule 114 (functions_list -> list_func_count .)
    IF              reduce using rule 114 (functions_list -> list_func_count .)
    CONST           reduce using rule 114 (functions_list -> list_func_count .)
    LIST            reduce using rule 114 (functions_list -> list_func_count .)
    TRY             reduce using rule 114 (functions_list -> list_func_count .)
    WHILE           reduce using rule 114 (functions_list -> list_func_count .)
    DO              reduce using rule 114 (functions_list -> list_func_count .)
    DICTIONARY      reduce using rule 114 (functions_list -> list_func_count .)
    STRING          reduce using rule 114 (functions_list -> list_func_count .)
    PUBLIC          reduce using rule 114 (functions_list -> list_func_count .)
    PRIVATE         reduce using rule 114 (functions_list -> list_func_count .)
    CHARTYPE        reduce using rule 114 (functions_list -> list_func_count .)
    STRINGTYPE      reduce using rule 114 (functions_list -> list_func_count .)
    FLOATTYPE       reduce using rule 114 (functions_list -> list_func_count .)
    DECIMALTYPE     reduce using rule 114 (functions_list -> list_func_count .)
    INTTYPE         reduce using rule 114 (functions_list -> list_func_count .)
    BOOLTYPE        reduce using rule 114 (functions_list -> list_func_count .)
    RKEY            reduce using rule 114 (functions_list -> list_func_count .)


state 38

    (115) functions_list -> list_func_add .

    VARIABLE        reduce using rule 115 (functions_list -> list_func_add .)
    ACTION          reduce using rule 115 (functions_list -> list_func_add .)
    IF              reduce using rule 115 (functions_list -> list_func_add .)
    CONST           reduce using rule 115 (functions_list -> list_func_add .)
    LIST            reduce using rule 115 (functions_list -> list_func_add .)
    TRY             reduce using rule 115 (functions_list -> list_func_add .)
    WHILE           reduce using rule 115 (functions_list -> list_func_add .)
    DO              reduce using rule 115 (functions_list -> list_func_add .)
    DICTIONARY      reduce using rule 115 (functions_list -> list_func_add .)
    STRING          reduce using rule 115 (functions_list -> list_func_add .)
    PUBLIC          reduce using rule 115 (functions_list -> list_func_add .)
    PRIVATE         reduce using rule 115 (functions_list -> list_func_add .)
    CHARTYPE        reduce using rule 115 (functions_list -> list_func_add .)
    STRINGTYPE      reduce using rule 115 (functions_list -> list_func_add .)
    FLOATTYPE       reduce using rule 115 (functions_list -> list_func_add .)
    DECIMALTYPE     reduce using rule 115 (functions_list -> list_func_add .)
    INTTYPE         reduce using rule 115 (functions_list -> list_func_add .)
    BOOLTYPE        reduce using rule 115 (functions_list -> list_func_add .)
    RKEY            reduce using rule 115 (functions_list -> list_func_add .)


state 39

    (116) functions_list -> list_func_removeat .

    VARIABLE        reduce using rule 116 (functions_list -> list_func_removeat .)
    ACTION          reduce using rule 116 (functions_list -> list_func_removeat .)
    IF              reduce using rule 116 (functions_list -> list_func_removeat .)
    CONST           reduce using rule 116 (functions_list -> list_func_removeat .)
    LIST            reduce using rule 116 (functions_list -> list_func_removeat .)
    TRY             reduce using rule 116 (functions_list -> list_func_removeat .)
    WHILE           reduce using rule 116 (functions_list -> list_func_removeat .)
    DO              reduce using rule 116 (functions_list -> list_func_removeat .)
    DICTIONARY      reduce using rule 116 (functions_list -> list_func_removeat .)
    STRING          reduce using rule 116 (functions_list -> list_func_removeat .)
    PUBLIC          reduce using rule 116 (functions_list -> list_func_removeat .)
    PRIVATE         reduce using rule 116 (functions_list -> list_func_removeat .)
    CHARTYPE        reduce using rule 116 (functions_list -> list_func_removeat .)
    STRINGTYPE      reduce using rule 116 (functions_list -> list_func_removeat .)
    FLOATTYPE       reduce using rule 116 (functions_list -> list_func_removeat .)
    DECIMALTYPE     reduce using rule 116 (functions_list -> list_func_removeat .)
    INTTYPE         reduce using rule 116 (functions_list -> list_func_removeat .)
    BOOLTYPE        reduce using rule 116 (functions_list -> list_func_removeat .)
    RKEY            reduce using rule 116 (functions_list -> list_func_removeat .)


state 40

    (121) declaration_lambda -> ACTION . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    SMALLER_THAN    shift and go to state 66


state 41

    (35) data_type -> STRINGTYPE .

    VARIABLE        reduce using rule 35 (data_type -> STRINGTYPE .)


state 42

    (63) block_if -> IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 67


state 43

    (20) constant_assignation -> access_modifiers . CONST all_asignations
    (18) variable_assignation -> access_modifiers . all_asignations
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    CONST           shift and go to state 68
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61
    VARIABLE        shift and go to state 70

    all_asignations                shift and go to state 69
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47

state 44

    (21) constant_assignation -> CONST . all_asignations
    (22) constant_assignation -> CONST . data_type assignation_key_value COMMA some_assignation_constant
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61
    VARIABLE        shift and go to state 70

    all_asignations                shift and go to state 71
    data_type                      shift and go to state 72
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 45

    (19) variable_assignation -> all_asignations .

    VARIABLE        reduce using rule 19 (variable_assignation -> all_asignations .)
    ACTION          reduce using rule 19 (variable_assignation -> all_asignations .)
    IF              reduce using rule 19 (variable_assignation -> all_asignations .)
    CONST           reduce using rule 19 (variable_assignation -> all_asignations .)
    LIST            reduce using rule 19 (variable_assignation -> all_asignations .)
    TRY             reduce using rule 19 (variable_assignation -> all_asignations .)
    WHILE           reduce using rule 19 (variable_assignation -> all_asignations .)
    DO              reduce using rule 19 (variable_assignation -> all_asignations .)
    DICTIONARY      reduce using rule 19 (variable_assignation -> all_asignations .)
    STRING          reduce using rule 19 (variable_assignation -> all_asignations .)
    PUBLIC          reduce using rule 19 (variable_assignation -> all_asignations .)
    PRIVATE         reduce using rule 19 (variable_assignation -> all_asignations .)
    CHARTYPE        reduce using rule 19 (variable_assignation -> all_asignations .)
    STRINGTYPE      reduce using rule 19 (variable_assignation -> all_asignations .)
    FLOATTYPE       reduce using rule 19 (variable_assignation -> all_asignations .)
    DECIMALTYPE     reduce using rule 19 (variable_assignation -> all_asignations .)
    INTTYPE         reduce using rule 19 (variable_assignation -> all_asignations .)
    BOOLTYPE        reduce using rule 19 (variable_assignation -> all_asignations .)
    RKEY            reduce using rule 19 (variable_assignation -> all_asignations .)


state 46

    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 70

    assignation_key_value          shift and go to state 73

state 47

    (28) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA
    (29) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> assignation_key_value . DOTANDCOMMA assignation_with_datatype

    DOTANDCOMMA     shift and go to state 74


state 48

    (105) list_empty -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST . SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> LIST . SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 75


state 49

    (38) data_type -> INTTYPE .

    VARIABLE        reduce using rule 38 (data_type -> INTTYPE .)


state 50

    (55) try_catch_simply -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY . LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 76


state 51

    (61) normal_while -> WHILE . LPARENT logic_operation RPARENT LKEY block_code RKEY

    LPARENT         shift and go to state 77


state 52

    (62) do_while -> DO . LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT

    LKEY            shift and go to state 78


state 53

    (92) dict_empty -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY . SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 79


state 54

    (103) dict_func_put -> STRING . DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> STRING . DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    DOT             shift and go to state 80


state 55

    (58) access_modifiers -> PRIVATE .

    CONST           reduce using rule 58 (access_modifiers -> PRIVATE .)
    CHARTYPE        reduce using rule 58 (access_modifiers -> PRIVATE .)
    STRINGTYPE      reduce using rule 58 (access_modifiers -> PRIVATE .)
    FLOATTYPE       reduce using rule 58 (access_modifiers -> PRIVATE .)
    DECIMALTYPE     reduce using rule 58 (access_modifiers -> PRIVATE .)
    INTTYPE         reduce using rule 58 (access_modifiers -> PRIVATE .)
    BOOLTYPE        reduce using rule 58 (access_modifiers -> PRIVATE .)
    VARIABLE        reduce using rule 58 (access_modifiers -> PRIVATE .)


state 56

    (23) all_asignations -> assignation_with_datatype .

    VARIABLE        reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    ACTION          reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    IF              reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    CONST           reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    LIST            reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    TRY             reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    WHILE           reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    DO              reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    DICTIONARY      reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    STRING          reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    PUBLIC          reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    PRIVATE         reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    CHARTYPE        reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    STRINGTYPE      reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    FLOATTYPE       reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    INTTYPE         reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    BOOLTYPE        reduce using rule 23 (all_asignations -> assignation_with_datatype .)
    RKEY            reduce using rule 23 (all_asignations -> assignation_with_datatype .)


state 57

    (24) all_asignations -> assignation_without_datatype .

    VARIABLE        reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    ACTION          reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    IF              reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    CONST           reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    LIST            reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    TRY             reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    WHILE           reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    DO              reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    DICTIONARY      reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    STRING          reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    PUBLIC          reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    PRIVATE         reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    CHARTYPE        reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    STRINGTYPE      reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    FLOATTYPE       reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    INTTYPE         reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    BOOLTYPE        reduce using rule 24 (all_asignations -> assignation_without_datatype .)
    RKEY            reduce using rule 24 (all_asignations -> assignation_without_datatype .)


state 58

    (34) data_type -> CHARTYPE .

    VARIABLE        reduce using rule 34 (data_type -> CHARTYPE .)


state 59

    (36) data_type -> FLOATTYPE .

    VARIABLE        reduce using rule 36 (data_type -> FLOATTYPE .)


state 60

    (37) data_type -> DECIMALTYPE .

    VARIABLE        reduce using rule 37 (data_type -> DECIMALTYPE .)


state 61

    (39) data_type -> BOOLTYPE .

    VARIABLE        reduce using rule 39 (data_type -> BOOLTYPE .)


state 62

    (117) list_func_clear -> VARIABLE DOT . CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> VARIABLE DOT . COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> VARIABLE DOT . ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> VARIABLE DOT . REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA

    CLEAR           shift and go to state 81
    COUNT           shift and go to state 82
    ADD             shift and go to state 83
    REMOVEAT        shift and go to state 84


state 63

    (33) assignation_key_value -> VARIABLE ASSIGNATION . value
    (40) value -> . value_numeric
    (41) value -> . value_logic
    (42) value -> . value_string
    (50) value_numeric -> . INTEGER
    (51) value_numeric -> . FLOAT_NUMBER
    (52) value_numeric -> . DECIMAL_NUMBER
    (48) value_logic -> . BOOLTRUE
    (49) value_logic -> . BOOLFALSE
    (43) value_string -> . STRING
    (44) value_string -> . CHAR
    (45) value_string -> . VARIABLE
    (46) value_string -> . READ LPARENT RPARENT
    (47) value_string -> . concatenation
    (72) concatenation -> . STRING
    (73) concatenation -> . STRING PLUS concatenation

    INTEGER         shift and go to state 90
    FLOAT_NUMBER    shift and go to state 91
    DECIMAL_NUMBER  shift and go to state 92
    BOOLTRUE        shift and go to state 93
    BOOLFALSE       shift and go to state 94
    STRING          shift and go to state 95
    CHAR            shift and go to state 96
    VARIABLE        shift and go to state 85
    READ            shift and go to state 97

    value                          shift and go to state 86
    value_numeric                  shift and go to state 87
    value_logic                    shift and go to state 88
    value_string                   shift and go to state 89
    concatenation                  shift and go to state 98

state 64

    (3) block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .

    $end            reduce using rule 3 (block_publicClass -> PUBLIC CLASS VARIABLE LKEY all_block_code RKEY .)


state 65

    (5) all_block_code -> block_code all_block_code .

    RKEY            reduce using rule 5 (all_block_code -> block_code all_block_code .)


state 66

    (121) declaration_lambda -> ACTION SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    STRINGTYPE      shift and go to state 99


state 67

    (63) block_if -> IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    VARIABLE        shift and go to state 100


state 68

    (20) constant_assignation -> access_modifiers CONST . all_asignations
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61
    VARIABLE        shift and go to state 70

    all_asignations                shift and go to state 101
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47

state 69

    (18) variable_assignation -> access_modifiers all_asignations .

    VARIABLE        reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    ACTION          reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    IF              reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    CONST           reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    LIST            reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    TRY             reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    WHILE           reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    DO              reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    DICTIONARY      reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    STRING          reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    PUBLIC          reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    PRIVATE         reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    CHARTYPE        reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    STRINGTYPE      reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    FLOATTYPE       reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    DECIMALTYPE     reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    INTTYPE         reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    BOOLTYPE        reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)
    RKEY            reduce using rule 18 (variable_assignation -> access_modifiers all_asignations .)


state 70

    (33) assignation_key_value -> VARIABLE . ASSIGNATION value

    ASSIGNATION     shift and go to state 63


state 71

    (21) constant_assignation -> CONST all_asignations .

    VARIABLE        reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    ACTION          reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    IF              reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    CONST           reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    LIST            reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    TRY             reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    WHILE           reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    DO              reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    DICTIONARY      reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    STRING          reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    PUBLIC          reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    PRIVATE         reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    CHARTYPE        reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    STRINGTYPE      reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    FLOATTYPE       reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    DECIMALTYPE     reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    INTTYPE         reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    BOOLTYPE        reduce using rule 21 (constant_assignation -> CONST all_asignations .)
    RKEY            reduce using rule 21 (constant_assignation -> CONST all_asignations .)


state 72

    (22) constant_assignation -> CONST data_type . assignation_key_value COMMA some_assignation_constant
    (25) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> data_type . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 70

    assignation_key_value          shift and go to state 102

state 73

    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (26) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    DOTANDCOMMA     shift and go to state 103


state 74

    (28) assignation_without_datatype -> assignation_key_value DOTANDCOMMA .
    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (30) assignation_without_datatype -> assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
    ACTION          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .)
    VARIABLE        shift and go to state 70
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

  ! VARIABLE        [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 28 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA .) ]

    assignation_key_value          shift and go to state 47
    assignation_without_datatype   shift and go to state 104
    assignation_with_datatype      shift and go to state 105
    data_type                      shift and go to state 46

state 75

    (105) list_empty -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN . STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> LIST SMALLER_THAN . INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    STRINGTYPE      shift and go to state 106
    INTTYPE         shift and go to state 107


state 76

    (55) try_catch_simply -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY . block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    block_code                     shift and go to state 108
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 77

    (61) normal_while -> WHILE LPARENT . logic_operation RPARENT LKEY block_code RKEY
    (70) logic_operation -> . value_logic
    (71) logic_operation -> . value_logic logic_operator logic_operation
    (48) value_logic -> . BOOLTRUE
    (49) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 93
    BOOLFALSE       shift and go to state 94

    logic_operation                shift and go to state 109
    value_logic                    shift and go to state 110

state 78

    (62) do_while -> DO LKEY . block_code RKEY WHILE LPARENT logic_operation RPARENT
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    block_code                     shift and go to state 111
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 79

    (92) dict_empty -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN . GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 112


state 80

    (103) dict_func_put -> STRING DOT . PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> STRING DOT . REMOVE LPARENT STRING RPARENT DOTANDCOMMA

    PUT             shift and go to state 113
    REMOVE          shift and go to state 114


state 81

    (117) list_func_clear -> VARIABLE DOT CLEAR . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 115


state 82

    (118) list_func_count -> VARIABLE DOT COUNT . LPARENT RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 116


state 83

    (119) list_func_add -> VARIABLE DOT ADD . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 117


state 84

    (120) list_func_removeat -> VARIABLE DOT REMOVEAT . LPARENT INTEGER RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 118


state 85

    (45) value_string -> VARIABLE .

    DOTANDCOMMA     reduce using rule 45 (value_string -> VARIABLE .)
    COMMA           reduce using rule 45 (value_string -> VARIABLE .)


state 86

    (33) assignation_key_value -> VARIABLE ASSIGNATION value .

    DOTANDCOMMA     reduce using rule 33 (assignation_key_value -> VARIABLE ASSIGNATION value .)
    COMMA           reduce using rule 33 (assignation_key_value -> VARIABLE ASSIGNATION value .)


state 87

    (40) value -> value_numeric .

    DOTANDCOMMA     reduce using rule 40 (value -> value_numeric .)
    COMMA           reduce using rule 40 (value -> value_numeric .)


state 88

    (41) value -> value_logic .

    DOTANDCOMMA     reduce using rule 41 (value -> value_logic .)
    COMMA           reduce using rule 41 (value -> value_logic .)


state 89

    (42) value -> value_string .

    DOTANDCOMMA     reduce using rule 42 (value -> value_string .)
    COMMA           reduce using rule 42 (value -> value_string .)


state 90

    (50) value_numeric -> INTEGER .

    DOTANDCOMMA     reduce using rule 50 (value_numeric -> INTEGER .)
    COMMA           reduce using rule 50 (value_numeric -> INTEGER .)


state 91

    (51) value_numeric -> FLOAT_NUMBER .

    DOTANDCOMMA     reduce using rule 51 (value_numeric -> FLOAT_NUMBER .)
    COMMA           reduce using rule 51 (value_numeric -> FLOAT_NUMBER .)


state 92

    (52) value_numeric -> DECIMAL_NUMBER .

    DOTANDCOMMA     reduce using rule 52 (value_numeric -> DECIMAL_NUMBER .)
    COMMA           reduce using rule 52 (value_numeric -> DECIMAL_NUMBER .)


state 93

    (48) value_logic -> BOOLTRUE .

    DOTANDCOMMA     reduce using rule 48 (value_logic -> BOOLTRUE .)
    COMMA           reduce using rule 48 (value_logic -> BOOLTRUE .)
    GREATER_THAN    reduce using rule 48 (value_logic -> BOOLTRUE .)
    SMALLER_THAN    reduce using rule 48 (value_logic -> BOOLTRUE .)
    EQUAL_COMPARATION reduce using rule 48 (value_logic -> BOOLTRUE .)
    INEQUALITY      reduce using rule 48 (value_logic -> BOOLTRUE .)
    GREATER_THAN_OR_EQUAL reduce using rule 48 (value_logic -> BOOLTRUE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 48 (value_logic -> BOOLTRUE .)
    LOGICAND        reduce using rule 48 (value_logic -> BOOLTRUE .)
    LOGICOR         reduce using rule 48 (value_logic -> BOOLTRUE .)
    LOGICNOT        reduce using rule 48 (value_logic -> BOOLTRUE .)
    LOGICXOR        reduce using rule 48 (value_logic -> BOOLTRUE .)
    RPARENT         reduce using rule 48 (value_logic -> BOOLTRUE .)


state 94

    (49) value_logic -> BOOLFALSE .

    DOTANDCOMMA     reduce using rule 49 (value_logic -> BOOLFALSE .)
    COMMA           reduce using rule 49 (value_logic -> BOOLFALSE .)
    GREATER_THAN    reduce using rule 49 (value_logic -> BOOLFALSE .)
    SMALLER_THAN    reduce using rule 49 (value_logic -> BOOLFALSE .)
    EQUAL_COMPARATION reduce using rule 49 (value_logic -> BOOLFALSE .)
    INEQUALITY      reduce using rule 49 (value_logic -> BOOLFALSE .)
    GREATER_THAN_OR_EQUAL reduce using rule 49 (value_logic -> BOOLFALSE .)
    SMALLER_THAN_OR_EQUAL reduce using rule 49 (value_logic -> BOOLFALSE .)
    LOGICAND        reduce using rule 49 (value_logic -> BOOLFALSE .)
    LOGICOR         reduce using rule 49 (value_logic -> BOOLFALSE .)
    LOGICNOT        reduce using rule 49 (value_logic -> BOOLFALSE .)
    LOGICXOR        reduce using rule 49 (value_logic -> BOOLFALSE .)
    RPARENT         reduce using rule 49 (value_logic -> BOOLFALSE .)


state 95

    (43) value_string -> STRING .
    (72) concatenation -> STRING .
    (73) concatenation -> STRING . PLUS concatenation

  ! reduce/reduce conflict for DOTANDCOMMA resolved using rule 43 (value_string -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 43 (value_string -> STRING .)
    DOTANDCOMMA     reduce using rule 43 (value_string -> STRING .)
    COMMA           reduce using rule 43 (value_string -> STRING .)
    PLUS            shift and go to state 119

  ! DOTANDCOMMA     [ reduce using rule 72 (concatenation -> STRING .) ]
  ! COMMA           [ reduce using rule 72 (concatenation -> STRING .) ]


state 96

    (44) value_string -> CHAR .

    DOTANDCOMMA     reduce using rule 44 (value_string -> CHAR .)
    COMMA           reduce using rule 44 (value_string -> CHAR .)


state 97

    (46) value_string -> READ . LPARENT RPARENT

    LPARENT         shift and go to state 120


state 98

    (47) value_string -> concatenation .

    DOTANDCOMMA     reduce using rule 47 (value_string -> concatenation .)
    COMMA           reduce using rule 47 (value_string -> concatenation .)


state 99

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    GREATER_THAN    shift and go to state 121


state 100

    (63) block_if -> IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 122


state 101

    (20) constant_assignation -> access_modifiers CONST all_asignations .

    VARIABLE        reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    ACTION          reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    IF              reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    CONST           reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    LIST            reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    TRY             reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    WHILE           reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    DO              reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    DICTIONARY      reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRING          reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    PUBLIC          reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    PRIVATE         reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    CHARTYPE        reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    STRINGTYPE      reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    FLOATTYPE       reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    DECIMALTYPE     reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    INTTYPE         reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    BOOLTYPE        reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)
    RKEY            reduce using rule 20 (constant_assignation -> access_modifiers CONST all_asignations .)


state 102

    (22) constant_assignation -> CONST data_type assignation_key_value . COMMA some_assignation_constant
    (25) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA
    (26) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> data_type assignation_key_value . DOTANDCOMMA assignation_without_datatype

    COMMA           shift and go to state 123
    DOTANDCOMMA     shift and go to state 103


state 103

    (25) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .
    (26) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_with_datatype
    (27) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

  ! shift/reduce conflict for CHARTYPE resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for FLOATTYPE resolved as shift
  ! shift/reduce conflict for DECIMALTYPE resolved as shift
  ! shift/reduce conflict for INTTYPE resolved as shift
  ! shift/reduce conflict for BOOLTYPE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    ACTION          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .)
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61
    VARIABLE        shift and go to state 70

  ! VARIABLE        [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! CHARTYPE        [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! STRINGTYPE      [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! FLOATTYPE       [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! DECIMALTYPE     [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! INTTYPE         [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]
  ! BOOLTYPE        [ reduce using rule 25 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA .) ]

    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 124
    assignation_without_datatype   shift and go to state 125

state 104

    (29) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    WHILE           reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DO              reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 29 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 105

    (30) assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    WHILE           reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DO              reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRING          reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 30 (assignation_without_datatype -> assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 106

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 126


state 107

    (106) list_empty -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE . GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 127


state 108

    (55) try_catch_simply -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code . RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 128


state 109

    (61) normal_while -> WHILE LPARENT logic_operation . RPARENT LKEY block_code RKEY

    RPARENT         shift and go to state 129


state 110

    (70) logic_operation -> value_logic .
    (71) logic_operation -> value_logic . logic_operator logic_operation
    (74) logic_operator -> . GREATER_THAN
    (75) logic_operator -> . SMALLER_THAN
    (76) logic_operator -> . EQUAL_COMPARATION
    (77) logic_operator -> . INEQUALITY
    (78) logic_operator -> . GREATER_THAN_OR_EQUAL
    (79) logic_operator -> . SMALLER_THAN_OR_EQUAL
    (80) logic_operator -> . LOGICAND
    (81) logic_operator -> . LOGICOR
    (82) logic_operator -> . LOGICNOT
    (83) logic_operator -> . LOGICXOR

    RPARENT         reduce using rule 70 (logic_operation -> value_logic .)
    GREATER_THAN    shift and go to state 131
    SMALLER_THAN    shift and go to state 132
    EQUAL_COMPARATION shift and go to state 133
    INEQUALITY      shift and go to state 134
    GREATER_THAN_OR_EQUAL shift and go to state 135
    SMALLER_THAN_OR_EQUAL shift and go to state 136
    LOGICAND        shift and go to state 137
    LOGICOR         shift and go to state 138
    LOGICNOT        shift and go to state 139
    LOGICXOR        shift and go to state 140

    logic_operator                 shift and go to state 130

state 111

    (62) do_while -> DO LKEY block_code . RKEY WHILE LPARENT logic_operation RPARENT

    RKEY            shift and go to state 141


state 112

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN . VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    VARIABLE        shift and go to state 142


state 113

    (103) dict_func_put -> STRING DOT PUT . LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 143


state 114

    (104) dict_func_remove -> STRING DOT REMOVE . LPARENT STRING RPARENT DOTANDCOMMA

    LPARENT         shift and go to state 144


state 115

    (117) list_func_clear -> VARIABLE DOT CLEAR LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 145


state 116

    (118) list_func_count -> VARIABLE DOT COUNT LPARENT . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 146


state 117

    (119) list_func_add -> VARIABLE DOT ADD LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 147


state 118

    (120) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT . INTEGER RPARENT DOTANDCOMMA

    INTEGER         shift and go to state 148


state 119

    (73) concatenation -> STRING PLUS . concatenation
    (72) concatenation -> . STRING
    (73) concatenation -> . STRING PLUS concatenation

    STRING          shift and go to state 149

    concatenation                  shift and go to state 150

state 120

    (46) value_string -> READ LPARENT . RPARENT

    RPARENT         shift and go to state 151


state 121

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 152


state 122

    (63) block_if -> IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 153


state 123

    (22) constant_assignation -> CONST data_type assignation_key_value COMMA . some_assignation_constant
    (31) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (32) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 70

    assignation_key_value          shift and go to state 154
    some_assignation_constant      shift and go to state 155

state 124

    (26) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .

    VARIABLE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    ACTION          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    IF              reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CONST           reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    LIST            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    TRY             reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    WHILE           reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DO              reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DICTIONARY      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRING          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PUBLIC          reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    PRIVATE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    CHARTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    STRINGTYPE      reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    FLOATTYPE       reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    DECIMALTYPE     reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    INTTYPE         reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    BOOLTYPE        reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)
    RKEY            reduce using rule 26 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_with_datatype .)


state 125

    (27) assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .

    VARIABLE        reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    ACTION          reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    IF              reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CONST           reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    LIST            reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    TRY             reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    WHILE           reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DO              reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DICTIONARY      reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRING          reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PUBLIC          reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    PRIVATE         reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    CHARTYPE        reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    STRINGTYPE      reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    FLOATTYPE       reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    DECIMALTYPE     reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    INTTYPE         reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    BOOLTYPE        reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)
    RKEY            reduce using rule 27 (assignation_with_datatype -> data_type assignation_key_value DOTANDCOMMA assignation_without_datatype .)


state 126

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    VARIABLE        shift and go to state 156


state 127

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN . VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    VARIABLE        shift and go to state 157


state 128

    (55) try_catch_simply -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY . CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    CATCH           shift and go to state 158


state 129

    (61) normal_while -> WHILE LPARENT logic_operation RPARENT . LKEY block_code RKEY

    LKEY            shift and go to state 159


state 130

    (71) logic_operation -> value_logic logic_operator . logic_operation
    (70) logic_operation -> . value_logic
    (71) logic_operation -> . value_logic logic_operator logic_operation
    (48) value_logic -> . BOOLTRUE
    (49) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 93
    BOOLFALSE       shift and go to state 94

    value_logic                    shift and go to state 110
    logic_operation                shift and go to state 160

state 131

    (74) logic_operator -> GREATER_THAN .

    BOOLTRUE        reduce using rule 74 (logic_operator -> GREATER_THAN .)
    BOOLFALSE       reduce using rule 74 (logic_operator -> GREATER_THAN .)


state 132

    (75) logic_operator -> SMALLER_THAN .

    BOOLTRUE        reduce using rule 75 (logic_operator -> SMALLER_THAN .)
    BOOLFALSE       reduce using rule 75 (logic_operator -> SMALLER_THAN .)


state 133

    (76) logic_operator -> EQUAL_COMPARATION .

    BOOLTRUE        reduce using rule 76 (logic_operator -> EQUAL_COMPARATION .)
    BOOLFALSE       reduce using rule 76 (logic_operator -> EQUAL_COMPARATION .)


state 134

    (77) logic_operator -> INEQUALITY .

    BOOLTRUE        reduce using rule 77 (logic_operator -> INEQUALITY .)
    BOOLFALSE       reduce using rule 77 (logic_operator -> INEQUALITY .)


state 135

    (78) logic_operator -> GREATER_THAN_OR_EQUAL .

    BOOLTRUE        reduce using rule 78 (logic_operator -> GREATER_THAN_OR_EQUAL .)
    BOOLFALSE       reduce using rule 78 (logic_operator -> GREATER_THAN_OR_EQUAL .)


state 136

    (79) logic_operator -> SMALLER_THAN_OR_EQUAL .

    BOOLTRUE        reduce using rule 79 (logic_operator -> SMALLER_THAN_OR_EQUAL .)
    BOOLFALSE       reduce using rule 79 (logic_operator -> SMALLER_THAN_OR_EQUAL .)


state 137

    (80) logic_operator -> LOGICAND .

    BOOLTRUE        reduce using rule 80 (logic_operator -> LOGICAND .)
    BOOLFALSE       reduce using rule 80 (logic_operator -> LOGICAND .)


state 138

    (81) logic_operator -> LOGICOR .

    BOOLTRUE        reduce using rule 81 (logic_operator -> LOGICOR .)
    BOOLFALSE       reduce using rule 81 (logic_operator -> LOGICOR .)


state 139

    (82) logic_operator -> LOGICNOT .

    BOOLTRUE        reduce using rule 82 (logic_operator -> LOGICNOT .)
    BOOLFALSE       reduce using rule 82 (logic_operator -> LOGICNOT .)


state 140

    (83) logic_operator -> LOGICXOR .

    BOOLTRUE        reduce using rule 83 (logic_operator -> LOGICXOR .)
    BOOLFALSE       reduce using rule 83 (logic_operator -> LOGICXOR .)


state 141

    (62) do_while -> DO LKEY block_code RKEY . WHILE LPARENT logic_operation RPARENT

    WHILE           shift and go to state 161


state 142

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE . ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    ASSIGNATION     shift and go to state 162


state 143

    (103) dict_func_put -> STRING DOT PUT LPARENT . STRING COMMA STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 163


state 144

    (104) dict_func_remove -> STRING DOT REMOVE LPARENT . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 164


state 145

    (117) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 165


state 146

    (118) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 166


state 147

    (119) list_func_add -> VARIABLE DOT ADD LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 167


state 148

    (120) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 168


state 149

    (72) concatenation -> STRING .
    (73) concatenation -> STRING . PLUS concatenation

    DOTANDCOMMA     reduce using rule 72 (concatenation -> STRING .)
    COMMA           reduce using rule 72 (concatenation -> STRING .)
    PLUS            shift and go to state 119


state 150

    (73) concatenation -> STRING PLUS concatenation .

    DOTANDCOMMA     reduce using rule 73 (concatenation -> STRING PLUS concatenation .)
    COMMA           reduce using rule 73 (concatenation -> STRING PLUS concatenation .)


state 151

    (46) value_string -> READ LPARENT RPARENT .

    DOTANDCOMMA     reduce using rule 46 (value_string -> READ LPARENT RPARENT .)
    COMMA           reduce using rule 46 (value_string -> READ LPARENT RPARENT .)


state 152

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION VARIABLE ARROW LKEY RKEY

    ASSIGNATION     shift and go to state 169


state 153

    (63) block_if -> IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (66) not_yes_nested_if -> . block_if
    (67) not_yes_nested_if -> . block_code
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 42
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    not_yes_nested_if              shift and go to state 170
    block_if                       shift and go to state 171
    block_code                     shift and go to state 172
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 154

    (31) some_assignation_constant -> assignation_key_value . DOTANDCOMMA
    (32) some_assignation_constant -> assignation_key_value . COMMA some_assignation_constant

    DOTANDCOMMA     shift and go to state 173
    COMMA           shift and go to state 174


state 155

    (22) constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    WHILE           reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DO              reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRING          reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 22 (constant_assignation -> CONST data_type assignation_key_value COMMA some_assignation_constant .)


state 156

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    ASSIGNATION     shift and go to state 175


state 157

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE . ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    ASSIGNATION     shift and go to state 176


state 158

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH . LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LPARENT         shift and go to state 177


state 159

    (61) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    block_code                     shift and go to state 178
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 160

    (71) logic_operation -> value_logic logic_operator logic_operation .

    RPARENT         reduce using rule 71 (logic_operation -> value_logic logic_operator logic_operation .)


state 161

    (62) do_while -> DO LKEY block_code RKEY WHILE . LPARENT logic_operation RPARENT

    LPARENT         shift and go to state 179


state 162

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION . NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    NEW             shift and go to state 180


state 163

    (103) dict_func_put -> STRING DOT PUT LPARENT STRING . COMMA STRING RPARENT DOTANDCOMMA

    COMMA           shift and go to state 181


state 164

    (104) dict_func_remove -> STRING DOT REMOVE LPARENT STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 182


state 165

    (117) list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 117 (list_func_clear -> VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA .)


state 166

    (118) list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 118 (list_func_count -> VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA .)


state 167

    (119) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 183


state 168

    (120) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 184


state 169

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . VARIABLE ARROW LKEY RKEY

    VARIABLE        shift and go to state 185


state 170

    (63) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 186


state 171

    (66) not_yes_nested_if -> block_if .
    (15) block_code -> block_if .

  ! reduce/reduce conflict for RKEY resolved using rule 15 (block_code -> block_if .)
    RKEY            reduce using rule 15 (block_code -> block_if .)

  ! RKEY            [ reduce using rule 66 (not_yes_nested_if -> block_if .) ]


state 172

    (67) not_yes_nested_if -> block_code .

    RKEY            reduce using rule 67 (not_yes_nested_if -> block_code .)


state 173

    (31) some_assignation_constant -> assignation_key_value DOTANDCOMMA .

    VARIABLE        reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    ACTION          reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    IF              reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CONST           reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    LIST            reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    TRY             reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    WHILE           reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DO              reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DICTIONARY      reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRING          reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PUBLIC          reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    PRIVATE         reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    CHARTYPE        reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    INTTYPE         reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)
    RKEY            reduce using rule 31 (some_assignation_constant -> assignation_key_value DOTANDCOMMA .)


state 174

    (32) some_assignation_constant -> assignation_key_value COMMA . some_assignation_constant
    (31) some_assignation_constant -> . assignation_key_value DOTANDCOMMA
    (32) some_assignation_constant -> . assignation_key_value COMMA some_assignation_constant
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 70

    assignation_key_value          shift and go to state 154
    some_assignation_constant      shift and go to state 187

state 175

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    NEW             shift and go to state 188


state 176

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION . NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    NEW             shift and go to state 189


state 177

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT . EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    EXCEPTION       shift and go to state 190


state 178

    (61) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code . RKEY

    RKEY            shift and go to state 191


state 179

    (62) do_while -> DO LKEY block_code RKEY WHILE LPARENT . logic_operation RPARENT
    (70) logic_operation -> . value_logic
    (71) logic_operation -> . value_logic logic_operator logic_operation
    (48) value_logic -> . BOOLTRUE
    (49) value_logic -> . BOOLFALSE

    BOOLTRUE        shift and go to state 93
    BOOLFALSE       shift and go to state 94

    logic_operation                shift and go to state 192
    value_logic                    shift and go to state 110

state 180

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW . DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    DICTIONARY      shift and go to state 193


state 181

    (103) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA . STRING RPARENT DOTANDCOMMA

    STRING          shift and go to state 194


state 182

    (104) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 195


state 183

    (119) list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 119 (list_func_add -> VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA .)


state 184

    (120) list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    IF              reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DO              reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 120 (list_func_removeat -> VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA .)


state 185

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE . ARROW LKEY RKEY

    ARROW           shift and go to state 196


state 186

    (63) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (64) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (65) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 198
    ELSE_IF         shift and go to state 199

    other_if                       shift and go to state 197

state 187

    (32) some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .

    VARIABLE        reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    ACTION          reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    IF              reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CONST           reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    LIST            reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    TRY             reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    WHILE           reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DO              reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DICTIONARY      reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRING          reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PUBLIC          reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    PRIVATE         reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    CHARTYPE        reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    STRINGTYPE      reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    FLOATTYPE       reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    DECIMALTYPE     reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    INTTYPE         reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    BOOLTYPE        reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)
    RKEY            reduce using rule 32 (some_assignation_constant -> assignation_key_value COMMA some_assignation_constant .)


state 188

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    LIST            shift and go to state 200


state 189

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW . LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    LIST            shift and go to state 201


state 190

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION . VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    VARIABLE        shift and go to state 202


state 191

    (61) normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .

    VARIABLE        reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 61 (normal_while -> WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY .)


state 192

    (62) do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation . RPARENT

    RPARENT         shift and go to state 203


state 193

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY . SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    SMALLER_THAN    shift and go to state 204


state 194

    (103) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING . RPARENT DOTANDCOMMA

    RPARENT         shift and go to state 205


state 195

    (104) dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 104 (dict_func_remove -> STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA .)


state 196

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW . LKEY RKEY

    LKEY            shift and go to state 206


state 197

    (63) block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    WHILE           reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DO              reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRING          reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 63 (block_if -> IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 198

    (64) other_if -> ELSE . LKEY not_yes_nested_if RKEY

    LKEY            shift and go to state 207


state 199

    (65) other_if -> ELSE_IF . LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    LPARENT         shift and go to state 208


state 200

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    SMALLER_THAN    shift and go to state 209


state 201

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST . SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    SMALLER_THAN    shift and go to state 210


state 202

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE . RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY

    RPARENT         shift and go to state 211


state 203

    (62) do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .

    VARIABLE        reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    ACTION          reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    IF              reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CONST           reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    LIST            reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    TRY             reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    WHILE           reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DO              reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DICTIONARY      reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRING          reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PUBLIC          reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    PRIVATE         reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    CHARTYPE        reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    STRINGTYPE      reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    FLOATTYPE       reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    DECIMALTYPE     reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    INTTYPE         reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    BOOLTYPE        reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)
    RKEY            reduce using rule 62 (do_while -> DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT .)


state 204

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN . GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    GREATER_THAN    shift and go to state 212


state 205

    (103) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 213


state 206

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY . RKEY

    RKEY            shift and go to state 214


state 207

    (64) other_if -> ELSE LKEY . not_yes_nested_if RKEY
    (66) not_yes_nested_if -> . block_if
    (67) not_yes_nested_if -> . block_code
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 42
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    not_yes_nested_if              shift and go to state 215
    block_if                       shift and go to state 171
    block_code                     shift and go to state 172
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 208

    (65) other_if -> ELSE_IF LPARENT . VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    VARIABLE        shift and go to state 216


state 209

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    STRINGTYPE      shift and go to state 217


state 210

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN . INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    INTTYPE         shift and go to state 218


state 211

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT . LKEY block_code RKEY FINALLY LKEY block_code RKEY

    LKEY            shift and go to state 219


state 212

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN . LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    LPARENT         shift and go to state 220


state 213

    (103) dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    IF              reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DO              reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 103 (dict_func_put -> STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA .)


state 214

    (121) declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .

    VARIABLE        reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    ACTION          reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    IF              reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CONST           reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    LIST            reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    TRY             reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    WHILE           reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DO              reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DICTIONARY      reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    STRING          reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PUBLIC          reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    PRIVATE         reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    CHARTYPE        reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    STRINGTYPE      reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    FLOATTYPE       reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    DECIMALTYPE     reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    INTTYPE         reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    BOOLTYPE        reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)
    RKEY            reduce using rule 121 (declaration_lambda -> ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY .)


state 215

    (64) other_if -> ELSE LKEY not_yes_nested_if . RKEY

    RKEY            shift and go to state 221


state 216

    (65) other_if -> ELSE_IF LPARENT VARIABLE . RPARENT LKEY not_yes_nested_if RKEY other_if

    RPARENT         shift and go to state 222


state 217

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE . GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY

    GREATER_THAN    shift and go to state 223


state 218

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE . GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY

    GREATER_THAN    shift and go to state 224


state 219

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY . block_code RKEY FINALLY LKEY block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    block_code                     shift and go to state 225
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 220

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT . RPARENT LKEY dictionary_value RKEY DOTANDCOMMA

    RPARENT         shift and go to state 226


state 221

    (64) other_if -> ELSE LKEY not_yes_nested_if RKEY .

    VARIABLE        reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    ACTION          reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    IF              reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CONST           reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    LIST            reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    TRY             reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    WHILE           reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DO              reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DICTIONARY      reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRING          reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PUBLIC          reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    PRIVATE         reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    CHARTYPE        reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    STRINGTYPE      reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    FLOATTYPE       reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    DECIMALTYPE     reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    INTTYPE         reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    BOOLTYPE        reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)
    RKEY            reduce using rule 64 (other_if -> ELSE LKEY not_yes_nested_if RKEY .)


state 222

    (65) other_if -> ELSE_IF LPARENT VARIABLE RPARENT . LKEY not_yes_nested_if RKEY other_if

    LKEY            shift and go to state 227


state 223

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN . LPARENT RPARENT LKEY strings_list RKEY

    LPARENT         shift and go to state 228


state 224

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN . LPARENT RPARENT LKEY ints_list RKEY

    LPARENT         shift and go to state 229


state 225

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code . RKEY FINALLY LKEY block_code RKEY

    RKEY            shift and go to state 230


state 226

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT . LKEY dictionary_value RKEY DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 231
    LKEY            shift and go to state 232


state 227

    (65) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY . not_yes_nested_if RKEY other_if
    (66) not_yes_nested_if -> . block_if
    (67) not_yes_nested_if -> . block_code
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    IF              shift and go to state 42
    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    not_yes_nested_if              shift and go to state 233
    block_if                       shift and go to state 171
    block_code                     shift and go to state 172
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 228

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT . RPARENT LKEY strings_list RKEY

    RPARENT         shift and go to state 234


state 229

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT . RPARENT LKEY ints_list RKEY

    RPARENT         shift and go to state 235


state 230

    (55) try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .
    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY . FINALLY LKEY block_code RKEY

    VARIABLE        reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    ACTION          reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    IF              reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CONST           reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    LIST            reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    TRY             reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    WHILE           reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DO              reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRING          reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PUBLIC          reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    PRIVATE         reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    INTTYPE         reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    RKEY            reduce using rule 55 (try_catch_simply -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY .)
    FINALLY         shift and go to state 236


state 231

    (92) dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 92 (dict_empty -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 232

    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY . dictionary_value RKEY DOTANDCOMMA
    (94) dictionary_value -> . LKEY key_value_pair RKEY

    LKEY            shift and go to state 237

    dictionary_value               shift and go to state 238

state 233

    (65) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if . RKEY other_if

    RKEY            shift and go to state 239


state 234

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT . LKEY strings_list RKEY

    DOTANDCOMMA     shift and go to state 240
    LKEY            shift and go to state 241


state 235

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . DOTANDCOMMA
    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT . LKEY ints_list RKEY

    DOTANDCOMMA     shift and go to state 242
    LKEY            shift and go to state 243


state 236

    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY . LKEY block_code RKEY

    LKEY            shift and go to state 244


state 237

    (94) dictionary_value -> LKEY . key_value_pair RKEY
    (97) key_value_pair -> . STRING DOUBLEPOINT valueHash

    STRING          shift and go to state 246

    key_value_pair                 shift and go to state 245

state 238

    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value . RKEY DOTANDCOMMA

    RKEY            shift and go to state 247


state 239

    (65) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY . other_if
    (64) other_if -> . ELSE LKEY not_yes_nested_if RKEY
    (65) other_if -> . ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if

    ELSE            shift and go to state 198
    ELSE_IF         shift and go to state 199

    other_if                       shift and go to state 248

state 240

    (105) list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 105 (list_empty -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 241

    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY . strings_list RKEY
    (109) strings_list -> . STRING
    (110) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 250

    strings_list                   shift and go to state 249

state 242

    (106) list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .

    VARIABLE        reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    ACTION          reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    IF              reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CONST           reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    LIST            reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    TRY             reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    WHILE           reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DO              reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DICTIONARY      reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRING          reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PUBLIC          reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    PRIVATE         reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    CHARTYPE        reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    INTTYPE         reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)
    RKEY            reduce using rule 106 (list_empty -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA .)


state 243

    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY . ints_list RKEY
    (111) ints_list -> . INTEGER
    (112) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 252

    ints_list                      shift and go to state 251

state 244

    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY . block_code RKEY
    (6) block_code -> . def_const_or_var
    (7) block_code -> . estruct_of_data
    (8) block_code -> . block_try_catch
    (9) block_code -> . block_while
    (10) block_code -> . VARIABLE
    (11) block_code -> . dict_estruct
    (12) block_code -> . functions_dict
    (13) block_code -> . functions_list
    (14) block_code -> . declaration_lambda
    (15) block_code -> . block_if
    (16) def_const_or_var -> . constant_assignation
    (17) def_const_or_var -> . variable_assignation
    (99) estruct_of_data -> . list_empty
    (100) estruct_of_data -> . list_full
    (53) block_try_catch -> . try_catch_simply
    (54) block_try_catch -> . try_catch_finally
    (59) block_while -> . normal_while
    (60) block_while -> . do_while
    (90) dict_estruct -> . dict_empty
    (91) dict_estruct -> . dict_full
    (101) functions_dict -> . dict_func_put
    (102) functions_dict -> . dict_func_remove
    (113) functions_list -> . list_func_clear
    (114) functions_list -> . list_func_count
    (115) functions_list -> . list_func_add
    (116) functions_list -> . list_func_removeat
    (121) declaration_lambda -> . ACTION SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION VARIABLE ARROW LKEY RKEY
    (63) block_if -> . IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if
    (20) constant_assignation -> . access_modifiers CONST all_asignations
    (21) constant_assignation -> . CONST all_asignations
    (22) constant_assignation -> . CONST data_type assignation_key_value COMMA some_assignation_constant
    (18) variable_assignation -> . access_modifiers all_asignations
    (19) variable_assignation -> . all_asignations
    (105) list_empty -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (106) list_empty -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (107) list_full -> . LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY
    (108) list_full -> . LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY
    (55) try_catch_simply -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY
    (56) try_catch_finally -> . TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY
    (61) normal_while -> . WHILE LPARENT logic_operation RPARENT LKEY block_code RKEY
    (62) do_while -> . DO LKEY block_code RKEY WHILE LPARENT logic_operation RPARENT
    (92) dict_empty -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT DOTANDCOMMA
    (93) dict_full -> . DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA
    (103) dict_func_put -> . STRING DOT PUT LPARENT STRING COMMA STRING RPARENT DOTANDCOMMA
    (104) dict_func_remove -> . STRING DOT REMOVE LPARENT STRING RPARENT DOTANDCOMMA
    (117) list_func_clear -> . VARIABLE DOT CLEAR LPARENT RPARENT DOTANDCOMMA
    (118) list_func_count -> . VARIABLE DOT COUNT LPARENT RPARENT DOTANDCOMMA
    (119) list_func_add -> . VARIABLE DOT ADD LPARENT STRING RPARENT DOTANDCOMMA
    (120) list_func_removeat -> . VARIABLE DOT REMOVEAT LPARENT INTEGER RPARENT DOTANDCOMMA
    (57) access_modifiers -> . PUBLIC
    (58) access_modifiers -> . PRIVATE
    (23) all_asignations -> . assignation_with_datatype
    (24) all_asignations -> . assignation_without_datatype
    (25) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA
    (26) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_with_datatype
    (27) assignation_with_datatype -> . data_type assignation_key_value DOTANDCOMMA assignation_without_datatype
    (28) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA
    (29) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_without_datatype
    (30) assignation_without_datatype -> . assignation_key_value DOTANDCOMMA assignation_with_datatype
    (34) data_type -> . CHARTYPE
    (35) data_type -> . STRINGTYPE
    (36) data_type -> . FLOATTYPE
    (37) data_type -> . DECIMALTYPE
    (38) data_type -> . INTTYPE
    (39) data_type -> . BOOLTYPE
    (33) assignation_key_value -> . VARIABLE ASSIGNATION value

    VARIABLE        shift and go to state 12
    ACTION          shift and go to state 40
    IF              shift and go to state 42
    CONST           shift and go to state 44
    LIST            shift and go to state 48
    TRY             shift and go to state 50
    WHILE           shift and go to state 51
    DO              shift and go to state 52
    DICTIONARY      shift and go to state 53
    STRING          shift and go to state 54
    PUBLIC          shift and go to state 11
    PRIVATE         shift and go to state 55
    CHARTYPE        shift and go to state 58
    STRINGTYPE      shift and go to state 41
    FLOATTYPE       shift and go to state 59
    DECIMALTYPE     shift and go to state 60
    INTTYPE         shift and go to state 49
    BOOLTYPE        shift and go to state 61

    block_code                     shift and go to state 253
    def_const_or_var               shift and go to state 15
    estruct_of_data                shift and go to state 16
    block_try_catch                shift and go to state 17
    block_while                    shift and go to state 18
    dict_estruct                   shift and go to state 19
    functions_dict                 shift and go to state 20
    functions_list                 shift and go to state 21
    declaration_lambda             shift and go to state 22
    block_if                       shift and go to state 23
    constant_assignation           shift and go to state 24
    variable_assignation           shift and go to state 25
    list_empty                     shift and go to state 26
    list_full                      shift and go to state 27
    try_catch_simply               shift and go to state 28
    try_catch_finally              shift and go to state 29
    normal_while                   shift and go to state 30
    do_while                       shift and go to state 31
    dict_empty                     shift and go to state 32
    dict_full                      shift and go to state 33
    dict_func_put                  shift and go to state 34
    dict_func_remove               shift and go to state 35
    list_func_clear                shift and go to state 36
    list_func_count                shift and go to state 37
    list_func_add                  shift and go to state 38
    list_func_removeat             shift and go to state 39
    access_modifiers               shift and go to state 43
    all_asignations                shift and go to state 45
    data_type                      shift and go to state 46
    assignation_key_value          shift and go to state 47
    assignation_with_datatype      shift and go to state 56
    assignation_without_datatype   shift and go to state 57

state 245

    (94) dictionary_value -> LKEY key_value_pair . RKEY

    RKEY            shift and go to state 254


state 246

    (97) key_value_pair -> STRING . DOUBLEPOINT valueHash

    DOUBLEPOINT     shift and go to state 255


state 247

    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY . DOTANDCOMMA

    DOTANDCOMMA     shift and go to state 256


state 248

    (65) other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .

    VARIABLE        reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    ACTION          reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    IF              reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CONST           reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    LIST            reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    TRY             reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    WHILE           reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DO              reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DICTIONARY      reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRING          reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PUBLIC          reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    PRIVATE         reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    CHARTYPE        reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    STRINGTYPE      reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    FLOATTYPE       reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    DECIMALTYPE     reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    INTTYPE         reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    BOOLTYPE        reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)
    RKEY            reduce using rule 65 (other_if -> ELSE_IF LPARENT VARIABLE RPARENT LKEY not_yes_nested_if RKEY other_if .)


state 249

    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list . RKEY

    RKEY            shift and go to state 257


state 250

    (109) strings_list -> STRING .
    (110) strings_list -> STRING . COMMA strings_list

    RKEY            reduce using rule 109 (strings_list -> STRING .)
    COMMA           shift and go to state 258


state 251

    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list . RKEY

    RKEY            shift and go to state 259


state 252

    (111) ints_list -> INTEGER .
    (112) ints_list -> INTEGER . COMMA ints_list

    RKEY            reduce using rule 111 (ints_list -> INTEGER .)
    COMMA           shift and go to state 260


state 253

    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code . RKEY

    RKEY            shift and go to state 261


state 254

    (94) dictionary_value -> LKEY key_value_pair RKEY .

    RKEY            reduce using rule 94 (dictionary_value -> LKEY key_value_pair RKEY .)


state 255

    (97) key_value_pair -> STRING DOUBLEPOINT . valueHash
    (98) valueHash -> . INTTYPE

    INTTYPE         shift and go to state 263

    valueHash                      shift and go to state 262

state 256

    (93) dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .

    VARIABLE        reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    ACTION          reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    IF              reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CONST           reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    LIST            reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    TRY             reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    WHILE           reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DO              reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DICTIONARY      reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRING          reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PUBLIC          reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    PRIVATE         reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    CHARTYPE        reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    STRINGTYPE      reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    FLOATTYPE       reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    DECIMALTYPE     reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    INTTYPE         reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    BOOLTYPE        reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)
    RKEY            reduce using rule 93 (dict_full -> DICTIONARY SMALLER_THAN GREATER_THAN VARIABLE ASSIGNATION NEW DICTIONARY SMALLER_THAN GREATER_THAN LPARENT RPARENT LKEY dictionary_value RKEY DOTANDCOMMA .)


state 257

    (107) list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .

    VARIABLE        reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    ACTION          reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    IF              reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CONST           reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    LIST            reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    TRY             reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    WHILE           reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DO              reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DICTIONARY      reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRING          reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PUBLIC          reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    PRIVATE         reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    CHARTYPE        reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    STRINGTYPE      reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    FLOATTYPE       reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    DECIMALTYPE     reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    INTTYPE         reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    BOOLTYPE        reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)
    RKEY            reduce using rule 107 (list_full -> LIST SMALLER_THAN STRINGTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN STRINGTYPE GREATER_THAN LPARENT RPARENT LKEY strings_list RKEY .)


state 258

    (110) strings_list -> STRING COMMA . strings_list
    (109) strings_list -> . STRING
    (110) strings_list -> . STRING COMMA strings_list

    STRING          shift and go to state 250

    strings_list                   shift and go to state 264

state 259

    (108) list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .

    VARIABLE        reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    ACTION          reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    IF              reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CONST           reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    LIST            reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    TRY             reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    WHILE           reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DO              reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DICTIONARY      reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRING          reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PUBLIC          reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    PRIVATE         reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    CHARTYPE        reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    STRINGTYPE      reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    FLOATTYPE       reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    DECIMALTYPE     reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    INTTYPE         reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    BOOLTYPE        reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)
    RKEY            reduce using rule 108 (list_full -> LIST SMALLER_THAN INTTYPE GREATER_THAN VARIABLE ASSIGNATION NEW LIST SMALLER_THAN INTTYPE GREATER_THAN LPARENT RPARENT LKEY ints_list RKEY .)


state 260

    (112) ints_list -> INTEGER COMMA . ints_list
    (111) ints_list -> . INTEGER
    (112) ints_list -> . INTEGER COMMA ints_list

    INTEGER         shift and go to state 252

    ints_list                      shift and go to state 265

state 261

    (56) try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .

    VARIABLE        reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    ACTION          reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    IF              reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CONST           reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    LIST            reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    TRY             reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    WHILE           reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DO              reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DICTIONARY      reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRING          reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PUBLIC          reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    PRIVATE         reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    CHARTYPE        reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    STRINGTYPE      reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    FLOATTYPE       reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    DECIMALTYPE     reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    INTTYPE         reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    BOOLTYPE        reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)
    RKEY            reduce using rule 56 (try_catch_finally -> TRY LKEY block_code RKEY CATCH LPARENT EXCEPTION VARIABLE RPARENT LKEY block_code RKEY FINALLY LKEY block_code RKEY .)


state 262

    (97) key_value_pair -> STRING DOUBLEPOINT valueHash .

    RKEY            reduce using rule 97 (key_value_pair -> STRING DOUBLEPOINT valueHash .)


state 263

    (98) valueHash -> INTTYPE .

    RKEY            reduce using rule 98 (valueHash -> INTTYPE .)


state 264

    (110) strings_list -> STRING COMMA strings_list .

    RKEY            reduce using rule 110 (strings_list -> STRING COMMA strings_list .)


state 265

    (112) ints_list -> INTEGER COMMA ints_list .

    RKEY            reduce using rule 112 (ints_list -> INTEGER COMMA ints_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 74 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 74 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 74 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 74 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 74 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 74 resolved as shift
WARNING: shift/reduce conflict for CHARTYPE in state 103 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 103 resolved as shift
WARNING: shift/reduce conflict for FLOATTYPE in state 103 resolved as shift
WARNING: shift/reduce conflict for DECIMALTYPE in state 103 resolved as shift
WARNING: shift/reduce conflict for INTTYPE in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOLTYPE in state 103 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: reduce/reduce conflict in state 95 resolved using rule (value_string -> STRING)
WARNING: rejected rule (concatenation -> STRING) in state 95
WARNING: reduce/reduce conflict in state 171 resolved using rule (block_code -> block_if)
WARNING: rejected rule (not_yes_nested_if -> block_if) in state 171
WARNING: Rule (not_yes_nested_if -> block_if) is never reduced
